Lorg/apache/batik/bridge/SVGSVGElementBridge;.createGraphicsNode(Lorg/apache/batik/bridge/BridgeContext;Lorg/w3c/dom/Element;)Lorg/apache/batik/gvt/GraphicsNode;#0#0#1#0#vtInv,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-bridge/src/main/java/org/apache/batik/bridge/SVGSVGElementBridge.java;,VariableName,vtInv,"float actualWidth = w;
            float actualHeight = h;
            try {
                AffineTransform vtInv = viewingTransform.createInverse();
                actualWidth = (float) (w*vtInv.getScaleX());
                actualHeight = (float) (h*vtInv.getScaleY());
            } catch (NoninvertibleTransformException ex) {}",inv,inverse
Ljava/net/URI;.toURL()Ljava/net/URL;|Ljava/net/MalformedURLException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-svgrasterizer/src/main/java/org/apache/batik/apps/rasterizer/SVGConverterFileSource.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-svgbrowser/src/main/java/org/apache/batik/apps/svgbrowser/JSVGViewerFrame.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-slideshow/src/main/java/org/apache/batik/apps/slideshow/Main.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-svgbrowser/src/main/java/org/apache/batik/apps/svgbrowser/Main.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-svgrasterizer/src/main/java/org/apache/batik/apps/rasterizer/SVGConverter.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-transcoder/src/main/java/org/apache/batik/transcoder/wmf/tosvg/WMFTranscoder.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-svggen/src/main/java/org/apache/batik/svggen/AbstractImageHandlerEncoder.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-transcoder/src/main/java/org/apache/batik/transcoder/print/PrintTranscoder.java;,MethodName,toURL,"public String getURI(){
        try{
            String uri = file.toURI().toURL().toString();
            if (ref != null && !"""".equals(ref)){
                uri += '#' + ref;
            }",url,uniform resource locator
Lorg/apache/batik/dom/events/EventSupport;.getUltimateOriginalEvent(Lorg/w3c/dom/events/Event;)Lorg/w3c/dom/events/Event;#0#origEvt,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-dom/src/main/java/org/apache/batik/dom/events/EventSupport.java;,VariableName,origEvt,"    public static Event getUltimateOriginalEvent(Event evt) {
        AbstractEvent e = (AbstractEvent) evt;
        for (;;) {
            AbstractEvent origEvt = (AbstractEvent) e.getOriginalEvent();
            if (origEvt == null) {
                break;
            }",orig,original
Lorg/apache/batik/bridge/UpdateManager;.dispatchSVGLoadEvent()V|Ljava/lang/InterruptedException;#0#0#se,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-bridge/src/main/java/org/apache/batik/bridge/UpdateManager.java;,VariableName,se,"                continue;
            }
            resCtx.setUpdateManager(this);
            ScriptingEnvironment se = initializeScriptingEnvironment(resCtx);
            secondaryScriptingEnvironments[i] = se;
        }
        minRepaintTime = MIN_REPAINT_TIME;",se,scripting environment
Lorg/apache/batik/bridge/SVGTextElementBridge;.getTextIntersection(Lorg/apache/batik/bridge/BridgeContext;Lorg/w3c/dom/Element;Ljava/awt/geom/AffineTransform;Ljava/awt/geom/Rectangle2D;Z)Z#tnRect,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-bridge/src/main/java/org/apache/batik/bridge/SVGTextElementBridge.java;,VariableName,tnRect,"        Element  txtElem = txtBridge.e;

        AffineTransform at = tn.getGlobalTransform();
        at.preConcatenate(ati);

        Rectangle2D tnRect;
        tnRect = tn.getBounds();
        tnRect = at.createTransformedShape(tnRect).getBounds2D();
        if (!rect.intersects(tnRect)) return false;",rect,rectangle
Lorg/apache/batik/anim/MotionAnimation;.(Lorg/apache/batik/anim/timing/TimedElement;Lorg/apache/batik/anim/dom/AnimatableElement;I[F[FZZ[Lorg/apache/batik/anim/values/AnimatableValue;Lorg/apache/batik/anim/values/AnimatableValue;Lorg/apache/batik/anim/values/AnimatableValue;Lorg/apache/batik/anim/values/AnimatableValue;Lorg/apache/batik/ext/awt/geom/ExtendedGeneralPath;[FZZFS)V#1#unPt,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-anim/src/main/java/org/apache/batik/anim/MotionAnimation.java;,VariableName,unPt,"                    }
                } else {
                    if (to != null) {
                        AnimatableMotionPointValue unPt = (AnimatableMotionPointValue)
                            animatableElement.getUnderlyingValue();
                        AnimatableMotionPointValue toPt = (AnimatableMotionPointValue) to;
                        path.moveTo(unPt.getX(), unPt.getY());",pt,point
Lorg/apache/batik/parser/AbstractScanner;.(Ljava/io/Reader;)V|Lorg/apache/batik/parser/ParseException;#r#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-parser/src/main/java/org/apache/batik/parser/AbstractScanner.java;,ParameterName,r,"     * Creates a new AbstractScanner object.
     * @param r The reader to scan.
     */
    public AbstractScanner(Reader r) throws ParseException {
        try {
            reader = new StreamNormalizingReader(r);
            current = nextChar();",r,reader
Lorg/apache/batik/swing/svg/JSVGComponent;.setAnimationLimitingFPS(F)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-swing/src/main/java/org/apache/batik/swing/svg/JSVGComponent.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-svgbrowser/src/main/java/org/apache/batik/apps/svgbrowser/Main.java;,MethodName,setAnimationLimitingFPS,"     * Sets the animation limiting mode to a number of frames per second.
     * @param fps the maximum number of frames per second (fps &gt; 0)
     */
    public void setAnimationLimitingFPS(float fps) {
        animationLimitingMode = 2;
        animationLimitingAmount = fps;
        if (bridgeContext != null) {",fps,frames per second
Lorg/apache/batik/css/engine/CSSEngine;.findSelectorAttributes(Ljava/util/Set;Lorg/apache/batik/css/engine/StyleSheet;)V#0#0#0#sl,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-css/src/main/java/org/apache/batik/css/engine/CSSEngine.java;,VariableName,sl,"            switch (r.getType()) {
            case StyleRule.TYPE:
                StyleRule style = (StyleRule)r;
                SelectorList sl = style.getSelectorList();
                int slen = sl.getLength();
                for (int j = 0; j < slen; j++) {
                    ExtendedSelector s = (ExtendedSelector)sl.item(j);",sl,selector list
Lorg/apache/batik/bridge/SVGFontFaceElementBridge;.createFontFace(Lorg/apache/batik/bridge/BridgeContext;Lorg/w3c/dom/Element;)Lorg/apache/batik/bridge/SVGFontFace;#overlinePosStr,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-bridge/src/main/java/org/apache/batik/bridge/SVGFontFaceElementBridge.java;,VariableName,overlinePosStr,"                new Object [] {SVG_FONT_FACE_SLOPE_DEFAULT_VALUE,
                               strikethroughThicknessStr});
        }

        // overline-position
        String overlinePosStr = fontFaceElement.getAttributeNS
            (null, SVG_OVERLINE_POSITION_ATTRIBUTE);
         if (overlinePosStr.length() == 0) {
            overlinePosStr = String.valueOf(ascent);",pos,position
Lorg/apache/batik/parser/DefaultPreserveAspectRatioHandler;.xMinYMid()V|Lorg/apache/batik/parser/ParseException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-parser/src/main/java/org/apache/batik/parser/DefaultPreserveAspectRatioHandler.java;,MethodName,xMinYMid,"    /**
     * Implements {@link PreserveAspectRatioHandler#xMinYMid()}.
     */
    public void xMinYMid() throws ParseException {
    }

    /**",min,minimum
Lorg/apache/batik/bridge/SVGUtilities;.convertRegion(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;SLorg/apache/batik/gvt/GraphicsNode;Lorg/apache/batik/parser/UnitProcessor$Context;)Ljava/awt/geom/Rectangle2D;#wStr#0#2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-bridge/src/main/java/org/apache/batik/bridge/SVGUtilities.java;,ParameterName,wStr,"
        return convertRegion(xStr,
                             yStr,
                             wStr,
                             hStr,
                             unitsType,
                             maskedNode,",w,width
Lorg/apache/batik/gvt/font/AWTGVTGlyphVector;.draw(Ljava/awt/Graphics2D;Ljava/text/AttributedCharacterIterator;)V#typeGTrans,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-gvt/src/main/java/org/apache/batik/gvt/font/AWTGVTGlyphVector.java;,VariableName,typeGTrans,"                useHinting = false;
        }

        final int typeGRot   = AffineTransform.TYPE_GENERAL_ROTATION;
        final int typeGTrans = AffineTransform.TYPE_GENERAL_TRANSFORM;

        if (useHinting) {
            // Check if usr->dev transform has general rotation,
            // or shear..",g,general
Lorg/apache/batik/ext/awt/image/renderable/CompositeRable8Bit;.createRendering(Ljava/awt/image/renderable/RenderContext;)Ljava/awt/image/RenderedImage;#rc#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-awt-util/src/main/java/org/apache/batik/ext/awt/image/renderable/CompositeRable8Bit.java;,ParameterName,rc,"        }
        return true;
    }

    public RenderedImage createRendering(RenderContext rc) {
        if (srcs.size() == 0)
            return null;

        // Just copy over the rendering hints.",rc,render context
Lorg/apache/batik/bridge/StrokingTextPainter;.createModifiedACIForFontMatching(Ljava/text/AttributedCharacterIterator;)Ljava/text/AttributedCharacterIterator;#0#prevFF,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-bridge/src/main/java/org/apache/batik/bridge/StrokingTextPainter.java;,VariableName,prevFF,"            }

            // assign the first font to any chars haven't alreay been assigned
            int           runStart = -1;
            GVTFontFamily prevFF   = null;
            GVTFont       prevF    = defaultFont;
            for (int i = 0; i < aciLength; i++) {
                if (fontAssigned[i]) {",ff,font family
Lorg/apache/batik/dom/svg/AbstractSVGMatrix;.flipX()Lorg/w3c/dom/svg/SVGMatrix;#tr,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-svg-dom/src/main/java/org/apache/batik/dom/svg/AbstractSVGMatrix.java;,VariableName,tr,"                                                 secondMatrix.getD(),
                                                 secondMatrix.getE(),
                                                 secondMatrix.getF());
        AffineTransform tr = (AffineTransform)getAffineTransform().clone();
        tr.concatenate(at);
        return new SVGOMMatrix(tr);
    }",tr,transform
Lorg/apache/batik/gvt/renderer/StaticRenderer;.flush(Ljava/awt/Rectangle;)V#tcr,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-gvt/src/main/java/org/apache/batik/gvt/renderer/StaticRenderer.java;,VariableName,tcr,"        if (lastCache == null) return;
        Object o = lastCache.get();
        if (o == null) return;

        TileCacheRed tcr = (TileCacheRed)o;
        tcr.flushCache(tcr.getBounds());
    }

    /**",tcr,tile cache red
Lorg/apache/batik/ext/awt/image/codec/png/PNGImageDecoder~PNGImage;.POST_GRAY_LUT_ADD_TRANS_EXP)I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-codec/src/main/java/org/apache/batik/ext/awt/image/codec/png/PNGImageDecoder.java;,FieldName,POST_GRAY_LUT_ADD_TRANS_EXP,"    private static final int POST_GAMMA_EXP =
        POST_GAMMA | POST_EXP_MASK;

    // Push gray values through grayLut to expand to 8 bits, expand, add alpha
    private static final int POST_GRAY_LUT_ADD_TRANS_EXP =
        POST_GRAY_LUT_ADD_TRANS | POST_EXP_MASK;

    // Add transparency to a given gray value, expand
    private static final int POST_ADD_GRAY_TRANS_EXP =",exp,expression
Lorg/apache/batik/bridge/SVGImageElementBridge;.createSVGImageNode(Lorg/apache/batik/bridge/BridgeContext;Lorg/w3c/dom/Element;Lorg/w3c/dom/svg/SVGDocument;)Lorg/apache/batik/gvt/GraphicsNode;#1#tgt,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-bridge/src/main/java/org/apache/batik/bridge/SVGImageElementBridge.java;,VariableName,tgt,"    protected void rebuildImageNode() {
        // Reference copy of the imgDocument
        if ((imgDocument != null) && (listener != null)) {
            NodeEventTarget tgt = (NodeEventTarget)imgDocument.getRootElement();

            tgt.removeEventListenerNS
                (XMLConstants.XML_EVENTS_NAMESPACE_URI, SVG_EVENT_CLICK,
                 listener, false);",tgt,target
Lorg/apache/batik/ext/awt/image/rendered/GaussianBlurRed8Bit;.copyData(Ljava/awt/image/WritableRaster;)Ljava/awt/image/WritableRaster;#tmpR1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-awt-util/src/main/java/org/apache/batik/ext/awt/image/rendered/GaussianBlurRed8Bit.java;,VariableName,tmpR1,"        // System.out.println(""Gaussian GenR: "" + wr);
        // System.out.println(""SrcReq: "" + r);

        ColorModel srcCM = src.getColorModel();

        WritableRaster tmpR1=null, tmpR2=null;

        tmpR1 = srcCM.createCompatibleWritableRaster(r.width, r.height);
        {
            WritableRaster fill;",r,raster
Lorg/apache/batik/dom/util/SAXDocumentFactory;.startDTD(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V|Lorg/xml/sax/SAXException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-dom/src/main/java/org/apache/batik/dom/util/SAXDocumentFactory.java;,MethodName,startDTD,"     * org.xml.sax.ext.LexicalHandler#startDTD(String,String,String)}.
     */
    public void startDTD(String name, String publicId, String systemId)
        throws SAXException {
        appendStringData(); // Add collected string data before entering DTD
        doctype = implementation.createDocumentType(name, publicId, systemId);",dtd,document type definition
Lorg/apache/batik/swing/svg/JSVGComponent$BridgeUserAgentWrapper;.getExternalResourceSecurity(Lorg/apache/batik/util/ParsedURL;Lorg/apache/batik/util/ParsedURL;)Lorg/apache/batik/bridge/ExternalResourceSecurity;#0#rPURL,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-swing/src/main/java/org/apache/batik/swing/svg/JSVGComponent.java;,VariableName,rPURL,"                return userAgent.getExternalResourceSecurity(resourcePURL,
                                                             docPURL);
            } else {
                final ParsedURL rPURL= resourcePURL;
                final ParsedURL dPURL= docPURL;
                class Query implements Runnable {
                    ExternalResourceSecurity result;",r,resource
Lorg/apache/batik/util/ClassFileUtilities;.computeClassDependencies(Ljava/io/InputStream;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;Z)V|Ljava/io/IOException;#0#0#0#0#ze,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-util/src/main/java/org/apache/batik/util/ClassFileUtilities.java;,VariableName,ze,"                jars.put(j.name, j);

                Enumeration entries = j.jarFile.entries();
                while (entries.hasMoreElements()) {
                    ZipEntry ze = (ZipEntry) entries.nextElement();
                    String name = ze.getName();
                    if (name.endsWith("".class"")) {
                        ClassFile cf = new ClassFile();",ze,zip entry
Lorg/apache/batik/anim/timing/TimedElement;.sampleAt(FZ)F#0#ts,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-anim/src/main/java/org/apache/batik/anim/timing/TimedElement.java;,VariableName,ts,"        float dependentMinTime = Float.POSITIVE_INFINITY;
        Iterator i = beginDependents.iterator();
        while (i.hasNext()) {
            TimingSpecifier ts = (TimingSpecifier) i.next();
            // Trace.print(ts.owner + ""'s "" + (ts.isBegin ? ""begin"" : ""end"" ) + "": "" + ts);
            float t = ts.newInterval(interval);
            if (t < dependentMinTime) {",ts,timing specifier
Lorg/apache/batik/bridge/svg12/SVG12FocusManager;.fireDOMFocusOutEvent(Lorg/w3c/dom/events/EventTarget;Lorg/w3c/dom/events/EventTarget;)V#uiEvt,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-bridge/src/main/java/org/apache/batik/bridge/svg12/SVG12FocusManager.java;,VariableName,uiEvt,"                                       EventTarget relatedTarget) {
        DocumentEvent docEvt = 
            (DocumentEvent)((Element)target).getOwnerDocument();
        DOMUIEvent uiEvt = (DOMUIEvent)docEvt.createEvent(""UIEvents"");
        uiEvt.initUIEventNS(XMLConstants.XML_EVENTS_NAMESPACE_URI,
                            ""DOMFocusIn"",
                            true,",evt,event
Lorg/apache/batik/bridge/CSSUtilities;.convertOverflow(Lorg/w3c/dom/Element;)Z#s,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-bridge/src/main/java/org/apache/batik/bridge/CSSUtilities.java;,VariableName,s,"     */
    public static int convertPointerEvents(Element e) {
        Value v = getComputedStyle(e, SVGCSSEngine.POINTER_EVENTS_INDEX);
        String s = v.getStringValue();
        switch(s.charAt(0)) {
        case 'v':
            if (s.length() == 7) {",s,string
Lorg/apache/batik/bridge/SVGSVGElementBridge;.getIntersectionList(Lorg/w3c/dom/svg/SVGRect;Lorg/w3c/dom/Element;)Ljava/util/List;#1#1#txtBridge,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-bridge/src/main/java/org/apache/batik/bridge/SVGSVGElementBridge.java;,VariableName,txtBridge,"                    }
                } else if (gn instanceof TextNode) {
                    SVGOMElement svgElem = (SVGOMElement)curr;
                    SVGTextElementBridge txtBridge;
                    txtBridge = (SVGTextElementBridge)svgElem.getSVGContext();
                    Set elems = txtBridge.getTextIntersectionSet(at, rect);

                    // filter elems based on who is before end as",txt,text
Lorg/apache/batik/css/engine/value/URIValue;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-css/src/main/java/org/apache/batik/css/engine/value/svg/ColorProfileManager.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-css/src/main/java/org/apache/batik/css/engine/value/svg/ClipPathManager.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-css/src/main/java/org/apache/batik/css/engine/value/css2/CursorManager.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-css/src/main/java/org/apache/batik/css/engine/value/svg/MaskManager.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-css/src/main/java/org/apache/batik/css/engine/value/svg/FilterManager.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-css/src/main/java/org/apache/batik/css/engine/value/svg/SVGPaintManager.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-css/src/main/java/org/apache/batik/css/engine/value/URIValue.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-css/src/main/java/org/apache/batik/css/engine/value/svg/MarkerManager.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-css/src/main/java/org/apache/batik/css/engine/value/AbstractValueManager.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-css/src/main/java/org/apache/batik/css/engine/value/css2/SrcManager.java;,ClassName,URIValue," * @author <a href=""mailto:stephane@hillion.org"">Stephane Hillion</a>
 * @version $Id: URIValue.java 1733416 2016-03-03 07:07:13Z gadams $
 */
public class URIValue extends StringValue {

    String cssText;

    /**
     * Creates a new StringValue.
     */
    public URIValue(String cssText, String uri) {",uri,uniform resource identifier
Lorg/apache/batik/bridge/SVGImageElementBridge;.subCtx)Lorg/apache/batik/bridge/BridgeContext;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-bridge/src/main/java/org/apache/batik/bridge/SVGImageElementBridge.java;,FieldName,subCtx,"public class SVGImageElementBridge extends AbstractGraphicsNodeBridge {

    protected SVGDocument imgDocument;
    protected EventListener listener = null;
    protected BridgeContext subCtx = null;
    protected boolean hitCheckChildren = false;
    /**
     * Constructs a new bridge for the &lt;image> element.
     */
    public SVGImageElementBridge() {}",ctx,context
Lorg/apache/batik/bridge/UserAgentAdapter;.checkLoadExternalResource(Lorg/apache/batik/util/ParsedURL;Lorg/apache/batik/util/ParsedURL;)V|Ljava/lang/SecurityException;#resourceURL#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-bridge/src/main/java/org/apache/batik/bridge/UserAgentAdapter.java;,ParameterName,resourceURL,"     *        resource was found.
     */
    public ExternalResourceSecurity 
        getExternalResourceSecurity(ParsedURL resourceURL,
                                    ParsedURL docURL) {
        return new RelaxedExternalResourceSecurity(resourceURL, docURL);
    }",url,uniform resource locator
Lorg/apache/batik/gvt/flow/FlowRegions;.sl)Lorg/apache/batik/ext/awt/geom/SegmentList;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-gvt/src/main/java/org/apache/batik/gvt/flow/FlowRegions.java;,FieldName,sl," */
public class FlowRegions {
    Shape flowShape;
    SegmentList sl;
    SegmentList.SplitResults sr;
    List validRanges;
    int currentRange;",sl,segment list
Lorg/apache/batik/gvt/renderer/MacRenderer;.repaint(Lorg/apache/batik/ext/awt/geom/RectListManager;)V#1#tmpImg,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-gvt/src/main/java/org/apache/batik/gvt/renderer/MacRenderer.java;,VariableName,tmpImg,"        // System.out.println(""Areas: "" + devRects);

        // Swap the buffers if the rendering completed cleanly.
        if (isDoubleBuffered) {
            BufferedImage tmpImg = workImg;
            workImg = currImg;
            currImg = tmpImg;
            damagedAreas = devRLM;",img,image
Lorg/apache/batik/ext/awt/geom/SegmentList;.getBounds2D()Ljava/awt/geom/Rectangle2D;#0#segB,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-awt-util/src/main/java/org/apache/batik/ext/awt/geom/SegmentList.java;,VariableName,segB,"        ret = (Rectangle2D)((Segment)iter.next()).getBounds2D().clone();
        while (iter.hasNext()) {
            Segment seg = (Segment)iter.next();
            Rectangle2D segB = seg.getBounds2D();
            Rectangle2D.union(segB, ret, ret);
        }
        return ret;",b,bounds
Lorg/apache/batik/bridge/EventTargetWrapper$FunctionRemoveProxy;.call(Lorg/mozilla/javascript/Context;Lorg/mozilla/javascript/Scriptable;Lorg/mozilla/javascript/Scriptable;[Ljava/lang/Object;)Ljava/lang/Object;#0#sr,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-bridge/src/main/java/org/apache/batik/bridge/EventTargetWrapper.java;,VariableName,sr,"            NativeJavaObject njo = (NativeJavaObject)thisObj;
            if (args[1] instanceof Function) {
                EventListener evtListener = null;
                SoftReference sr = (SoftReference)listenerMap.get(args[1]);
                if (sr != null)
                    evtListener = (EventListener)sr.get();
                if (evtListener == null) {",sr,soft reference
Lorg/apache/batik/css/engine/sac/CSSClassCondition;.match(Lorg/w3c/dom/Element;Ljava/lang/String;)Z#valLen,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-css/src/main/java/org/apache/batik/css/engine/sac/CSSClassCondition.java;,VariableName,valLen,"        String attr = ((CSSStylableElement)e).getCSSClass();
        String val = getValue();
        int attrLen = attr.length();
        int valLen = val.length();

        int i = attr.indexOf(val);
        while (i != -1) {
            if (i == 0 || Character.isSpaceChar(attr.charAt(i - 1))) {",len,length
Lorg/apache/batik/anim/dom/SVGLocatableSupport;.getTransformToElement(Lorg/w3c/dom/Element;Lorg/w3c/dom/svg/SVGElement;)Lorg/w3c/dom/svg/SVGMatrix;|Lorg/w3c/dom/svg/SVGException;#targetElt,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-anim/src/main/java/org/apache/batik/anim/dom/SVGLocatableSupport.java;,VariableName,targetElt,"                                                  SVGElement element)
        throws SVGException {
        final SVGOMElement currentElt = (SVGOMElement)elt;
        final SVGOMElement targetElt = (SVGOMElement)element;
        return new AbstractSVGMatrix() {
                protected AffineTransform getAffineTransform() {
                    AffineTransform cat = 
                        currentElt.getSVGContext().getGlobalTransform();",elt,element
Lorg/apache/batik/ext/awt/MultipleGradientPaintContext;.(Ljava/awt/image/ColorModel;Ljava/awt/Rectangle;Ljava/awt/geom/Rectangle2D;Ljava/awt/geom/AffineTransform;Ljava/awt/RenderingHints;[F[Ljava/awt/Color;Lorg/apache/batik/ext/awt/MultipleGradientPaint$CycleMethodEnum;Lorg/apache/batik/ext/awt/MultipleGradientPaint$ColorSpaceEnum;)V|Ljava/awt/geom/NoninvertibleTransformException;#tInv,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-awt-util/src/main/java/org/apache/batik/ext/awt/MultipleGradientPaintContext.java;,VariableName,tInv,"        }

        // The inverse transform is needed to from device to user space.
        // Get all the components of the inverse transform matrix.
        AffineTransform tInv = t.createInverse();

        double[] m = new double[6];
        tInv.getMatrix(m);
        a00 = (float)m[0];",inv,inverse
Lorg/apache/batik/svggen/SVGGraphics2D;.drawRenderableImage(Ljava/awt/image/renderable/RenderableImage;Ljava/awt/geom/AffineTransform;)V#trans2#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-svggen/src/main/java/org/apache/batik/svggen/SVGGraphics2D.java;,ParameterName,trans2,"* @see #setTransform(AffineTransform)
     * @see #setComposite(java.awt.Composite)
     * @see #setClip(Shape)
     */
    public void drawRenderedImage(RenderedImage img,
                                  AffineTransform trans2) {

        Element image =
            getGenericImageHandler().createElement(getGeneratorContext());
        AffineTransform trans1
            = getGenericImageHandler().handleImage(
                                       img, image,
                                       img.getMinX(),
                                       img.getMinY(),
                                       img.getWidth(),
                                       img.getHeight(),
                                       getGeneratorContext());",trans,transform
Lorg/apache/batik/ext/awt/image/spi/ImageTagRegistry;.readURL(Ljava/io/InputStream;Lorg/apache/batik/util/ParsedURL;Lorg/apache/xmlgraphics/java2d/color/ICCColorSpaceWithIntent;ZZ)Lorg/apache/batik/ext/awt/image/renderable/Filter;#0#0#ure,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-awt-util/src/main/java/org/apache/batik/ext/awt/image/spi/ImageTagRegistry.java;,VariableName,ure,"            RegistryEntry re = (RegistryEntry)i.next();
            if (re instanceof URLRegistryEntry) {
                if ((purl == null) || !allowOpenStream) continue;

                URLRegistryEntry ure = (URLRegistryEntry)re;
                if (ure.isCompatibleURL(purl)) {
                    ret = ure.handleURL(purl, needRawData);

                    // Check if we got an image.",ure,URL registry entry
Lorg/apache/batik/gvt/flow/TextLineBreaks;.findLineBrk(Ljava/text/AttributedString;)V#prevCls,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-gvt/src/main/java/org/apache/batik/gvt/flow/TextLineBreaks.java;,VariableName,prevCls,"        byte         cls = getCharCharClass(ch);
        if (cls == CHAR_CLASS_LF) cls = CHAR_CLASS_BK;
        byte      curCls = cls;
        byte     prevCls = cls;
        byte prevPrevCls = -1;
        int  wordCnt = 0;
        int  wordBegin = aci.getBeginIndex();",cls,class
Lorg/apache/batik/apps/rasterizer/SVGConverter;.computeTranscodingHints()Ljava/util/Map;#0#userStylesheetURL,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-svgrasterizer/src/main/java/org/apache/batik/apps/rasterizer/SVGConverter.java;,VariableName,userStylesheetURL,"}

        // Set user stylesheet
        if (userStylesheet != null) {
            String userStylesheetURL;
            try {
                URL userDir = new File(System.getProperty(""user.dir"")).toURI().toURL();
                userStylesheetURL = new ParsedURL(userDir, userStylesheet).toString();",url,uniform resource identifier
Lorg/apache/batik/anim/values/AnimatableRectValue;.toStringRep()Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-anim/src/main/java/org/apache/batik/anim/values/AnimatableRectValue.java;,MethodName,toStringRep,"    /**
     * Returns a string representation of this object.
     */
    public String toStringRep() {
        StringBuffer sb = new StringBuffer();
        sb.append(x);
        sb.append(',');",rep,representation
Lorg/apache/batik/svggen/XmlWriter;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-svggen/src/main/java/org/apache/batik/svggen/XmlWriter.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-svggen/src/main/java/org/apache/batik/svggen/SVGGraphics2D.java;,ClassName,XmlWriter," * @author <a href=""mailto:vincent.hardy@eng.sun.com"">Vincent Hardy</a>
 * @version $Id: XmlWriter.java 1733416 2016-03-03 07:07:13Z gadams $
 */
class XmlWriter implements SVGConstants {

    private static String EOL;
    private static final String TAG_END = ""/>"";
    private static final String TAG_START = ""</"";",xml,extensible markup language
Lorg/apache/batik/ext/awt/image/renderable/TileRable8Bit;.getActualTileBounds(Ljava/awt/geom/Rectangle2D;)Ljava/awt/geom/Rectangle2D;#w,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-awt-util/src/main/java/org/apache/batik/ext/awt/image/renderable/TileRable8Bit.java;,VariableName,w,"        double tileHeight = tileRect.getHeight();

        double tiledWidth = tiledRect.getWidth();
        double tiledHeight = tiledRect.getHeight();

        double w = Math.min(tileWidth, tiledWidth);
        double h = Math.min(tileHeight, tiledHeight);

        Rectangle2D realTileRect
            = new Rectangle2D.Double(tileRect.getX(),
                                     tileRect.getY(),
                                     w, h);",w,width
Lorg/apache/batik/bridge/GlyphLayout;.isGlyphOrientationAuto()Z#vOrient,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-bridge/src/main/java/org/apache/batik/bridge/GlyphLayout.java;,VariableName,vOrient,"    protected boolean isGlyphOrientationAuto() {
        if (!isVertical()) return false;
        aci.first();
        Integer vOrient = (Integer)aci.getAttribute(VERTICAL_ORIENTATION);
        if (vOrient != null) {
            return (vOrient == ORIENTATION_AUTO);
        }",v,vertical
Lorg/apache/batik/anim/AnimationException;.(Lorg/apache/batik/anim/timing/TimedElement;Ljava/lang/String;[Ljava/lang/Object;)V#params#0#2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-anim/src/main/java/org/apache/batik/anim/AnimationException.java;,ParameterName,params,"     * @param code the error code
     * @param params the parameters to use for the error message
     */
    public AnimationException(TimedElement e, String code, Object[] params) {
        this.e = e;
        this.code = code;
        this.params = params;",params,parameters
Lorg/apache/batik/dom/AbstractDocument$XPathExpr;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-dom/src/main/java/org/apache/batik/dom/AbstractDocument.java;,ClassName,XPathExpr,"    /**
     * A compiled XPath expression.
     */
    protected class XPathExpr implements XPathExpression {

        /**
         * The compiled XPath expression.
         */",expr,expression
Lorg/apache/batik/gvt/PatternPaintContext;.rasterCM)Ljava/awt/image/ColorModel;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-gvt/src/main/java/org/apache/batik/gvt/PatternPaintContext.java;,FieldName,rasterCM,"    /**
     * ColorModel for the Rasters created by this Paint
     */
    private ColorModel rasterCM;

    /**
     * Working Raster
     */",cm,color model
Lorg/apache/batik/bridge/DocumentJarClassLoader;.getPermissions(Ljava/security/CodeSource;)Ljava/security/PermissionCollection;#0#urlPC,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-bridge/src/main/java/org/apache/batik/bridge/DocumentJarClassLoader.java;,VariableName,urlPC,"        }

        // Now, add permissions if the documentCodeSource is not null
        if (documentCodeSource != null){
            PermissionCollection urlPC 
                = super.getPermissions(documentCodeSource);

            if (pc != null) {
                Enumeration items = urlPC.elements();
                while (items.hasMoreElements()) {",pc,permission collection
Lorg/apache/batik/svggen/SVGCSSStyler;.style(Lorg/w3c/dom/Node;)V#0#styleAttrBuffer,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-svggen/src/main/java/org/apache/batik/svggen/SVGCSSStyler.java;,VariableName,styleAttrBuffer,"            // Has to be an Element, as it has attributes
            // According to spec.
            Element element = (Element)node;
            StringBuffer styleAttrBuffer = new StringBuffer();
            int nAttr = attributes.getLength();
            List toBeRemoved = new ArrayList();
            for(int i=0; i<nAttr; i++){",attr,attribute
Lorg/apache/batik/bridge/SVGDescriptiveElementBridge;.theCtx)Lorg/apache/batik/bridge/BridgeContext;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-bridge/src/main/java/org/apache/batik/bridge/SVGDescriptiveElementBridge.java;,FieldName,theCtx,"    implements GenericBridge,  BridgeUpdateHandler, SVGContext {

    Element theElt;
    Element parent;
    BridgeContext theCtx;

    public SVGDescriptiveElementBridge() {
    }",ctx,context
Lorg/apache/batik/apps/svgbrowser/DOMViewer$Panel$NodeTemplateParser;.actionPerformed(Ljava/awt/event/ActionEvent;)V#0#urlObj,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-svgbrowser/src/main/java/org/apache/batik/apps/svgbrowser/DOMViewer.java;,VariableName,urlObj,"                    SAXDocumentFactory df = new SAXDocumentFactory(
                            doc.getImplementation(),
                            XMLResourceDescriptor.getXMLParserClassName());
                    URL urlObj = null;
                    if (doc instanceof SVGOMDocument) {
                        urlObj = ((SVGOMDocument) doc).getURLObject();
                    }",obj,object
Lorg/apache/batik/bridge/SVGTextElementBridge;.getTextIntersection(Lorg/apache/batik/bridge/BridgeContext;Lorg/w3c/dom/Element;Ljava/awt/geom/AffineTransform;Ljava/awt/geom/Rectangle2D;Z)Z#svgCtx,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-bridge/src/main/java/org/apache/batik/bridge/SVGTextElementBridge.java;,VariableName,svgCtx,"    public static boolean getTextIntersection(BridgeContext ctx,
                                              Element elem,
                                              AffineTransform ati,
                                              Rectangle2D rect,
                                              boolean checkSensitivity) {
        SVGContext svgCtx = null;
        if (elem instanceof SVGOMElement)
            svgCtx  = ((SVGOMElement)elem).getSVGContext();
        if (svgCtx == null) return false;
",ctx,context
Lorg/apache/batik/bridge/MultiResGraphicsNode;.srcElems)[Lorg/w3c/dom/Element;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-bridge/src/main/java/org/apache/batik/bridge/MultiResGraphicsNode.java;,FieldName,srcElems,"public class MultiResGraphicsNode
    extends AbstractGraphicsNode implements SVGConstants {

    SoftReference [] srcs;
    Element       [] srcElems;
    Dimension     [] minSz;
    Dimension     [] maxSz;
    Rectangle2D      bounds;",elems,element
Lorg/apache/batik/ext/awt/image/rendered/TurbulencePatternRed;.turbulenceFractalStitch([IDD[D[DLorg/apache/batik/ext/awt/image/rendered/TurbulencePatternRed$StitchInfo;)V#stitchInfo#0#5,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-awt-util/src/main/java/org/apache/batik/ext/awt/image/rendered/TurbulencePatternRed.java;,ParameterName,stitchInfo,"        /**
         * Copy constructor
         */
        StitchInfo(StitchInfo stitchInfo){
            this.width = stitchInfo.width;
            this.height = stitchInfo.height;
            this.wrapX = stitchInfo.wrapX;",info,information
Lorg/apache/batik/bridge/CursorManager;.cursorHrefToFilter(Lorg/w3c/dom/Element;Lorg/apache/batik/util/ParsedURL;Ljava/awt/geom/Point2D;)Lorg/apache/batik/ext/awt/image/renderable/Filter;#1#reg,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-bridge/src/main/java/org/apache/batik/bridge/CursorManager.java;,VariableName,reg,"        // If f is null, it means that we are not dealing with
        // an SVG image. Try as a raster image.
        if (f == null) {
            ImageTagRegistry reg = ImageTagRegistry.getRegistry();
            Filter filter = reg.readURL(purl);
            if (filter == null) {
                return null;",reg,registry
Lorg/apache/batik/transcoder/svg2svg/SVGTranscoder;.transcode(Lorg/apache/batik/transcoder/TranscoderInput;Lorg/apache/batik/transcoder/TranscoderOutput;)V|Lorg/apache/batik/transcoder/TranscoderException;#0#sw,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-transcoder/src/main/java/org/apache/batik/transcoder/svg2svg/SVGTranscoder.java;,VariableName,sw,"            if (d == null) {
                throw new Error(""Reader or Document expected"");
            }
            StringWriter sw = new StringWriter( 1024 );
            try {
                DOMUtilities.writeDocument(d, sw);
            } catch ( IOException ioEx ) {",sw,string writer
Lorg/apache/batik/gvt/MarkerShapePainter;.buildMiddleMarkerProxies()[Lorg/apache/batik/gvt/ProxyGraphicsNode;#prevSegType,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-gvt/src/main/java/org/apache/batik/gvt/MarkerShapePainter.java;,VariableName,prevSegType,"        double[] prev = new double[7];
        double[] curr = new double[7];
        double[] next = new double[7], tmp = null;
        int prevSegType = 0, currSegType = 0, nextSegType = 0;

        // Get the first three points on the path
        if (iter.isDone()) {
            return null;
        }",seg,segment
Lorg/apache/batik/transcoder/svg2svg/OutputManager;.printXMLDecl([C[C[C[CC[C[C[C[CC[C[C[C[CC[C)V|Ljava/io/IOException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-transcoder/src/main/java/org/apache/batik/transcoder/svg2svg/OutputManager.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-transcoder/src/main/java/org/apache/batik/transcoder/svg2svg/PrettyPrinter.java;,MethodName,printXMLDecl,"    /**
     * Prints an XML declaration.
     */
    public void printXMLDecl(char[] space1,
                             char[] space2,
                             char[] space3,
                             char[] version, char versionDelim,
                             char[] space4,
                             char[] space5,
                             char[] space6,
                             char[] encoding, char encodingDelim,
                             char[] space7,
                             char[] space8,
                             char[] space9,
                             char[] standalone, char standaloneDelim,
                             char[] space10)
        throws IOException {
        printString(""<?xml"");",xml,extensible markup language
Lorg/apache/batik/test/xml/XTSConstants;.XTS_NAMESPACE_URI)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-test/src/main/java/org/apache/batik/test/xml/XTSConstants.java;,FieldName,XTS_NAMESPACE_URI," * @version $Id: XTSConstants.java 1733416 2016-03-03 07:07:13Z gadams $
 */
public interface XTSConstants extends XMLReflectConstants{
    String XTS_NAMESPACE_URI 
        = ""http://xml.apache.org/xml-batik/test/xts"";",uri,uniform resource identifier
Lorg/apache/batik/ext/awt/image/rendered/ProfileRed;.copyData(Ljava/awt/image/WritableRaster;)Ljava/awt/image/WritableRaster;#0#0#sRGBCompCM,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-awt-util/src/main/java/org/apache/batik/ext/awt/image/rendered/ProfileRed.java;,VariableName,sRGBCompCM,"            /**
             * Now, convert the image to sRGB
             */
            ComponentColorModel sRGBCompCM = new ComponentColorModel
                (ColorSpace.getInstance(ColorSpace.CS_sRGB),
                 new int[]{8, 8, 8},
                 false,",comp,component
Lorg/apache/batik/ext/awt/image/SVGComposite$MultiplyCompositeContext;.precompose(Ljava/awt/image/Raster;Ljava/awt/image/Raster;Ljava/awt/image/WritableRaster;)V#srcPix,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-awt-util/src/main/java/org/apache/batik/ext/awt/image/SVGComposite.java;,VariableName,srcPix,"            final int norm = (1<<24)/255;
            final int pt5  = (1<<23);

            for (int y = y0; y<y1; y++) {
                srcPix = src.getPixels  (x, y, w, 1, srcPix);
                dstPix = dstIn.getPixels(x, y, w, 1, dstPix);
                int sp  = 0;
                int end = w*4;",pix,pixels
Lorg/apache/batik/gvt/flow/LineInfo;.rangeAdv)[D,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-gvt/src/main/java/org/apache/batik/gvt/flow/LineInfo.java;,FieldName,rangeAdv,"    GlyphGroupInfo [] newGGIS=null;

    int       numRanges;
    double [] ranges;
    double [] rangeAdv;

    BlockInfo bi = null;
    boolean paraStart;
    boolean paraEnd;",adv,advance
Lorg/apache/batik/bridge/WindowWrapper$GetURLFunctionWrapper;.(Lorg/apache/batik/bridge/RhinoInterpreter;Lorg/mozilla/javascript/Function;Lorg/apache/batik/bridge/WindowWrapper;)V#ww#0#2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-bridge/src/main/java/org/apache/batik/bridge/WindowWrapper.java;,ParameterName,ww,"       /**
         * Creates a wrapper.
         */
        public GetURLFunctionWrapper(RhinoInterpreter ri, Function fct,
                                     WindowWrapper ww) {
            interpreter = ri;
            function = fct;
            windowWrapper = ww;",ww,window wrapper
Lorg/apache/batik/css/engine/value/svg/EnableBackgroundManager;.computeValue(Lorg/apache/batik/css/engine/CSSStylableElement;Ljava/lang/String;Lorg/apache/batik/css/engine/CSSEngine;ILorg/apache/batik/css/engine/StyleMap;Lorg/apache/batik/css/engine/value/Value;)Lorg/apache/batik/css/engine/value/Value;#0#0#v4,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-css/src/main/java/org/apache/batik/css/engine/value/svg/EnableBackgroundManager.java;,VariableName,v4,"                Value v3 = super.computeValue(elt, pseudo, engine,
                                              idx, sm, lv3);
                Value lv4 = lv.item(4);
                orientation = VERTICAL_ORIENTATION;
                Value v4 = super.computeValue(elt, pseudo, engine,
                                              idx, sm, lv4);

                if (lv1 != v1 || lv2 != v2 ||
                    lv3 != v3 || lv4 != v4) {",v,value
Lorg/apache/batik/ext/awt/image/SVGComposite$OutCompositeContext_INT_PACK;.(Ljava/awt/image/ColorModel;Ljava/awt/image/ColorModel;)V#srcCM#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-awt-util/src/main/java/org/apache/batik/ext/awt/image/SVGComposite.java;,ParameterName,srcCM,"    public static class OverCompositeContext_NA
        extends AlphaPreCompositeContext {
        OverCompositeContext_NA(ColorModel srcCM, ColorModel dstCM) {
            super(srcCM, dstCM);
        }",cm,color model
Lorg/apache/batik/bridge/SVGGVTFont;.getLineMetrics(II)Lorg/apache/batik/gvt/font/GVTLineMetrics;#ulOffset,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-bridge/src/main/java/org/apache/batik/bridge/SVGGVTFont.java;,VariableName,ulOffset,"        baselineOffsets[Font.HANGING_BASELINE] = -ascent;

        float stOffset    = fontFace.getStrikethroughPosition() * -scale;
        float stThickness = fontFace.getStrikethroughThickness() * scale;
        float ulOffset    = fontFace.getUnderlinePosition() * scale;
        float ulThickness = fontFace.getUnderlineThickness() * scale;
        float olOffset    = fontFace.getOverlinePosition() * -scale;
        float olThickness = fontFace.getOverlineThickness() * scale;",ul,underline
Lorg/apache/batik/transcoder/wmf/tosvg/WMFHeaderProperties;.getVerticalAlignmentValue(Ljava/awt/font/TextLayout;I)F#vertAlign#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-transcoder/src/main/java/org/apache/batik/transcoder/wmf/tosvg/WMFHeaderProperties.java;,ParameterName,vertAlign,"    /** get the vertical Alignment value for the text.
     */
    private float getVerticalAlignmentValue(TextLayout layout, int vertAlign) {
        if (vertAlign == WMFConstants.TA_BASELINE) return -layout.getAscent();
        else if (vertAlign == WMFConstants.TA_TOP) return (layout.getAscent() + layout.getDescent());
        else return 0;",vert,vertical
Lorg/apache/batik/ext/awt/image/renderable/TileRable8Bit;.getActualTileBounds(Ljava/awt/geom/Rectangle2D;)Ljava/awt/geom/Rectangle2D;#tileRect,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-awt-util/src/main/java/org/apache/batik/ext/awt/image/renderable/TileRable8Bit.java;,VariableName,tileRect," // tileRect
        Rectangle2D tileRect = tileRegion;

        // Adjust the scale so that the tiling happens on pixel
        // boundaries on both axis.
        // Desired pixel rect width",rect,rectangle
Lorg/apache/batik/bridge/SVGDescriptiveElementBridge;.theElt)Lorg/w3c/dom/Element;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-bridge/src/main/java/org/apache/batik/bridge/SVGDescriptiveElementBridge.java;,FieldName,theElt,"public abstract class SVGDescriptiveElementBridge extends AbstractSVGBridge
    implements GenericBridge,  BridgeUpdateHandler, SVGContext {

    Element theElt;
    Element parent;
    BridgeContext theCtx;

    public SVGDescriptiveElementBridge() {
    }
",elt,element
Lorg/apache/batik/ext/awt/image/rendered/ColorMatrixRed;.(Lorg/apache/batik/ext/awt/image/rendered/CachableRed;[[F)V#srcCS,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-awt-util/src/main/java/org/apache/batik/ext/awt/image/rendered/ColorMatrixRed.java;,VariableName,srcCS,"    public ColorMatrixRed(CachableRed src, float[][] matrix){
        setMatrix(matrix);

        ColorModel srcCM = src.getColorModel();
        ColorSpace srcCS = null;
        if (srcCM != null)
            srcCS = srcCM.getColorSpace();
        ColorModel cm;",cs,color space
Lorg/apache/batik/script/rhino/BatikSecurityController;.callWithDomain(Ljava/lang/Object;Lorg/mozilla/javascript/Context;Lorg/mozilla/javascript/Callable;Lorg/mozilla/javascript/Scriptable;Lorg/mozilla/javascript/Scriptable;[Ljava/lang/Object;)Ljava/lang/Object;#thisObj#0#4,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-script/src/main/java/org/apache/batik/script/rhino/BatikSecurityController.java;,ParameterName,thisObj,"public Object callWithDomain(Object securityDomain, final Context cx,
                                 final Callable callable,
                                 final Scriptable scope,
                                 final Scriptable thisObj,
                                 final Object[] args) {
        AccessControlContext acc;
        if (securityDomain instanceof AccessControlContext)
            acc = (AccessControlContext)securityDomain;",obj,object
Lorg/apache/batik/ext/awt/image/rendered/ComponentTransferRed;.copyData(Ljava/awt/image/WritableRaster;)Ljava/awt/image/WritableRaster;#srcWR,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-awt-util/src/main/java/org/apache/batik/ext/awt/image/rendered/ComponentTransferRed.java;,VariableName,srcWR,"CachableRed src = (CachableRed)getSources().get(0);

        wr = src.copyData(wr);
        GraphicsUtil.coerceData(wr, src.getColorModel(), false);

        WritableRaster srcWR = wr.createWritableTranslatedChild(0,0);

        operation.filter(srcWR, srcWR);

        return wr;",wr,writable raster
Lorg/apache/batik/util/RunnableQueueTest$TPRable;.rq)Lorg/apache/batik/util/RunnableQueue;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-util/src/test/java/org/apache/batik/util/RunnableQueueTest.java;,FieldName,rq,"public int nThreads;
    public int activeThreads;
    public Random rand;
    public RunnableQueue rq;

    /**
     * Creates a new RunnableQueueTest.
     * @param nThreads number of runnables to queue
     */",rq,runnable queue
Lorg/apache/batik/gvt/flow/WordInfo;.(IFFF[Lorg/apache/batik/gvt/flow/GlyphGroupInfo;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-gvt/src/main/java/org/apache/batik/gvt/flow/WordInfo.java;,MethodName,WordInfo,"    float    ascent=-1, descent=-1, lineHeight=-1;
    GlyphGroupInfo [] glyphGroups=null;
    Object            flowLine=null;

    public WordInfo(int index) {
        this.index = index;
    }

    WordInfo(int index,",info,information
Lorg/apache/batik/gvt/AbstractGraphicsNode;.normalizeRectangle(Ljava/awt/geom/Rectangle2D;)Ljava/awt/geom/Rectangle2D;#2#tmpH,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-gvt/src/main/java/org/apache/batik/gvt/AbstractGraphicsNode.java;,VariableName,tmpH,"                     tmpW, bounds.getHeight());
            }
        } else if (bounds.getHeight() < EPSILON) {
            double tmpH = bounds.getWidth()*EPSILON;
            if (tmpH < bounds.getHeight())
                tmpH = bounds.getHeight();
            return new Rectangle2D.Double",h,height
Lorg/apache/batik/ext/awt/image/renderable/TileRable8Bit;.createRendering(Ljava/awt/image/renderable/RenderContext;)Ljava/awt/image/RenderedImage;#tileRc,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-awt-util/src/main/java/org/apache/batik/ext/awt/image/renderable/TileRable8Bit.java;,VariableName,tileRc,"            srcRect = source.getBounds2D();
        else
            srcRect = tileRect;

        // System.out.println(""SrcRect: "" + srcRect);

        RenderContext tileRc  = new RenderContext(tileAt, srcRect, rh);
        // RenderedImage tileRed = new DemandRed(source, tileRc);
        RenderedImage tileRed = source.createRendering(tileRc);",rc,render context
Lorg/apache/batik/transcoder/wmf/tosvg/AbstractWMFReader;.vpH)I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-transcoder/src/main/java/org/apache/batik/transcoder/wmf/tosvg/AbstractWMFReader.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-transcoder/src/main/java/org/apache/batik/transcoder/wmf/tosvg/WMFRecordStore.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-transcoder/src/main/java/org/apache/batik/transcoder/wmf/tosvg/WMFHeaderProperties.java;,FieldName,vpH,"    public static final float MM_PER_PIXEL = 25.4f / Platform.getScreenResolution();
    protected int left, right, top, bottom, width, height, inch;
    protected float scaleX, scaleY, scaleXY;
    protected int vpW, vpH, vpX, vpY;
    // the sign values for X and Y, will be modified depending on the VIEWPORT values
    protected int xSign = 1;
    protected int ySign = 1;",h,height
Lorg/apache/batik/transcoder/svg2svg/PrettyPrinter;.printXMLDecl()V|Lorg/apache/batik/transcoder/TranscoderException;|Lorg/apache/batik/xml/XMLException;|Ljava/io/IOException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-transcoder/src/main/java/org/apache/batik/transcoder/svg2svg/PrettyPrinter.java;,MethodName,printXMLDecl,"    /**
     * Prints the XML declaration.
     */
    protected void printXMLDecl()
        throws TranscoderException,
               XMLException,
               IOException {",decl,declaration
Lorg/apache/batik/test/TestReportValidator;.setConfig(Lorg/apache/batik/test/Test;ZLjava/lang/String;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-test/src/main/java/org/apache/batik/test/TestReportValidator.java;,MethodName,setConfig,"     * Lets derived classes set the configuration parameters
     * for this test.
     */
    protected void setConfig(Test test,
                             boolean expectedStatus,
                             String expectedErrorCode){",config,configuration
Lorg/apache/batik/extension/svg/FlowExtGlyphLayout;.layoutChunk(Lorg/apache/batik/gvt/font/GVTGlyphVector;Ljava/awt/geom/Point2D;ILjava/util/List;)V#xOrig,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-extension/src/main/java/org/apache/batik/extension/svg/FlowExtGlyphLayout.java;,VariableName,xOrig,"Point2D.Float lineLoc  = null;
        float         lineAdv  = 0;
        float         lineVAdv = 0;

        float xOrig=(float)origin.getX();
        float yOrig=(float)origin.getY();

        float xScale=1;
        float xAdj=0;",orig,origin
Lorg/apache/batik/anim/dom/SVGOMTRefElement;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-anim/src/main/java/org/apache/batik/anim/dom/SVGOMTRefElement.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-anim/src/main/java/org/apache/batik/anim/dom/SVGDOMImplementation.java;,ClassName,SVGOMTRefElement,"public class SVGOMTRefElement
    extends    SVGURIReferenceTextPositioningElement
    implements SVGTRefElement {

    /**
     * Creates a new SVGOMTRefElement object.
     */",ref,reference
Lorg/apache/batik/dom/util/DOMUtilities;.writeNode(Lorg/w3c/dom/Node;Ljava/io/Writer;)V|Ljava/io/IOException;#w#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-dom/src/main/java/org/apache/batik/dom/util/DOMUtilities.java;,ParameterName,w,"    /**
     * Serializes the specified <code>Document</code>, writing it to the given
     * <code>Writer</code>.
     */
    public static void writeDocument(Document doc, Writer w) throws IOException {
        AbstractDocument d = (AbstractDocument) doc;
        if (doc.getDocumentElement() == null) {
            throw new IOException(""No document element"");",w,writer
Lorg/apache/batik/swing/svg/JSVGComponent;.renderGVTTree()V#visRect,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-swing/src/main/java/org/apache/batik/swing/svg/JSVGComponent.java;,VariableName,visRect,"            super.renderGVTTree();
            return;
        }

        final Rectangle visRect = getRenderRect();
        if ((gvtRoot == null)    ||
            (visRect.width <= 0) ||
            (visRect.height <= 0)) {
            return;
        }",rect,rectangle
Lorg/apache/batik/gvt/font/AWTGVTGlyphVector;.draw(Ljava/awt/Graphics2D;Ljava/text/AttributedCharacterIterator;)V#typeGTrans,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-gvt/src/main/java/org/apache/batik/gvt/font/AWTGVTGlyphVector.java;,VariableName,typeGTrans,"                useHinting = false;
        }

        final int typeGRot   = AffineTransform.TYPE_GENERAL_ROTATION;
        final int typeGTrans = AffineTransform.TYPE_GENERAL_TRANSFORM;

        if (useHinting) {
            // Check if usr->dev transform has general rotation,
            // or shear..",trans,transform
Lorg/apache/batik/swing/svg/JSVGComponent$BridgeUserAgentWrapper;.getPixelUnitToMillimeter()F#0#q,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-swing/src/main/java/org/apache/batik/swing/svg/JSVGComponent.java;,VariableName,q,"                        result = userAgent.getEventDispatcher();
                    }
                }
                Query q = new Query();
                invokeAndWait(q);
                return q.result;
            }",q,query
Lorg/apache/batik/swing/gvt/JGVTComponent$24719;.run()V#0#vRect,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-swing/src/main/java/org/apache/batik/swing/gvt/JGVTComponent.java;,VariableName,vRect,"    public void run() {
                                        if (progressivePaintThread ==
                                            thisThread) {
                                            Rectangle vRect = getRenderRect();
                                            repaint(vRect.x,     vRect.y,
                                                    vRect.width, vRect.height);
                                        }",rect,rectangle
Lorg/apache/batik/gvt/renderer/MacRenderer;.setRenderingHints(Ljava/awt/RenderingHints;)V#rh#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-gvt/src/main/java/org/apache/batik/gvt/renderer/MacRenderer.java;,ParameterName,rh,"        renderingHints.add(defaultRenderingHints);
        usr2dev = new AffineTransform();
    }

    public MacRenderer(RenderingHints rh,
                       AffineTransform at){
        renderingHints = new RenderingHints(null);
        renderingHints.add(rh);
        if (at == null) usr2dev = new AffineTransform();",rh,rendering hints
Lorg/apache/batik/test/PerformanceTest;.runImplBasic()Z|Ljava/lang/Exception;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-test/src/main/java/org/apache/batik/test/PerformanceTest.java;,MethodName,runImplBasic,"    * Force implementations to only implement <code>runOp</code>
     * and other performance specific methods.
     */
    public final boolean runImplBasic() throws Exception {
        // Should never be called for a PerformanceTest
        return false;
    }",impl,implementation
Lorg/apache/batik/transcoder/wmf/tosvg/RecordStore;.setVpW(I)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-transcoder/src/main/java/org/apache/batik/transcoder/wmf/tosvg/RecordStore.java;,MethodName,setVpW,"   /**
     * Sets the viewport width
     */
    public void setVpW( int newValue ) {
        vpW = newValue;
    }",w,width
Lorg/apache/batik/gvt/AbstractGraphicsNode;.normalizeRectangle(Ljava/awt/geom/Rectangle2D;)Ljava/awt/geom/Rectangle2D;#1#tmpW,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-gvt/src/main/java/org/apache/batik/gvt/AbstractGraphicsNode.java;,VariableName,tmpW,"   return new Rectangle2D.Double
                    (bounds.getX(), bounds.getY(), EPSILON/det, EPSILON/det);
            } else {
                double tmpW = bounds.getHeight()*EPSILON;
                if (tmpW < bounds.getWidth())
                    tmpW = bounds.getWidth();
                return new Rectangle2D.Double",w,width
Lorg/apache/batik/bridge/svg12/SVG12BridgeEventSupport$Listener;.mouseWheelMoved(Lorg/apache/batik/gvt/event/GraphicsNodeMouseWheelEvent;)V#wheelEvt,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-bridge/src/main/java/org/apache/batik/bridge/svg12/SVG12BridgeEventSupport.java;,VariableName,wheelEvt,"  Document doc = context.getPrimaryBridgeContext().getDocument();
            Element targetElement = doc.getDocumentElement();
            DocumentEvent d = (DocumentEvent) doc;
            SVGOMWheelEvent wheelEvt
                = (SVGOMWheelEvent) d.createEvent(""WheelEvent"");
            wheelEvt.initWheelEventNS(XMLConstants.XML_EVENTS_NAMESPACE_URI,
                                      ""wheel"", 
                                      true,
                                      true,
                                      null,
                                      evt.getWheelDelta());",evt,event
Lorg/apache/batik/swing/gvt/JGVTComponent$24461;.run()V#0#2#td,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-swing/src/main/java/org/apache/batik/swing/gvt/JGVTComponent.java;,VariableName,td,"    sleep(200);
                            }
                        } catch (InterruptedException ie) {
                        } catch (ThreadDeath td) {
                            throw td;
                        } catch (Throwable t) {",td,thread death
Lorg/apache/batik/ext/awt/image/spi/JDKRegistryEntry$3808;.run()V#0#0#tk,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-awt-util/src/main/java/org/apache/batik/ext/awt/image/spi/JDKRegistryEntry.java;,VariableName,tk,"public void run() {
                    Filter filt = null;
                    try {
                        Toolkit tk = Toolkit.getDefaultToolkit();
                        Image img = tk.createImage(url);

                        if (img != null) {
                            RenderedImage ri = loadImage(img, dr);",tk,toolkit
Lorg/apache/batik/transcoder/svg2svg/OutputManager$NameInfo;.([C[C[C)V#sp1#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-transcoder/src/main/java/org/apache/batik/transcoder/svg2svg/OutputManager.java;,ParameterName,sp1," /**
         * Creates a new NameInfo.
         */
        public NameInfo(char[] sp1, char[] nm, char[] sp2) {
            space1 = sp1;
            name = nm;
            space2 = sp2;",sp,space
Lorg/apache/batik/parser/UnitProcessor;.svgToObjectBoundingBox(Ljava/lang/String;Ljava/lang/String;SLorg/apache/batik/parser/UnitProcessor$Context;)F|Lorg/apache/batik/parser/ParseException;#ur,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-parser/src/main/java/org/apache/batik/parser/UnitProcessor.java;,VariableName,ur,"public static float svgToObjectBoundingBox(String s,
                                               String attr,
                                               short d,
                                               Context ctx)
        throws ParseException {
        LengthParser lengthParser = new LengthParser();
        UnitResolver ur = new UnitResolver();
        lengthParser.setLengthHandler(ur);
        lengthParser.parse(s);
        return svgToObjectBoundingBox(ur.value, ur.unit, d, ctx);",ur,unit resolver
Lorg/apache/batik/bridge/svg12/DefaultXBLManager$XblChildNodes;.collectXblChildNodes(Lorg/w3c/dom/Node;Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;#1#0#rec,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-bridge/src/main/java/org/apache/batik/bridge/svg12/DefaultXBLManager.java;,VariableName,rec,"     * bindable element.
     */
    protected void setActiveDefinition(BindableElement elt,
                                       DefinitionRecord defRec) {
        XBLRecord rec = getRecord(elt);
        rec.definitionElement = defRec == null ? null : defRec.definition;
        if (defRec != null
                && defRec.definition != null
                && defRec.template != null) {",rec,record
Lorg/apache/batik/svggen/font/table/GlyfDescript;.yMax)S,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-svggen/src/main/java/org/apache/batik/svggen/font/table/GlyfDescript.java;,FieldName,yMax,"private short xMin;
    private short yMin;
    private short xMax;
    private short yMax;

    protected GlyfDescript(GlyfTable parentTable, short numberOfContours, ByteArrayInputStream bais) {
        this.parentTable = parentTable;
        this.numberOfContours = numberOfContours;",max,maximum
Lorg/apache/batik/gvt/ShapeNode;.inSensitiveArea(Ljava/awt/geom/Point2D;)Z#0#0#0#sp,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-gvt/src/main/java/org/apache/batik/gvt/ShapeNode.java;,VariableName,sp,"} else if (shapePainter instanceof CompositeShapePainter) {
            CompositeShapePainter cp = (CompositeShapePainter)shapePainter;

            for (int i=0; i < cp.getShapePainterCount(); ++i) {
                ShapePainter sp = cp.getShapePainter(i);
                if (sp instanceof StrokeShapePainter) {
                    strokeShapePainter = sp;
                } else if (sp instanceof FillShapePainter) {",sp,shape painter
Lorg/apache/batik/apps/svgbrowser/HistoryBrowserInterface$AttributeRemovedCommand;.prevValue)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-svgbrowser/src/main/java/org/apache/batik/apps/svgbrowser/HistoryBrowserInterface.java;,FieldName,prevValue,"/**
         * The previous attribute value.
         */
        protected String prevValue;

        /**
         * The namespaceURI.
         */",prev,previous
Lorg/apache/batik/anim/MotionAnimation;.(Lorg/apache/batik/anim/timing/TimedElement;Lorg/apache/batik/anim/dom/AnimatableElement;I[F[FZZ[Lorg/apache/batik/anim/values/AnimatableValue;Lorg/apache/batik/anim/values/AnimatableValue;Lorg/apache/batik/anim/values/AnimatableValue;Lorg/apache/batik/anim/values/AnimatableValue;Lorg/apache/batik/ext/awt/geom/ExtendedGeneralPath;[FZZFS)V#1#toPt,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-anim/src/main/java/org/apache/batik/anim/MotionAnimation.java;,VariableName,toPt,"float y = fromPt.getY();
                    path.moveTo(x, y);
                    if (to != null) {
                        AnimatableMotionPointValue toPt = (AnimatableMotionPointValue) to;
                        path.lineTo(toPt.getX(), toPt.getY());
                    } else if (by != null) {
                        AnimatableMotionPointValue byPt = (AnimatableMotionPointValue) by;",pt,point
Lorg/apache/batik/bridge/SVGAnimationEngine$DebugAnimationTickRunnable;.getWaitTime()J#wt,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-bridge/src/main/java/org/apache/batik/bridge/SVGAnimationEngine.java;,VariableName,wt,"    }
        }

        public long getWaitTime() {
            long wt = waitTime;
            waitTime = Long.MAX_VALUE;
            return wt;
        }",wt,wait time
Lorg/apache/batik/apps/svgbrowser/DOMDocumentTree;.autoscroll(Ljava/awt/Point;)V#viewportPos,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-svgbrowser/src/main/java/org/apache/batik/apps/svgbrowser/DOMDocumentTree.java;,VariableName,viewportPos,"if (viewport == null) {
            return;
        }

        Point viewportPos = viewport.getViewPosition();
        int viewHeight = viewport.getExtentSize().height;
        int viewWidth = viewport.getExtentSize().width;

        // Scroll",pos,position
Lorg/apache/batik/ext/awt/image/rendered/CompositeRed;.emptyRect(Ljava/awt/image/WritableRaster;)V#zr,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-awt-util/src/main/java/org/apache/batik/ext/awt/image/rendered/CompositeRed.java;,VariableName,zr,"public void emptyRect(WritableRaster wr) {
        PadRed.ZeroRecter zr = PadRed.ZeroRecter.getZeroRecter(wr);
        zr.zeroRect(new Rectangle(wr.getMinX(), wr.getMinY(),
                                  wr.getWidth(), wr.getHeight()));
    }",zr,zero recter
Lorg/apache/batik/apps/rasterizer/SVGConverter;.setMaxWidth(F)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-svgrasterizer/src/main/java/org/apache/batik/apps/rasterizer/SVGConverter.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-svgrasterizer/src/main/java/org/apache/batik/apps/rasterizer/Main.java;,MethodName,setMaxWidth," * does not have any effect on the output image.
     * The maximum width is in user space.
     */
    public void setMaxWidth(float width) {
        this.maxWidth = width;
    }",max,maximum
Lorg/apache/batik/util/PreferenceManager;.(Ljava/lang/String;)V#prefFileName#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-util/src/main/java/org/apache/batik/util/PreferenceManager.java;,ParameterName,prefFileName,"    /**
     * Creates a preference manager.
     * @param prefFileName the name of the preference file.
     */
    public PreferenceManager(String prefFileName)
    {
        this(prefFileName, null);
    }",pref,preference
Lorg/apache/batik/ext/awt/image/renderable/ComponentTransferRable8Bit;.txfFunc)[Lorg/apache/batik/ext/awt/image/TransferFunction;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-awt-util/src/main/java/org/apache/batik/ext/awt/image/renderable/ComponentTransferRable8Bit.java;,FieldName,txfFunc," /**
     * Array of transfer functions. Elements are computed
     * lazily.
     */
    private TransferFunction[]
        txfFunc = new TransferFunction[4];",func,function
Lorg/apache/batik/bridge/GlyphLayout;.doSpacing(Ljava/lang/Float;Ljava/lang/Float;Ljava/lang/Float;)Ljava/awt/geom/Point2D;#prevPos,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-bridge/src/main/java/org/apache/batik/bridge/GlyphLayout.java;,VariableName,prevPos,"float dx = 0f;
        float dy = 0f;
        Point2D[] newPositions = new Point2D[numGlyphs+1];
        Point2D prevPos = gv.getGlyphPosition(0);
        int prevCode    = gv.getGlyphCode(0);
        float x = (float) prevPos.getX();
        float y = (float) prevPos.getY();",pos,position
Lorg/apache/batik/anim/timing/TimeContainer;.setRoot(Lorg/apache/batik/anim/timing/TimedElement;Lorg/apache/batik/anim/timing/TimedDocumentRoot;)V#0#0#te,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-anim/src/main/java/org/apache/batik/anim/timing/TimeContainer.java;,VariableName,te,"TimeContainer c = (TimeContainer) e;
            Iterator it = c.children.iterator();
            while (it.hasNext()) {
                TimedElement te = (TimedElement)it.next();
                setRoot(te, root);
            }
        }",te,timed element
Lorg/apache/batik/apps/svgbrowser/DOMViewer$ShadowNodeInfo;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-svgbrowser/src/main/java/org/apache/batik/apps/svgbrowser/DOMViewer.java;,ClassName,ShadowNodeInfo," /**
     * To store the node information for a shadow tree.
     */
    protected static class ShadowNodeInfo extends NodeInfo {

        /**
         * Creates a new ShadowNodeInfo object.
         */",info,information
Lorg/apache/batik/ext/awt/image/rendered/TileGrid;.getTile(II)Ljava/awt/image/Raster;#ras,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-awt-util/src/main/java/org/apache/batik/ext/awt/image/rendered/TileGrid.java;,VariableName,ras," if (DEBUG) System.out.println(""Fetching: ("" + (x+minTileX) + "", "" +
                                      (y+minTileY) + "")"");
        if (COUNT) synchronized (TileGrid.class) { requests++; }

        Raster       ras  = null;
        TileLRUMember [] row  = rasters[y];
        TileLRUMember    item = null;
        if (row != null) {",ras,raster
Lorg/apache/batik/svggen/SVGGraphics2D;.drawString(Ljava/text/AttributedCharacterIterator;FF)V#textGC,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-svggen/src/main/java/org/apache/batik/svggen/SVGGraphics2D.java;,VariableName,textGC,"char ch = ati.first();

        setTextElementFill   (ati);
        setTextFontAttributes(ati, baseFont);

        SVGGraphicContext textGC;
        textGC = domTreeManager.getGraphicContextConverter().toSVG(gc);
        domGroupManager.addElement(text, DOMGroupManager.FILL);
        textGC.getContext().put(SVG_STROKE_ATTRIBUTE, SVG_NONE_VALUE);",gc,graphic context
Lorg/apache/batik/bridge/SVGImageElementBridge;.createImageGraphicsNode(Lorg/apache/batik/bridge/BridgeContext;Lorg/w3c/dom/Element;Lorg/apache/batik/util/ParsedURL;)Lorg/apache/batik/gvt/GraphicsNode;#1#1#secEx,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-bridge/src/main/java/org/apache/batik/bridge/SVGImageElementBridge.java;,VariableName,secEx,"UserAgent userAgent = ctx.getUserAgent();

        try {
            userAgent.checkLoadExternalResource(purl, pDocURL);
        } catch (SecurityException secEx ) {
            throw new BridgeException(ctx, e, secEx, ERR_URI_UNSECURE,
                                      new Object[] {purl});
        }
",sec,security
Lorg/apache/batik/ext/awt/image/renderable/TurbulenceRable;.setNumOctaves(I)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-bridge/src/main/java/org/apache/batik/bridge/SVGFeTurbulenceElementBridge.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-awt-util/src/main/java/org/apache/batik/ext/awt/image/renderable/TurbulenceRable.java;,MethodName,setNumOctaves,"/**
     * Sets the number of octaves for the noise function .
     * @param numOctaves The new number of octaves for the noise function .
     */
    void setNumOctaves(int numOctaves);",num,number
Lorg/apache/batik/svggen/SVGGraphics2D;.drawString(Ljava/lang/String;FF)V#txtTxf,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-svggen/src/main/java/org/apache/batik/svggen/SVGGraphics2D.java;,VariableName,txtTxf," // Account for the font transform if there is one
        AffineTransform savTxf = getTransform();
        AffineTransform txtTxf = transformText(x, y);

        Element text =
            getDOMFactory().createElementNS(SVG_NAMESPACE_URI, SVG_TEXT_TAG);
        text.setAttributeNS(null, SVG_X_ATTRIBUTE, generatorCtx.doubleString(x));",txt,text
Lorg/apache/batik/gvt/AbstractGraphicsNode;.weakRef)Ljava/lang/ref/WeakReference<>;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-gvt/src/main/java/org/apache/batik/gvt/AbstractGraphicsNode.java;,FieldName,weakRef,"/**
     * A Weak Reference to this.
     */
    protected WeakReference weakRef;

    /**
     * Internal Cache: node bounds
     */",ref,reference
Lorg/apache/batik/gvt/flow/FlowRegions$TransitionComp;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-gvt/src/main/java/org/apache/batik/gvt/flow/FlowRegions.java;,ClassName,TransitionComp,"   this.up  = up;
        }
    }

    static class TransitionComp implements Comparator {
        public static Comparator COMP = new TransitionComp();
        TransitionComp() { }
        public int compare(Object o1, Object o2) {",comp,comparator
Lorg/apache/batik/apps/rasterizer/SVGConverterSource;.isSameAs(Ljava/lang/String;)Z#srcStr#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-svgrasterizer/src/main/java/org/apache/batik/apps/rasterizer/SVGConverterSource.java;,ParameterName,srcStr," /**
     * Checks if same as source described by srcStr
     */
    boolean isSameAs(String srcStr);

    /**
     * Checks if source can be read
     */",src,source
Lorg/apache/batik/bridge/SVGUtilities;.matchUserAgent(Lorg/w3c/dom/Element;Lorg/apache/batik/bridge/UserAgent;)Z#0#st,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-bridge/src/main/java/org/apache/batik/bridge/SVGUtilities.java;,VariableName,st," String rf = elt.getAttributeNS(null,
                                           SVG_REQUIRED_FEATURES_ATTRIBUTE);
            if (rf.length() == 0)  // SVG spec says empty returns false
                return false;
            StringTokenizer st = new StringTokenizer(rf, "" "");
            while (st.hasMoreTokens()) {
                String s = st.nextToken();
                if (!ua.hasFeature(s)) {",st,string tokenizer
Lorg/apache/batik/anim/dom/SAXSVGDocumentFactory;.createDocument(Ljava/lang/String;)Lorg/w3c/dom/Document;|Ljava/io/IOException;#0#0#semiIdx,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-anim/src/main/java/org/apache/batik/anim/dom/SAXSVGDocumentFactory.java;,VariableName,semiIdx," // charset would be terminated by a ';'.  So I look
                // for both and take to closer of the two.
                int idx     = contentType.indexOf(',', eqIdx);
                int semiIdx = contentType.indexOf(';', eqIdx);
                if ((semiIdx != -1) && ((semiIdx < idx) || (idx == -1)))
                    idx = semiIdx;
                if (idx != -1)",idx,index
Lorg/apache/batik/bridge/SVGUtilities;.convertMaskRegion(Lorg/w3c/dom/Element;Lorg/w3c/dom/Element;Lorg/apache/batik/gvt/GraphicsNode;Lorg/apache/batik/bridge/BridgeContext;)Ljava/awt/geom/Rectangle2D;#xStr,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-bridge/src/main/java/org/apache/batik/bridge/SVGUtilities.java;,VariableName,xStr,"public static Rectangle2D convertMaskRegion(Element maskElement,
                                                Element maskedElement,
                                                GraphicsNode maskedNode,
                                                BridgeContext ctx) {

        // 'x' attribute - default is -10%
        String xStr = maskElement.getAttributeNS(null, SVG_X_ATTRIBUTE);
        if (xStr.length() == 0) {
            xStr = SVG_MASK_X_DEFAULT_VALUE;
        }",str,string
Lorg/apache/batik/bridge/SVGGVTFont;.getLineMetrics(Ljava/lang/String;IILjava/awt/font/FontRenderContext;)Lorg/apache/batik/gvt/font/GVTLineMetrics;#sci,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-bridge/src/main/java/org/apache/batik/bridge/SVGGVTFont.java;,VariableName,sci," * it can display the whole string.
     */
    public int canDisplayUpTo(char[] text, int start, int limit) {
        StringCharacterIterator sci =
            new StringCharacterIterator(new String(text));
        return canDisplayUpTo(sci, start, limit);
    }",sci,string character iterator
Lorg/apache/batik/svggen/font/SVGFont;.getGlyphAsSVG(Lorg/apache/batik/svggen/font/Font;Lorg/apache/batik/svggen/font/Glyph;IILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;#sb,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-svggen/src/main/java/org/apache/batik/svggen/font/SVGFont.java;,VariableName,sb,"private static String CONFIG_SVG_TEST_CARD_END =
        ""SVGFont.config.svg.test.card.end"";

    protected static String encodeEntities(String s) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < s.length(); i++) {
            if (s.charAt(i) == XML_CHAR_LT) {
                sb.append(XML_ENTITY_LT);",sb,string buffer
Lorg/apache/batik/test/PerformanceTest;.runOp()V|Ljava/lang/Exception;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-test/src/main/java/org/apache/batik/test/PerformanceTest.java;,MethodName,runOp,"    /**
     * Runs the tested operation
     */
    protected abstract void runOp() throws Exception;",op,operation
Lorg/apache/batik/gvt/font/SVGGVTGlyphVector;.computeGlyphLogicalBounds()V#2#0#0#p3,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-gvt/src/main/java/org/apache/batik/gvt/font/SVGGVTGlyphVector.java;,VariableName,p3,"// whether the glyph is rotated
                Point2D p1 = new Point2D.Double(glyphBounds.getMinX(),
                                                glyphBounds.getMinY());
                Point2D p2 = new Point2D.Double(glyphBounds.getMaxX(),
                                                glyphBounds.getMinY());
                Point2D p3 = new Point2D.Double(glyphBounds.getMinX(),
                                                glyphBounds.getMaxY());
                Point2D gpos = getGlyphPosition(i);
                AffineTransform tr = AffineTransform.getTranslateInstance
                    (gpos.getX(), gpos.getY());",p,point
Lorg/apache/batik/anim/dom/SVGOMFEFuncRElement;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-anim/src/main/java/org/apache/batik/anim/dom/SVGOMFEFuncRElement.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-anim/src/main/java/org/apache/batik/anim/dom/SVGDOMImplementation.java;,ClassName,SVGOMFEFuncRElement,"public class SVGOMFEFuncRElement
    extends    SVGOMComponentTransferFunctionElement
    implements SVGFEFuncRElement {

    /**
     * Creates a new Element object.
     */",func,function
Lorg/apache/batik/bridge/svg12/SVG12BridgeEventSupport$Listener;.dispatchTextEvent(Lorg/apache/batik/gvt/event/GraphicsNodeKeyEvent;)V#textEvt,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-bridge/src/main/java/org/apache/batik/bridge/svg12/SVG12BridgeEventSupport.java;,VariableName,textEvt,"if (targetElement == null) {
                targetElement = context.getDocument().getDocumentElement();
            }
            DocumentEvent d = (DocumentEvent) targetElement.getOwnerDocument();
            DOMTextEvent textEvt = (DOMTextEvent) d.createEvent(""TextEvent"");
            textEvt.initTextEventNS(XMLConstants.XML_EVENTS_NAMESPACE_URI,
                                    ""textInput"", 
                                    true,
                                    true,
                                    null,
                                    String.valueOf(evt.getKeyChar()));",evt,event
Lorg/apache/batik/ext/awt/g2d/AbstractGraphics2D;.drawString(Ljava/lang/String;II)V#str#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-awt-util/src/main/java/org/apache/batik/ext/awt/g2d/AbstractGraphics2D.java;,ParameterName,str," * @param       str      the string to be drawn.
     * @param       x        the <i>x</i> coordinate.
     * @param       y        the <i>y</i> coordinate.
     * @see         java.awt.Graphics#drawBytes
     * @see         java.awt.Graphics#drawChars
     */
    public void drawString(String str, int x, int y){
        drawString(str, (float)x, (float)y);
    }",str,string
Lorg/apache/batik/bridge/SVGTextElementBridge;.getTextBounds(Lorg/apache/batik/bridge/BridgeContext;Lorg/w3c/dom/Element;Z)Ljava/awt/geom/Rectangle2D;#txtElem,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-bridge/src/main/java/org/apache/batik/bridge/SVGTextElementBridge.java;,VariableName,txtElem,"List list = tn.getTextRuns();
        if (list == null)
            return false;

        Element  txtElem = txtBridge.e;

        AffineTransform at = tn.getGlobalTransform();
        at.preConcatenate(ati);

        Rectangle2D tnRect;",elem,element
Lorg/apache/batik/anim/dom/SVGOMDocument;.setURLObject(Ljava/net/URL;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-anim/src/main/java/org/apache/batik/anim/dom/SVGOMDocument.java;,MethodName,setURLObject,"/**
     * Sets the URI of the document.
     */
    public void setURLObject(URL url) {
        setParsedURL(new ParsedURL(url));
    }
",url,uniform resource locator
Lorg/apache/batik/apps/svgbrowser/JSVGViewerFrame;.(Lorg/apache/batik/apps/svgbrowser/Application;)V#0#0#tbf,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-svgbrowser/src/main/java/org/apache/batik/apps/svgbrowser/JSVGViewerFrame.java;,VariableName,tbf,"p = new JPanel(new BorderLayout());

            // Create the toolbar
            ToolBarFactory tbf = new ToolBarFactory(bundle, this);
            JToolBar tb = tbf.createJToolBar(""ToolBar"");
            tb.setFloatable(false);
            getContentPane().add(p, BorderLayout.NORTH);",tbf,tool bar factory
Lorg/apache/batik/transcoder/svg2svg/OutputManager$NameInfo;.([C[C[C)V#sp2#0#2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-transcoder/src/main/java/org/apache/batik/transcoder/svg2svg/OutputManager.java;,ParameterName,sp2,"/**
         * Creates a new NameInfo.
         */
        public NameInfo(char[] sp1, char[] nm, char[] sp2) {
            space1 = sp1;
            name = nm;
            space2 = sp2;
        }",sp,space
Lorg/apache/batik/transcoder/svg2svg/PrettyPrinter;.printXMLDecl()V|Lorg/apache/batik/transcoder/TranscoderException;|Lorg/apache/batik/xml/XMLException;|Ljava/io/IOException;#0#versionDelim,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-transcoder/src/main/java/org/apache/batik/transcoder/svg2svg/PrettyPrinter.java;,VariableName,versionDelim," if (type != LexicalUnits.STRING) {
                    throw fatalError(""string"", null);
                }

                char[] version = getCurrentValue();
                char versionDelim = scanner.getStringDelimiter();

                char[] space4 = null;
                char[] space5 = null;
                char[] space6 = null;",delim,delimiter
Lorg/apache/batik/bridge/BaseScriptingEnvironment;.getWindow(Lorg/apache/batik/script/Interpreter;Ljava/lang/String;)Lorg/apache/batik/bridge/Window;#w,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-bridge/src/main/java/org/apache/batik/bridge/BaseScriptingEnvironment.java;,VariableName,w,"public org.apache.batik.bridge.Window getWindow(Interpreter interp,
                                                    String lang) {
        org.apache.batik.bridge.Window w =
            (org.apache.batik.bridge.Window) windowObjects.get(interp);
        if (w == null) {
            w = interp == null ? new Window(null, null)
                               : createWindow(interp, lang);
            windowObjects.put(interp, w);",w,window
Lorg/apache/batik/anim/dom/SVGOMElement;.isAttributeAnimatable(Ljava/lang/String;Ljava/lang/String;)Z#ti,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-anim/src/main/java/org/apache/batik/anim/dom/SVGOMElement.java;,VariableName,ti," public final boolean isAttributeAnimatable(String ns, String ln) {
        DoublyIndexedTable t = getTraitInformationTable();
        TraitInformation ti = (TraitInformation) t.get(ns, ln);
        if (ti != null) {
            return ti.isAnimatable();
        }",ti,trait information
Lorg/apache/batik/bridge/BridgeContext;.getBridgeExtensions(Lorg/w3c/dom/Document;)Ljava/util/List;#ver,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-bridge/src/main/java/org/apache/batik/bridge/BridgeContext.java;,VariableName,ver,"public List getBridgeExtensions(Document doc) {
        Element root = ((SVGOMDocument)doc).getRootElement();
        String ver = root.getAttributeNS
            (null, SVGConstants.SVG_VERSION_ATTRIBUTE);
        BridgeExtension svgBE;
        if ((ver.length()==0) || ver.equals(""1.0"") || ver.equals(""1.1""))",ver,version
Lorg/apache/batik/bridge/SVGAnimationEngine$AnimatableLengthOrIdentFactory;.createAnimatableValue(Lorg/apache/batik/anim/dom/AnimationTarget;Ljava/lang/String;Lorg/apache/batik/css/engine/value/Value;)Lorg/apache/batik/anim/values/AnimatableValue;#pcInterp,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-bridge/src/main/java/org/apache/batik/bridge/SVGAnimationEngine.java;,VariableName,pcInterp,"/**
         * Creates a new AnimatableValue from a string.
         */
        public AnimatableValue createValue(AnimationTarget target, String ns,
                                           String ln, boolean isCSS, String s) {
            short pcInterp = target.getPercentageInterpretation(ns, ln, isCSS);
            try {
                parser.parse(s);
                return new AnimatableLengthValue",interp,interpretation
Lorg/apache/batik/transcoder/svg2svg/SVGTranscoder$NewlineValue;.(Ljava/lang/String;)V#val#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-transcoder/src/main/java/org/apache/batik/transcoder/svg2svg/SVGTranscoder.java;,ParameterName,val," /**
     * To represent a newline value.
     */
    protected static class NewlineValue {
        protected final String value;
        protected NewlineValue(String val) {
            value = val;
        }
        public String getValue() {
            return value;
        }",val,value
Lorg/apache/batik/util/io/StreamNormalizingReader$UTF8DecoderFactory;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-util/src/main/java/org/apache/batik/util/io/StreamNormalizingReader.java;,ClassName,UTF8DecoderFactory," /**
     * To create a UTF8Decoder.
     */
    protected static class UTF8DecoderFactory
        implements CharDecoderFactory {
        public CharDecoder createCharDecoder(InputStream is)
            throws IOException {",utf,unicode transformation format
Lorg/apache/batik/svggen/XmlWriter;.SPACES_LEN)I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-svggen/src/main/java/org/apache/batik/svggen/XmlWriter.java;,FieldName,SPACES_LEN,"private static final int    SPACES_LEN = SPACES.length;

    static {
        String  temp;
        try { temp = System.getProperty (""line.separator"", ""\n""); }",len,length
Lorg/apache/batik/ext/awt/image/rendered/Any2LumRed;.fixColorModel(Lorg/apache/batik/ext/awt/image/rendered/CachableRed;)Ljava/awt/image/ColorModel;#0#sm,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-awt-util/src/main/java/org/apache/batik/ext/awt/image/rendered/Any2LumRed.java;,VariableName,sm,"public WritableRaster copyData(WritableRaster wr) {
        // Get my source.
        CachableRed src = (CachableRed)getSources().get(0);

        SampleModel sm     = src.getSampleModel();
        ColorModel  srcCM  = src.getColorModel();
        Raster      srcRas = src.getData(wr.getBounds());
        if (srcCM == null) {",sm,sample model
Lorg/apache/batik/ext/awt/geom/PathLength$PathSegment;.(IFFFI)V#segType#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-awt-util/src/main/java/org/apache/batik/ext/awt/geom/PathLength.java;,ParameterName,segType," segType = pi.currentSegment(seg);
            switch (segType) {
                case PathIterator.SEG_MOVETO:
                    segments.add(new PathSegment(segType, seg[0], seg[1],
                                                 pathLength, origIndex));
                    currentX = seg[0];
                    currentY = seg[1];",seg,segment
Lorg/apache/batik/bridge/SVGFontUtilities;.getFontFamily(Lorg/w3c/dom/Element;Lorg/apache/batik/bridge/BridgeContext;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/batik/gvt/font/GVTFontFamily;#1#1#0#0#0#0#weightNum,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-bridge/src/main/java/org/apache/batik/bridge/SVGFontUtilities.java;,VariableName,weightNum," StringTokenizer st =
                        new StringTokenizer(fontFamilyWeight, "" ,"");
                    while (st.hasMoreTokens()) {
                        int weightNum = Integer.parseInt(st.nextToken());
                        int difference = Math.abs(weightNum - i);
                        if (difference < minDifference) {
                            minDifference = difference;",num,number
Lorg/apache/batik/ext/awt/image/rendered/AbstractRed;.updateTileGridInfo()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-awt-util/src/main/java/org/apache/batik/ext/awt/image/rendered/AbstractRed.java;,MethodName,updateTileGridInfo,"       sm = cm.createCompatibleSampleModel(bounds.width, bounds.height);
        this.sm = sm;

        // Recompute tileWidth/Height, minTileX/Y, numX/YTiles.
        updateTileGridInfo();
    }
",info,information
Lorg/apache/batik/util/gui/resource/MenuFactory;.(Ljava/util/ResourceBundle;Lorg/apache/batik/util/gui/resource/ActionMap;)V#rb#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-gui-util/src/main/java/org/apache/batik/util/gui/resource/MenuFactory.java;,ParameterName,rb,"/**
     * Creates a new menu factory
     * @param rb the resource bundle that contains the menu bar
     *           description.
     * @param am the actions to add to menu items
     */
    public MenuFactory(ResourceBundle rb, ActionMap am) {
        super(rb);
        actions = am;
        buttonGroup = null;",rb,resource bundle
Lorg/apache/batik/ext/awt/image/renderable/MorphologyRable8Bit;.createRendering(Ljava/awt/image/renderable/RenderContext;)Ljava/awt/image/RenderedImage;#srcBI,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-awt-util/src/main/java/org/apache/batik/ext/awt/image/renderable/MorphologyRable8Bit.java;,VariableName,srcBI,"Raster rr = cr.getData();
        Point  pt = new Point(0,0);
        WritableRaster wr = Raster.createWritableRaster(rr.getSampleModel(),
                                                        rr.getDataBuffer(),
                                                        pt);
        
        BufferedImage srcBI;
        srcBI = new BufferedImage(cm, wr, cm.isAlphaPremultiplied(), null);
        
        BufferedImage destBI;
        if(op != null){",bi,buffered image
Lorg/apache/batik/dom/events/EventSupport;.getUltimateOriginalEvent(Lorg/w3c/dom/events/Event;)Lorg/w3c/dom/events/Event;#0#origEvt,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-dom/src/main/java/org/apache/batik/dom/events/EventSupport.java;,VariableName,origEvt,"public static Event getUltimateOriginalEvent(Event evt) {
        AbstractEvent e = (AbstractEvent) evt;
        for (;;) {
            AbstractEvent origEvt = (AbstractEvent) e.getOriginalEvent();
            if (origEvt == null) {
                break;
            }",evt,event
Lorg/apache/batik/ext/awt/image/rendered/ProfileRed;.copyData(Ljava/awt/image/WritableRaster;)Ljava/awt/image/WritableRaster;#0#0#0#srcImg,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-awt-util/src/main/java/org/apache/batik/ext/awt/image/rendered/ProfileRed.java;,VariableName,srcImg," BufferedImage imgComp = new BufferedImage
                    (imgCompCM, wr, imgCompCM.isAlphaPremultiplied(), null);

                BufferedImage srcImg = new BufferedImage
                    (imgCM, srcWR.createWritableTranslatedChild(0, 0),
                     imgCM.isAlphaPremultiplied(), null);",img,image
Lorg/apache/batik/ext/awt/geom/PathLength;.initialise()V#sspi,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-awt-util/src/main/java/org/apache/batik/ext/awt/geom/PathLength.java;,VariableName,sspi," protected void initialise() {
        pathLength = 0f;

        PathIterator pi = path.getPathIterator(new AffineTransform());
        SingleSegmentPathIterator sspi = new SingleSegmentPathIterator();
        segments = new ArrayList(20);
        List indexes = new ArrayList(20);
        int index = 0;",sspi,single segment path iterator
Lorg/apache/batik/transcoder/wmf/tosvg/RecordStore;.setVpH(I)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-transcoder/src/main/java/org/apache/batik/transcoder/wmf/tosvg/RecordStore.java;,MethodName,setVpH,"/**
     * Sets the viewport height
     */
    public void setVpH( int newValue ) {
        vpH = newValue;
    }",h,height
Lorg/apache/batik/ext/awt/image/spi/JDKRegistryEntry$3808;.run()V#0#0#0#ri,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-awt-util/src/main/java/org/apache/batik/ext/awt/image/spi/JDKRegistryEntry.java;,VariableName,ri,"Toolkit tk = Toolkit.getDefaultToolkit();
                        Image img = tk.createImage(url);

                        if (img != null) {
                            RenderedImage ri = loadImage(img, dr);
                            if (ri != null) {
                                filt = new RedRable(GraphicsUtil.wrap(ri));
                            }",ri,rendered image
Lorg/apache/batik/bridge/SVGFontFaceElementBridge;.createFontFace(Lorg/apache/batik/bridge/BridgeContext;Lorg/w3c/dom/Element;)Lorg/apache/batik/bridge/SVGFontFace;#underlinePosStr,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-bridge/src/main/java/org/apache/batik/bridge/SVGFontFaceElementBridge.java;,VariableName,underlinePosStr," // underline-position
        String underlinePosStr = fontFaceElement.getAttributeNS
            (null, SVG_UNDERLINE_POSITION_ATTRIBUTE);
        if (underlinePosStr.length() == 0) {
            underlinePosStr = String.valueOf(-3*unitsPerEm/40);
        }",pos,position
Lorg/apache/batik/css/engine/sac/AbstractDescendantSelector;.equals(Ljava/lang/Object;)Z#s,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-css/src/main/java/org/apache/batik/css/engine/sac/AbstractDescendantSelector.java;,VariableName,s,"public boolean equals(Object obj) {
        if (obj == null || (obj.getClass() != getClass())) {
            return false;
        }
        AbstractDescendantSelector s = (AbstractDescendantSelector)obj;
        return s.simpleSelector.equals(simpleSelector);
    }",s,selector
Lorg/apache/batik/svggen/SVGTexturePaint;.toSVG(Ljava/awt/TexturePaint;)Lorg/apache/batik/svggen/SVGPaintDescriptor;#patternDesc,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-svggen/src/main/java/org/apache/batik/svggen/SVGTexturePaint.java;,VariableName,patternDesc,"public SVGPaintDescriptor toSVG(TexturePaint texture) {
        // Reuse definition if pattern has already been converted
        SVGPaintDescriptor patternDesc = (SVGPaintDescriptor)descMap.get(texture);
        Document domFactory = generatorContext.domFactory;

        if (patternDesc == null) {
            Rectangle2D anchorRect = texture.getAnchorRect();",desc,descriptor
Lorg/apache/batik/bridge/StrokingTextPainter;.createModifiedACIForFontMatching(Ljava/text/AttributedCharacterIterator;)Ljava/text/AttributedCharacterIterator;#0#prevF,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-bridge/src/main/java/org/apache/batik/bridge/StrokingTextPainter.java;,VariableName,prevF," // assign the first font to any chars haven't alreay been assigned
            int           runStart = -1;
            GVTFontFamily prevFF   = null;
            GVTFont       prevF    = defaultFont;
            for (int i = 0; i < aciLength; i++) {
                if (fontAssigned[i]) {",f,font
Lorg/apache/batik/apps/svgbrowser/DOMViewer$Panel$NodeTemplateParser;.actionPerformed(Ljava/awt/event/ActionEvent;)V#0#urlObj,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-svgbrowser/src/main/java/org/apache/batik/apps/svgbrowser/DOMViewer.java;,VariableName,urlObj,"Document doc = panel.document;
                    SAXDocumentFactory df = new SAXDocumentFactory(
                            doc.getImplementation(),
                            XMLResourceDescriptor.getXMLParserClassName());
                    URL urlObj = null;
                    if (doc instanceof SVGOMDocument) {
                        urlObj = ((SVGOMDocument) doc).getURLObject();
                    }",url,uniform resource locator
Lorg/apache/batik/bridge/SVGAnimationElementBridge$SVGTimedElement;.sampledAt(FFI)V#simpleDur#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-bridge/src/main/java/org/apache/batik/bridge/SVGAnimationElementBridge.java;,ParameterName,simpleDur,"* @param simpleTime the sample time in local simple time
         * @param simpleDur the simple duration of the element
         * @param repeatIteration the repeat iteration during which the element
         *                        was sampled
         */
        protected void sampledAt(float simpleTime, float simpleDur,
                                 int repeatIteration) {
            eng.sampledAt(animation, simpleTime, simpleDur, repeatIteration);
        }",dur,duration
Lorg/apache/batik/ext/awt/image/spi/ImageTagRegistry;.readURL(Ljava/io/InputStream;Lorg/apache/batik/util/ParsedURL;Lorg/apache/xmlgraphics/java2d/color/ICCColorSpaceWithIntent;ZZ)Lorg/apache/batik/ext/awt/image/renderable/Filter;#0#1#0#1#sce,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-awt-util/src/main/java/org/apache/batik/ext/awt/image/spi/ImageTagRegistry.java;,VariableName,sce,"    ret = sre.handleStream(is, null, needRawData);

                    if (ret != null) break;
                }
            } catch (StreamCorruptedException sce) {
                break;
            }",sce,stream corrupted exception
Lorg/apache/batik/ext/awt/image/codec/util/SimpleRenderedImage;.getData()Ljava/awt/image/Raster;#rect,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-codec/src/main/java/org/apache/batik/ext/awt/image/codec/util/SimpleRenderedImage.java;,VariableName,rect,"* @return a Raster containing a copy of this image's data.
     */
    public Raster getData() {
        Rectangle rect = new Rectangle(getMinX(), getMinY(),
                                       getWidth(), getHeight());
        return getData(rect);
    }",rect,rectangle
Lorg/apache/batik/extension/svg/BatikHistogramNormalizationFilter8Bit;.createRendering(Ljava/awt/image/renderable/RenderContext;)Ljava/awt/image/RenderedImage;#tfs,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-extension/src/main/java/org/apache/batik/extension/svg/BatikHistogramNormalizationFilter8Bit.java;,VariableName,tfs,"
        // System.out.println(""Slope, Intercept: "" + slope + "", "" + intercept);
        TransferFunction [] tfs = new TransferFunction[bands];
        TransferFunction    tf  = new LinearTransfer(slope, intercept);
        for (int i=0; i<tfs.length; i++)
            tfs[i] = tf;",tfs,transfer function
Lorg/apache/batik/bridge/ViewBox;.getViewTransform(Ljava/lang/String;Lorg/w3c/dom/Element;FFLorg/apache/batik/bridge/BridgeContext;)Ljava/awt/geom/AffineTransform;#vh,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-bridge/src/main/java/org/apache/batik/bridge/ViewBox.java;,VariableName,vh,"if (ref == null || ref.length() == 0) {
            return getPreserveAspectRatioTransform(e, w, h, ctx);
        }

        ViewHandler vh = new ViewHandler();
        FragmentIdentifierParser p = new FragmentIdentifierParser();
        p.setFragmentIdentifierHandler(vh);
        p.parse(ref);",vh,view handler
Lorg/apache/batik/swing/gvt/GVTTreeRenderer;.(Lorg/apache/batik/gvt/renderer/ImageRenderer;Ljava/awt/geom/AffineTransform;ZLjava/awt/Shape;II)V#usr2dev#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-swing/src/main/java/org/apache/batik/swing/gvt/GVTTreeRenderer.java;,ParameterName,usr2dev,"/**
     * Creates a new GVTTreeRenderer.
     * @param r The renderer to use to paint.
     * @param usr2dev The user to device transform.
     * @param dbuffer Whether the double buffering should be enabled.
     * @param aoi The area of interest in the renderer space units.
     * @param width The offscreen buffer width.
     * @param height The offscreen buffer height.
     */
    public GVTTreeRenderer(ImageRenderer r, AffineTransform usr2dev,
                           boolean dbuffer,
                           Shape aoi, int width, int height) {",dev,device
Lorg/apache/batik/util/ParsedURLData;.openStreamInternal(Ljava/lang/String;Ljava/util/Iterator;Ljava/util/Iterator;)Ljava/io/InputStream;|Ljava/io/IOException;#urlC,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-util/src/main/java/org/apache/batik/util/ParsedURLData.java;,VariableName,urlC,"if (url == null)
            return null;

        URLConnection urlC = url.openConnection();
        if (urlC instanceof HttpURLConnection) {
            if (userAgent != null)",c,connection
Lorg/apache/batik/ext/awt/image/codec/png/PNGRed;.parse_IEND_chunk(Lorg/apache/batik/ext/awt/image/codec/png/PNGRed$PNGChunk;)V|Ljava/lang/Exception;#seqStream,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-codec/src/main/java/org/apache/batik/ext/awt/image/codec/png/PNGRed.java;,VariableName,seqStream," // Parse prior IDAT chunks
        InputStream seqStream =
            new SequenceInputStream( Collections.enumeration( streamVec ));
        InputStream infStream =
            new InflaterInputStream(seqStream, new Inflater());
        dataStream = new DataInputStream(infStream);",seq,sequence
Lorg/apache/batik/anim/dom/SVGOMSVGElement$13911;.getX()F#scrnTrans,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-anim/src/main/java/org/apache/batik/anim/dom/SVGOMSVGElement.java;,VariableName,scrnTrans," public float getCurrentScale() {
        AffineTransform scrnTrans = getSVGContext().getScreenTransform();
        if (scrnTrans != null) {
            return (float)Math.sqrt(scrnTrans.getDeterminant());
        }
        return 1;
    }",scrn,screen
Lorg/apache/batik/ext/awt/image/rendered/BufferedImageCachableRed;.copyData(Ljava/awt/image/WritableRaster;)Ljava/awt/image/WritableRaster;#wr2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-awt-util/src/main/java/org/apache/batik/ext/awt/image/rendered/BufferedImageCachableRed.java;,VariableName,wr2,"public WritableRaster copyData(WritableRaster wr) {
        WritableRaster wr2 = wr.createWritableTranslatedChild
            (wr.getMinX()-getMinX(),
             wr.getMinY()-getMinY());

        GraphicsUtil.copyData(bi.getRaster(), wr2);",wr,writable raster
Lorg/apache/batik/bridge/AbstractSVGFilterPrimitiveElementBridge;.getFilterSource(Lorg/w3c/dom/Element;Ljava/lang/String;Lorg/w3c/dom/Element;Lorg/apache/batik/gvt/GraphicsNode;Ljava/util/Map;Lorg/apache/batik/bridge/BridgeContext;)Lorg/apache/batik/ext/awt/image/renderable/Filter;#srcG,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-bridge/src/main/java/org/apache/batik/bridge/AbstractSVGFilterPrimitiveElementBridge.java;,VariableName,srcG," // SourceGraphic
        Filter srcG = (Filter)filterMap.get(SVG_SOURCE_GRAPHIC_VALUE);
        Rectangle2D filterRegion = srcG.getBounds2D();

        int length = s.length();
        Filter source = null;",g,graphic
Lorg/apache/batik/ext/awt/image/GraphicsUtil;.drawImage(Ljava/awt/Graphics2D;Lorg/apache/batik/ext/awt/image/rendered/CachableRed;)V#4#0#1#tR,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-awt-util/src/main/java/org/apache/batik/ext/awt/image/GraphicsUtil.java;,VariableName,tR,"int yt1 = yt0+cr.getNumYTiles();
                int tw  = srcSM.getWidth();
                int th  = srcSM.getHeight();

                Rectangle tR  = new Rectangle(0,0,tw,th);
                Rectangle iR  = new Rectangle(0,0,0,0);

                if (false) {
                    System.err.println(""SrcCM: "" + srcCM);",r,rectangle
Lorg/apache/batik/css/dom/CSSOMViewCSS;.getComputedStyle(Lorg/w3c/dom/Element;Ljava/lang/String;)Lorg/w3c/dom/css/CSSStyleDeclaration;#pseudoElt#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-css/src/main/java/org/apache/batik/css/dom/CSSOMViewCSS.java;,ParameterName,pseudoElt,"public CSSStyleDeclaration getComputedStyle(Element elt,
                                                String pseudoElt) {
        if (elt instanceof CSSStylableElement) {
            return new CSSOMComputedStyle(cssEngine,
                                          (CSSStylableElement)elt,
                                          pseudoElt);
        }
        return null;
    }",elt,element
Lorg/apache/batik/swing/svg/JSVGComponent$BridgeUserAgent;.getBrokenLinkDocument(Lorg/w3c/dom/Element;Ljava/lang/String;Ljava/lang/String;)Lorg/w3c/dom/svg/SVGDocument;#0#0#titleE,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-swing/src/main/java/org/apache/batik/swing/svg/JSVGComponent.java;,VariableName,titleE,"      impl = SVGDOMImplementation.getDOMImplementation();
                doc  = (SVGDocument)DOMUtilities.deepCloneDocument(doc, impl);

                String title;
                Element infoE, titleE, descE;
                infoE = doc.getElementById(""__More_About"");
                if (infoE == null) return doc;

                titleE = doc.createElementNS(SVGConstants.SVG_NAMESPACE_URI,
                                            SVGConstants.SVG_TITLE_TAG);",e,element
Lorg/apache/batik/anim/dom/SVGOMSVGElement$13911;.getX()F#scrnTrans,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-anim/src/main/java/org/apache/batik/anim/dom/SVGOMSVGElement.java;,VariableName,scrnTrans,"    public float getCurrentScale() {
        AffineTransform scrnTrans = getSVGContext().getScreenTransform();
        if (scrnTrans != null) {
            return (float)Math.sqrt(scrnTrans.getDeterminant());
        }
        return 1;
    }",trans,transform
Ljava/lang/Integer;.toHexString(I)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-svggen/src/main/java/org/apache/batik/svggen/XmlWriter.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-util/src/test/java/org/apache/batik/util/ParsedURLDataTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-svggen/src/main/java/org/apache/batik/svggen/font/SVGFont.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-svggen/src/main/java/org/apache/batik/svggen/font/table/DirectoryEntry.java;,MethodName,toHexString,"            .append("", length: "")
            .append(length)
            .append("", checksum: 0x"")
            .append(Integer.toHexString(checksum))
            .toString();
    }
}",hex,hexadecimal
Lorg/apache/batik/ext/awt/geom/Quadradic;.subLength(DDD)D#rightLegLen#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-awt-util/src/main/java/org/apache/batik/ext/awt/geom/Quadradic.java;,ParameterName,rightLegLen,"static int count = 0;
    protected double subLength(double leftLegLen, double rightLegLen,
                               double maxErr) {
        count++;
        double dx, dy;
        dx = p3.x-p1.x;
        dy = p3.y-p1.y;",len,length
Lorg/apache/batik/util/ParsedURLData;.checkGZIP(Ljava/io/InputStream;)Ljava/io/InputStream;|Ljava/io/IOException;#1#0#1#ze,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-util/src/main/java/org/apache/batik/util/ParsedURLData.java;,VariableName,ze,"        is.reset();
                    ret = new InflaterInputStream(is);
                    return ret;
                } catch (ZipException ze) {
                    is.reset();
                    return is;
                }",ze,zip exception
Lorg/apache/batik/anim/values/AnimatableNumberListValue;.interpolate(Lorg/apache/batik/anim/values/AnimatableValue;Lorg/apache/batik/anim/values/AnimatableValue;FLorg/apache/batik/anim/values/AnimatableValue;I)Lorg/apache/batik/anim/values/AnimatableValue;#toNumList,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-anim/src/main/java/org/apache/batik/anim/values/AnimatableNumberListValue.java;,VariableName,toNumList,"public AnimatableValue interpolate(AnimatableValue result,
                                       AnimatableValue to,
                                       float interpolation,
                                       AnimatableValue accumulation,
                                       int multiplier) {
        AnimatableNumberListValue toNumList = (AnimatableNumberListValue) to;
        AnimatableNumberListValue accNumList =
            (AnimatableNumberListValue) accumulation;",num,number
Lorg/apache/batik/ext/awt/image/codec/png/PNGImageEncoder~ChunkStream;.writeUTF(Ljava/lang/String;)V|Ljava/io/IOException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-codec/src/main/java/org/apache/batik/ext/awt/image/codec/png/PNGImageEncoder.java;,MethodName,writeUTF,"    public void writeUTF(String str) throws IOException {
        dos.writeUTF(str);
    }",utf,unicode transformation format
Lorg/apache/batik/transcoder/svg2svg/SVGTranscoder;.prettyPrint(Ljava/io/Reader;Ljava/io/Writer;)V|Lorg/apache/batik/transcoder/TranscoderException;#0#0#pp,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-transcoder/src/main/java/org/apache/batik/transcoder/svg2svg/SVGTranscoder.java;,VariableName,pp,"protected void prettyPrint(Reader in, Writer out) throws TranscoderException {
        try {
            PrettyPrinter pp = new PrettyPrinter();
            NewlineValue nlv = (NewlineValue)hints.get(KEY_NEWLINE);
            if (nlv != null) {
                pp.setNewline(nlv.getValue());",pp,pretty printer
Lorg/apache/batik/ext/awt/image/codec/util/ImageEncoderImpl;.setParam(Lorg/apache/batik/ext/awt/image/codec/util/ImageEncodeParam;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-codec/src/main/java/org/apache/batik/ext/awt/image/codec/util/ImageEncoderImpl.java;,MethodName,setParam,"* params argument is not an instance of the appropriate
     * subclass or subinterface.  For example, a JPEGImageEncoder
     * will expect param to be an instance of JPEGEncodeParam.
     */
    public void setParam(ImageEncodeParam param) {
        this.param = param;
    }",param,parameter
Lorg/apache/batik/ext/awt/image/spi/ImageTagRegistry;.readURL(Ljava/io/InputStream;Lorg/apache/batik/util/ParsedURL;Lorg/apache/xmlgraphics/java2d/color/ICCColorSpaceWithIntent;ZZ)Lorg/apache/batik/ext/awt/image/renderable/Filter;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-bridge/src/main/java/org/apache/batik/bridge/SVGImageElementBridge.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-awt-util/src/main/java/org/apache/batik/ext/awt/image/spi/ImageTagRegistry.java;,MethodName,readURL,"    public Filter readURL(ParsedURL purl) {
        return readURL(null, purl, null, true, true);
    }",url,uniform resource locator
Lorg/apache/batik/parser/PreserveAspectRatioHandler;.xMinYMax()V|Lorg/apache/batik/parser/ParseException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-parser/src/main/java/org/apache/batik/parser/FragmentIdentifierParser.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-parser/src/main/java/org/apache/batik/parser/PreserveAspectRatioHandler.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-parser/src/main/java/org/apache/batik/parser/PreserveAspectRatioParser.java;,MethodName,xMinYMax,"           skipIdentifier();
                            break align;
                        }
                        preserveAspectRatioHandler.xMinYMax();
                        current = reader.read();
                        break;",max,maximum
Lorg/apache/batik/svggen/font/table/Os2Table;.sTypoDescender)S,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-svggen/src/main/java/org/apache/batik/svggen/font/table/Os2Table.java;,FieldName,sTypoDescender,"    private int usFirstCharIndex;
    private int usLastCharIndex;
    private short sTypoAscender;
    private short sTypoDescender;
    private short sTypoLineGap;
    private int usWinAscent;
    private int usWinDescent;",s,short
Lorg/apache/batik/ext/awt/image/renderable/FilterResRable8Bit;.getResRed(Ljava/awt/RenderingHints;)Ljava/awt/image/RenderedImage;#resScaleY,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-awt-util/src/main/java/org/apache/batik/ext/awt/image/renderable/FilterResRable8Bit.java;,VariableName,resScaleY,"private RenderedImage getResRed(RenderingHints hints) {
        Rectangle2D imageRect = getBounds2D();
        double resScaleX = getFilterResolutionX()/imageRect.getWidth();
        double resScaleY = getFilterResolutionY()/imageRect.getHeight();",res,resolution
Lorg/apache/batik/dom/AbstractDocument;.setXmlVersion(Ljava/lang/String;)V|Lorg/w3c/dom/DOMException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-dom/src/main/java/org/apache/batik/dom/AbstractDocument.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-anim/src/main/java/org/apache/batik/anim/dom/SAXSVGDocumentFactory.java;,MethodName,setXmlVersion,"public void setXmlVersion(String v) throws DOMException {
        if (v == null
                || !v.equals(XMLConstants.XML_VERSION_10)
                    && !v.equals(XMLConstants.XML_VERSION_11)) {",xml,extensible markup language
Lorg/apache/batik/ext/awt/image/rendered/GaussianBlurRed8Bit;.(Lorg/apache/batik/ext/awt/image/rendered/CachableRed;DDLjava/awt/RenderingHints;)V#stdDevY#0#2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-awt-util/src/main/java/org/apache/batik/ext/awt/image/rendered/GaussianBlurRed8Bit.java;,ParameterName,stdDevY,"* @param stdDevX The Standard Deviation of the Gaussian kernel in X
     * @param stdDevY The Standard Deviation of the Gaussian kernel in Y
     * @param rh     Rendering hints.
     */
    public GaussianBlurRed8Bit(CachableRed src,
                               double stdDevX, double stdDevY,
                               RenderingHints rh) {
        super(); // Remember to call super.init()

        this.stdDevX = stdDevX;
        this.stdDevY = stdDevY;",dev,deviation
Lorg/apache/batik/ext/awt/image/renderable/PadRable8Bit;.setPadRect(Ljava/awt/geom/Rectangle2D;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-awt-util/src/main/java/org/apache/batik/ext/awt/image/renderable/PadRable8Bit.java;,MethodName,setPadRect,"  * Set the current rectangle for padding.
     * @param rect the new rectangle to use for pad.
     */
    public void setPadRect(Rectangle2D rect) {
        touch();
        this.padRect = rect;
    }",rect,rectangle
Lorg/apache/batik/swing/JSVGCanvas$CanvasUserAgent;.toFormattedHTML(Ljava/lang/String;)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-swing/src/main/java/org/apache/batik/swing/JSVGCanvas.java;,MethodName,toFormattedHTML," /**
         * Converts line breaks to HTML breaks and encodes special entities.
         * Poor way of replacing '<', '>' and '&' in content.
         */
        public String toFormattedHTML(String str) {
            StringBuffer sb = new StringBuffer(str);
            replace(sb, XML_CHAR_AMP, XML_ENTITY_AMP);  // Must go first!
            replace(sb, XML_CHAR_LT, XML_ENTITY_LT);",html,hyper text markup language
Lorg/apache/batik/swing/JSVGCanvas;.removePropertyChangeListener(Ljava/beans/PropertyChangeListener;)V#pcl#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-swing/src/main/java/org/apache/batik/swing/JSVGCanvas.java;,ParameterName,pcl,"/**
     * Adds the specified <code>PropertyChangeListener</code>.
     *
     * @param pcl the property change listener to add
     */
    public void addPropertyChangeListener(PropertyChangeListener pcl) {
        pcs.addPropertyChangeListener(pcl);
    }
",pcl,property change listener
Lorg/apache/batik/transcoder/wmf/tosvg/WMFPainter;.paint(Ljava/awt/Graphics;)V#0#1#0#0#23#0#0#withSrc,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-transcoder/src/main/java/org/apache/batik/transcoder/wmf/tosvg/WMFPainter.java;,VariableName,withSrc,"byte[] bitmap = ((MetaRecord.ByteRecord)mr).bstr;

                            BufferedImage img = getImage(bitmap);
                            if (img != null) {
                                int withSrc = img.getWidth();
                                int heightSrc = img.getHeight();
                                if (opaque) {
                                    g2d.drawImage(img, (int)dx, (int)dy,",src,source
Lorg/apache/batik/css/parser/AbstractSiblingSelector;.(SLorg/w3c/css/sac/Selector;Lorg/w3c/css/sac/SimpleSelector;)V#sel#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-css/src/main/java/org/apache/batik/css/parser/AbstractSiblingSelector.java;,ParameterName,sel,"/**
     * Creates a new SiblingSelector object.
     */
    protected AbstractSiblingSelector(short type,
                                      Selector sel,
                                      SimpleSelector simple) {
        nodeType = type;
        selector = sel;
        simpleSelector = simple;",sel,selector
Lorg/apache/batik/bridge/ViewBox;.getViewTransform(Ljava/lang/String;Lorg/w3c/dom/Element;FFLorg/apache/batik/bridge/BridgeContext;)Ljava/awt/geom/AffineTransform;#vb,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-bridge/src/main/java/org/apache/batik/bridge/ViewBox.java;,VariableName,vb,"            viewElement = ancestorSVG;
        }

        // 'viewBox'
        float[] vb;
        if (vh.hasViewBox) {
            vb = vh.viewBox;
        } else {",vb,view box
Lorg/apache/batik/svggen/SVGGraphics2D;.setDOMTreeManager(Lorg/apache/batik/svggen/DOMTreeManager;)V#treeMgr#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-svggen/src/main/java/org/apache/batik/svggen/SVGGraphics2D.java;,ParameterName,treeMgr,"/**
     * Set a DOM Tree manager for the SVGGraphics2D.
     * @param treeMgr the new DOM Tree manager this SVGGraphics2D should use
     */
     protected final void setDOMTreeManager(DOMTreeManager treeMgr) {
        this.domTreeManager = treeMgr;
        generatorCtx.genericImageHandler.setDOMTreeManager(domTreeManager);
    }",mgr,manager
Lorg/apache/batik/gvt/PatternPaint$PatternPaintContextWrapper;.ppc)Lorg/apache/batik/gvt/PatternPaintContext;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-gvt/src/main/java/org/apache/batik/gvt/PatternPaint.java;,FieldName,ppc,"static class PatternPaintContextWrapper implements PaintContext {
        PatternPaintContext ppc;
        int xShift, yShift;
        PatternPaintContextWrapper(PatternPaintContext ppc,
                            int xShift, int yShift) {",ppc,pattern paint context
Lorg/apache/batik/ext/awt/image/rendered/GaussianBlurRed8Bit;.(Lorg/apache/batik/ext/awt/image/rendered/CachableRed;DDLjava/awt/RenderingHints;)V#stdDevY#0#2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-awt-util/src/main/java/org/apache/batik/ext/awt/image/rendered/GaussianBlurRed8Bit.java;,ParameterName,stdDevY,"* @param stdDevX The Standard Deviation of the Gaussian kernel in X
     * @param stdDevY The Standard Deviation of the Gaussian kernel in Y
     * @param rh     Rendering hints.
     */
    public GaussianBlurRed8Bit(CachableRed src,
                               double stdDevX, double stdDevY,
                               RenderingHints rh) {
        super(); // Remember to call super.init()

        this.stdDevX = stdDevX;
        this.stdDevY = stdDevY;
        this.hints   = rh;",std,standard
Lorg/apache/batik/ext/awt/image/renderable/ConvolveMatrixRable8Bit;.createRendering(Ljava/awt/image/renderable/RenderContext;)Ljava/awt/image/RenderedImage;#2#tmpSrcBI,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-awt-util/src/main/java/org/apache/batik/ext/awt/image/renderable/ConvolveMatrixRable8Bit.java;,VariableName,tmpSrcBI," // Create an image with that color model
            BufferedImage tmpSrcBI = new BufferedImage
                (cm, cm.createCompatibleWritableRaster(wr.getWidth(),
                                                       wr.getHeight()),
                 cm.isAlphaPremultiplied(), null);",bi,buffered image
Lorg/apache/batik/swing/svg/JSVGComponent$JSVGComponentListener;.prevTransY)F,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-swing/src/main/java/org/apache/batik/swing/svg/JSVGComponent.java;,FieldName,prevTransY,"protected class JSVGComponentListener extends ComponentAdapter
        implements JGVTComponentListener {
        float prevScale = 0;
        float prevTransX = 0;
        float prevTransY = 0;

        public void componentResized(ComponentEvent ce) {
            if (isDynamicDocument &&
                (updateManager != null) && updateManager.isRunning()) {",trans,translate
Lorg/apache/batik/svggen/XmlWriter;.writeXml(Lorg/w3c/dom/Text;Lorg/apache/batik/svggen/XmlWriter$IndentWriter;ZZ)V|Ljava/io/IOException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-svggen/src/main/java/org/apache/batik/svggen/XmlWriter.java;,MethodName,writeXml,"private static void writeXml(Document document, IndentWriter out,
                                 boolean escaped)
        throws IOException, SVGGraphics2DIOException {
        writeDocumentHeader(out);
        NodeList childList = document.getChildNodes();",xml,extensible markup language
Lorg/apache/batik/gvt/renderer/DynamicRenderer;.repaint(Lorg/apache/batik/ext/awt/geom/RectListManager;)V#srcR,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-gvt/src/main/java/org/apache/batik/gvt/renderer/DynamicRenderer.java;,VariableName,srcR,"cr = rootCR;
        syncRaster = workingBaseRaster;
        copyRaster = workingRaster;

        Rectangle srcR = rootCR.getBounds();
        // System.out.println(""RootCR: "" + srcR);
        Rectangle dstR = workingRaster.getBounds();
        if ((dstR.x < srcR.x) ||",r,rectangle
Lorg/apache/batik/gvt/flow/LineInfo;.assureSize([Lorg/apache/batik/gvt/flow/GlyphGroupInfo;I)[Lorg/apache/batik/gvt/flow/GlyphGroupInfo;#sz#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-gvt/src/main/java/org/apache/batik/gvt/flow/LineInfo.java;,ParameterName,sz,"public static GlyphGroupInfo [] assureSize
        (GlyphGroupInfo [] ggis, int sz) {
        if (ggis == null) {
            if (sz < 10) sz = 10;
            return new GlyphGroupInfo[sz];",sz,size
Lorg/apache/batik/dom/AbstractParentNode$ElementsByTagName;.append(Lorg/w3c/dom/Node;)V#n#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-dom/src/main/java/org/apache/batik/dom/AbstractParentNode.java;,ParameterName,n,"   /**
     * Called when a child node has been added.
     */
    protected void nodeAdded(Node n) {
    }",n,node
Lorg/apache/batik/anim/dom/SVGOMDocument;.removeAnimatedAttributeListener(Lorg/apache/batik/anim/dom/AnimatedAttributeListener;)V#aal#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/batik-1.9/batik-anim/src/main/java/org/apache/batik/anim/dom/SVGOMDocument.java;,ParameterName,aal," * Adds an {@link AnimatedAttributeListener} to this document, to be
     * notified of animated XML attribute changes.
     */
    public void addAnimatedAttributeListener
            (AnimatedAttributeListener aal) {
        if (animatedAttributeListeners.contains(aal)) {
            return;
        }",aal,animated attribute listener
Lio/bootique/Bootique_ConfigurationIT;.testDIConfig()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/Bootique_ConfigurationIT.java;,MethodName,testDIConfig,"public void testDIConfig() {

        BQRuntime runtime = testFactory.app()
                .module(b -> BQCoreModule.extend(b)
                        .addConfig(""classpath:io/bootique/diconfig1.yml"")",di,distributed
Lio/bootique/resource/ResourceFactory_WebConfigSourceIT$ConfigServlet;.doGet(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V|Ljavax/servlet/ServletException;|Ljava/io/IOException;#resp#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/resource/ResourceFactory_WebConfigSourceIT.java;,ParameterName,resp,"   protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
            resp.getWriter().write(""g: h"");
        }",resp,response
Lio/bootique/Bootique_Configuration_VarsIT;.testOverrideValueArray()V#b,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/Bootique_Configuration_VarsIT.java;,VariableName,b,"                .var(""MY_VAR"", ""J"")
                .declareVar(""testOverrideValueArray.h[1]"", ""MY_VAR"")
                .createRuntime();

        TestOverrideValueArrayBean b = runtime.getInstance(ConfigurationFactory.class)
                .config(TestOverrideValueArrayBean.class, ""testOverrideValueArray"");
",b,bean
Lio/bootique/jackson/deserializer/DecimalUtils;.toDecimal(JI)Ljava/lang/String;#sb,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/jackson/deserializer/DecimalUtils.java;,VariableName,sb,"   public static String toDecimal(long seconds, int nanoseconds) {
        StringBuilder sb = new StringBuilder(20)
                .append(seconds)
                .append('.');",sb,string builder
Lio/bootique/jackson/DurationValueYamlDeserializerIT;.testDeserialization_AsString()V|Ljava/io/IOException;#d,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/jackson/DurationValueYamlDeserializerIT.java;,VariableName,d,"    public void testDeserialization_AsString() throws IOException {
        Duration d = deserialize(Duration.class, ""5s"");
        assertEquals(java.time.Duration.ofSeconds(5), d.getDuration());
    }",d,duration
Lio/bootique/help/config/ConfigSectionGeneratorTest;.testVisitObjectWithMapOfObjects()V#mapMd,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/help/config/ConfigSectionGeneratorTest.java;,VariableName,mapMd,"public void testVisitMapOfValues() throws NoSuchFieldException {

        Type genericMapType = ConfigRoot2.class.getField(""map"").getGenericType();

        ConfigValueMetadata mapValueMd = ConfigValueMetadata.builder().type(String.class).build();
        ConfigMapMetadata mapMd = ConfigMapMetadata.builder(""p1"")
                .type(genericMapType)
                .keysType(Integer.class)
                .valuesType(mapValueMd).build();",md,metadata
Lio/bootique/resource/ResourceFactory_WebConfigSourceIT;.testReadConfig_HttpUrl()V|Ljava/io/IOException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/resource/ResourceFactory_WebConfigSourceIT.java;,MethodName,testReadConfig_HttpUrl,"public void testReadConfig_HttpUrl() throws IOException {
        String url = ""http://localhost:12025/"";
        assertEquals(""g: h"", ResourceFactoryTest.resourceContents(url));
    }",http,hyper text transfer protocol
Lio/bootique/BQCoreModuleExtender;.declareVars(Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)Lio/bootique/BQCoreModuleExtender;#varsByConfigPaths#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/BQCoreModuleExtender.java;,ParameterName,varsByConfigPaths,"    public BQCoreModuleExtender declareVars(Map<String, String> varsByConfigPaths) {
        varsByConfigPaths.forEach(this::declareVar);
        return this;
    }",config,configuration
Lio/bootique/value/Bytes$BytesObject;.compareTo(Lio/bootique/value/Bytes$BytesObject;)I#cmp,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/value/Bytes.java;,VariableName,cmp,"@Override
        public int compareTo(BytesObject o) {
            long cmp = Long.compare(bytes, o.getBytes());
            if (cmp != 0) {
                return (int) cmp;
            }",cmp,compare
Lio/bootique/help/DefaultHelpGeneratorTest;.assertLines(Lio/bootique/help/DefaultHelpGenerator;[Ljava/lang/String;)V#0#s,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/help/DefaultHelpGeneratorTest.java;,VariableName,s,"private static void assertLines(DefaultHelpGenerator generator, String... expectedLines) {

        StringBuilder expected = new StringBuilder();
        for (String s : expectedLines) {
            expected.append(s).append(ConsoleAppender.NEWLINE);
        }

        String help = generator.generate();",s,string
Lio/bootique/meta/module/ModuleMetadataTest;.testFindConfig_Inheritance()V#super1P,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/meta/module/ModuleMetadataTest.java;,VariableName,super1P,"ModuleMetadata md = ModuleMetadata.builder(""x"").addConfig(super1).build();

        Optional<ConfigMetadataNode> super1P = md.findConfig(""r1.super1p1"");
        assertTrue(super1P.isPresent());
        assertEquals(""super1p1"", super1P.get().getName());
        assertEquals(""super1p1 desc"", super1P.get().getDescription());",p,property
Lio/bootique/test/junit/BQModuleProviderCheckerTest$P1;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique-test/src/test/java/io/bootique/test/junit/BQModuleProviderCheckerTest.java;,ClassName,P1,"public static class P1 implements BQModuleProvider {

        @Override
        public Module module() {
            return b -> {
            };
        }",p,provider
Lio/bootique/config/jackson/InPlaceLeftHandMerger;.mergeObjects(Lcom/fasterxml/jackson/databind/JsonNode;Lcom/fasterxml/jackson/databind/JsonNode;)Lcom/fasterxml/jackson/databind/JsonNode;#0#srcChild,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/config/jackson/InPlaceLeftHandMerger.java;,VariableName,srcChild,"Iterator<String> fieldNames = srcObject.fieldNames();
  while (fieldNames.hasNext()) {

   String fieldName = fieldNames.next();
   JsonNode srcChild = srcObject.get(fieldName);
   JsonNode targetChild = targetObject.get(fieldName);

   targetObject.replace(fieldName, apply(targetChild, srcChild));
  }",src,source
Lio/bootique/unit/BQInternalWebServerTestFactory$Builder;.resourceUrl(Lio/bootique/resource/ResourceFactory;)Lio/bootique/unit/BQInternalWebServerTestFactory$Builder;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/config/CliConfigurationSource_WebConfigSourceIT.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/unit/BQInternalWebServerTestFactory.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/JsonNodeConfigurationFactoryProviderIT.java;,MethodName,resourceUrl,"            super(runtimes, executor, args);
            this.resourceUrl = new ResourceFactory(""classpath:"");
        }

        public Builder resourceUrl(ResourceFactory resourceUrl) {
            this.resourceUrl = resourceUrl;
            return this;
        }",url,uniform resource locator
Ljavax/servlet/http/HttpServletResponse;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/resource/ResourceFactory_WebConfigSourceIT.java;,ClassName,HttpServletResponse,"        @Override
        protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
            resp.getWriter().write(""g: h"");
        }",http,hyper text transfer protocol
Lio/bootique/meta/application/ApplicationIntrospectorTest;.testAppNameFromRuntime()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/meta/application/ApplicationIntrospectorTest.java;,MethodName,testAppNameFromRuntime,"        Assert.assertNotNull(mainClass);
        Assert.assertNotEquals(Bootique.class, mainClass);
    }

    @Test
    public void testAppNameFromRuntime() {

        String name = ApplicationIntrospector.appNameFromRuntime();

        // TODO: until https://github.com/bootique/bootique/issues/52 is available,
        // we can't make an exact assertion here, as tests can be started from different IDEs, etc.
",app,application
Lio/bootique/command/MultiCommand;.runBlockingMultiple(Ljava/util/Collection<Lio/bootique/command/CommandRefWithArgs;>;)Ljava/util/Collection<Lio/bootique/command/CommandOutcome;>;#cmdRefs#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/command/MultiCommand.java;,ParameterName,cmdRefs,"        runNonBlocking(extraCommands.getParallel(), this::logOutcome);

        return mainCommand.run(cli);
    }

    private Collection<CommandOutcome> runBlocking(Collection<CommandRefWithArgs> cmdRefs) {

        switch (cmdRefs.size()) {
            case 0:
                return Collections.emptyList();",cmd,command
Lio/bootique/Bootique_Configuration_VarsIT;.testDeclareVar_ConfigPathCaseSensitivity()V#b4,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/Bootique_Configuration_VarsIT.java;,VariableName,b4,"                .var(""MY_VAR"", ""myValue"")
                .createRuntime();

        Bean4 b4 = runtime.getInstance(ConfigurationFactory.class).config(Bean4.class, """");
        assertNotNull(""Map did not resolve"", b4.m);
        assertEquals(""Unexpected map contents: "" + b4.m, ""myValue"", b4.m.get(""propCamelCase""));
    }",b,bytes
Lio/bootique/log/BootLogger;.stderr(Ljava/lang/String;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/unit/BQInternalDaemonTestFactory.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique-test/src/main/java/io/bootique/test/junit/BQRuntimeDaemon.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/log/BootLogger.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/BQRuntime.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique-test/src/test/java/io/bootique/test/junit/BQDaemonTestFactoryIT.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/Bootique.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique-test/src/test/java/io/bootique/test/junit/BQTestFactoryIT.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/config/jackson/InPlaceLeftHandMerger.java;,MethodName,stderr," void stdout(String message);

 void stderr(String message);

 void stderr(String message, Throwable th);",stderr,standard error
Lio/bootique/help/config/ConfigSectionGeneratorTest;.testVisitMapOfListsOfObjects()V#subListMd,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/help/config/ConfigSectionGeneratorTest.java;,VariableName,subListMd,"                .addProperty(ConfigValueMetadata.builder(""p3"").type(Boolean.TYPE).build())
                .build();

        ConfigListMetadata subListMd = ConfigListMetadata
                .builder()
                .description(""Sublist description"")
                .elementType(objectMd)",md,metadata
Lio/bootique/BootiqueIT$SubM2;.getS2(Ljava/lang/String;)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/BootiqueIT.java;,MethodName,getS2,"        @S2
        @Provides
        @Singleton
        String getS2(@S1 String s1) {
            return ""sub_sub_m2_s2_"" + s1;
        }
    }",s,string
Lcom/fasterxml/jackson/core/JsonParser;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/jackson/deserializer/JSR310DeserializerBase.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/jackson/deserializer/YearMonthDeserializer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/config/jackson/InPlaceLeftHandMergerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/jackson/deserializer/InstantDeserializer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/jackson/deserializer/YearDeserializer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/jackson/deserializer/LocalDateDeserializer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/jackson/deserializer/LocalDateTimeDeserializer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/jackson/deserializer/LocalTimeDeserializer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/jackson/DefaultJacksonServiceIT.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/jackson/deserializer/OffsetTimeDeserializer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/jackson/deserializer/JSR310StringParsableDeserializer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/jackson/deserializer/DurationDeserializer.java;,ClassName,JsonParser,"public YearMonth deserialize(JsonParser parser, DeserializationContext context) throws IOException {

        if (parser.hasToken(JsonToken.VALUE_STRING)) {
            String string = parser.getText().trim();
            if (string.length() == 0) {",json,javascript object notation
Lio/bootique/command/DefaultCommandManagerTest;.testLookupByName_Missing()V#cm,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/command/DefaultCommandManagerTest.java;,VariableName,cm,"        map.put(""x"", ManagedCommand.forCommand(c1));
        map.put(""y"", ManagedCommand.forCommand(c2));
        map.put(""z"", ManagedCommand.builder(c3).asDefault().build());

        DefaultCommandManager cm = new DefaultCommandManager(map);
        assertSame(c1, cm.lookupByType(C1.class).getCommand());
        assertSame(c2, cm.lookupByType(C2.class).getCommand());
        assertSame(""No default command included in lookup"", c3, cm.lookupByType(C3.class).getCommand());",cm,command manager
Lio/bootique/command/CommandDecoratorIT$ExecutableOnceCommand;.cliRef)Ljava/util/concurrent/atomic/AtomicReference<Lio/bootique/cli/Cli;>;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/command/CommandDecoratorIT.java;,FieldName,cliRef,"static abstract class ExecutableOnceCommand extends CommandWithMetadata {

        protected final AtomicReference<Cli> cliRef;

        public ExecutableOnceCommand(String commandName) {
            this(commandName, Optional.empty());
        }",ref,reference
Lio/bootique/help/ConsoleAppenderTest;.testConstructorMinWidth()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/help/ConsoleAppenderTest.java;,MethodName,testConstructorMinWidth,"// TODO: what's the point of hardcoded min line width?
    @Test(expected = IllegalArgumentException.class)
    public void testConstructorMinWidth() {
        new ConsoleAppender(new StringBuilder(), ConsoleAppender.MIN_LINE_WIDTH - 2);
    }",min,minimum
Lio/bootique/BootiqueExceptionsHandlerIT;.testConfig_BadUrlProtocol()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/BootiqueExceptionsHandlerIT.java;,MethodName,testConfig_BadUrlProtocol,"    @Test
    public void testConfig_BadUrlProtocol() {
        // underscores in protocol name cause IllegalArgumentException in URI
        CommandOutcome out = Bootique.app(""-c"", ""no_such_protocol://myconfig"")
                .module(b -> b.bind(ConfigDependent.class).asEagerSingleton())
                .exec();",url,uniform resource locator
Lio/bootique/meta/module/ModuleMetadataIT;.testDefault()V#md,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/meta/module/ModuleMetadataIT.java;,VariableName,md,"    @Test
    public void testDefault() {
        ModulesMetadata md = runtimeFactory.app().createRuntime().getInstance(ModulesMetadata.class);

        assertEquals(""Expected BQCoreModule + 2 test modules"", 3, md.getModules().size());

        Optional<ModuleMetadata> coreMd = md.getModules()
                .stream()
                .filter(m -> ""BQCoreModule"".equals(m.getName()))
                .findFirst();",md,modules
Lio/bootique/run/DefaultRunnerTest;.testRun_NoMatch()V#mockC1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/run/DefaultRunnerTest.java;,VariableName,mockC1,"when(mockCli.commandName()).thenReturn(""c1"");

        Command mockDefault = mockCommand(""d1"", CommandOutcome.succeeded());
        Command mockHelp = mockCommand(""h1"", CommandOutcome.succeeded());

        Command mockC1 = mockCommand(""c1"", CommandOutcome.succeeded(), ""c1o1"", ""c1o2"");
        Command mockC2 = mockCommand(""c2"", CommandOutcome.succeeded(), ""c2o1"");

        CommandOutcome result = run(Optional.of(mockDefault), Optional.of(mockHelp), mockC1, mockC2);
        assertTrue(result.isSuccess());",c,command
Lio/bootique/command/CommandManagerWithOverridesBuilder;.lambda$2(Ljava/util/Map;Lio/bootique/command/Command;)V#0#mc,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/command/CommandManagerWithOverridesBuilder.java;,VariableName,mc,"    protected void loadHelpCommand(Map<String, ManagedCommand> commandMap) {
        if (hideBaseCommands) {
            ManagedCommand mc = ManagedCommand.builder(helpCommand)
                    .asHidden()
                    .asHelp()
                    .build();
            addCommandNoOverride(commandMap, mc);
        } else {
            super.loadHelpCommand(commandMap);",mc,managed command
Lio/bootique/DeclaredVariableMetaCompiler;.compileIfValid(Lio/bootique/env/DeclaredVariable;Lio/bootique/meta/module/ModulesMetadata;)Ljava/util/Optional<Lio/bootique/meta/config/ConfigValueMetadata;>;#var#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/DeclaredVariableMetaCompiler.java;,ParameterName,var,"class DeclaredVariableMetaCompiler {

    static Optional<ConfigValueMetadata> compileIfValid(DeclaredVariable var, ModulesMetadata modulesMetadata) {

        for (ModuleMetadata mm : modulesMetadata.getModules()) {
            Optional<ConfigMetadataNode> cmn = mm.findConfig(var.getConfigPath());
            if (cmn.isPresent()) {",var,variable
Lio/bootique/jackson/deserializer/JSR310DateTimeDeserializerBase;.createContextual(Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/BeanProperty;)Lcom/fasterxml/jackson/databind/JsonDeserializer<*>;|Lcom/fasterxml/jackson/databind/JsonMappingException;#ctxt#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/jackson/deserializer/JSR310DateTimeDeserializerBase.java;,ParameterName,ctxt,"public JsonDeserializer<?> createContextual(DeserializationContext ctxt,
                                                BeanProperty property) throws JsonMappingException {
        if (property != null) {
            JsonFormat.Value format = ctxt.getAnnotationIntrospector().findFormat((Annotated) property.getMember());
            if (format != null) {",ctxt,context
Lio/bootique/log/DefaultBootLoggerTest;.mockStdout)Ljava/io/PrintStream;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/log/DefaultBootLoggerTest.java;,FieldName,mockStdout,"public class DefaultBootLoggerTest {

 private PrintStream mockStdout;
 private PrintStream mockStderr;",stdout,standard output
Lio/bootique/config/jackson/IndexPathSegment;.toIndex(Ljava/lang/String;)I#0#1#nfex,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/config/jackson/IndexPathSegment.java;,VariableName,nfex,"        int index;
        try {
            index = Integer.parseInt(indexString);
        } catch (NumberFormatException nfex) {
            throw new IllegalArgumentException(""Non-int array index. Must be in format [NNN]. Instead got "" + indexWithParenthesis);
        }",nfex,number format exception
Ljava/time/format/DateTimeFormatter;.ISO_ZONED_DATE_TIME)Ljava/time/format/DateTimeFormatter;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/jackson/deserializer/InstantDeserializer.java;,VariableName,ISO_ZONED_DATE_TIME,"    public static final InstantDeserializer<ZonedDateTime> ZONED_DATE_TIME = new InstantDeserializer<>(
            ZonedDateTime.class, DateTimeFormatter.ISO_ZONED_DATE_TIME,
            ZonedDateTime::from,
            a -> ZonedDateTime.ofInstant(Instant.ofEpochMilli(a.value), a.zoneId),
            a -> ZonedDateTime.ofInstant(Instant.ofEpochSecond(a.integer, a.fraction), a.zoneId),
            ZonedDateTime::withZoneSameInstant",iso,International Organization for Standardization
Lio/bootique/help/HelpOptions;.lambda$0(Ljava/lang/String;)Ljava/util/List;#sn#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/help/HelpOptions.java;,VariableName,sn,"    public void add(OptionMetadata option) {
        HelpOption ho = new HelpOption(option);
        byShortName.computeIfAbsent(ho.getOption().getShortName(), sn -> new ArrayList<HelpOption>()).add(ho);
    }",sn,short name
Lio/bootique/help/config/ConfigSectionGeneratorTest;.testVisitMapOfValues()V|Ljava/lang/NoSuchFieldException;#rootMd,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/help/config/ConfigSectionGeneratorTest.java;,VariableName,rootMd,"
        ConfigObjectMetadata rootMd = ConfigObjectMetadata
                .builder(""m1root"")
                .description(""Root config of M1"")
                .type(ConfigRoot1.class)
                .addProperty(mapMd)
                .build();",md,metadata
Lio/bootique/resource/ResourceFactory;.resolveUrl(Ljava/lang/String;)Ljava/net/URL;#0#cpUrl,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/resource/ResourceFactory.java;,VariableName,cpUrl,"if (path.length() > 0 && path.charAt(0) == '/') {
                throw new RuntimeException(CLASSPATH_URL_PREFIX + "" URLs must not start with a slash: "" + resourceId);
            }

            URL cpUrl = ResourceFactory.class.getClassLoader().getResource(path);

            if (cpUrl == null) {
                throw new IllegalArgumentException(""Classpath URL not found: "" + resourceId);
            }",cp,classpath
Lio/bootique/Bootique;.exec()Lio/bootique/command/CommandOutcome;#0#1#ce,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/Bootique.java;,VariableName,ce," // unwrap standard Guice exceptions...
        catch (CreationException ce) {
            o = processExceptions(ce.getCause(), ce);
        } catch (ProvisionException pe) {
            // Actually we can provide multiple exceptions here
            // since ProvisionException save all errors in error messages",ce,Creation Exception
Lio/bootique/config/CliConfigurationSource;.toURL(Ljava/lang/String;)Ljava/net/URL;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/config/CliConfigurationSource.java;,MethodName,toURL,"    protected URL toURL(String location) {
        bootLogger.trace(() -> ""Reading configuration at "" + location);
        return new ResourceFactory(location).getUrl();
    }",url,uniform resource locator
Lio/bootique/test/junit/BQModuleProviderChecker;.lambda$0(Lio/bootique/BQModuleProvider;)Z#p#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique-test/src/main/java/io/bootique/test/junit/BQModuleProviderChecker.java;,VariableName,p,"    protected Stream<BQModuleProvider> matchingProviders() {
        return StreamSupport.stream(ServiceLoader.load(BQModuleProvider.class).spliterator(), false)
                .filter(p -> p != null && provider.equals(p.getClass()));
    }",p,provider
Lio/bootique/jackson/deserializer/BQTimeModule;._findFactory(Lcom/fasterxml/jackson/databind/introspect/AnnotatedClass;Ljava/lang/String;[Ljava/lang/Class<*>;)Lcom/fasterxml/jackson/databind/introspect/AnnotatedMethod;#cls#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/jackson/deserializer/BQTimeModule.java;,ParameterName,cls,"protected AnnotatedMethod _findFactory(AnnotatedClass cls, String name, Class<?>... argTypes) {
        final int argCount = argTypes.length;
        for (AnnotatedMethod method : cls.getFactoryMethods()) {
            if (!name.equals(method.getName())",cls,class
Lio/bootique/JsonNodeConfigurationFactoryProviderTest$Bean1;.getL()J,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/JsonNodeConfigurationFactoryProviderTest.java;,MethodName,getL,"        public long getL() {
            return l;
        }",l,long
Lio/bootique/jackson/DefaultJacksonServiceIT;.testNewObjectMapper_Inheritance()V|Ljava/io/IOException;#su2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/jackson/DefaultJacksonServiceIT.java;,VariableName,su2," Sup1 su2 = readValue(Sup1.class, mapper, ""{\""type\"":\""sub2\"",\""p2\"":15}"");
        assertTrue(su2 instanceof Sub2);
        assertEquals(15, ((Sub2) su2).getP2());",su,sup
Lio/bootique/test/junit/PolymorphicConfigurationChecker;.testNonRoot(Ljava/lang/Class<+TT;>;)V#t#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique-test/src/main/java/io/bootique/test/junit/PolymorphicConfigurationChecker.java;,ParameterName,t,"    protected void testNonRoot(Class<? extends T> t) {
        // while boundaries are compiler-checked, let's still verify superclass, as generics in Java are easy to bypass
        assertTrue(""Invalid type "" + t.getName() + "". Must be a subclass of root type "" + expectedRoot.getName(),
                expectedRoot.isAssignableFrom(t));",t,type
Lio/bootique/command/CommandManagerWithOverridesBuilder;.lambda$0(Ljava/util/Map;Lio/bootique/command/Command;)V#co#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/command/CommandManagerWithOverridesBuilder.java;,VariableName,co," if (commandOverrides != null) {
            commandOverrides.forEach(co -> {

                ManagedCommand.Builder builder = ManagedCommand.builder(co);",co,command
Lio/bootique/command/CommandDecoratorIT$AppRunner;.lambda$0(Lcom/google/inject/Binder;)V#b#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/command/CommandDecoratorIT.java;,VariableName,b,"       testFactory.app(""--a"")
                .module(b -> BQCoreModule.extend(b)
                        .addCommand(mainCommand)
                        .decorateCommand(mainCommand.getClass(), CommandDecorator.beforeRun(c1))
                        .decorateCommand(mainCommand.getClass(), CommandDecorator.beforeRun(c2)))
                .createRuntime()
                .run();",b,builder
Lio/bootique/env/DefaultEnvironment;.filterByPrefix(Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;#0#e,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/env/DefaultEnvironment.java;,VariableName,e,"        String lPrefix = prefix.endsWith(separator) ? prefix : prefix + separator;
        int len = lPrefix.length();

        Map<String, String> filtered = new HashMap<>();
        for(Map.Entry<String, String> e : unfiltered.entrySet()) {
            if(e.getKey().startsWith(lPrefix)) {
                filtered.put(e.getKey().substring(len), e.getValue());
            }",e,entry
Lio/bootique/config/jackson/InPlaceLeftHandMerger;.mergeObjects(Lcom/fasterxml/jackson/databind/JsonNode;Lcom/fasterxml/jackson/databind/JsonNode;)Lcom/fasterxml/jackson/databind/JsonNode;#srcObject,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/config/jackson/InPlaceLeftHandMerger.java;,VariableName,srcObject,"protected JsonNode mergeObjects(JsonNode target, JsonNode source) {

  ObjectNode targetObject = (ObjectNode) target;
  ObjectNode srcObject = (ObjectNode) source;

  Iterator<String> fieldNames = srcObject.fieldNames();
  while (fieldNames.hasNext()) {

   String fieldName = fieldNames.next();",src,source
Lio/bootique/jackson/PercentValueYamlDeserializerIT;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/jackson/PercentValueYamlDeserializerIT.java;,ClassName,PercentValueYamlDeserializerIT,"public class PercentValueYamlDeserializerIT extends DeserializerTestBase {

    @Test
    public void testDeserialization_AsPercent() throws Exception {
        Percent p = deserialize(Percent.class, ""5%"");
        assertEquals(5, p.getPercent(), 0.00001);",yaml,yaml ain't markup language
Lio/bootique/meta/config/ConfigObjectMetadataTest;.testGetAllSubconfigs()V#o6,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/meta/config/ConfigObjectMetadataTest.java;,VariableName,o6,"        ConfigObjectMetadata o3 = ConfigObjectMetadata.builder().build();

        ConfigObjectMetadata o4 = ConfigObjectMetadata.builder().addSubConfig(o1).build();
        ConfigObjectMetadata o5 = ConfigObjectMetadata.builder().addSubConfig(o2).addSubConfig(o3).build();

        ConfigObjectMetadata o6 = ConfigObjectMetadata.builder().addSubConfig(o4).addSubConfig(o5).build();

        List<ConfigMetadataNode> all6 = o6.getAllSubConfigs().collect(toList());
        assertEquals(6, all6.size());
        assertTrue(all6.contains(o1));",o,object
Lio/bootique/jackson/deserializer/DecimalUtils;.toDecimal(JI)Ljava/lang/String;#0#nanosLen,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/jackson/deserializer/DecimalUtils.java;,VariableName,nanosLen,"StringBuilder nanoSB = new StringBuilder(9);
            nanoSB.append(nanoseconds);
            // May need to both prepend leading nanos (if value less than 0.1)
            final int nanosLen = nanoSB.length();
            int prepZeroes = 9 - nanosLen;
            while (prepZeroes > 0) {
                --prepZeroes;",len,length
Lio/bootique/Bootique_ConfigurationIT;.testConfigEnvOverrides_Alias()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/Bootique_ConfigurationIT.java;,MethodName,testConfigEnvOverrides_Alias,"    @Test
    public void testConfigEnvOverrides_Alias() {
        BQRuntime runtime = testFactory.app(""--config=src/test/resources/io/bootique/test3.yml"")
                .declareVar(""a"", ""V1"")
                .declareVar(""c.m.f"", ""V2"")",env,environment
Lio/bootique/config/jackson/JsonNodeConfigurationFactoryTest;.testMap_MultiLevel()V#subM,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/config/jackson/JsonNodeConfigurationFactoryTest.java;,VariableName,subM,"Map<String, Map<String, Object>> m = factory(""b1:\n  k1: SS\n  i: 55"")
                .config(new TypeRef<Map<String, Map<String, Object>>>() {
                }, """");

        assertNotNull(m);
        Map<String, Object> subM = m.get(""b1"");
        assertNotNull(subM);

        assertEquals(""SS"", subM.get(""k1""));
        assertEquals(55, subM.get(""i""));",m,map
Lio/bootique/jopt/JoptCliFactory;.lambda$0(Ljoptsimple/OptionParser;Lio/bootique/meta/application/CommandMetadata;)V#c#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/jopt/JoptCliFactory.java;,VariableName,c," // do not allow option abbreviations .. we will provide short forms explicitly
        OptionParser parser = new OptionParser(false);

        application.getCommands().forEach(c -> {

            c.getOptions().forEach(o -> addOption(parser, o));

            // using option-bound command strategy...
            OptionMetadata commandAsOption = c.asOption();
            addOption(parser, commandAsOption);",c,command
Lio/bootique/jackson/DefaultJacksonServiceIT;.testNewObjectMapper_Inheritance()V|Ljava/io/IOException;#su3,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/jackson/DefaultJacksonServiceIT.java;,VariableName,su3," assertTrue(su22 instanceof Sub2);
        assertEquals(18, ((Sub2) su22).getP2());


        Sup2 su3 = readValue(Sup2.class, mapper, ""{\""type\"":\""sub3\"",\""p3\"":\""pxxxx\""}"");
        assertTrue(su3 instanceof Sub3);
        assertEquals(""pxxxx"", ((Sub3) su3).getP3());",su,sup
Lio/bootique/command/CommandDecoratorIT;.testMultipleDecoratorsForTheSameCommand()V#c2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/command/CommandDecoratorIT.java;,VariableName,c2,"Command c1 = mock(Command.class);
        when(c1.run(any())).thenReturn(CommandOutcome.succeeded());

        Command c2 = mock(Command.class);
        when(c2.run(any())).thenReturn(CommandOutcome.succeeded());

        testFactory.app(""--a"")
                .module(b -> BQCoreModule.extend(b)
                        .addCommand(mainCommand)
                        .decorateCommand(mainCommand.getClass(), CommandDecorator.beforeRun(c1))
                        .decorateCommand(mainCommand.getClass(), CommandDecorator.beforeRun(c2)))
                .createRuntime()
                .run();",c,command
Lio/bootique/meta/module/ModuleMetadataTest;.testFindConfig_Inheritance()V#sub2P,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/meta/module/ModuleMetadataTest.java;,VariableName,sub2P,"        Optional<ConfigMetadataNode> sub2P = md.findConfig(""r1.sub2p1"");
        assertTrue(sub2P.isPresent());
        assertEquals(""sub2p1"", sub2P.get().getName());
        assertEquals(""sub2p1 desc"", sub2P.get().getDescription());
        assertEquals(String.class, sub2P.get().getType());",p,property
Lio/bootique/meta/module/ModuleMetadataIT;.testCustomNamedModule()V#myMd,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/meta/module/ModuleMetadataIT.java;,VariableName,myMd,"ModulesMetadata md = runtime.getInstance(ModulesMetadata.class);
        assertEquals(""Expected BQCoreModule + 2 test modules + custom module"", 4, md.getModules().size());

        Optional<ModuleMetadata> myMd = md.getModules()
                .stream()
                .filter(m -> ""mymodule"".equals(m.getName()))
                .findFirst();
        assertTrue(myMd.isPresent());",md,modules
Lio/bootique/config/jackson/IndexPathSegment;.parseNextNotEmpty(Ljava/lang/String;)Lio/bootique/config/jackson/PathSegment;#len,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/config/jackson/IndexPathSegment.java;,VariableName,len,"protected PathSegment parseNextNotEmpty(String path) {
        int len = path.length();

        // looking for ']' or '].'
        // start at index 1.. The first char is known to be '['
        for (int i = 1; i < len; i++) {",len,length
Lio/bootique/jackson/deserializer/InstantDeserializer;.lambda$7(Ljava/time/temporal/Temporal;Ljava/time/ZoneId;)Ljava/time/temporal/Temporal;#z#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/jackson/deserializer/InstantDeserializer.java;,VariableName,z," public static final InstantDeserializer<OffsetDateTime> OFFSET_DATE_TIME = new InstantDeserializer<>(
            OffsetDateTime.class, DateTimeFormatter.ISO_OFFSET_DATE_TIME,
            OffsetDateTime::from,
            a -> OffsetDateTime.ofInstant(Instant.ofEpochMilli(a.value), a.zoneId),
            a -> OffsetDateTime.ofInstant(Instant.ofEpochSecond(a.integer, a.fraction), a.zoneId),
            (d, z) -> d.withOffsetSameInstant(z.getRules().getOffset(d.toLocalDateTime()))
    );",z,zone
Lio/bootique/shutdown/DefaultShutdownManager;.shutdown()Ljava/util/Map<*+Ljava/lang/Throwable;>;#0#1#e,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/shutdown/DefaultShutdownManager.java;,VariableName,e," try {
   shutdownErrors = future.get(timeout.toMillis(), TimeUnit.MILLISECONDS);
  } catch (TimeoutException | InterruptedException | ExecutionException e) {
   shutdownErrors = Collections.singletonMap(this, e);
  }",e,exception
Lio/bootique/env/DefaultEnvironment$Builder;.buildProperties()Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;#0#systemVars,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/env/DefaultEnvironment.java;,VariableName,systemVars,"
            declaredVariables.forEach(dv -> mergeValue(dv, properties, diVariables));

            if (!excludeSystemVariables) {
                Map<String, String> systemVars = System.getenv();
                declaredVariables.forEach(dv -> mergeValue(dv, properties, systemVars));
            }

            return properties;
        }",vars,variables
Lio/bootique/resource/ResourceFactoryTest;.testGetUrl_JarUrl()V|Ljava/io/IOException;#jarUrl,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/resource/ResourceFactoryTest.java;,VariableName,jarUrl," @Test
 public void testGetUrl_JarUrl() throws IOException {
  String jarUrl = jarEntryUrl(""src/test/resources/io/bootique/config/test3.jar"", ""com/foo/test3.yml"");
  assertEquals(""e: f"", resourceContents(jarUrl));
 }",url,uniform resource locator
Lio/bootique/test/TestIO;.getStdout()Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique-test/src/test/java/io/bootique/test/junit/BQDaemonTestFactoryIT.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique-test/src/test/java/io/bootique/test/junit/BQTestFactoryIT.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique-test/src/main/java/io/bootique/test/TestIO.java;,MethodName,getStdout,"    public String getStdout() {
        return stdout.toString();
    }",stdout,standard output
Lio/bootique/test/TestIO;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique-test/src/test/java/io/bootique/test/junit/BQDaemonTestFactoryIT.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique-test/src/test/java/io/bootique/test/junit/BQTestFactoryIT.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique-test/src/main/java/io/bootique/test/TestIO.java;,ClassName,TestIO,"public class TestIO {

    private InMemoryPrintStream stdout;
    private InMemoryPrintStream stderr;
    private boolean trace;",io,input output
Lio/bootique/RuntimeModuleMergerTest$M3;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/RuntimeModuleMergerTest.java;,ClassName,M3," class M3 implements Module {

  @Override
  public void configure(Binder binder) {
   // noop
  }
 }",m,module
Lio/bootique/value/PercentTest;.testHashCode()V#p1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/value/PercentTest.java;,VariableName,p1,"@Test
    public void testEquals() {
        Percent p1 = new Percent(1);
        Percent p2 = new Percent(2);
        Percent p3 = new Percent(1);",p,percent
Lio/bootique/JsonNodeConfigurationFactoryProviderTest$Bean1;.l)J,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/JsonNodeConfigurationFactoryProviderTest.java;,FieldName,l,"private String s;
        private int i;
        private long l;",l,long
Lio/bootique/resource/ResourceFactory_WebConfigSourceIT$ConfigServlet;.doGet(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V|Ljavax/servlet/ServletException;|Ljava/io/IOException;#req#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/resource/ResourceFactory_WebConfigSourceIT.java;,ParameterName,req,"    static class ConfigServlet extends HttpServlet {
        private static final long serialVersionUID = -5746986231054267492L;

        @Override
        protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
            resp.getWriter().write(""g: h"");
        }
    }",req,request
Lio/bootique/value/DurationTest;.testCompareTo()V#d3,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/value/DurationTest.java;,VariableName,d3,"    public void testCompareTo() {
        Duration d1 = new Duration(""1s"");
        Duration d2 = new Duration(""2s"");
        Duration d3 = new Duration(""1 sec"");
        Duration d4 = new Duration(""1day"");",d,duration
Lio/bootique/resource/FolderResourceFactory;.getUrl(Ljava/lang/String;)Ljava/net/URL;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/resource/FolderResourceFactory.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/resource/FolderResourceFactoryTest.java;,MethodName,getUrl,"     * @param subResourcePath a path relative to this folder that points to a resource.
     * @return a URL of the specified resource located within the folder.
     * @since 0.17
     */
    public URL getUrl(String subResourcePath) {

        if (subResourcePath.startsWith(""/"")) {
            subResourcePath = subResourcePath.substring(1);
        }",url,uniform resource locator
Lio/bootique/help/config/DefaultConfigHelpGeneratorTest;.testGenerate_Configs()V#m2Config,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/help/config/DefaultConfigHelpGeneratorTest.java;,VariableName,m2Config,"        ConfigObjectMetadata m1Config = ConfigObjectMetadata
                .builder(""m1root"")
                .description(""Root config of M1"")
                .type(ConfigRoot1.class)
                .addProperty(ConfigValueMetadata.builder(""p2"").type(Integer.TYPE).description(""Designates an integer value"").build())
                .addProperty(ConfigValueMetadata.builder(""p1"").type(String.class).build())
                .build();

        ConfigObjectMetadata m2Config = ConfigObjectMetadata
                .builder(""m2root"")
                .type(ConfigRoot2.class)
                .addProperty(ConfigValueMetadata.builder(""p0"").type(Boolean.class).build())
                .addProperty(ConfigValueMetadata.builder(""p4"").type(Bootique.class).build())
                .build();",m,module
Lio/bootique/help/ConsoleAppender;.MIN_LINE_WIDTH)I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/help/ConsoleAppenderTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/help/ConsoleAppender.java;,FieldName,MIN_LINE_WIDTH,"public class ConsoleAppender {

    static final String NEWLINE = System.getProperty(""line.separator"");

    static final int MIN_LINE_WIDTH = 10;
    private static final Pattern SPACE = Pattern.compile(""\\s+"");

    private Appendable out;
    private int lineWidth;",min,minimum
Lio/bootique/value/Bytes$BytesObject;.compareTo(Lio/bootique/value/Bytes$BytesObject;)I#o#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/value/Bytes.java;,ParameterName,o,"    @Override
    public int compareTo(Bytes o) {
        return bytes.compareTo(o.bytes);
    }",o,object
Lio/bootique/log/DefaultBootLoggerTest;.testStderr()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/log/DefaultBootLoggerTest.java;,MethodName,testStderr," @Test
 public void testStderr() {

  DefaultBootLogger logger = new DefaultBootLogger(true, mockStdout, mockStderr);

  logger.stderr(""errmsg"");
  verify(mockStderr).println(""errmsg"");",stderr,standard error
Lio/bootique/resource/ResourceFactory;.CLASSPATH_URL_PREFIX)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/resource/FolderResourceFactory.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/resource/ResourceFactory.java;,FieldName,CLASSPATH_URL_PREFIX,"public class ResourceFactory {

    protected static final String CLASSPATH_URL_PREFIX = ""classpath:"";

    protected String resourceId;
",url,uniform resource locator
Lio/bootique/RuntimeModuleMergerTest$M4;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/RuntimeModuleMergerTest.java;,ClassName,M4,"class M4 implements Module {

  @Override
  public void configure(Binder binder) {
   // noop
  }
 }",m,module
Lio/bootique/test/junit/PolymorphicConfigurationCheckerIT$C9;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique-test/src/test/java/io/bootique/test/junit/PolymorphicConfigurationCheckerIT.java;,ClassName,C9,"@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, defaultImpl = C10.class)
    public static class C9 implements PolymorphicConfiguration {
    }",c,Configuration
Lio/bootique/command/CommandRefWithArgs$RefByInstanceWithArgs;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/command/CommandRefWithArgs.java;,ClassName,RefByInstanceWithArgs,"static class RefByInstanceWithArgs extends CommandRefWithArgs {
        private Command command;

        RefByInstanceWithArgs(Command command, boolean terminateOnErrors) {
            super(ArgsBuilder.NO_ARGS, terminateOnErrors);
            this.command = command;
        }",ref,reference
Lio/bootique/test/junit/BQRuntimeDaemon;.checkStartupSucceeded(JLjava/util/concurrent/TimeUnit;)V#timeoutMs,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique-test/src/main/java/io/bootique/test/junit/BQRuntimeDaemon.java;,VariableName,timeoutMs," protected void checkStartupSucceeded(long timeout, TimeUnit unit) {

        long startedWaitingMs = System.currentTimeMillis();
        long timeoutMs = unit.toMillis(timeout);

        Future<CommandOutcome> startupFuture = executor.submit(() -> {

            try {
                for (int i = 0; i < Integer.MAX_VALUE; i++) {",ms,millisecond
Lio/bootique/BQCoreModule;.TTY_MIN_COLUMNS)I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/BQCoreModule.java;,FieldName,TTY_MIN_COLUMNS,"// TODO: duplicate of FormattedAppender.MIN_LINE_WIDTH
    private static final int TTY_MIN_COLUMNS = 40;
    private static final int TTY_DEFAULT_COLUMNS = 80;",min,minimum
Lcom/fasterxml/jackson/annotation/JsonTypeInfo;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/jackson/MockObjectConfiguration.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique-test/src/test/java/io/bootique/test/junit/PolymorphicConfigurationCheckerIT.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique-test/src/main/java/io/bootique/test/junit/PolymorphicConfigurationChecker.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/config/jackson/JsonNodeConfigurationFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/jackson/DefaultJacksonServiceIT.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique-test-badspi-it/src/test/java/io/bootique/test/junit/PolymorphicConfigurationCheckerIT.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/meta/config/ConfigMetadataCompilerTest.java;,ClassName,JsonTypeInfo," @BQConfig
    @JsonTypeInfo(use = JsonTypeInfo.Id.NAME, property = ""type"")
    public static interface Config9 extends PolymorphicConfiguration {
    }",info,information
Lio/bootique/help/DefaultHelpGenerator;.lambda$1(Lio/bootique/help/HelpOptions;Lio/bootique/meta/application/OptionMetadata;)V#o#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/help/DefaultHelpGenerator.java;,VariableName,o," HelpOptions helpOptions = new HelpOptions();

        application.getCommands().forEach(c -> {

            // for now expose commands as simply options (commands are options in a default CLI parser)
            helpOptions.add(c.asOption());
            c.getOptions().forEach(o -> helpOptions.add(o));
        });
",o,option
Lio/bootique/DeclaredVariableMetaCompiler;.lambda$0(Lio/bootique/env/DeclaredVariable;Lio/bootique/meta/config/ConfigMetadataNode;)Lio/bootique/meta/config/ConfigValueMetadata;#n#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/DeclaredVariableMetaCompiler.java;,VariableName,n,"for (ModuleMetadata mm : modulesMetadata.getModules()) {
            Optional<ConfigMetadataNode> cmn = mm.findConfig(var.getConfigPath());
            if (cmn.isPresent()) {
                return cmn.map(n -> compileMetadata(var, n));
            }
        }",n,node
Lio/bootique/jackson/deserializer/DecimalUtils;.toDecimal(JI)Ljava/lang/String;#0#nanoSB,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/jackson/deserializer/DecimalUtils.java;,VariableName,nanoSB,"       sb.append(""000000000"");
        } else {
            StringBuilder nanoSB = new StringBuilder(9);
            nanoSB.append(nanoseconds);
            // May need to both prepend leading nanos (if value less than 0.1)
            final int nanosLen = nanoSB.length();",sb,string builder
Lio/bootique/command/CommandRefWithArgs$RefByInstanceWithArgs;.(Lio/bootique/command/Command;Z)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/command/CommandRefWithArgs.java;,MethodName,RefByInstanceWithArgs,"static class RefByInstanceWithArgs extends CommandRefWithArgs {
        private Command command;

        RefByInstanceWithArgs(Command command, boolean terminateOnErrors) {
            super(ArgsBuilder.NO_ARGS, terminateOnErrors);
            this.command = command;
        }",args,arguments
Lio/bootique/log/DefaultBootLoggerTest;.mockStderr)Ljava/io/PrintStream;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/log/DefaultBootLoggerTest.java;,FieldName,mockStderr,"public class DefaultBootLoggerTest {

 private PrintStream mockStdout;
 private PrintStream mockStderr;

 @Before
 public void before() {",stderr,standard error
Lio/bootique/jackson/deserializer/OffsetTimeDeserializer;.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/time/OffsetTime;|Ljava/io/IOException;#1#t,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/jackson/deserializer/OffsetTimeDeserializer.java;,VariableName,t," int hour = parser.nextIntValue(-1);
        if (hour == -1) {
            JsonToken t = parser.getCurrentToken();
            if (t == JsonToken.END_ARRAY) {
                return null;
            }",t,token
Lio/bootique/Bootique;.createJVMShutdownHook()Ljava/lang/Thread;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/Bootique.java;,MethodName,createJVMShutdownHook,"private Thread createJVMShutdownHook() {

        // resolve all services needed for shutdown eagerly and outside shutdown thread to ensure that shutdown hook
        // will not fail due to misconfiguration, etc.

        ShutdownManager shutdownManager = this.shutdownManager;",jvm,java virtual machine
Ljava/net/MalformedURLException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/config/CliConfigurationSourceTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/resource/ResourceFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/config/jackson/MultiFormatJsonNodeParserTest.java;,ClassName,MalformedURLException,"private String fileUrl(String path) {
        try {
            return new File(path).toURI().toURL().toExternalForm();
        } catch (MalformedURLException e) {
            throw new RuntimeException(e);
        }
    }",url,uniform resource locator
Lio/bootique/resource/ResourceFactory_WebConfigSourceIT;.testReadConfig_HttpUrl()V|Ljava/io/IOException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/resource/ResourceFactory_WebConfigSourceIT.java;,MethodName,testReadConfig_HttpUrl,"    @Test
    public void testReadConfig_HttpUrl() throws IOException {
        String url = ""http://localhost:12025/"";
        assertEquals(""g: h"", ResourceFactoryTest.resourceContents(url));
    }",url,uniform resource locator
Lio/bootique/config/jackson/MultiFormatJsonNodeParserTest;.testParserTypeFromExtension_FileUrl()V|Ljava/net/MalformedURLException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/config/jackson/MultiFormatJsonNodeParserTest.java;,MethodName,testParserTypeFromExtension_FileUrl,"
 @Test
 public void testParserTypeFromExtension_FileUrl() throws MalformedURLException {

  MultiFormatJsonNodeParser parser = new MultiFormatJsonNodeParser(Collections.emptyMap(),
    mock(BootLogger.class));
  assertEquals(ParserType.YAML, parser.parserTypeFromExtension(new URL(""file://example.org/test.yml"")));
 }",url,uniform resource locator
Lio/bootique/resource/FolderResourceFactory;.getUserDir()Ljava/lang/String;#userDir,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/resource/FolderResourceFactory.java;,VariableName,userDir,"    /**
     * @return Absolute URI for current working directory (without trailing forward slash)
     */
    private static String getUserDir() {
        String userDir = System.getProperty(""user.dir"");
        if (!userDir.startsWith(""/"")) {
            userDir = ""/"" + userDir;
        }",dir,directory
Lio/bootique/BootiqueIT$M2;.getS1()Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/BootiqueIT.java;,MethodName,getS1,"@S1
        @Provides
        @Singleton
        String getS1() {
            return ""m2_s1"";
        }
    }",s,string
Lio/bootique/test/junit/BQModuleProviderChecker;.testAutoLoadable()V#c,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique-test/src/main/java/io/bootique/test/junit/BQModuleProviderChecker.java;,VariableName,c,"protected void testAutoLoadable() {

        Long c = matchingProviders().collect(counting());

        switch (c.intValue()) {
            case 0:
                fail(""Expected provider '"" + provider.getName() + ""' is not found"");",c,collect
Lio/bootique/config/jackson/MultiFormatJsonNodeParserTest;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/config/jackson/MultiFormatJsonNodeParserTest.java;,ClassName,MultiFormatJsonNodeParserTest,"public class MultiFormatJsonNodeParserTest {

 @SuppressWarnings(""unchecked"")
 private Map<ParserType, Function<InputStream, Optional<JsonNode>>> createParsersMap(ParserType... types) {

  Map<ParserType, Function<InputStream, Optional<JsonNode>>> map = new EnumMap<>(ParserType.class);
  asList(types).forEach(t -> map.put(t, mock(Function.class)));",json,javascript object notation
Lio/bootique/jackson/deserializer/JSR310DeserializerBase;._peelDTE(Ljava/time/DateTimeException;)Ljava/time/DateTimeException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/jackson/deserializer/JSR310DeserializerBase.java;,MethodName,_peelDTE,"/**
     * Helper method used to peel off spurious wrappings of DateTimeException
     */
    protected DateTimeException _peelDTE(DateTimeException e) {
        while (true) {
            Throwable t = e.getCause();
            if (t != null && t instanceof DateTimeException) {",dte,date
Lio/bootique/BootiqueIT$SubM2;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/BootiqueIT.java;,ClassName,SubM2,"static class SubM2 implements Module {

        @Override
        public void configure(Binder binder) {
        }",m,module
Lio/bootique/meta/config/ConfigMetadataCompilerTest;.testCompile()V#p7,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/meta/config/ConfigMetadataCompilerTest.java;,VariableName,p7,"   assertEquals(String.class, p6.getKeysType());
        assertEquals(BigDecimal.class, p6.getValuesType().getType());
        assertEquals(ConfigValueMetadata.class, p6.getValuesType().getClass());

        ConfigMapMetadata p7 = (ConfigMapMetadata) propMap.get(""p7"");
        assertEquals(""java.util.Map<java.lang.Integer, io.bootique.meta.config.ConfigMetadataCompilerTest$Config2>"",
                p7.getType().getTypeName());
        assertEquals(Integer.class, p7.getKeysType());
        assertEquals(Config2.class, p7.getValuesType().getType());",p,property
Lio/bootique/DeclaredVariableMetaCompiler;.compileIfValid(Lio/bootique/env/DeclaredVariable;Lio/bootique/meta/module/ModulesMetadata;)Ljava/util/Optional<Lio/bootique/meta/config/ConfigValueMetadata;>;#0#mm,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/DeclaredVariableMetaCompiler.java;,VariableName,mm,"class DeclaredVariableMetaCompiler {

    static Optional<ConfigValueMetadata> compileIfValid(DeclaredVariable var, ModulesMetadata modulesMetadata) {

        for (ModuleMetadata mm : modulesMetadata.getModules()) {
            Optional<ConfigMetadataNode> cmn = mm.findConfig(var.getConfigPath());
            if (cmn.isPresent()) {
                return cmn.map(n -> compileMetadata(var, n));",mm,module metadata
Lio/bootique/jackson/DateDeserializerIT;.testDeserialize()V|Ljava/lang/Exception;#cal,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/jackson/DateDeserializerIT.java;,VariableName,cal,"    public void testDeserialize() throws Exception {
        Date date = deserialize(Date.class, ""\""1999-10-12T13:45:05\"""");
        assertNotNull(date);

        Calendar cal = Calendar.getInstance(TimeZone.getTimeZone(""UTC""));
        cal.setTimeInMillis(date.getTime());
        assertEquals(1999, cal.get(Calendar.YEAR));
        assertEquals(12, cal.get(Calendar.DAY_OF_MONTH));",cal,Calendar
Lio/bootique/RuntimeModuleMerger;.calcOverrideGraph(Ljava/util/Map<Ljava/lang/Class<+Lcom/google/inject/Module;>;Lio/bootique/RuntimeModule;>;)V#0#0#0#rmn,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/RuntimeModuleMerger.java;,VariableName,rmn,"    private void calcOverrideGraph(Map<Class<? extends Module>, RuntimeModule> modules) {

        for (RuntimeModule rm : modules.values()) {

            for(Class<? extends Module> override : rm.getBqModule().getOverrides()) {
                RuntimeModule rmn = modules.get(override);
                if(rmn != null) {
                    rmn.setOverriddenBy(rm);
                    rm.setOverridesOthers(true);",rmn,runtime module
Lio/bootique/config/jackson/JsonNodeConfigurationFactoryTest;.testConfig_ResourceFactory()V|Ljava/io/IOException;#rfh,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/config/jackson/JsonNodeConfigurationFactoryTest.java;,VariableName,rfh,"    public void testConfig_ResourceFactory() throws IOException {

        ResourceFactoryHolder rfh = factory(""resourceFactory: classpath:io/bootique/config/resourcefactory.txt"")
                .config(ResourceFactoryHolder.class, """");
        assertNotNull(rfh);
        assertNotNull(rfh.resourceFactory);",rfh,resource factory holder
Lio/bootique/help/config/DefaultConfigHelpGeneratorTest;.testGenerate_Configs()V#m2Config,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/help/config/DefaultConfigHelpGeneratorTest.java;,VariableName,m2Config,"        ConfigObjectMetadata m1Config = ConfigObjectMetadata
                .builder(""m1root"")
                .description(""Root config of M1"")
                .type(ConfigRoot1.class)
                .addProperty(ConfigValueMetadata.builder(""p2"").type(Integer.TYPE).description(""Designates an integer value"").build())
                .addProperty(ConfigValueMetadata.builder(""p1"").type(String.class).build())
                .build();

        ConfigObjectMetadata m2Config = ConfigObjectMetadata
                .builder(""m2root"")
                .type(ConfigRoot2.class)
                .addProperty(ConfigValueMetadata.builder(""p0"").type(Boolean.class).build())
                .addProperty(ConfigValueMetadata.builder(""p4"").type(Bootique.class).build())
                .build();",config,configuration
Lio/bootique/jackson/PeriodDeserializerIT;.testDeserialization_Value1()V|Ljava/lang/Exception;#p,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/jackson/PeriodDeserializerIT.java;,VariableName,p,"    public void testDeserialization_Value2() throws Exception {
        Period p = deserialize(Period.class, ""\""P5Y8M3D\"""");
        assertEquals(Period.of(5, 8, 3), p);
    }",p,period
Lio/bootique/meta/module/ModuleMetadataTest;.testFindConfig_Inheritance()V#sub1P,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/meta/module/ModuleMetadataTest.java;,VariableName,sub1P,"        assertEquals(""super1p1"", super1P.get().getName());
        assertEquals(""super1p1 desc"", super1P.get().getDescription());
        assertEquals(String.class, super1P.get().getType());

        Optional<ConfigMetadataNode> sub1P = md.findConfig(""r1.sub1p1"");
        assertTrue(sub1P.isPresent());
        assertEquals(""sub1p1"", sub1P.get().getName());
        assertEquals(""sub1p1 desc"", sub1P.get().getDescription());",p,property
Lio/bootique/help/config/ConfigSectionGeneratorTest;.testVisitMapOfMapsOfObjects()V#rootMapMd,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/help/config/ConfigSectionGeneratorTest.java;,VariableName,rootMapMd,"        ConfigMapMetadata subMapMd = ConfigMapMetadata
                .builder()
                .description(""Submap description"")
                .keysType(String.class)
                .valuesType(objectMd)
                .build();

        ConfigMapMetadata rootMapMd = ConfigMapMetadata
                .builder(""root"")
                .description(""Root map"")
                .keysType(String.class)
                .valuesType(subMapMd)
                .build();",md,metadata
Lio/bootique/meta/module/ModuleMetadataIT;.testProvider()V#m1Md,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/meta/module/ModuleMetadataIT.java;,VariableName,m1Md,"        assertEquals(""Expected BQCoreModule + 2 test modules + custom module"", 4, md.getModules().size());

        Optional<ModuleMetadata> m1Md = md.getModules()
                .stream()
                .filter(m -> ""M1Module"".equals(m.getName()))
                .findFirst();
        assertTrue(m1Md.isPresent());
    }",m,module
Lio/bootique/DeclaredVariableMetaCompiler;.compileIfValid(Lio/bootique/env/DeclaredVariable;Lio/bootique/meta/module/ModulesMetadata;)Ljava/util/Optional<Lio/bootique/meta/config/ConfigValueMetadata;>;#0#0#cmn,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/DeclaredVariableMetaCompiler.java;,VariableName,cmn,"    static Optional<ConfigValueMetadata> compileIfValid(DeclaredVariable var, ModulesMetadata modulesMetadata) {

        for (ModuleMetadata mm : modulesMetadata.getModules()) {
            Optional<ConfigMetadataNode> cmn = mm.findConfig(var.getConfigPath());
            if (cmn.isPresent()) {
                return cmn.map(n -> compileMetadata(var, n));
            }",cmn,Config Metadata Node
Lio/bootique/command/CommandDecoratorIT$ThreadTester;.allThreads()Ljava/util/stream/Stream<Ljava/lang/Thread;>;#tg,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/command/CommandDecoratorIT.java;,VariableName,tg,"            return t.getName().startsWith(""bootique-command-"");
        }

        private Stream<Thread> allThreads() {
            ThreadGroup tg = Thread.currentThread().getThreadGroup();
            while (tg.getParent() != null) {
                tg = tg.getParent();
            }",tg,thread group
Lio/bootique/log/DefaultBootLoggerTest;.testStdout()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/log/DefaultBootLoggerTest.java;,MethodName,testStdout," @Test
 public void testStdout() {

  DefaultBootLogger logger = new DefaultBootLogger(true, mockStdout, mockStderr);

  logger.stdout(""outmsg"");
  verify(mockStdout).println(""outmsg"");
  verifyZeroInteractions(mockStderr);
 }",stdout,standard output
Lio/bootique/config/jackson/IndexPathSegment;.parseNextNotEmpty(Ljava/lang/String;)Lio/bootique/config/jackson/PathSegment;#0#i,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/config/jackson/IndexPathSegment.java;,VariableName,i,"        // looking for ']' or '].'
        // start at index 1.. The first char is known to be '['
        for (int i = 1; i < len; i++) {
            char c = path.charAt(i);

            if (c == IndexPathSegment.ARRAY_INDEX_END) {

                // 1. [NNN]
                if (i == len - 1) {",i,index
Lio/bootique/meta/config/ConfigMetadataCompiler;.propertyTypeFromSetter(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Type;#paramTypes,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/meta/config/ConfigMetadataCompiler.java;,VariableName,paramTypes,"    private static Type propertyTypeFromSetter(Method maybeSetter) {
        Type[] paramTypes = maybeSetter.getGenericParameterTypes();
        if (paramTypes.length != 1) {
            throw new IllegalStateException(""Method '"" + maybeSetter.getDeclaringClass().getName() + "".""
                    + maybeSetter.getName() +
                    ""' is annotated with @BQConfigProperty, but does not match expected setter signature.""
                    + "" It must take exactly one parameter"");",param,parameter
Lio/bootique/meta/module/ModuleMetadataIT;.testDefault()V#coreMd,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/meta/module/ModuleMetadataIT.java;,VariableName,coreMd,"    public void testDefault() {
        ModulesMetadata md = runtimeFactory.app().createRuntime().getInstance(ModulesMetadata.class);

        assertEquals(""Expected BQCoreModule + 2 test modules"", 3, md.getModules().size());

        Optional<ModuleMetadata> coreMd = md.getModules()
                .stream()
                .filter(m -> ""BQCoreModule"".equals(m.getName()))
                .findFirst();",md,modules
Lio/bootique/BootiqueIT$SubSubM2;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/BootiqueIT.java;,ClassName,SubSubM2,"static class SubSubM2 implements Module {

        @Override
        public void configure(Binder binder) {
        }",m,module
Lio/bootique/value/DurationTest;.testEquals()V#d4,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/value/DurationTest.java;,VariableName,d4,"Duration d1 = new Duration(""1s"");
        Duration d2 = new Duration(""2s"");
        Duration d3 = new Duration(""1 sec"");
        Duration d4 = new Duration(""1day"");


        assertTrue(d1.compareTo(d1) == 0);
        assertTrue(d1.compareTo(d2) < 0);
        assertTrue(d2.compareTo(d1) > 0);",d,duration
Lio/bootique/BQRuntime;.getArgs()[Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/BQRuntime.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique-test/src/test/java/io/bootique/test/junit/BQDaemonTestFactoryIT.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique-test/src/test/java/io/bootique/test/junit/BQTestFactoryIT.java;,MethodName,getArgs," public CommandOutcome run() {
        return getInstance(Runner.class).run();
    }

    public String[] getArgs() {
        return injector.getInstance(Key.get(String[].class, Args.class));
    }

    /**
     * Executes Bootique runtime shutdown, allowing all interested DI services to perform cleanup.
     *",args,arguments
Lio/bootique/jackson/deserializer/JSR310DateTimeDeserializerBase;.withDateFormat(Ljava/time/format/DateTimeFormatter;)Lcom/fasterxml/jackson/databind/JsonDeserializer<TT;>;#dtf#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/jackson/deserializer/JSR310DateTimeDeserializerBase.java;,ParameterName,dtf,"    super(supportedType);
        _formatter = f;
    }

    protected abstract JsonDeserializer<T> withDateFormat(DateTimeFormatter dtf);

    @Override
    public JsonDeserializer<?> createContextual(DeserializationContext ctxt,
                                                BeanProperty property) throws JsonMappingException {
        if (property != null) {
            JsonFormat.Value format = ctxt.getAnnotationIntrospector().findFormat((Annotated) property.getMember());",dtf,Date Time Formatter
Lio/bootique/type/TypeRef<Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;>;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/Bootique_ConfigurationIT.java;,ClassName,TypeRef<Map<String_String>>,"    public void testEmptyConfig() {
        BQRuntime runtime = testFactory.app(""--config=src/test/resources/io/bootique/empty.yml"").createRuntime();

        Map<String, String> config = runtime
                .getInstance(ConfigurationFactory.class)
                .config(new TypeRef<Map<String, String>>() {
                }, """");
        assertTrue(config.isEmpty());
    }",ref,reference
Lio/bootique/resource/ResourceFactory;.resolveUrl(Ljava/lang/String;)Ljava/net/URL;#0#cpUrl,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/resource/ResourceFactory.java;,VariableName,cpUrl,"   if (path.length() > 0 && path.charAt(0) == '/') {
                throw new RuntimeException(CLASSPATH_URL_PREFIX + "" URLs must not start with a slash: "" + resourceId);
            }

            URL cpUrl = ResourceFactory.class.getClassLoader().getResource(path);

            if (cpUrl == null) {
                throw new IllegalArgumentException(""Classpath URL not found: "" + resourceId);
            }",url,uniform resource locator
Lio/bootique/meta/application/CommandMetadataTest;.testGetShortName()V#md,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/meta/application/CommandMetadataTest.java;,VariableName,md,"@Test
    public void testGetShortName() {
        CommandMetadata md = CommandMetadata.builder(MyCommand.class).shortName('M').build();
        assertEquals(""my"", md.getName());
        assertEquals(""M"", md.getShortName());
    }",md,command
Lio/bootique/meta/application/ApplicationMetadata$Builder;.lambda$0(Ljava/util/Set;Lio/bootique/meta/application/OptionMetadata;)V#om#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/meta/application/ApplicationMetadata.java;,VariableName,om,"private void checkNameDuplicates(Collection<OptionMetadata> options) {
            if (options.size() > 1) {
                Set<String> distinctNames = new HashSet<>();
                options.forEach(om -> {
                    if (!distinctNames.add(om.getName())) {
                        throw new RuntimeException(""Duplicate option declaration for '"" + om.getName() + ""'"");
                    }
                });
            }
        }",om,option metadata
Ljava/io/IOException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/config/jackson/JsonNodeJsonParser.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/config/CliConfigurationSourceTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/jackson/deserializer/YearDeserializer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/jackson/deserializer/LocalDateTimeDeserializer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/config/jackson/JsonNodeConfigurationFactory.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/terminal/ExternalCommandTerminal.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/resource/FolderResourceFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/config/jackson/JsonNodeYamlParser.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/jackson/deserializer/YearMonthDeserializer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/resource/ResourceFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/terminal/SttyTerminal.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/jackson/DeserializerTestBase.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/config/jackson/JsonNodeConfigurationFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/jackson/deserializer/JSR310DeserializerBase.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/jackson/OffsetDateTimeDeserializerIT.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/jackson/ZonedDateTimeDeserializerIT.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/config/jackson/InPlaceLeftHandMergerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/config/jackson/MultiFormatJsonNodeParser.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/jackson/PercentValueYamlDeserializerIT.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/jackson/deserializer/InstantDeserializer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/config/jackson/YamlReader.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/jackson/ZoneOffSetDeserializerIT.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/jackson/PeriodDeserializerIT.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/resource/ResourceFactory.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/jackson/deserializer/OffsetTimeDeserializer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/jackson/deserializer/JSR310StringParsableDeserializer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/jackson/OffsetTimeDeserializerIT.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/jackson/MonthDayDeserializerIT.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/config/TypesFactory.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/JsonNodeConfigurationFactoryProviderTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/jackson/deserializer/LocalDateDeserializer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/jackson/DurationValueYamlDeserializerIT.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/help/ConsoleAppender.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/jackson/deserializer/LocalTimeDeserializer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/resource/ResourceFactory_WebConfigSourceIT.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/jackson/DefaultJacksonServiceIT.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/jackson/deserializer/DurationDeserializer.java;,ClassName,IOException," public Optional<JsonNode> apply(InputStream t) {
  try {
   return Optional.ofNullable(mapper.readTree(t));
  } catch (IOException e) {
   throw new RuntimeException(""Error reading config data"", e);
  }
 }",io,input output
Lio/bootique/jackson/DefaultJacksonServiceIT;.testNewObjectMapper_Inheritance()V|Ljava/io/IOException;#su4,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/jackson/DefaultJacksonServiceIT.java;,VariableName,su4,"        Sup2 su4 = readValue(Sup2.class, mapper, ""{\""type\"":\""sub4\"",\""p4\"":150}"");
        assertTrue(su4 instanceof Sub4);
        assertEquals(150, ((Sub4) su4).getP4());",su,sup
Lio/bootique/value/DurationTest;.testCompareTo()V#d1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/value/DurationTest.java;,VariableName,d1,"    public void testCompareTo() {
        Duration d1 = new Duration(""1s"");
        Duration d2 = new Duration(""2s"");
        Duration d3 = new Duration(""1 sec"");
        Duration d4 = new Duration(""1day"");",d,duration
Lio/bootique/config/jackson/PropertyPathSegment;.parseNextNotEmpty(Ljava/lang/String;)Lio/bootique/config/jackson/PathSegment;#0#0#c,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/config/jackson/PropertyPathSegment.java;,VariableName,c,"// Start at index 1, assuming at least one leading char is the property name.
        // Look for either '.' or '['.
        for (int i = 1; i < len; i++) {
            char c = path.charAt(i);
            if (c == DOT) {
                // split ppp.ppp into ""ppp"" and ""ppp""",c,char
Lio/bootique/BootiqueIT;.testCreateInjector_Overrides_Multi_Level_OriginalModuleServices()V#s2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/BootiqueIT.java;,VariableName,s2,"        Injector i = Bootique.app(args)
                .module(M2.class)
                .override(M2.class).with(SubM2.class)
                .createInjector();

        String s2 = i.getInstance(Key.get(String.class, S2.class));
        assertEquals(""sub_m2_s2_m2_s1"", s2);
    }",s,string
Lio/bootique/env/DefaultEnvironment$Builder;.lambda$2(Ljava/util/Map;Ljava/util/Map;Lio/bootique/env/DeclaredVariable;)V#dv#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/env/DefaultEnvironment.java;,VariableName,dv,"                // override DI props from system...
                System.getProperties().forEach((k, v) -> properties.put((String) k, (String) v));
            }

            declaredVariables.forEach(dv -> mergeValue(dv, properties, diVariables));

            if (!excludeSystemVariables) {
                Map<String, String> systemVars = System.getenv();
                declaredVariables.forEach(dv -> mergeValue(dv, properties, systemVars));",dv,declared variables
Lio/bootique/config/jackson/JsonNodeConfigurationFactoryTest;.testList_MultiLevel()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/config/jackson/JsonNodeConfigurationFactoryTest.java;,MethodName,testList_MultiLevel,"    public void testList_MultiLevel() {

        List<List<Object>> l = factory(""-\n  - SS\n  - 55\n-\n  - X"")
                .config(new TypeRef<List<List<Object>>>() {
                }, """");",multi,multiple
Lio/bootique/value/BytesTest;.testEquals()V#b3,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/value/BytesTest.java;,VariableName,b3,"public void testCompareTo() {
        Bytes b1 = new Bytes(""1b"");
        Bytes b2 = new Bytes(""2b"");
        Bytes b3 = new Bytes(""2 bytes"");
        Bytes b4 = new Bytes(""2kb"");
        Bytes b5 = new Bytes(""2mb"");
        Bytes b6 = new Bytes(""2gb"");",b,bytes
Lio/bootique/terminal/ExternalCommandTerminal;.runCommandWithExceptions<T:Ljava/lang/Object;>([Ljava/lang/String;Ljava/util/function/Function<Ljava/io/BufferedReader;TT;>;)TT;|Ljava/io/IOException;|Ljava/lang/InterruptedException;#0#0#r,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/terminal/ExternalCommandTerminal.java;,VariableName,r,"        return null;
        }

        try (BufferedReader r = new BufferedReader(new InputStreamReader(p.getInputStream()))) {
            return resultParser.apply(r);
        }
    }",r,reader
Ljava/net/URL;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/config/jackson/JsonNodeConfigurationBuilder.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/meta/application/ApplicationIntrospector.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/config/CliConfigurationSource.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/config/CliConfigurationSource_WebConfigSourceIT.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/config/CliConfigurationSourceTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/config/jackson/InPlaceResourceOverrider.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/JsonNodeConfigurationFactoryProvider.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/config/jackson/MultiFormatJsonNodeParser.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/resource/ResourceFactory.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/resource/FolderResourceFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/config/TypesFactory.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/JsonNodeConfigurationFactoryProviderTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/resource/ResourceFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/resource/FolderResourceFactory.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/config/ConfigurationSource.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/unit/BQInternalWebServerTestFactory.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/config/jackson/JsonNodeConfigurationFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/config/jackson/MultiFormatJsonNodeParserTest.java;,ClassName,URL,"        Objects.requireNonNull(parser);
        Objects.requireNonNull(merger);

        JsonNode rootNode;

        try (Stream<URL> sources = resourceStreamSupplier.get()) {
            rootNode = sources
                    .map(parser::apply)
                    .filter(Optional::isPresent)",url,uniform resource locator
Lio/bootique/config/jackson/JsonNodeConfigurationFactoryTest;.testList_SingleLevel()V#l,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/config/jackson/JsonNodeConfigurationFactoryTest.java;,VariableName,l,"List<List<Object>> l = factory(""-\n  - SS\n  - 55\n-\n  - X"")
                .config(new TypeRef<List<List<Object>>>() {
                }, """");

        assertNotNull(l);
        assertEquals(2, l.size());",l,list
Lio/bootique/test/junit/BQDaemonTestFactoryIT;.test_StartupAndWait()V#r2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique-test/src/test/java/io/bootique/test/junit/BQDaemonTestFactoryIT.java;,VariableName,r2,"    public void test_StartupAndWait() {
        BQRuntime r1 = testFactory.app(""a1"", ""a2"").startupAndWaitCheck().start();
        assertArrayEquals(new String[]{""a1"", ""a2""}, r1.getArgs());

        BQRuntime r2 = testFactory.app(""b1"", ""b2"").startupAndWaitCheck().start();
        assertNotSame(r1, r2);
        assertArrayEquals(new String[]{""b1"", ""b2""}, r2.getArgs());
    }",r,runtime
Lio/bootique/BootiqueIT$SubM2;.getS2(Ljava/lang/String;)Ljava/lang/String;#s1#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/BootiqueIT.java;,ParameterName,s1,"   @S2
        @Provides
        @Singleton
        String getS2(@S1 String s1) {
            return ""sub_m2_s2_"" + s1;
        }",s,string
Lio/bootique/config/CliConfigurationSource_WebConfigSourceIT;.testGet_HttpUrl()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/config/CliConfigurationSource_WebConfigSourceIT.java;,MethodName,testGet_HttpUrl,"public void testGet_HttpUrl() {

  testFactory.app(""--server"").resourceUrl(new ResourceFactory(""classpath:io/bootique/config""))
    .createRuntime();

  String url = ""http://localhost:12025/CliConfigurationSource_WebConfigSourceIT1.yml"";",http,hyper text transfer protocol
Lio/bootique/test/TestIO;.getStderr()Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique-test/src/test/java/io/bootique/test/junit/BQDaemonTestFactoryIT.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique-test/src/test/java/io/bootique/test/junit/BQTestFactoryIT.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique-test/src/main/java/io/bootique/test/TestIO.java;,MethodName,getStderr,"    public String getStderr() {
        return stderr.toString();
    }",stderr,standard error
Lio/bootique/resource/FolderResourceFactory;.getUserDir()Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/resource/FolderResourceFactory.java;,MethodName,getUserDir,"/**
     * @return Absolute URI for current working directory (without trailing forward slash)
     */
    private static String getUserDir() {
        String userDir = System.getProperty(""user.dir"");
        if (!userDir.startsWith(""/"")) {
            userDir = ""/"" + userDir;",dir,directory
Lio/bootique/help/DefaultHelpGenerator;.lambda$2(Lio/bootique/help/HelpAppender;Lio/bootique/meta/config/ConfigValueMetadata;)V#v#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/help/DefaultHelpGenerator.java;,VariableName,v,"        out.printSectionName(""ENVIRONMENT"");
        variables.stream().sorted(Comparator.comparing(ConfigValueMetadata::getName)).forEach(v -> {
            out.printSubsectionHeader(v.getName());
            String description = v.getDescription();
            if (description != null) {",v,value
Lio/bootique/Bootique;.exec()Lio/bootique/command/CommandOutcome;#0#3#th,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/Bootique.java;,VariableName,th,"          o = processExceptions(cause, pe);
        } catch (Throwable th) {
            o = processExceptions(th, th);
        }",th,throwable
Lio/bootique/jackson/deserializer/JSR310StringParsableDeserializer<Ljava/time/ZoneOffset;>;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/jackson/deserializer/BQTimeModule.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/jackson/deserializer/JSR310StringParsableDeserializer.java;,ClassName,JSR310StringParsableDeserializer<ZoneOffset>,"
    public static final JSR310StringParsableDeserializer<ZoneId> ZONE_ID =
            new JSR310StringParsableDeserializer<>(ZoneId.class, ZoneId::of);

    public static final JSR310StringParsableDeserializer<ZoneOffset> ZONE_OFFSET =
            new JSR310StringParsableDeserializer<>(ZoneOffset.class, ZoneOffset::of);",jsr,Java Specification Request
Lio/bootique/test/junit/BQRuntimeDaemon;.checkStartupSucceeded(JLjava/util/concurrent/TimeUnit;)V#startedWaitingMs,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique-test/src/main/java/io/bootique/test/junit/BQRuntimeDaemon.java;,VariableName,startedWaitingMs,"    protected void checkStartupSucceeded(long timeout, TimeUnit unit) {

        long startedWaitingMs = System.currentTimeMillis();
        long timeoutMs = unit.toMillis(timeout);

        Future<CommandOutcome> startupFuture = executor.submit(() -> {",ms,millisecond
Lio/bootique/command/CommandRefWithArgs;.nameRef(Ljava/lang/String;)Lio/bootique/command/CommandRefWithArgs$ArgsBuilder;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/command/CommandDecorator.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/command/CommandRefWithArgs.java;,MethodName,nameRef,"     *
     * @param fullCommandName full name of the command.
     */
    public static ArgsBuilder nameRef(String fullCommandName) {
        return new ArgsBuilder(fullCommandName);
    }",ref,reference
Lio/bootique/JsonNodeConfigurationFactoryProvider;.loadConfiguration(Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)Lcom/fasterxml/jackson/databind/JsonNode;#textToJsonMapper,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/JsonNodeConfigurationFactoryProvider.java;,VariableName,textToJsonMapper,"// hopefully sharing the mapper between parsers is safe... Does it
        // change the state during parse?
        ObjectMapper textToJsonMapper = jacksonService.newObjectMapper();
        Map<ParserType, Function<InputStream, Optional<JsonNode>>> parsers = new EnumMap<>(ParserType.class);
        parsers.put(ParserType.YAML, new JsonNodeYamlParser(textToJsonMapper));
        parsers.put(ParserType.JSON, new JsonNodeJsonParser(textToJsonMapper));",json,javascript object notation
Lio/bootique/help/config/ConfigSectionGeneratorTest;.testVisitMapOfMapsOfObjects()V#objectMd,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/help/config/ConfigSectionGeneratorTest.java;,VariableName,objectMd,"    public void testVisitMapOfMapsOfObjects() {

        ConfigObjectMetadata objectMd = ConfigObjectMetadata.builder()
                .type(ConfigRoot2.class)
                .addProperty(ConfigValueMetadata.builder(""p4"").type(String.class).build())
                .addProperty(ConfigValueMetadata.builder(""p3"").type(Boolean.TYPE).build())
                .build();",md,metadata
Lio/bootique/ModuleExtender;.initAllExtensions()TT;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/ModuleExtender.java;,MethodName,initAllExtensions,"  /**
     * Initializes empty DI collections and maps managed by this extender. Should be called from ""configure"" method of
     * the owning module.
     *
     * @return this extender instance.
     */
    public abstract T initAllExtensions();

    protected <V> Multibinder<V> newSet(Class<V> elementType) {
        return Multibinder.newSetBinder(binder, elementType);
    }",init,initializes
Lio/bootique/config/jackson/InPlaceMapOverrider;.apply(Lcom/fasterxml/jackson/databind/JsonNode;)Lcom/fasterxml/jackson/databind/JsonNode;#t#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/config/jackson/InPlaceMapOverrider.java;,ParameterName,t,"public JsonNode apply(JsonNode t) {
        properties.entrySet().forEach(e -> {

            PathSegment target = lastPathComponent(t, e.getKey());
            target.fillMissingParents();",t,target
Lio/bootique/config/jackson/JsonNodeConfigurationFactoryTest;.testConfig_Nested()V#b2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/config/jackson/JsonNodeConfigurationFactoryTest.java;,VariableName,b2,"@Test
    public void testConfig_Nested() {
        Bean2 b2 = factory(""b1:\n  s: SS\n  i: 55"").config(Bean2.class, """");
        assertNotNull(b2);
        assertNotNull(b2.getB1());
        assertEquals(""SS"", b2.getB1().getS());",b,bean
Lio/bootique/meta/application/ApplicationIntrospector;.appNameFromJar(Ljava/lang/Class<*>;)Ljava/lang/String;#urlString,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/meta/application/ApplicationIntrospector.java;,VariableName,urlString,"} catch (Exception e) {
            return null;
        }

        String urlString = url.toExternalForm();

        // e.g. the app is started from an unpacked .jar
        if (!urlString.endsWith("".jar"")) {
            return null;",url,uniform resource locator
Lcom/fasterxml/jackson/annotation/JsonTypeName;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/meta/config/ConfigMetadataCompiler.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique-test/src/test/java/io/bootique/test/junit/PolymorphicConfigurationCheckerIT.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique-test/src/main/java/io/bootique/test/junit/PolymorphicConfigurationChecker.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/config/jackson/JsonNodeConfigurationFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/jackson/DefaultJacksonServiceIT.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique-test-badspi-it/src/test/java/io/bootique/test/junit/PolymorphicConfigurationCheckerIT.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/meta/config/ConfigMetadataCompilerTest.java;,ClassName,JsonTypeName,"        // TODO: get rid of Jackson annotations dependency .. devise our own that reflect Bootique style of config factory
        // subclassing...

        JsonTypeName typeName = type.getAnnotation(JsonTypeName.class);
        return typeName != null ? typeName.value() : null;
    }",json,javascript object notation
Lio/bootique/value/BytesTest;.testHashCode()V#b2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/value/BytesTest.java;,VariableName,b2,"@Test
    public void testCompareTo() {
        Bytes b1 = new Bytes(""1b"");
        Bytes b2 = new Bytes(""2b"");
        Bytes b3 = new Bytes(""2 bytes"");
        Bytes b4 = new Bytes(""2kb"");
        Bytes b5 = new Bytes(""2mb"");",b,bytes
Lio/bootique/Bootique_DeclareVarsIT$Bean4;.m)Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/Bootique_DeclareVarsIT.java;,FieldName,m,"@BQConfig
    static class Bean4 {
        private Map<String, String> m;

        @BQConfigProperty
        public void setM(Map<String, String> m) {
            this.m = m;",m,map
Lio/bootique/help/DefaultHelpGeneratorTest;.testGenerate_EnvironmentSection()V#app,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/help/DefaultHelpGeneratorTest.java;,VariableName,app,"@Test
    public void testGenerate_Name() {

        ApplicationMetadata app = ApplicationMetadata.builder(""myapp"").build();

        assertLines(new DefaultHelpGenerator(app, 80),
                ""NAME"",
                ""      myapp""
        );",app,application
Lio/bootique/JsonNodeConfigurationFactoryProviderTest;.lambda$0(Ljava/lang/String;)Ljava/net/URL;#0#0#tmp,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/JsonNodeConfigurationFactoryProviderTest.java;,VariableName,tmp,"            try {
                Path dir = Paths.get(""target"", ""junit"", ""tmp"");
                Files.createDirectories(dir);
                Path tmp = Files.createTempFile(dir, ""BQConfigurationFactoryProviderTest"", "".yml"");
                Files.write(tmp, s.getBytes());
                return tmp.toUri().toURL();

            } catch (IOException e) {",tmp,temporary
Lio/bootique/BQCoreModule;.provideCli(Lio/bootique/cli/CliFactory;[Ljava/lang/String;)Lio/bootique/cli/Cli;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/BQCoreModule.java;,MethodName,provideCli,"    @Provides
    @Singleton
    CliFactory provideCliFactory(
            Provider<CommandManager> commandManagerProvider,
            ApplicationMetadata applicationMetadata) {
        return new JoptCliFactory(commandManagerProvider, applicationMetadata);
    }",cli,command line interface
Lcom/fasterxml/jackson/databind/deser/std/StdValueInstantiator;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/jackson/deserializer/BQTimeModule.java;,ClassName,StdValueInstantiator,"if (ZoneId.class.isAssignableFrom(raw)) {
                    // let's assume we should be getting ""empty"" StdValueInstantiator here:
                    if (defaultInstantiator instanceof StdValueInstantiator) {
                        StdValueInstantiator inst = (StdValueInstantiator) defaultInstantiator;
                        // one further complication: we need ZoneId info, not sub-class
                        AnnotatedClass ac;",std,standard
Ljava/net/URLConnection;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/config/jackson/MultiFormatJsonNodeParser.java;,ClassName,URLConnection,"public Optional<JsonNode> apply(URL url) {

        URLConnection connection;
        try {
            connection = url.openConnection();
        } catch (IOException e) {",url,uniform resource locator
Lio/bootique/env/DefaultEnvironment$Builder;.build()Lio/bootique/env/DefaultEnvironment;#env,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/env/DefaultEnvironment.java;,VariableName,env,"        public DefaultEnvironment build() {
            DefaultEnvironment env = new DefaultEnvironment();
            env.properties = buildProperties();
            return env;
        }",env,environment
Lio/bootique/help/config/ConfigSectionGeneratorTest;.testVisitMapOfValues()V|Ljava/lang/NoSuchFieldException;#mapValueMd,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/help/config/ConfigSectionGeneratorTest.java;,VariableName,mapValueMd,"public void testVisitMapOfValues() throws NoSuchFieldException {

        Type genericMapType = ConfigRoot2.class.getField(""map"").getGenericType();

        ConfigValueMetadata mapValueMd = ConfigValueMetadata.builder().type(String.class).build();
        ConfigMapMetadata mapMd = ConfigMapMetadata.builder(""p1"")
                .type(genericMapType)
                .keysType(Integer.class)
                .valuesType(mapValueMd).build();",md,metadata
Lio/bootique/help/config/ConfigSectionGeneratorTest;.testVisitListOfValues()V#listMd1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/help/config/ConfigSectionGeneratorTest.java;,VariableName,listMd1," @Test
    public void testVisitListOfValues() {

        ConfigValueMetadata listMd1 = ConfigValueMetadata.builder().type(Integer.TYPE).build();

        ConfigObjectMetadata m1Config = ConfigObjectMetadata
                .builder(""m1root"")
                .description(""Root config of M1"")
                .type(ConfigRoot1.class)
                .addProperty(ConfigListMetadata.builder(""p1"").elementType(listMd1).build())
                .build();",md,metadata
Lio/bootique/run/DefaultRunnerTest;.testRun_NoMatch()V#mockC2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/run/DefaultRunnerTest.java;,VariableName,mockC2,"Command mockDefault = mockCommand(""d1"", CommandOutcome.succeeded());
        Command mockHelp = mockCommand(""h1"", CommandOutcome.succeeded());

        Command mockC1 = mockCommand(""c1"", CommandOutcome.succeeded(), ""c1o1"", ""c1o2"");
        Command mockC2 = mockCommand(""c2"", CommandOutcome.succeeded(), ""c2o1"");

        CommandOutcome result = run(Optional.of(mockDefault), Optional.of(mockHelp), mockC1, mockC2);
        assertTrue(result.isSuccess());

        verify(mockC1).run(mockCli);",c,command
Lio/bootique/command/CommandManagerBuilder;.addCommandNoOverride(Ljava/util/Map<Ljava/lang/String;Lio/bootique/command/ManagedCommand;>;Lio/bootique/command/ManagedCommand;)V#0#c1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/command/CommandManagerBuilder.java;,VariableName,c1,"        ManagedCommand existing = addCommand(commandMap, managedCommand);

        // complain on dupes
        if (existing != null && existing.getCommand() != managedCommand.getCommand()) {
            String c1 = existing.getCommand().getClass().getName();
            String c2 = managedCommand.getCommand().getClass().getName();

            String message = String.format(""More than one DI command named '%s'. Conflicting types: %s, %s."",
                    managedCommand.getCommand().getMetadata().getName(), c1, c2);
            throw new BootiqueException(1, message);",c,command
Lio/bootique/meta/module/ModuleMetadataIT$M1Module;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/meta/module/ModuleMetadataIT.java;,ClassName,M1Module,"static class M1Module implements Module {
        @Override
        public void configure(Binder binder) {
        }
    }",m,module
Lio/bootique/config/CliConfigurationSourceTest;.jarEntryUrl(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/config/CliConfigurationSourceTest.java;,MethodName,jarEntryUrl,"private String jarEntryUrl(String jarPath, String entryPath) {
        return String.format(""jar:%s!/%s"", fileUrl(jarPath), entryPath);
    }",url,uniform resource locator
Lio/bootique/jopt/JoptCliFactoryTest;.createCli(Ljava/lang/String;)Lio/bootique/cli/Cli;#appBuilder,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/jopt/JoptCliFactoryTest.java;,VariableName,appBuilder,"    private Cli createCli(String args) {
        String[] argsArray = args.split("" "");

        CommandManager commandManager = new DefaultCommandManager(commands);

        ApplicationMetadata.Builder appBuilder = ApplicationMetadata.builder();
        commands.values().forEach(mc -> appBuilder.addCommand(mc.getCommand().getMetadata()));

        return new JoptCliFactory(() -> commandManager, appBuilder.build()).createCli(argsArray);
    }",app,application
Lio/bootique/BQCoreModuleExtenderTest;.testSetOptions()V#o2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/BQCoreModuleExtenderTest.java;,VariableName,o2,"@Test
    public void testSetOptions() {
        OptionMetadata o1 = OptionMetadata.builder(""o1"").build();
        OptionMetadata o2 = OptionMetadata.builder(""o2"").build();

        Injector i = Guice.createInjector(b -> {
            BQCoreModule.extend(b).addOptions(o1, o2);

            b.bind(OptionsInspector.class);",o,option
Lio/bootique/jopt/JoptCliFactory;.parse([Ljava/lang/String;)Ljoptsimple/OptionSet;#0#1#e,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/jopt/JoptCliFactory.java;,VariableName,e,"private OptionSet parse(String[] args) {
        try {
            return getParser().parse(args);
        } catch (OptionException e) {
            throw new BootiqueException(1, e.getMessage(), e);
        }
    }",e,exception
Lio/bootique/value/DurationTest;.testEquals()V#d2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/value/DurationTest.java;,VariableName,d2,"    @Test
    public void testCompareTo() {
        Duration d1 = new Duration(""1s"");
        Duration d2 = new Duration(""2s"");
        Duration d3 = new Duration(""1 sec"");
        Duration d4 = new Duration(""1day"");",d,duration
Lio/bootique/config/jackson/JsonNodeConfigurationFactory;.(Lcom/fasterxml/jackson/databind/JsonNode;Lcom/fasterxml/jackson/databind/ObjectMapper;)V#rootConfigNode#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/config/jackson/JsonNodeConfigurationFactory.java;,ParameterName,rootConfigNode,"    private JsonNode rootNode;
    private ObjectMapper mapper;
    private TypeFactory typeFactory;

    public JsonNodeConfigurationFactory(JsonNode rootConfigNode, ObjectMapper objectMapper) {
        this.typeFactory = TypeFactory.defaultInstance();
        this.mapper = objectMapper;
        this.rootNode = rootConfigNode;
    }",config,configuration
Lio/bootique/shutdown/DefaultShutdownManagerIT;.testShutdown_Unresponsive_Timeout()V|Ljava/lang/Exception;#t0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/shutdown/DefaultShutdownManagerIT.java;,VariableName,t0,"  }
  }).when(mockCloseable2).close();

  shutdownManager.addShutdownHook(mockCloseable2);

  long t0 = System.currentTimeMillis();
  shutdownManager.shutdown();

  long t1 = System.currentTimeMillis();

  verify(mockCloseable2).close();",t,time
Lio/bootique/command/CommandDecoratorIT$ThreadTester;.isPoolThread(Ljava/lang/Thread;)Z#t#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/command/CommandDecoratorIT.java;,ParameterName,t,"        private boolean isPoolThread(Thread t) {
            // the name comes from HeartbeatFactory
            return t.getName().startsWith(""bootique-command-"");
        }",t,thread
Lio/bootique/config/jackson/JsonNodeConfigurationFactoryTest;.testConfig_Subconfig()V#b1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/config/jackson/JsonNodeConfigurationFactoryTest.java;,VariableName,b1,"@Test
    public void testConfig() {

        Bean1 b1 = factory(""s: SS\ni: 55"").config(Bean1.class, """");
        assertNotNull(b1);
        assertEquals(""SS"", b1.getS());
        assertEquals(55, b1.getI());
    }
",b,bean
Lio/bootique/help/config/ConfigSectionGeneratorTest;.testVisitListOfObjects()V#listMd2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/help/config/ConfigSectionGeneratorTest.java;,VariableName,listMd2,"@Test
    public void testVisitListOfObjects() {

        ConfigObjectMetadata listMd2 = ConfigObjectMetadata.builder()
                .type(ConfigRoot2.class)
                .addProperty(ConfigValueMetadata.builder(""p4"").type(String.class).build())
                .addProperty(ConfigValueMetadata.builder(""p3"").type(Boolean.TYPE).build())
                .build();",md,metadata
Lio/bootique/config/jackson/JsonNodeConfigurationFactoryTest$Bean2;.getB1()Lio/bootique/config/jackson/JsonNodeConfigurationFactoryTest$Bean1;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/config/jackson/JsonNodeConfigurationFactoryTest.java;,MethodName,getB1,"    public static class Bean2 {

        private Bean1 b1;

        public Bean1 getB1() {
            return b1;
        }

        public void setB1(Bean1 b1) {
            this.b1 = b1;
        }",b,bean
Lio/bootique/test/TestIO;.stdout)Lio/bootique/test/InMemoryPrintStream;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique-test/src/main/java/io/bootique/test/TestIO.java;,FieldName,stdout,"public class TestIO {

    private InMemoryPrintStream stdout;
    private InMemoryPrintStream stderr;
    private boolean trace;",stdout,standard output
Lio/bootique/help/ConsoleAppender;.(Lio/bootique/help/ConsoleAppender;)V#proto#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/help/ConsoleAppender.java;,ParameterName,proto,"    protected ConsoleAppender(ConsoleAppender proto) {
        out = proto.out;
        lineWidth = proto.lineWidth;
        offset = proto.offset;

        // do not copy ""transient"" properties
    }",proto,property
Lio/bootique/jackson/deserializer/JSR310DateTimeDeserializerBase;.createContextual(Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/BeanProperty;)Lcom/fasterxml/jackson/databind/JsonDeserializer<*>;|Lcom/fasterxml/jackson/databind/JsonMappingException;#0#0#df,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/jackson/deserializer/JSR310DateTimeDeserializerBase.java;,VariableName,df,"                if (format.hasPattern()) {
                    final String pattern = format.getPattern();
                    final Locale locale = format.hasLocale() ? format.getLocale() : ctxt.getLocale();
                    DateTimeFormatter df;
                    if (locale == null) {
                        df = DateTimeFormatter.ofPattern(pattern);
                    } else {",df,date formatter
Lio/bootique/jackson/YearMonthDeserializerIT$YM_Pattern;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/jackson/YearMonthDeserializerIT.java;,ClassName,YM_Pattern,"    @Test
    public void testDeserialization_Pattern() throws Exception {
        YM_Pattern ym = deserialize(YM_Pattern.class, ""yearMonth: \""1308\"""");
        assertEquals(YearMonth.of(2013, Month.AUGUST), ym.yearMonth);
    }",ym,year month
Lio/bootique/JsonNodeConfigurationFactoryProviderTest$Bean1;.getS()Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/JsonNodeConfigurationFactoryProviderTest.java;,MethodName,getS,"     private int i;
        private long l;

        public String getS() {
            return s;
        }",s,string
Lio/bootique/JsonNodeConfigurationFactoryProvider;.andCliOptionOverrider(Ljava/util/function/Function<Lcom/fasterxml/jackson/databind/JsonNode;Lcom/fasterxml/jackson/databind/JsonNode;>;Ljava/util/function/Function<Ljava/net/URL;Ljava/util/Optional<Lcom/fasterxml/jackson/databind/JsonNode;>;>;Ljava/util/function/BinaryOperator<Lcom/fasterxml/jackson/databind/JsonNode;>;)Ljava/util/function/Function<Lcom/fasterxml/jackson/databind/JsonNode;Lcom/fasterxml/jackson/databind/JsonNode;>;#0#0#omd,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/JsonNodeConfigurationFactoryProvider.java;,VariableName,omd,"
        for (OptionSpec<?> cliOpt : detectedOptions) {

            OptionMetadata omd = findMetadata(cliOpt);

            if (omd == null) {
                continue;
            }",omd,option metadata
Lio/bootique/jackson/OffsetTimeDeserializerIT;.testDeserializationWithTypeInfo01()V|Ljava/lang/Exception;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/jackson/OffsetTimeDeserializerIT.java;,MethodName,testDeserializationWithTypeInfo01,"    @Test
    public void testDeserializationWithTypeInfo01() throws Exception {
        OffsetTime offsetTime = OffsetTime.of(10, 15, 30, 0, ZoneOffset.ofHours(1));

        ObjectMapper mapper = createMapper();
        mapper.addMixIn(TemporalAccessor.class, MockObjectConfiguration.class);",info,information
Lio/bootique/Bootique;.processExceptions(Ljava/lang/Throwable;Ljava/lang/Throwable;)Lio/bootique/command/CommandOutcome;#parentTh#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/Bootique.java;,ParameterName,parentTh,"    private CommandOutcome processExceptions(Throwable th, Throwable parentTh) {


        if (th instanceof BootiqueException) {
            CommandOutcome originalOutcome = ((BootiqueException) th).getOutcome();",th,throwable
Lio/bootique/meta/config/ConfigObjectMetadataTest;.testGetAllSubconfigs()V#o3,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/meta/config/ConfigObjectMetadataTest.java;,VariableName,o3,"        ConfigObjectMetadata o1 = ConfigObjectMetadata.builder().build();
        ConfigObjectMetadata o2 = ConfigObjectMetadata.builder().build();
        ConfigObjectMetadata o3 = ConfigObjectMetadata.builder().build();

        ConfigObjectMetadata o4 = ConfigObjectMetadata.builder().addSubConfig(o1).build();
        ConfigObjectMetadata o5 = ConfigObjectMetadata.builder().addSubConfig(o2).addSubConfig(o3).build();
",o,object
Lio/bootique/RuntimeModuleMergerTest$M1;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/RuntimeModuleMergerTest.java;,ClassName,M1," class M1 implements Module {

  @Override
  public void configure(Binder binder) {
   // noop
  }
 }",m,module
Lio/bootique/BQCoreModuleExtenderTest;.testSetOptions()V#o1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/BQCoreModuleExtenderTest.java;,VariableName,o1,"@Test
    public void testSetOptions() {
        OptionMetadata o1 = OptionMetadata.builder(""o1"").build();
        OptionMetadata o2 = OptionMetadata.builder(""o2"").build();

        Injector i = Guice.createInjector(b -> {
            BQCoreModule.extend(b).addOptions(o1, o2);

            b.bind(OptionsInspector.class);",o,option
Lio/bootique/jackson/DefaultJacksonServiceIT;.testNewObjectMapper_Inheritance()V|Ljava/io/IOException;#su1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/jackson/DefaultJacksonServiceIT.java;,VariableName,su1,"    @Test
    public void testNewObjectMapper_Inheritance() throws IOException {
        ObjectMapper mapper = new DefaultJacksonService(typesFactory.getTypes()).newObjectMapper();

        Sup1 su1 = readValue(Sup1.class, mapper, ""{\""type\"":\""sub1\"",\""p1\"":\""p1111\""}"");
        assertTrue(su1 instanceof Sub1);
        assertEquals(""p1111"", ((Sub1) su1).getP1());",su,sup
Lio/bootique/jackson/deserializer/InstantDeserializer;.lambda$4(Ljava/time/OffsetDateTime;Ljava/time/ZoneId;)Ljava/time/OffsetDateTime;#d#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/jackson/deserializer/InstantDeserializer.java;,VariableName,d,"    public static final InstantDeserializer<OffsetDateTime> OFFSET_DATE_TIME = new InstantDeserializer<>(
            OffsetDateTime.class, DateTimeFormatter.ISO_OFFSET_DATE_TIME,
            OffsetDateTime::from,
            a -> OffsetDateTime.ofInstant(Instant.ofEpochMilli(a.value), a.zoneId),
            a -> OffsetDateTime.ofInstant(Instant.ofEpochSecond(a.integer, a.fraction), a.zoneId),
            (d, z) -> d.withOffsetSameInstant(z.getRules().getOffset(d.toLocalDateTime()))
    );",d,date
Lio/bootique/shutdown/DefaultShutdownManagerIT;.testShutdown_Unresponsive_Timeout()V|Ljava/lang/Exception;#t1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/shutdown/DefaultShutdownManagerIT.java;,VariableName,t1,"  shutdownManager.addShutdownHook(mockCloseable2);

  long t0 = System.currentTimeMillis();
  shutdownManager.shutdown();

  long t1 = System.currentTimeMillis();

  verify(mockCloseable2).close();

  assertTrue(t1 - t0 >= timeout.toMillis());",t,time
Lio/bootique/jackson/YearMonthDeserializerIT;.testDeserialization_Value1()V|Ljava/lang/Exception;#ym,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/jackson/YearMonthDeserializerIT.java;,VariableName,ym,"    @Test
    public void testDeserialization_Value1() throws Exception {
        YearMonth ym = deserialize(YearMonth.class, ""\""1986-01\"""");
        assertEquals(YearMonth.of(1986, Month.JANUARY), ym);
    }",ym,year month
Lio/bootique/meta/config/ConfigMetadataCompilerTest;.testCompile_InheritanceFromInterface()V#c9,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/meta/config/ConfigMetadataCompilerTest.java;,VariableName,c9,"public void testCompile_InheritanceFromInterface() {

        ConfigObjectMetadata c9 = (ConfigObjectMetadata) createCompiler(t -> {

            if (Config9.class.equals(t)) {
                return Stream.of(Config10.class, Config11.class);
            }
",c,class
Lio/bootique/value/Bytes;.equals(Ljava/lang/Object;)Z#obj#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/value/Bytes.java;,ParameterName,obj,"@Override
    public boolean equals(Object obj) {
        if (obj instanceof Bytes) {
            return bytes.equals(((Bytes) obj).getBytes());
        }",obj,object
Lio/bootique/jackson/deserializer/InstantDeserializer;.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)TT;|Ljava/io/IOException;#0#2#0#0#acc,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/jackson/deserializer/InstantDeserializer.java;,VariableName,acc,"}
                T value;
                try {
                    TemporalAccessor acc = _formatter.parse(string);
                    value = parsedToValue.apply(acc);
                } catch (DateTimeException e) {
                    throw _peelDTE(e);",acc,accessor
Lio/bootique/config/CliConfigurationSourceTest;.lambda$0(Ljava/net/URL;)Ljava/lang/String;#0#utf8,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/config/CliConfigurationSourceTest.java;,VariableName,utf8,"StringBuilder string = new StringBuilder();
            byte[] buffer = new byte[1024];
            int read;
            Charset utf8 = Charset.forName(""UTF8"");

            try (InputStream in = url.openStream()) {
                while ((read = in.read(buffer, 0, buffer.length)) > 0) {
                    string.append(new String(buffer, 0, read, utf8));",utf,unicode transformation format
Lio/bootique/JsonNodeConfigurationFactoryProviderTest$3086;.serialVersionUID)J,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/JsonNodeConfigurationFactoryProviderTest.java;,VariableName,serialVersionUID,"public void testGet_SingleConfig_PropOverride() {

        Map<String, String> overrides = new HashMap<String, String>() {
            private static final long serialVersionUID = 1L;

            {
                put(""s"", ""SS"");
                put(""i"", ""55"");
            }",uid,user identifier
Lio/bootique/jackson/deserializer/BQTimeModule$5448;.findValueInstantiator(Lcom/fasterxml/jackson/databind/DeserializationConfig;Lcom/fasterxml/jackson/databind/BeanDescription;Lcom/fasterxml/jackson/databind/deser/ValueInstantiator;)Lcom/fasterxml/jackson/databind/deser/ValueInstantiator;#0#inst,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/jackson/deserializer/BQTimeModule.java;,VariableName,inst,"                    // let's assume we should be getting ""empty"" StdValueInstantiator here:
                    if (defaultInstantiator instanceof StdValueInstantiator) {
                        StdValueInstantiator inst = (StdValueInstantiator) defaultInstantiator;
                        // one further complication: we need ZoneId info, not sub-class
                        AnnotatedClass ac;
                        if (raw == ZoneId.class) {",inst,Instantiator
Lio/bootique/jackson/deserializer/BQTimeModule$5448;.findValueInstantiator(Lcom/fasterxml/jackson/databind/DeserializationConfig;Lcom/fasterxml/jackson/databind/BeanDescription;Lcom/fasterxml/jackson/databind/deser/ValueInstantiator;)Lcom/fasterxml/jackson/databind/deser/ValueInstantiator;#0#ac,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/jackson/deserializer/BQTimeModule.java;,VariableName,ac,"if (defaultInstantiator instanceof StdValueInstantiator) {
                        StdValueInstantiator inst = (StdValueInstantiator) defaultInstantiator;
                        // one further complication: we need ZoneId info, not sub-class
                        AnnotatedClass ac;
                        if (raw == ZoneId.class) {
                            ac = beanDesc.getClassInfo();
                        } else {",ac,Annotated Class
Lio/bootique/jackson/deserializer/BQTimeModule$5448;.findValueInstantiator(Lcom/fasterxml/jackson/databind/DeserializationConfig;Lcom/fasterxml/jackson/databind/BeanDescription;Lcom/fasterxml/jackson/databind/deser/ValueInstantiator;)Lcom/fasterxml/jackson/databind/deser/ValueInstantiator;#beanDesc#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/jackson/deserializer/BQTimeModule.java;,ParameterName,beanDesc," context.addValueInstantiators(new ValueInstantiators.Base() {
            @Override
            public ValueInstantiator findValueInstantiator(DeserializationConfig config,
                                                           BeanDescription beanDesc, ValueInstantiator defaultInstantiator) {
                JavaType type = beanDesc.getType();
                Class<?> raw = type.getRawClass();",desc,description
Lio/bootique/command/CommandDecoratorIT;.lambda$0(Lio/bootique/command/Command;Lio/bootique/command/Command;Lcom/google/inject/Binder;)V#b#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/command/CommandDecoratorIT.java;,VariableName,b,"        testFactory.app(""--a"")
                .module(b -> BQCoreModule.extend(b)
                        .addCommand(mainCommand)
                        .decorateCommand(mainCommand.getClass(), CommandDecorator.beforeRun(c1))
                        .decorateCommand(mainCommand.getClass(), CommandDecorator.beforeRun(c2)))
                .createRuntime()
                .run();",b,binder
Lio/bootique/jackson/MonthDayDeserializerIT;.testDeserialization_Value2()V|Ljava/lang/Exception;#md,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/test/java/io/bootique/jackson/MonthDayDeserializerIT.java;,VariableName,md,"    @Test
    public void testDeserialization_Value1() throws Exception {
        MonthDay md = deserialize(MonthDay.class, ""\""--01-17\"""");
        assertEquals(MonthDay.of(Month.JANUARY, 17), md);
    }",md,month day
Lio/bootique/meta/config/ConfigMetadataCompiler;.compileObjectMetadata(Lio/bootique/meta/config/ConfigMetadataCompiler$Descriptor;)Lio/bootique/meta/config/ConfigMetadataNode;#0#1#c,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/bootique-master/bootique/src/main/java/io/bootique/meta/config/ConfigMetadataCompiler.java;,VariableName,c,"for (Constructor<?> c : descriptor.getTypeClass().getConstructors()) {
                final BQConfigProperty configProperty = c.getAnnotation(BQConfigProperty.class);
                if (configProperty != null) {
                    final Type propType = propertyTypeFromConstructor(c);
                    builder.addProperty(compile(new Descriptor(descriptor.getTypeClass().getSimpleName().toLowerCase(), configProperty, propType)));
                }",c,constructor
Lcom/puppycrawl/tools/checkstyle/checks/metrics/ClassFanOutComplexityCheckTest;.testWithMultiDimensionalArray()V|Ljava/lang/Exception;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassFanOutComplexityCheckTest.java;,MethodName,testWithMultiDimensionalArray,"public void testWithMultiDimensionalArray() throws Exception {
        final DefaultConfiguration moduleConfig =
                createModuleConfig(ClassFanOutComplexityCheck.class);
        moduleConfig.addAttribute(""max"", ""0"");",multi,multiple
Lcom/puppycrawl/tools/checkstyle/internal/XdocsJavaDocsTest$JavaDocCapture;.isSetterMethod(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)Z#0#singleParam,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsJavaDocsTest.java;,VariableName,singleParam,"final boolean matchesSetterFormat = SETTER_PATTERN.matcher(name).matches();
                final boolean voidReturnType = type.findFirstToken(TokenTypes.LITERAL_VOID) != null;

                final DetailAST params = ast.findFirstToken(TokenTypes.PARAMETERS);
                final boolean singleParam = params.getChildCount(TokenTypes.PARAMETER_DEF) == 1;

                if (matchesSetterFormat && voidReturnType && singleParam) {
                    final DetailAST slist = ast.findFirstToken(TokenTypes.SLIST);

                    setterMethod = slist != null;",param,parameter
Lcom/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest;.testMultipleSuppression()V|Ljava/lang/Exception;#se0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest.java;,VariableName,se0,"public void testMultipleSuppression() throws Exception {
        final FilterSet fc =
            SuppressionsLoader.loadSuppressions(getPath(""InputSuppressionsLoaderMultiple.xml""));
        final FilterSet fc2 = new FilterSet();

        final SuppressElement se0 =
                new SuppressElement(""file0"", ""check0"", null, null, null, null);
        fc2.addFilter(se0);
        final SuppressElement se1 =
                new SuppressElement(""file1"", ""check1"", null, null, ""1,2-3"", null);",se,suppress element
Lcom/puppycrawl/tools/checkstyle/TreeWalkerTest;.testBehaviourWithChecksAndFilters()V|Ljava/lang/Exception;#filterConfig,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/TreeWalkerTest.java;,VariableName,filterConfig,"@Test
    public void testBehaviourWithChecksAndFilters() throws Exception {
        final DefaultConfiguration filterConfig =
                createModuleConfig(SuppressionCommentFilter.class);
        filterConfig.addAttribute(""checkCPP"", ""false"");

        final DefaultConfiguration treeWalkerConfig = createModuleConfig(TreeWalker.class);",config,configuration
Lcom/puppycrawl/tools/checkstyle/XMLLoggerTest;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/XMLLoggerTest.java;,ClassName,XMLLoggerTest," * Enter a description of class XMLLoggerTest.java.
 */
// -@cs[AbbreviationAsWordInName] Test should be named as its main class.
public class XMLLoggerTest extends AbstractXmlTestSupport {

    /**
     * Output stream to hold the test results. The IntelliJ IDEA issues the AutoCloseableResource
     * warning here, so it need to be suppressed. The {@code ByteArrayOutputStream} does not hold
     * any resources that need to be released.",xml,extensible markup language
Lcom/puppycrawl/tools/checkstyle/filters/SuppressWithPlainTextCommentFilterTest;.testSuppressByModuleIdWithNullModuleId()V|Ljava/lang/Exception;#filterCfg,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithPlainTextCommentFilterTest.java;,VariableName,filterCfg,"public void testSuppressionCommentsInPropertiesFile() throws Exception {
        final DefaultConfiguration filterCfg =
            createModuleConfig(SuppressWithPlainTextCommentFilter.class);
        filterCfg.addAttribute(""offCommentFormat"", ""# CHECKSTYLE:OFF"");
        filterCfg.addAttribute(""onCommentFormat"", ""# CHECKSTYLE:ON"");",cfg,configuration
Lcom/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheckTest;.testWithMultipleChecks()V|Ljava/lang/Exception;#checksConfig,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheckTest.java;,VariableName,checksConfig,"public void testWithMultipleChecks() throws Exception {
        final DefaultConfiguration checksConfig = createModuleConfig(TreeWalker.class);
        checksConfig.addChild(createModuleConfig(AtclauseOrderCheck.class));
        checksConfig.addChild(createModuleConfig(JavadocParagraphCheck.class));

        final DefaultConfiguration checkerConfig = createRootConfig(checksConfig);",config,configuration
Lcom/puppycrawl/tools/checkstyle/DefaultLoggerTest;.testFinishLocalSetup()V#dl,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/DefaultLoggerTest.java;,VariableName,dl,"public void testCtor() throws UnsupportedEncodingException {
        final OutputStream infoStream = new ByteArrayOutputStream();
        final ByteArrayOutputStream errorStream = new ByteArrayOutputStream();
        final DefaultLogger dl = new DefaultLogger(infoStream, true, errorStream, true);
        dl.addException(new AuditEvent(5000, ""myfile""), new IllegalStateException(""upsss""));
        dl.auditFinished(new AuditEvent(6000, ""myfile""));
        final String output = errorStream.toString(StandardCharsets.UTF_8.name());",dl,default logger
Lcom/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilterTest;.removeSuppressed([Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;#coll,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilterTest.java;,VariableName,coll,"    private static String[] removeSuppressed(String[] from, String... remove) {
        final Collection<String> coll = Arrays.stream(from).collect(Collectors.toList());
        coll.removeAll(Arrays.asList(remove));
        return coll.toArray(new String[coll.size()]);
    }",coll,collection
Lcom/puppycrawl/tools/checkstyle/api/AutomaticBeanTest$TestBean;.setVal(I)V#val#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/api/AutomaticBeanTest.java;,ParameterName,val,"public void setWrong(String wrong) {
            this.wrong = wrong;
        }

        public void setVal(int val) {
            this.val = val;
        }

        public void assignPrivateFieldSecretly(String input) {",val,value
Lcom/puppycrawl/tools/checkstyle/ConfigurationLoaderTest;.testResourceLoadConfigurationWithMultiThreadConfiguration()V|Ljava/lang/Exception;#multiThreadModeSettings,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java;,VariableName,multiThreadModeSettings,"props.setProperty(""checkstyle.basedir"", ""basedir"");

        final PropertiesExpander propertiesExpander = new PropertiesExpander(props);
        final String configPath = getPath(""InputConfigurationLoaderChecks.xml"");
        final ThreadModeSettings multiThreadModeSettings =
            new ThreadModeSettings(4, 2);

        try {
            ConfigurationLoader.loadConfiguration(
                configPath, propertiesExpander, multiThreadModeSettings);",multi,multiple
Lcom/puppycrawl/tools/checkstyle/internal/AllChecksTest;.testAllCheckstyleMessages()V|Ljava/lang/Exception;#1#0#pr,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/internal/AllChecksTest.java;,VariableName,pr,"// test properties for messages not used by checks
        for (Entry<String, List<String>> entry : usedMessages.entrySet()) {
            final Properties pr = new Properties();
            pr.load(AllChecksTest.class.getResourceAsStream(
                    ""/"" + entry.getKey().replace('.', '/') + ""/messages.properties""));",pr,properties
Lcom/puppycrawl/tools/checkstyle/api/TokenTypes;.PACKAGE_DEF)I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/design/FinalClassCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/utils/ScopeUtilsTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/PackageAnnotationCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassFanOutComplexityCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/PackageNameCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/RedundantImportCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/utils/AnnotationUtilityTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/xpath/XpathMapperTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTagInfoTest.java;,VariableName,PACKAGE_DEF,"    public void testGetRequiredTokens() {
        final FinalClassCheck checkObj = new FinalClassCheck();
        final int[] expected = {TokenTypes.CLASS_DEF, TokenTypes.CTOR_DEF, TokenTypes.PACKAGE_DEF};
        assertArrayEquals(""Default required tokens are invalid"",
            expected, checkObj.getRequiredTokens());
    }",def,definition
Lcom/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheckTest$10404;.visitJavadocToken(Lcom/puppycrawl/tools/checkstyle/api/DetailNode;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheckTest.java;,MethodName,visitJavadocToken,"        @Override
        public void visitJavadocToken(DetailNode ast) {
            if (reportVisitJavadocToken) {
                log(ast.getLineNumber(), ast.getColumnNumber(), MSG_SUMMARY_FIRST_SENTENCE);
            }
        }",javadoc,java document
Lcom/puppycrawl/tools/checkstyle/api/FullIdentTest;.prepareFullIdentWithCoordinates(II)Lcom/puppycrawl/tools/checkstyle/api/FullIdent;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/api/FullIdentTest.java;,MethodName,prepareFullIdentWithCoordinates,"    private static FullIdent prepareFullIdentWithCoordinates(int columnNo, int lineNo) {
        final DetailAST ast = new DetailAST();
        ast.setType(TokenTypes.DOT);
        ast.setColumnNo(1);
        ast.setLineNo(2);
        ast.setText(""Root"");",ident,indent
Lcom/puppycrawl/tools/checkstyle/api/DetailASTTest;.checkDir(Ljava/io/File;)V|Ljava/lang/Exception;#dir#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/api/DetailASTTest.java;,ParameterName,dir,"    private static void checkDir(File dir) throws Exception {
        final File[] files = dir.listFiles(file -> {
            return (file.getName().endsWith("".java"")
                || file.isDirectory())
                && !file.getName().endsWith(""InputGrammar.java"");",dir,directory
Lcom/puppycrawl/tools/checkstyle/checks/naming/ClassTypeParameterNameCheckTest;.testGetAcceptableTokens()V#typeParameterNameCheckObj,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/ClassTypeParameterNameCheckTest.java;,VariableName,typeParameterNameCheckObj,"public void testGetAcceptableTokens() {
        final ClassTypeParameterNameCheck typeParameterNameCheckObj =
            new ClassTypeParameterNameCheck();
        final int[] actual = typeParameterNameCheckObj.getAcceptableTokens();",obj,object
Lcom/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest;.getLinesWithWarnAndCheckComments(Ljava/lang/String;I)[Lcom/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest$IndentComment;|Ljava/io/IOException;#0#0#br,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java;,VariableName,br,"private static IndentComment[] getLinesWithWarnAndCheckComments(String aFileName,
            final int tabWidth)
                    throws IOException {
        final List<IndentComment> result = new ArrayList<>();
        try (BufferedReader br = Files.newBufferedReader(Paths.get(aFileName),
                StandardCharsets.UTF_8)) {
            int lineNumber = 1;
            for (String line = br.readLine(); line != null; line = br.readLine()) {
                final Matcher match = LINE_WITH_COMMENT_REGEX.matcher(line);",br,buffered
Lcom/puppycrawl/tools/checkstyle/utils/CommonUtilsTest;.testLengthExpandedTabs()V#s1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/utils/CommonUtilsTest.java;,VariableName,s1,"public void testLengthExpandedTabs() {
        final String s1 = ""\t"";
        assertEquals(""Invalid expanded tabs length"", 8,
            CommonUtils.lengthExpandedTabs(s1, s1.length(), 8));",s,string
Lcom/puppycrawl/tools/checkstyle/api/FileContents;.getCComments()Ljava/util/Map<Ljava/lang/Integer;Ljava/util/List<Lcom/puppycrawl/tools/checkstyle/api/TextBlock;>;>;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/api/FileContentsTest.java;,MethodName,getCComments,"        final Comment cComment = new Comment(new String[] {""2""}, 1, 1, 1);
        assertEquals(""Invalid cpp comment"", cppComment.toString(),
                fileContents.getCppComments().get(1).toString());
        assertEquals(""Invalid c comment"", cComment.toString(),
                fileContents.getCComments().get(1).get(0).toString());
    }",c,comments
Lcom/puppycrawl/tools/checkstyle/internal/XdocsJavaDocsTest$JavaDocCapture;.isSetterMethod(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)Z#0#params,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsJavaDocsTest.java;,VariableName,params,"final String name = type.getNextSibling().getText();
                final boolean matchesSetterFormat = SETTER_PATTERN.matcher(name).matches();
                final boolean voidReturnType = type.findFirstToken(TokenTypes.LITERAL_VOID) != null;

                final DetailAST params = ast.findFirstToken(TokenTypes.PARAMETERS);
                final boolean singleParam = params.getChildCount(TokenTypes.PARAMETER_DEF) == 1;

                if (matchesSetterFormat && voidReturnType && singleParam) {
                    final DetailAST slist = ast.findFirstToken(TokenTypes.SLIST);",params,parameters
Lcom/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheckTest;.testUnusedMethod()V|Ljava/lang/Exception;#o,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheckTest.java;,VariableName,o,"
        final Class<?> cls = Class.forName(RequireThisCheck.class.getName() + ""$CatchFrame"");
        final Constructor<?> constructor = cls.getDeclaredConstructors()[0];
        constructor.setAccessible(true);
        final Object o = constructor.newInstance(null, ident);

        Assert.assertEquals(""expected ident token"", ident,
                TestUtil.getClassDeclaredMethod(cls, ""getFrameNameIdent"").invoke(o));
        Assert.assertEquals(""expected catch frame type"", ""CATCH_FRAME"",
                TestUtil.getClassDeclaredMethod(cls, ""getType"").invoke(o).toString());",o,object
Lcom/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest;.testNoSuppressions()V|Ljava/lang/Exception;#fc,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest.java;,VariableName,fc,"public void testMultipleSuppression() throws Exception {
        final FilterSet fc =
            SuppressionsLoader.loadSuppressions(getPath(""InputSuppressionsLoaderMultiple.xml""));
        final FilterSet fc2 = new FilterSet();

        final SuppressElement se0 =
                new SuppressElement(""file0"", ""check0"", null, null, null, null);",fc,from classpath
Lcom/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceAfterCheckTest;.mockAST(ILjava/lang/String;Ljava/lang/String;)Lcom/puppycrawl/tools/checkstyle/api/DetailAST;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceAfterCheckTest.java;,MethodName,mockAST,"* @param tokenText text of token
     * @param tokenFileName file name of token
     * @return AST node for the token
     */
    private static DetailAST mockAST(final int tokenType, final String tokenText,
            final String tokenFileName) {
        final CommonHiddenStreamToken tokenImportSemi = new CommonHiddenStreamToken();
        tokenImportSemi.setType(tokenType);
        tokenImportSemi.setText(tokenText);",ast,abstract syntax tree
Lcom/puppycrawl/tools/checkstyle/utils/CheckUtilsTest;.testGetAccessModifierFromModifiersTokenWithNullParameter()V#0#1#actualExceptionMsg,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/utils/CheckUtilsTest.java;,VariableName,actualExceptionMsg," catch (IllegalArgumentException exc) {
            final String expectedExceptionMsg = ""expected non-null AST-token with type 'MODIFIERS'"";
            final String actualExceptionMsg = exc.getMessage();
            assertEquals(""Invalid exception message"", expectedExceptionMsg, actualExceptionMsg);
        }",msg,message
Lcom/puppycrawl/tools/checkstyle/internal/XdocsJavaDocsTest;.transformXmlToJavaDocName(Ljava/lang/String;)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsJavaDocsTest.java;,MethodName,transformXmlToJavaDocName,"    private static String transformXmlToJavaDocName(String name) {
        final String result;

        if (""source"".equals(name)) {
            result = ""pre"";",xml,extensible markup language
Lcom/puppycrawl/tools/checkstyle/internal/utils/AuditEventUtFormatter;.format(Lcom/puppycrawl/tools/checkstyle/api/AuditEvent;)Ljava/lang/String;#bufLen,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/internal/utils/AuditEventUtFormatter.java;,VariableName,bufLen,"final String fileName = event.getFileName();
        final String message = event.getMessage();

        // avoid StringBuffer.expandCapacity
        final int bufLen = event.getFileName().length() + event.getMessage().length()
            + LENGTH_OF_ALL_SEPARATORS;
        final StringBuilder sb = new StringBuilder(bufLen);

        sb.append(fileName).append(':').append(event.getLine());",len,length
Lcom/puppycrawl/tools/checkstyle/CheckerTest;.testDuplicatedModule()V|Ljava/lang/Exception;#0#0#lnr,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/CheckerTest.java;,VariableName,lnr,"final int errs = checker.process(Collections.singletonList(new File(path)));
        try (ByteArrayInputStream inputStream =
                new ByteArrayInputStream(out.toByteArray());
            LineNumberReader lnr = new LineNumberReader(
                new InputStreamReader(inputStream, StandardCharsets.UTF_8))) {
            // we need to ignore the unrelated lines
            final List<String> actual = lnr.lines()
                    .filter(line -> !getCheckMessage(AUDIT_STARTED_MESSAGE).equals(line))
                    .filter(line -> !getCheckMessage(AUDIT_FINISHED_MESSAGE).equals(line))
                    .limit(expected.length)
                    .sorted()
                    .collect(Collectors.toList());",lnr,line number reader
Lcom/puppycrawl/tools/checkstyle/api/AutomaticBeanTest$TestBean;.setVal(I)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/api/AutomaticBeanTest.java;,MethodName,setVal,"        public void setVal(int val) {
            this.val = val;
        }",val,value
Lcom/puppycrawl/tools/checkstyle/filters/SuppressWithPlainTextCommentFilterTest;.testSuppressByModuleId()V|Ljava/lang/Exception;#regexpCheckCfg,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithPlainTextCommentFilterTest.java;,VariableName,regexpCheckCfg,"final DefaultConfiguration regexpCheckCfg = createModuleConfig(RegexpSinglelineCheck.class);
        regexpCheckCfg.addAttribute(""id"", ""ignore"");
        regexpCheckCfg.addAttribute(""format"", "".*[a-zA-Z][0-9].*"");

        final DefaultConfiguration fileTabCheckCfg =
            createModuleConfig(FileTabCharacterCheck.class);",regexp,regular expression
Lcom/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheckTest;.testGetFullImportIdent()V|Ljava/lang/Exception;#t,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheckTest.java;,VariableName,t,"// which is a candidate for utility method in the future
    public void testGetFullImportIdent() throws Exception {
        final Class<?> clazz = CustomImportOrderCheck.class;
        final Object t = clazz.getConstructor().newInstance();
        final Method method = clazz.getDeclaredMethod(""getFullImportIdent"", DetailAST.class);
        method.setAccessible(true);
        final Object actual = method.invoke(t, (DetailAST) null);",t,object
Lcom/puppycrawl/tools/checkstyle/ConfigurationLoaderTest;.testMissingPropertyNameInMethodWithBooleanParameter()V|Ljava/lang/Exception;#0#0#fName,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java;,VariableName,fName,"private Configuration loadConfiguration(
        String name, Properties props) throws Exception {
        final String fName = getPath(name);

        return ConfigurationLoader.loadConfiguration(fName, new PropertiesExpander(props));
    }",f,file
Lcom/puppycrawl/tools/checkstyle/internal/XdocsPagesTest;.validateErrorSection(Ljava/lang/String;Ljava/lang/String;Lorg/w3c/dom/Node;Ljava/lang/Object;)V|Ljava/lang/Exception;#clss,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java;,VariableName,clss,"private static void validatePropertySection(String fileName, String sectionName,
            Node subSection, Object instance) throws Exception {
        final Set<String> properties = getProperties(instance.getClass());
        final Class<?> clss = instance.getClass();

        fixCapturedProperties(sectionName, instance, clss, properties);

        if (subSection != null) {
            Assert.assertTrue(fileName + "" section '"" + sectionName
                    + ""' should have no properties to show"", !properties.isEmpty());",clss,class
Lcom/puppycrawl/tools/checkstyle/internal/XdocsPagesTest;.validateErrorSection(Ljava/lang/String;Ljava/lang/String;Lorg/w3c/dom/Node;Ljava/lang/Object;)V|Ljava/lang/Exception;#1#s,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java;,VariableName,s,"    list.add(field.get(null).toString());
        }

        final StringBuilder expectedText = new StringBuilder(120);

        for (String s : list) {
            expectedText.append(s);
            expectedText.append('\n');
        }",s,string
Lcom/puppycrawl/tools/checkstyle/CheckerTest;.testDefaultLoggerClosesItStreams()V|Ljava/lang/Exception;#0#0#0#tmpFile,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/CheckerTest.java;,VariableName,tmpFile,"final File cacheFile = temporaryFolder.newFile();
        checkerConfig.addAttribute(""cacheFile"", cacheFile.getPath());

        final File tmpFile = temporaryFolder.newFile(""file.java"");
        final String[] expected = CommonUtils.EMPTY_STRING_ARRAY;

        verify(checkerConfig, tmpFile.getPath(), expected);
        final Properties cacheAfterFirstRun = new Properties();",tmp,temporary
Lcom/puppycrawl/tools/checkstyle/utils/CheckUtilsTest;.testGetAccessModifierFromModifiersTokenWrongTokenType()V#0#1#exc,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/utils/CheckUtilsTest.java;,VariableName,exc,"           CheckUtils.getAccessModifierFromModifiersToken(modifiers);
            fail(IllegalArgumentException.class.getSimpleName() + "" was expected."");
        }
        catch (IllegalArgumentException exc) {
            final String expectedExceptionMsg = ""expected non-null AST-token with type 'MODIFIERS'"";
            final String actualExceptionMsg = exc.getMessage();
            assertEquals(""Invalid exception message"", expectedExceptionMsg, actualExceptionMsg);",exc,exception
Ljava/io/File;.toURI()Ljava/net/URI;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoaderTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/AbstractModuleTestSupport.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/ant/CheckstyleAntTaskTest.java;,MethodName,toURI,"    @Test
    public void testExtraElementInConfig() throws Exception {
        final AbstractImportControl root =
                ImportControlLoader.load(
                    new File(getPath(""InputImportControlLoaderWithNewElement.xml"")).toURI());
        assertNotNull(""Import root should not be null"", root);
    }",uri,uniform resource identifier
Lcom/puppycrawl/tools/checkstyle/internal/XdocsJavaDocsTest;.sanitizeXml(Ljava/lang/String;)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsJavaDocsTest.java;,MethodName,sanitizeXml,"    private static String sanitizeXml(String nodeValue) {
        return nodeValue.replaceAll(""^[\\r\\n\\s]+"", """").replaceAll(""[\\r\\n\\s]+$"", """")
                .replace(""<"", ""&lt;"").replace("">"", ""&gt;"");
    }",xml,extensible markup language
Lcom/puppycrawl/tools/checkstyle/checks/DescendantTokenCheck;.MSG_KEY_SUM_MAX)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java;,VariableName,MSG_KEY_SUM_MAX,"
        final String[] expected = {
            ""22:32: "" + getCheckMessage(MSG_KEY_SUM_MAX, 2, 1, ""EQUAL""),
            ""22:50: "" + getCheckMessage(MSG_KEY_SUM_MAX, 2, 1, ""EQUAL""),
            ""23:33: "" + getCheckMessage(MSG_KEY_SUM_MAX, 2, 1, ""NOT_EQUAL""),
            ""23:51: "" + getCheckMessage(MSG_KEY_SUM_MAX, 2, 1, ""NOT_EQUAL""),",max,maximum
Lcom/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAfterCheck;.MSG_WS_TYPECAST)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAfterCheckTest.java;,VariableName,MSG_WS_TYPECAST,"        final DefaultConfiguration configurationTestCast =
                createModuleConfig(WhitespaceAfterCheck.class);
        configurationTestCast.addAttribute(""tokens"", ""TYPECAST"");
        final String[] expected = {
            ""88:21: "" + getCheckMessage(MSG_WS_TYPECAST),
        };
        verify(configurationTestCast, getPath(""InputWhitespaceAfterTypeCast.java""),
                expected);",ws,whitespace
Lcom/puppycrawl/tools/checkstyle/utils/BlockCommentPositionTest$BlockCommentPositionTestMetadata;.matchesNum)I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/utils/BlockCommentPositionTest.java;,FieldName,matchesNum,"private static final class BlockCommentPositionTestMetadata {

        private final String fileName;
        private final Function<DetailAST, Boolean> assertion;
        private final int matchesNum;

        BlockCommentPositionTestMetadata(String fileName, Function<DetailAST,
                Boolean> assertion, int matchesNum) {
            this.fileName = fileName;",num,number
Lcom/puppycrawl/tools/checkstyle/XMLLoggerTest$TestException;.serialVersionUID)J,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/XMLLoggerTest.java;,FieldName,serialVersionUID,"private static class TestException extends RuntimeException {

        private static final long serialVersionUID = 1L;

        TestException(String msg, Throwable cause) {
            super(msg, cause);
        }
",uid,user identifier
Ljava/lang/Integer;.parseInt(Ljava/lang/String;)I|Ljava/lang/NumberFormatException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java;,MethodName,parseInt,"     result = containsActualLevel != comment.isWarning();
        }
        else {
            final int expectedWarning = Integer.parseInt(comment.getExpectedWarning());

            if (comment.isExpectedNonStrict()) {
                // non-strict
                final boolean test = indent >= expectedWarning;
                result = test != comment.isWarning();",int,integer
Lcom/puppycrawl/tools/checkstyle/api/TokenTypes;.METHOD_DEF)I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationOnSameLineCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/utils/ScopeUtilsTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/NoFinalizerCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/MethodLengthCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/modifier/RedundantModifierCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/ParameterAssignmentCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/SuperCloneCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/ReturnCountCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/DeclarationOrderCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsJavaDocsTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolderTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/MethodNameCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingDeprecatedCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/MethodCountCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/MethodParamPadCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationLocationCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/CheckerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/ParameterNumberCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/design/DesignForExtensionCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/utils/CheckUtilsTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/utils/JavadocUtilsTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/CommentsIndentationCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/xpath/XpathMapperTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTagInfoTest.java;,VariableName,METHOD_DEF,"public void testCheckAcceptableTokens() throws Exception {
        final DefaultConfiguration config = createModuleConfig(AnnotationOnSameLineCheck.class);
        config.addAttribute(""tokens"", ""CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, ""
                + ""CTOR_DEF, VARIABLE_DEF, PARAMETER_DEF, ANNOTATION_DEF, TYPECAST, ""
                + ""LITERAL_THROWS, IMPLEMENTS_CLAUSE, TYPE_ARGUMENT, LITERAL_NEW, DOT, ""
                + ""ANNOTATION_FIELD_DEF"");",def,definition
Lcom/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheck;.MSG_KEY_NO_NEWLINE_EOF)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/CheckerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheckTest.java;,VariableName,MSG_KEY_NO_NEWLINE_EOF,"final String path = temporaryFolder.newFile(""file.java"").getPath();
        final String errorMessage =
                getCheckMessage(NewlineAtEndOfFileCheck.class, MSG_KEY_NO_NEWLINE_EOF);
        final String[] expected = {
            ""0: "" + errorMessage + "" [NewlineAtEndOfFile]"",
            ""0: "" + errorMessage + "" [ModuleId]"",
        };",eof,end of file
Lcom/puppycrawl/tools/checkstyle/api/DetailASTTest;.testManyComments()V|Ljava/lang/Exception;#0#0#bw,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/api/DetailASTTest.java;,VariableName,bw,"    public void testManyComments() throws Exception {
        final File file = temporaryFolder.newFile(""InputDetailASTManyComments.java"");

        try (Writer bw = Files.newBufferedWriter(file.toPath(), StandardCharsets.UTF_8)) {
            bw.write(""class C {\n"");
            for (int i = 0; i <= 30000; i++) {
                bw.write(""// "" + i + ""\n"");",bw,buffered writer
Lcom/puppycrawl/tools/checkstyle/SuppressionsStringPrinterTest;.EOL)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/SuppressionsStringPrinterTest.java;,FieldName,EOL,"public class SuppressionsStringPrinterTest extends AbstractTreeTestSupport {

    private static final String EOL = System.getProperty(""line.separator"");

    @Override
    protected String getPackageLocation() {
        return ""com/puppycrawl/tools/checkstyle/suppressionsstringprinter"";
    }",eol,end of life
Lcom/puppycrawl/tools/checkstyle/internal/XdocsJavaDocsTest;.getAttributeText(Ljava/lang/String;Lorg/w3c/dom/NamedNodeMap;Z)Ljava/lang/String;#0#0#attrValue,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsJavaDocsTest.java;,VariableName,attrValue," final Node attribute = attributes.item(i);
            final String attrName = attribute.getNodeName();
            final String attrValue;

            if (fixLinks && ""a"".equals(nodeName) && ""href"".equals(attrName)
                    && attribute.getNodeValue().startsWith(""apidocs/"")) {
                attrValue = ""http://checkstyle.sourceforge.net/"" + attribute.getNodeValue();
            }",attr,attribute
Lcom/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheckTest;.C1_CONTROL_CHARACTER_INDICES)[I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheckTest.java;,FieldName,C1_CONTROL_CHARACTER_INDICES,"// C1 set
    // https://en.wiktionary.org/wiki/Appendix:Control_characters#C1_set
    private static final int[] C1_CONTROL_CHARACTER_INDICES = {
        0x0080,
        0x0081,
        0x0082,",c,control
Lcom/puppycrawl/tools/checkstyle/api/AutomaticBeanTest;.testSetupInvalidChildFromBaseClass()V|Ljava/lang/Exception;#childConf,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/api/AutomaticBeanTest.java;,VariableName,childConf,"public void testSetupInvalidChildFromBaseClass() throws Exception {
        final TestBean testBean = new TestBean();
        final DefaultConfiguration parentConf = new DefaultConfiguration(""parentConf"");
        final DefaultConfiguration childConf = new DefaultConfiguration(""childConf"");
        final Field field = AutomaticBean.class.getDeclaredField(""configuration"");
        field.setAccessible(true);
        field.set(testBean, parentConf);",conf,configuration
Lcom/puppycrawl/tools/checkstyle/filters/SuppressWarningsFilterTest;.verifySuppressed(Lcom/puppycrawl/tools/checkstyle/api/Configuration;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V|Ljava/lang/Exception;#memberNameCheckConfig,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressWarningsFilterTest.java;,VariableName,memberNameCheckConfig,"holderConfig.addAttribute(""aliasList"",
            ""com.puppycrawl.tools.checkstyle.checks.sizes.""
                + ""ParameterNumberCheck=paramnum"");

        final DefaultConfiguration memberNameCheckConfig =
                createModuleConfig(MemberNameCheck.class);
        memberNameCheckConfig.addAttribute(""id"", ""ignore"");",config,configuration
Lcom/puppycrawl/tools/checkstyle/checks/imports/PkgImportControlTest;.testUnknownPkg()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/PkgImportControlTest.java;,MethodName,testUnknownPkg,"@Test
    public void testUnknownPkg() {
        assertNull(""Unexpected response"", icRoot.locateFinest(""net.another"", ""MyClass""));
    }",pkg,package
Lcom/puppycrawl/tools/checkstyle/api/TokenTypes;.INSTANCE_INIT)I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/utils/ScopeUtilsTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheckTest.java;,VariableName,INSTANCE_INIT,"TokenTypes.INTERFACE_DEF,
            TokenTypes.METHOD_DEF,
            TokenTypes.CTOR_DEF,
            TokenTypes.INSTANCE_INIT,
            TokenTypes.STATIC_INIT,
            TokenTypes.PACKAGE_DEF,
            TokenTypes.IMPORT,",init,initialization
Lcom/puppycrawl/tools/checkstyle/internal/XdocsPagesTest;.getSubSectionName(I)Ljava/lang/Object;#subSectionPos#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java;,ParameterName,subSectionPos,"Assert.assertEquals(fileName + "" section '"" + sectionName
                    + ""' should be in order"", getSubSectionName(subSectionPos),
                    subSectionName);
",pos,position
Lcom/puppycrawl/tools/checkstyle/AbstractModuleTestSupport;.createTreeWalkerConfig(Lcom/puppycrawl/tools/checkstyle/api/Configuration;)Lcom/puppycrawl/tools/checkstyle/DefaultConfiguration;#twConf,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/AbstractModuleTestSupport.java;,VariableName,twConf,"* @param config {@link Configuration} instance.
     * @return {@link DefaultConfiguration} for the {@link TreeWalker}
     *     based on the given {@link Configuration} instance.
     */
    protected static DefaultConfiguration createTreeWalkerConfig(Configuration config) {
        final DefaultConfiguration dc =
                new DefaultConfiguration(""configuration"");
        final DefaultConfiguration twConf = createModuleConfig(TreeWalker.class);",tw,tree walker
Lorg/eclipse/jgit/lib/BaseRepositoryBuilder<Lorg/eclipse/jgit/storage/file/FileRepositoryBuilder;Lorg/eclipse/jgit/lib/Repository;>;.findGitDir()Lorg/eclipse/jgit/storage/file/FileRepositoryBuilder;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/internal/CommitValidationTest.java;,MethodName,findGitDir,"private static List<RevCommit> getCommitsToCheck() throws Exception {
        final List<RevCommit> commits;
        try (Repository repo = new FileRepositoryBuilder().findGitDir().build()) {
            final RevCommitsPair revCommitsPair = resolveRevCommitsPair(repo);
            if (COMMITS_RESOLUTION_MODE == CommitsResolutionMode.BY_COUNTER) {
                commits = getCommitsByCounter(revCommitsPair.getFirst());",dir,directory
Lcom/puppycrawl/tools/checkstyle/utils/CommonUtilsTest;.testFileExtensions()V#pdfFile,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/utils/CommonUtilsTest.java;,VariableName,pdfFile,"public void testFileExtensions() {
        final String[] fileExtensions = {""java""};
        final File pdfFile = new File(""file.pdf"");
        assertFalse(""Invalid file extension"",
            CommonUtils.matchesFileExtension(pdfFile, fileExtensions));",pdf,portable document format
Lcom/puppycrawl/tools/checkstyle/api/TokenTypes;.CLASS_DEF)I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/design/FinalClassCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationOnSameLineCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/utils/ScopeUtilsTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/ModifiedControlVariableCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/modifier/RedundantModifierCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/ParameterAssignmentCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/design/InnerTypeLastCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/design/HideUtilityClassConstructorCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/xpath/ElementNodeTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/ReturnCountCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsJavaDocsTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingDeprecatedCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessageTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassFanOutComplexityCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/OuterTypeNumberCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/MethodCountCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/filters/XpathFilterTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionXpathFilterTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationLocationCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithPlainTextCommentFilterTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/CheckerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/utils/CheckUtilsTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/api/DetailASTTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/design/MutableExceptionCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/api/AbstractCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/xpath/XpathMapperTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTagInfoTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/OuterTypeFilenameCheckTest.java;,VariableName,CLASS_DEF,"    @Test
    public void testGetRequiredTokens() {
        final FinalClassCheck checkObj = new FinalClassCheck();
        final int[] expected = {TokenTypes.CLASS_DEF, TokenTypes.CTOR_DEF, TokenTypes.PACKAGE_DEF};
        assertArrayEquals(""Default required tokens are invalid"",
            expected, checkObj.getRequiredTokens());
    }",def,definition
Lcom/puppycrawl/tools/checkstyle/MainTest;.testLoadPropertiesIoException()V|Ljava/lang/Exception;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/MainTest.java;,MethodName,testLoadPropertiesIoException,"public void testLoadPropertiesIoException() throws Exception {
        final Class<?>[] param = new Class<?>[1];
        param[0] = File.class;
        final Method method = Main.class.getDeclaredMethod(""loadProperties"", param);",io,input output
Lcom/puppycrawl/tools/checkstyle/filters/SeverityMatchFilterTest;.testDefault()V#ev3,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/filters/SeverityMatchFilterTest.java;,VariableName,ev3,"final SeverityLevel infoLevel = SeverityLevel.INFO;
        final LocalizedMessage infoMessage =
                new LocalizedMessage(0, 0, """", """", null, infoLevel, null, getClass(), null);
        final AuditEvent ev3 = new AuditEvent(this, ""ATest.java"", infoMessage);
        assertFalse(""level:"" + infoLevel, filter.accept(ev3));",ev,event
Lcom/puppycrawl/tools/checkstyle/checks/naming/ParameterNameCheckTest;.testGetAcceptableTokens()V#parameterNameCheckObj,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/ParameterNameCheckTest.java;,VariableName,parameterNameCheckObj,"public void testGetAcceptableTokens() {
        final ParameterNameCheck parameterNameCheckObj = new ParameterNameCheck();
        final int[] actual = parameterNameCheckObj.getAcceptableTokens();
        final int[] expected = {
            TokenTypes.PARAMETER_DEF,
        };",obj,object
Lcom/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolderTest;.createHolder(Ljava/lang/String;IIII)Lcom/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder;|Ljava/lang/Exception;#entryConstr,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolderTest.java;,VariableName,entryConstr,"final Class<?> entry = Class
                .forName(""com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder$Entry"");
        final Constructor<?> entryConstr = entry.getDeclaredConstructor(String.class, int.class,
                int.class, int.class, int.class);
        entryConstr.setAccessible(true);",constr,constructor
Lcom/puppycrawl/tools/checkstyle/AbstractTreeTestSupport;.verifyJavaAndJavadocAst(Ljava/lang/String;Ljava/lang/String;)V|Ljava/lang/Exception;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/AstTreeStringPrinterTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/AbstractTreeTestSupport.java;,MethodName,verifyJavaAndJavadocAst,"public void testParseFileWithJavadoc3() throws Exception {
        verifyJavaAndJavadocAst(
                getPath(""ExpectedAstTreeStringPrinterAttributesAndMethodsJavadoc.txt""),
                getPath(""InputAstTreeStringPrinterAttributesAndMethodsJavadoc.java"")
        );
    }",ast,abstract syntax tree
Lcom/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAfterCheck;.MSG_WS_TYPECAST)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAfterCheckTest.java;,VariableName,MSG_WS_TYPECAST,"     configurationTestCast.addAttribute(""tokens"", ""TYPECAST"");
        final String[] expected = {
            ""88:21: "" + getCheckMessage(MSG_WS_TYPECAST),
        };
        verify(configurationTestCast, getPath(""InputWhitespaceAfterTypeCast.java""),
                expected);",msg,message
Lcom/puppycrawl/tools/checkstyle/grammars/AstRegressionTest;.verifyAstRaw(Ljava/lang/String;Ljava/lang/String;)V|Ljava/lang/Exception;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/grammars/AstRegressionTest.java;,MethodName,verifyAstRaw,"private static void verifyAstRaw(String expectedTextPrintFileName, String actualJava)
            throws Exception {
        verifyAstRaw(expectedTextPrintFileName, actualJava, JavaParser.Options.WITHOUT_COMMENTS);
    }",ast,abstract syntax tree
Lcom/puppycrawl/tools/checkstyle/checks/modifier/ModifierOrderCheckTest;.testGetAcceptableTokens()V#modifierOrderCheckObj,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/modifier/ModifierOrderCheckTest.java;,VariableName,modifierOrderCheckObj,"public void testGetDefaultTokens() {
        final ModifierOrderCheck modifierOrderCheckObj = new ModifierOrderCheck();
        final int[] actual = modifierOrderCheckObj.getDefaultTokens();
        final int[] expected = {TokenTypes.MODIFIERS};",obj,object
Lcom/puppycrawl/tools/checkstyle/internal/utils/AuditEventUtFormatter;.format(Lcom/puppycrawl/tools/checkstyle/api/AuditEvent;)Ljava/lang/String;#sb,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/internal/utils/AuditEventUtFormatter.java;,VariableName,sb,"// avoid StringBuffer.expandCapacity
        final int bufLen = event.getFileName().length() + event.getMessage().length()
            + LENGTH_OF_ALL_SEPARATORS;
        final StringBuilder sb = new StringBuilder(bufLen);

        sb.append(fileName).append(':').append(event.getLine());
        if (event.getColumn() > 0) {
            sb.append(':').append(event.getColumn());",sb,string builder
Lcom/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheck;.MSG_SHOULD_BE_SEPARATED)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheckTest.java;,VariableName,MSG_SHOULD_BE_SEPARATED,"final DefaultConfiguration checkConfig = createModuleConfig(EmptyLineSeparatorCheck.class);
        checkConfig.addAttribute(""allowMultipleEmptyLines"", ""false"");
        final String[] expected = {
            ""1: "" + getCheckMessage(MSG_SHOULD_BE_SEPARATED, ""import""),
        };
        verify(checkConfig, getPath(""InputEmptyLineSeparatorMultipleImportEmptyClass.java""),
            expected);",msg,message
Lcom/puppycrawl/tools/checkstyle/xpath/XpathMapperTest;.testQuerySelf()V|Ljava/lang/Exception;#methodsXpath,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/xpath/XpathMapperTest.java;,VariableName,methodsXpath,"final List<Item> objectNodes = getXpathItems(objectXpath, rootNode);
        assertEquals(""Invalid number of nodes"", 1, objectNodes.size());
        final AbstractNode objNode = (AbstractNode) objectNodes.get(0);
        final String methodsXpath = ""METHOD_DEF"";
        final List<Item> methodsNodes = getXpathItems(methodsXpath, objNode);
        assertEquals(""Invalid number of nodes"", 2, methodsNodes.size());
        final DetailAST[] actual = convertToArray(methodsNodes);",xpath,xml path language
Lcom/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheckTest;.testVariableRegExp()V|Ljava/lang/Exception;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheckTest.java;,MethodName,testVariableRegExp,"public void testVariableRegExp() throws Exception {
        final DefaultConfiguration checkConfig =
            createModuleConfig(VariableDeclarationUsageDistanceCheck.class);
        checkConfig.addAttribute(""allowedDistance"", ""1"");
        checkConfig.addAttribute(""ignoreVariablePattern"",",reg,regular
Lcom/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest;.testMultipleSuppression()V|Ljava/lang/Exception;#se1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest.java;,VariableName,se1,"final SuppressElement se1 =
                new SuppressElement(""file1"", ""check1"", null, null, ""1,2-3"", null);
        fc2.addFilter(se1);",se,suppress element
Lcom/puppycrawl/tools/checkstyle/internal/testmodules/DebugAuditAdapter;.getNumFilesStarted()I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/CheckerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/internal/testmodules/DebugAuditAdapter.java;,MethodName,getNumFilesStarted,"assertEquals(""There were more legal files than expected"",
                numLegalFiles, counter);
        assertEquals(""Audit was started on larger amount of files than expected"",
                numLegalFiles, auditAdapter.getNumFilesStarted());
        assertEquals(""Audit was finished on larger amount of files than expected"",
                numLegalFiles, auditAdapter.getNumFilesFinished());",num,number
Lcom/puppycrawl/tools/checkstyle/internal/AllChecksTest;.validateAllCheckTokensAreReferencedInConfigFile(Ljava/lang/String;Lcom/puppycrawl/tools/checkstyle/api/Configuration;Ljava/util/Map<Ljava/lang/String;Ljava/util/Set<Ljava/lang/String;>;>;)V|Ljava/lang/Exception;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/internal/AllChecksTest.java;,MethodName,validateAllCheckTokensAreReferencedInConfigFile,"    private static void validateAllCheckTokensAreReferencedInConfigFile(String configName,
            Configuration configuration, Map<String, Set<String>> tokensToIgnore) throws Exception {
        final ModuleFactory moduleFactory = TestUtil.getPackageObjectFactory();
        final Set<Configuration> configChecks = ConfigurationUtil.getChecks(configuration);",config,configuration
Lcom/puppycrawl/tools/checkstyle/utils/CommonUtilsTest;.testLengthExpandedTabs()V#s3,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/utils/CommonUtilsTest.java;,VariableName,s3,"final String s3 = ""\t\t"";
        assertEquals(""Invalid expanded tabs length"", 16,
            CommonUtils.lengthExpandedTabs(s3, s3.length(), 8));",s,string
Lcom/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheck;.MSG_CHILD_ERROR_MULTI)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java;,VariableName,MSG_CHILD_ERROR_MULTI,"if (expectedWarning.contains("","")) {
                expectedMessages = new String[] {
                    getExpectedMessagePostfix(MSG_ERROR_MULTI),
                    getExpectedMessagePostfix(MSG_CHILD_ERROR_MULTI),
                };
            }",multi,multiple
Lcom/puppycrawl/tools/checkstyle/internal/XdocsPagesTest;.isValidCheckstyleXml(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z|Ljava/io/IOException;|Lcom/puppycrawl/tools/checkstyle/api/CheckstyleException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java;,MethodName,isValidCheckstyleXml,"private static boolean isValidCheckstyleXml(String fileName, String code,
                                                String unserializedSource)
            throws IOException, CheckstyleException {
        // can't process non-existent examples, or out of context snippets
        if (!code.contains(""com.mycompany"") && !code.contains(""checkstyle-packages"")
                && !code.contains(""MethodLimit"") && !code.contains(""<suppress "")",xml,extensible markup language
Lcom/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest;.testXpathSuppressions()V|Ljava/lang/Exception;#xf0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest.java;,VariableName,xf0,"final Set<TreeWalkerFilter> expectedFilterSet = new HashSet<>();
        final XpathFilter xf0 =
                new XpathFilter(""file1"", ""test"", null, ""id1"", ""/CLASS_DEF"");
        expectedFilterSet.add(xf0);
        final XpathFilter xf1 =
                new XpathFilter(null, null, ""message1"", null, ""/CLASS_DEF"");",xf,xpath filter
Lcom/puppycrawl/tools/checkstyle/internal/XdocsPagesTest;.validatePropertySectionPropertyEx(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/util/List<Lorg/w3c/dom/Node;>;Ljava/lang/String;)V|Ljava/lang/Exception;#fieldClss,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java;,VariableName,fieldClss,"Assert.assertFalse(fileName + "" section '"" + sectionName + ""' should have a type for ""
                + propertyName, actualTypeName.isEmpty());

        final Field field = getField(instance.getClass(), propertyName);
        final Class<?> fieldClss = getFieldClass(fileName, sectionName, instance, field,
                propertyName);

        final String expectedTypeName = getModulePropertyExpectedTypeName(sectionName, fieldClss,
                instance, propertyName);",clss,class
Lcom/puppycrawl/tools/checkstyle/checks/imports/PkgImportControlTest;.testRegExpParentUnknownPkg()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/PkgImportControlTest.java;,MethodName,testRegExpParentUnknownPkg,"    @Test
    public void testRegExpParentUnknownPkg() {
        assertNull(""Package should not be null"",
                icRootRegexpParent.locateFinest(""net.another"", ""MyClass""));
    }",pkg,package
Lcom/puppycrawl/tools/checkstyle/filters/SuppressWithPlainTextCommentFilterTest;.testSuppressByModuleId()V|Ljava/lang/Exception;#fileTabCheckCfg,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithPlainTextCommentFilterTest.java;,VariableName,fileTabCheckCfg,"final DefaultConfiguration regexpCheckCfg = createModuleConfig(RegexpSinglelineCheck.class);
        regexpCheckCfg.addAttribute(""id"", ""ignore"");
        regexpCheckCfg.addAttribute(""format"", "".*[a-zA-Z][0-9].*"");

        final DefaultConfiguration fileTabCheckCfg =
            createModuleConfig(FileTabCharacterCheck.class);
        fileTabCheckCfg.addAttribute(""eachLine"", ""true"");
        fileTabCheckCfg.addAttribute(""id"", ""foo"");",cfg,configuration
Lcom/puppycrawl/tools/checkstyle/api/LocalizedMessage$Utf8Control;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/AbstractModuleTestSupport.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessageTest.java;,ClassName,Utf8Control,"final ResourceBundle resourceBundle = ResourceBundle.getBundle(
                messageBundle,
                Locale.getDefault(),
                Thread.currentThread().getContextClassLoader(),
                new LocalizedMessage.Utf8Control());
        final String pattern = resourceBundle.getString(messageKey);
        final MessageFormat formatter = new MessageFormat(pattern, Locale.ROOT);
        return formatter.format(arguments);",utf,unicode transformation format
Lcom/puppycrawl/tools/checkstyle/checks/imports/PkgImportControlTest;.icRootRegexpParent)Lcom/puppycrawl/tools/checkstyle/checks/imports/PkgImportControl;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/PkgImportControlTest.java;,FieldName,icRootRegexpParent,"private final PkgImportControl icCommonRegexpChild = new PkgImportControl(icRootRegexpChild,
            ""common"", false, MismatchStrategy.DELEGATE_TO_PARENT);

    private final PkgImportControl icRootRegexpParent = new PkgImportControl(
            ""com\\.[^.]+\\.courtlink"", true, MismatchStrategy.DELEGATE_TO_PARENT);
    private final PkgImportControl icBootRegexpParen = new PkgImportControl(icRootRegexpParent,
            ""bo+t"", true, MismatchStrategy.DELEGATE_TO_PARENT);",regexp,regular expression
Lcom/puppycrawl/tools/checkstyle/internal/utils/XpathUtil;.getXpathItems(Ljava/lang/String;Lcom/puppycrawl/tools/checkstyle/xpath/AbstractNode;)Ljava/util/List<Lnet/sf/saxon/om/Item;>;|Lnet/sf/saxon/trans/XPathException;#xpathDynamicContext,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/internal/utils/XpathUtil.java;,VariableName,xpathDynamicContext,"final XPathEvaluator xpathEvaluator = new XPathEvaluator();
        final XPathExpression xpathExpression = xpathEvaluator.createExpression(xpath);
        final XPathDynamicContext xpathDynamicContext = xpathExpression
                .createDynamicContext(rootNode);
        return xpathExpression.evaluate(xpathDynamicContext);",xpath,xml path language
Lcom/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheck;.MSG_ERROR_MULTI)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java;,VariableName,MSG_ERROR_MULTI,"        ""28: "" + getCheckMessage(MSG_ERROR, ""member def type"", 6, 4),
            ""29: "" + getCheckMessage(MSG_CHILD_ERROR, ""array initialization"", 8, 10),
            ""30: "" + getCheckMessage(MSG_ERROR_MULTI, ""array initialization rcurly"", 4, ""6, 10""),
            ""33: "" + getCheckMessage(MSG_CHILD_ERROR, ""array initialization"", 9, 8),
            ""34: "" + getCheckMessage(MSG_CHILD_ERROR, ""array initialization"", 7, 8),",msg,message
Lcom/puppycrawl/tools/checkstyle/filters/SuppressionFilterTest;.testRemoteFileExternalResourceContentDoesNotChange()V|Ljava/lang/Exception;#1#firstCheckerConfig,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionFilterTest.java;,VariableName,firstCheckerConfig,"firstFilterConfig.addAttribute(""file"", urlForTest);

            final DefaultConfiguration firstCheckerConfig = createRootConfig(firstFilterConfig);
            final File cacheFile = temporaryFolder.newFile();
            firstCheckerConfig.addAttribute(""cacheFile"", cacheFile.getPath());",config,configuration
Ljava/nio/charset/StandardCharsets;.UTF_8)Ljava/nio/charset/Charset;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/AbstractModuleTestSupport.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/AbstractPathTestSupport.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/TranslationCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/TreeWalkerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/AstTreeStringPrinterTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/xpath/XpathQueryGeneratorTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsJavaDocsTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/MainTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/ant/CheckstyleAntTaskTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/DefaultLoggerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/JavadocDetailNodeParserTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/WriteTagCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/filters/XpathFilterTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/api/FullIdentTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/grammars/AstRegressionTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/JavadocPropertiesGeneratorTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/CheckerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/api/DetailASTTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/AbstractXmlTestSupport.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpMultilineCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheckTest.java;,VariableName,UTF_8,"final DefaultConfiguration twConf = createModuleConfig(TreeWalker.class);
        // make sure that the tests always run with this charset
        dc.addAttribute(""charset"", StandardCharsets.UTF_8.name());
        dc.addChild(twConf);
        twConf.addChild(config);",utf,unicode transformation format
Lcom/puppycrawl/tools/checkstyle/checks/sizes/ParameterNumberCheckTest;.testMaxParam()V|Ljava/lang/Exception;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/ParameterNumberCheckTest.java;,MethodName,testMaxParam,"public void testMaxParam()
            throws Exception {
        final DefaultConfiguration checkConfig =
                createModuleConfig(ParameterNumberCheck.class);",param,parameter
Lcom/puppycrawl/tools/checkstyle/JavadocDetailNodeParser;.MSG_JAVADOC_WRONG_SINGLETON_TAG)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/DetailNodeTreeStringPrinterTest.java;,VariableName,MSG_JAVADOC_WRONG_SINGLETON_TAG,"public void testWrongSingletonParseErrorMessage() throws Exception {
        final String actual = (String) GET_PARSE_ERROR_MESSAGE.invoke(null,
                new ParseErrorMessage(100, MSG_JAVADOC_WRONG_SINGLETON_TAG,
                        9, ""tag""));
        final LocalizedMessage localizedMessage = new LocalizedMessage(
                100,
                ""com.puppycrawl.tools.checkstyle.checks.javadoc.messages"",
                MSG_JAVADOC_WRONG_SINGLETON_TAG,
                new Object[] {9, ""tag""},
                """",
                DetailNodeTreeStringPrinter.class,
                null);",msg,message
Lcom/puppycrawl/tools/checkstyle/internal/CommitValidationTest;.PR_COMMIT_MESSAGE_REGEX_PATTERN)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/internal/CommitValidationTest.java;,FieldName,PR_COMMIT_MESSAGE_REGEX_PATTERN,"private static final String ISSUE_COMMIT_MESSAGE_REGEX_PATTERN = ""^Issue #\\d+: .*$"";
    private static final String PR_COMMIT_MESSAGE_REGEX_PATTERN = ""^Pull #\\d+: .*$"";
    private static final String OTHER_COMMIT_MESSAGE_REGEX_PATTERN =
            ""^(minor|config|infra|doc|spelling): .*$"";",pr,pattern
Lcom/puppycrawl/tools/checkstyle/ConfigurationLoaderTest;.verifyConfigNode(Lcom/puppycrawl/tools/checkstyle/DefaultConfiguration;Ljava/lang/String;ILjava/util/Properties;)V|Ljava/lang/Exception;#attNames,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java;,VariableName,attNames,"assertEquals(
            ""children.length."",
            childrenLength,
            config.getChildren().length);

        final String[] attNames = config.getAttributeNames();
        assertEquals(""attributes.length"", atts.size(), attNames.length);",att,attribute
Lcom/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineJavaCheckTest;.testIgnoreCommentsCppStyle()V|Ljava/lang/Exception;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineJavaCheckTest.java;,MethodName,testIgnoreCommentsCppStyle,"public void testIgnoreCommentsCppStyle() throws Exception {
        final DefaultConfiguration checkConfig =
                createModuleConfig(RegexpSinglelineJavaCheck.class);
        // See if the comment is removed properly
        checkConfig.addAttribute(""format"", ""don't use trailing comments"");",cpp,c plus plus
Lcom/puppycrawl/tools/checkstyle/JavadocDetailNodeParserTest;.OS_NAME)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/JavadocDetailNodeParserTest.java;,FieldName,OS_NAME,"public class JavadocDetailNodeParserTest extends AbstractModuleTestSupport {

    private static final String OS_NAME = System.getProperty(""os.name"").toLowerCase(ENGLISH);

    @Override
    protected String getPackageLocation() {
        return ""com/puppycrawl/tools/checkstyle/javadocdetailnodeparser"";",os,operating system
Lcom/puppycrawl/tools/checkstyle/MainTest;.testExistingDirectoryWithViolations()V|Ljava/lang/Exception;#msgKey,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/MainTest.java;,VariableName,msgKey,"final String[][] outputValues = {
                {""InputMainComplexityOverflow"", ""1"", ""172""},
        };

        final int allowedLength = 170;
        final String msgKey = ""maxLen.file"";
        final String bundle = ""com.puppycrawl.tools.checkstyle.checks.sizes.messages"";",msg,message
Lcom/puppycrawl/tools/checkstyle/checks/imports/PkgImportRuleTest;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/PkgImportRuleTest.java;,ClassName,PkgImportRuleTest,"public class PkgImportRuleTest {

    @Test
    public void testPkgImportRule() {
        final PkgImportRule rule = new PkgImportRule(true, false, ""pkg"", false, false);",pkg,package
Lcom/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck;.MSG_KEY_EXT)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheckTest.java;,VariableName,MSG_KEY_EXT,"ckConfig.addAttribute(""ignoreFinal"", ""true"");
        final String[] expected = {
            ""30: "" + getCheckMessage(MSG_KEY_EXT, ""a"", 2, 1),
            ""38: "" + getCheckMessage(MSG_KEY_EXT, ""temp"", 2, 1),",ext,expected
Lcom/puppycrawl/tools/checkstyle/AstTreeStringPrinterTest;.testPrintAst()V|Ljava/lang/Exception;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/AstTreeStringPrinterTest.java;,MethodName,testPrintAst,"public void testPrintAst() throws Exception {
        final FileText text = new FileText(
                new File(getPath(""InputAstTreeStringPrinterComments.java"")).getAbsoluteFile(),
                System.getProperty(""file.encoding"", StandardCharsets.UTF_8.name()));",ast,abstract syntax tree
Lcom/puppycrawl/tools/checkstyle/utils/CommonUtilsTest;.testLengthExpandedTabs()V#s2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/utils/CommonUtilsTest.java;,VariableName,s2," final String s1 = ""\t"";
        assertEquals(""Invalid expanded tabs length"", 8,
            CommonUtils.lengthExpandedTabs(s1, s1.length(), 8));

        final String s2 = ""  \t"";
        assertEquals(""Invalid expanded tabs length"", 8,
            CommonUtils.lengthExpandedTabs(s2, s2.length(), 8));",s,string
Lcom/puppycrawl/tools/checkstyle/checks/javadoc/JavadocPackageCheck;.MSG_LEGACY_PACKAGE_HTML)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocPackageCheckTest.java;,VariableName,MSG_LEGACY_PACKAGE_HTML,"        final Configuration checkConfig = createModuleConfig(JavadocPackageCheck.class);
        final String[] expected = {
            ""0: "" + getCheckMessage(MSG_LEGACY_PACKAGE_HTML),
        };
        verify(createChecker(checkConfig),",html,hyper text markup language
Lcom/puppycrawl/tools/checkstyle/PackageNamesLoaderTest;.testPackagesWithIoExceptionGetResources()V|Ljava/lang/Exception;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/PackageNamesLoaderTest.java;,MethodName,testPackagesWithIoExceptionGetResources,"public void testPackagesWithIoExceptionGetResources() throws Exception {
        final ClassLoader classLoader = mock(ClassLoader.class);
        when(classLoader.getResources(""checkstyle_packages.xml"")).thenThrow(IOException.class);

        try {",io,input output
Lcom/puppycrawl/tools/checkstyle/internal/XdocsJavaDocsTest$JavaDocCapture;.makeFirstLower(Ljava/lang/String;)Ljava/lang/String;#str#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsJavaDocsTest.java;,ParameterName,str,"private static String makeFirstUpper(String str) {
            final char ch = str.charAt(0);
            final String result;",str,string
Lcom/puppycrawl/tools/checkstyle/filters/SeverityMatchFilterTest;.testAcceptOnMatch()V#ev2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/filters/SeverityMatchFilterTest.java;,VariableName,ev2,"final LocalizedMessage errorMessage =
            new LocalizedMessage(0, 0, """", """", null,
                errorLevel, null, getClass(), null);
        final AuditEvent ev2 = new AuditEvent(this, ""ATest.java"", errorMessage);
        assertTrue(""level:"" + errorLevel, filter.accept(ev2));
        final SeverityLevel infoLevel = SeverityLevel.INFO;",ev,event
Lcom/puppycrawl/tools/checkstyle/api/TokenTypes;.VARIABLE_DEF)I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/MemberNameCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationOnSameLineCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/LocalVariableNameCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/utils/ScopeUtilsTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/filters/XpathFilterTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/api/FullIdentTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/modifier/RedundantModifierCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/StaticVariableNameCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationLocationCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/LocalFinalVariableNameCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocVariableCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/utils/CheckUtilsTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsJavaDocsTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/design/MutableExceptionCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingDeprecatedCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/xpath/XpathMapperTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTagInfoTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/ConstantNameCheckTest.java;,VariableName,VARIABLE_DEF,"    public void testGetRequiredTokens() {
        final MemberNameCheck checkObj = new MemberNameCheck();
        final int[] expected = {TokenTypes.VARIABLE_DEF};
        assertArrayEquals(""Default required tokens are invalid"",
            expected, checkObj.getRequiredTokens());
    }",def,definition
Lcom/puppycrawl/tools/checkstyle/checks/sizes/ParameterNumberCheckTest;.testGetAcceptableTokens()V#paramNumberCheckObj,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/ParameterNumberCheckTest.java;,VariableName,paramNumberCheckObj,"public void testGetAcceptableTokens() {
        final ParameterNumberCheck paramNumberCheckObj =
            new ParameterNumberCheck();
        final int[] actual = paramNumberCheckObj.getAcceptableTokens();
        final int[] expected = {
            TokenTypes.METHOD_DEF,
            TokenTypes.CTOR_DEF,
        };",param,parameter
Ljava/nio/charset/StandardCharsets;.ISO_8859_1)Ljava/nio/charset/Charset;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/api/FileTextTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/TreeWalkerTest.java;,VariableName,ISO_8859_1,"blic void testLineColumnBeforeCopyConstructor() throws IOException {
        final String charsetName = StandardCharsets.ISO_8859_1.name();
        final FileText fileText = new FileText(new File(getPath(""InputFileTextImportControl.xml"")),
                charsetName);
        final LineColumn lineColumn = fileText.lineColumn(100);
        final FileText copy = new FileText(fileText);",iso,international organization for standardization
Lcom/puppycrawl/tools/checkstyle/internal/CommitValidationTest;.getCommitsToCheck()Ljava/util/List<Lorg/eclipse/jgit/revwalk/RevCommit;>;|Ljava/lang/Exception;#0#0#repo,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/internal/CommitValidationTest.java;,VariableName,repo,"private static List<RevCommit> getCommitsToCheck() throws Exception {
        final List<RevCommit> commits;
        try (Repository repo = new FileRepositoryBuilder().findGitDir().build()) {
            final RevCommitsPair revCommitsPair = resolveRevCommitsPair(repo);
            if (COMMITS_RESOLUTION_MODE == CommitsResolutionMode.BY_COUNTER) {
                commits = getCommitsByCounter(revCommitsPair.getFirst());",repo,repository
Lcom/puppycrawl/tools/checkstyle/checks/coding/EqualsHashCodeCheck;.MSG_KEY_EQUALS)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsHashCodeCheckTest.java;,VariableName,MSG_KEY_EQUALS,"    public void testNoEquals() throws Exception {
        final DefaultConfiguration checkConfig =
            createModuleConfig(EqualsHashCodeCheck.class);
        final String[] expected = {
            ""4:5: "" + getCheckMessage(MSG_KEY_EQUALS),
        };
        verify(checkConfig, getPath(""InputEqualsHashCodeNoEquals.java""), expected);
    }",msg,message
Lcom/puppycrawl/tools/checkstyle/checks/imports/PkgImportControlTest;.icRootRegexpParent)Lcom/puppycrawl/tools/checkstyle/checks/imports/PkgImportControl;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/PkgImportControlTest.java;,FieldName,icRootRegexpParent,"private final PkgImportControl icCommonRegexpChild = new PkgImportControl(icRootRegexpChild,
            ""common"", false, MismatchStrategy.DELEGATE_TO_PARENT);

    private final PkgImportControl icRootRegexpParent = new PkgImportControl(
            ""com\\.[^.]+\\.courtlink"", true, MismatchStrategy.DELEGATE_TO_PARENT);
    private final PkgImportControl icBootRegexpParen = new PkgImportControl(icRootRegexpParent,
            ""bo+t"", true, MismatchStrategy.DELEGATE_TO_PARENT);",ic,import control
Lcom/puppycrawl/tools/checkstyle/checks/coding/PackageDeclarationCheckTest;.testFileIgnoreDiffDirectoryMismatch()V|Ljava/lang/Exception;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/PackageDeclarationCheckTest.java;,MethodName,testFileIgnoreDiffDirectoryMismatch,"    public void testFileIgnoreDiffDirectoryMismatch() throws Exception {
        final DefaultConfiguration checkConfig = createModuleConfig(PackageDeclarationCheck.class);
        checkConfig.addAttribute(""matchDirectoryStructure"", ""false"");
        final String[] expected = CommonUtils.EMPTY_STRING_ARRAY;

        verify(checkConfig, getPath(""InputPackageDeclarationDiffDirectory.java""), expected);
    }",diff,difference
Lcom/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheckTest;.testGetAcceptableTokens()V#whitespaceAroundCheckObj,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheckTest.java;,VariableName,whitespaceAroundCheckObj,"public void testGetAcceptableTokens() {
        final WhitespaceAroundCheck whitespaceAroundCheckObj = new WhitespaceAroundCheck();
        final int[] actual = whitespaceAroundCheckObj.getAcceptableTokens();
        final int[] expected = {
            TokenTypes.ASSIGN,",obj,object
Lcom/puppycrawl/tools/checkstyle/api/TokenTypes;.PARAMETER_DEF)I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/LocalFinalVariableNameCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/ParameterNameCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationOnSameLineCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/utils/CheckUtilsTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/utils/ScopeUtilsTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsJavaDocsTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTagInfoTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/CatchParameterNameCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationLocationCheckTest.java;,VariableName,PARAMETER_DEF,"        final int[] expected = {
            TokenTypes.VARIABLE_DEF,
            TokenTypes.PARAMETER_DEF,
            TokenTypes.RESOURCE,
        };
        assertArrayEquals(""Default acceptable tokens are invalid"", expected, actual);",def,definition
Lcom/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest;.testMultipleSuppression()V|Ljava/lang/Exception;#se3,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest.java;,VariableName,se3,"       final SuppressElement se2 =
                new SuppressElement(""file2"", ""check2"", null, null, null, ""1,2-3"");
        fc2.addFilter(se2);
        final SuppressElement se3 =
                new SuppressElement(""file3"", ""check3"", null, null, ""1,2-3"", ""1,2-3"");
        fc2.addFilter(se3);
        final SuppressElement se4 =
                new SuppressElement(null, null, ""message0"", null, null, null);",se,suppress element
Lcom/puppycrawl/tools/checkstyle/checks/sizes/ParameterNumberCheckTest;.testNum()V|Ljava/lang/Exception;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/ParameterNumberCheckTest.java;,MethodName,testNum,"public void testNum()
            throws Exception {
        final DefaultConfiguration checkConfig =
            createModuleConfig(ParameterNumberCheck.class);
        checkConfig.addAttribute(""max"", ""2"");
        final String[] expected = {
            ""71:9: "" + getCheckMessage(MSG_KEY, 2, 3),
            ""194:10: "" + getCheckMessage(MSG_KEY, 2, 9),
        };",num,number
Lcom/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest;.testXpathSuppressions()V|Ljava/lang/Exception;#xf1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest.java;,VariableName,xf1,"final XpathFilter xf0 =
                new XpathFilter(""file1"", ""test"", null, ""id1"", ""/CLASS_DEF"");
        expectedFilterSet.add(xf0);
        final XpathFilter xf1 =
                new XpathFilter(null, null, ""message1"", null, ""/CLASS_DEF"");
        expectedFilterSet.add(xf1);
        assertEquals(""Multiple xpath suppressions were loaded incorrectly"", expectedFilterSet,
                filterSet);",xf,xpath filter
Lcom/puppycrawl/tools/checkstyle/grammars/HexFloatsTest;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/grammars/HexFloatsTest.java;,ClassName,HexFloatsTest,"public class HexFloatsTest
    extends AbstractModuleTestSupport {

    @Override
    protected String getPackageLocation() {
        return ""com/puppycrawl/tools/checkstyle/grammars"";
    }",hex,hexadecimal
Lcom/puppycrawl/tools/checkstyle/checks/sizes/ExecutableStatementCountCheckTest;.testMaxZero()V|Ljava/lang/Exception;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/ExecutableStatementCountCheckTest.java;,MethodName,testMaxZero,"    public void testMaxZero() throws Exception {
        final DefaultConfiguration checkConfig =
            createModuleConfig(ExecutableStatementCountCheck.class);

        checkConfig.addAttribute(""max"", ""0"");",max,maximum
Lcom/puppycrawl/tools/checkstyle/ConfigurationLoaderTest;.testIncorrectTag()V|Ljava/lang/Exception;#0#0#ctorParent,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java;,VariableName,ctorParent,"public void testIncorrectTag() throws Exception {
        try {
            final Class<?> aClassParent = ConfigurationLoader.class;
            final Constructor<?> ctorParent = aClassParent.getDeclaredConstructor(
                    PropertyResolver.class, boolean.class, ThreadModeSettings.class);
            ctorParent.setAccessible(true);
            final Object objParent = ctorParent.newInstance(null, true, null);",ctor,constructor
Lcom/puppycrawl/tools/checkstyle/utils/TokenUtilsTest;.testTokenValueIncorrect()V|Ljava/lang/IllegalAccessException;#maxId,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/utils/TokenUtilsTest.java;,VariableName,maxId,"public void testTokenValueIncorrect() throws IllegalAccessException {
        int maxId = 0;
        final Field[] fields = TokenTypes.class.getDeclaredFields();
        for (final Field field : fields) {
            // Only process the int declarations.",max,maximum
Lcom/puppycrawl/tools/checkstyle/internal/utils/TestUtil;.getPackageObjectFactory()Lcom/puppycrawl/tools/checkstyle/PackageObjectFactory;|Lcom/puppycrawl/tools/checkstyle/api/CheckstyleException;#cl,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/internal/utils/TestUtil.java;,VariableName,cl,"* Returns the default PackageObjectFactory with the default package names.
     * @return the default PackageObjectFactory.
     */
    public static PackageObjectFactory getPackageObjectFactory() throws CheckstyleException {
        final ClassLoader cl = TestUtil.class.getClassLoader();
        final Set<String> packageNames = PackageNamesLoader.getPackageNames(cl);
        return new PackageObjectFactory(packageNames, cl);
    }",cl,class
Lcom/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheckTest;.testVariableRegExp()V|Ljava/lang/Exception;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheckTest.java;,MethodName,testVariableRegExp," public void testVariableRegExp() throws Exception {
        final DefaultConfiguration checkConfig =
            createModuleConfig(VariableDeclarationUsageDistanceCheck.class);
        checkConfig.addAttribute(""allowedDistance"", ""1"");
        checkConfig.addAttribute(""ignoreVariablePattern"",
                ""a|b|c|d|block|dist|t|m"");",exp,expression
Lcom/puppycrawl/tools/checkstyle/filters/SuppressionFilterTest;.testRemoteFileExternalResourceContentDoesNotChange()V|Ljava/lang/Exception;#1#secondCheckerConfig,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionFilterTest.java;,VariableName,secondCheckerConfig,"// -@cs[CheckstyleTestMakeup] need to test dynamic property
            secondFilterConfig.addAttribute(""file"", urlForTest);

            final DefaultConfiguration secondCheckerConfig = createRootConfig(secondFilterConfig);
            secondCheckerConfig.addAttribute(""cacheFile"", cacheFile.getPath());

            verify(secondCheckerConfig, pathToEmptyFile, expected);",config,configuration
Lcom/puppycrawl/tools/checkstyle/checks/modifier/RedundantModifierCheckTest;.testGetAcceptableTokens()V#redundantModifierCheckObj,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/modifier/RedundantModifierCheckTest.java;,VariableName,redundantModifierCheckObj,"public void testGetAcceptableTokens() {
        final RedundantModifierCheck redundantModifierCheckObj = new RedundantModifierCheck();
        final int[] actual = redundantModifierCheckObj.getAcceptableTokens();
        final int[] expected = {
            TokenTypes.METHOD_DEF,
            TokenTypes.VARIABLE_DEF,
            TokenTypes.ANNOTATION_FIELD_DEF,
            TokenTypes.INTERFACE_DEF,
            TokenTypes.CTOR_DEF,
            TokenTypes.CLASS_DEF,
            TokenTypes.ENUM_DEF,
            TokenTypes.RESOURCE,
        };",obj,object
Lcom/puppycrawl/tools/checkstyle/internal/testmodules/TestRootModuleChecker;.getConfig()Lcom/puppycrawl/tools/checkstyle/api/Configuration;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/internal/testmodules/TestRootModuleChecker.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/MainTest.java;,MethodName,getConfig,"   public static List<File> getFilesToCheck() {
        return Collections.unmodifiableList(filesToCheck);
    }

    public static Configuration getConfig() {
        return config;
    }",config,configuration
Lcom/puppycrawl/tools/checkstyle/grammars/javadoc/JavadocParseTreeTest;.oneSimpleHtmlTag()V|Ljava/lang/Exception;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/grammars/javadoc/JavadocParseTreeTest.java;,MethodName,oneSimpleHtmlTag,"    public void oneSimpleHtmlTag() throws Exception {
        verifyJavadocTree(getHtmlPath(""expectedOneSimpleHtmlTagAst.txt""),
                getHtmlPath(""InputOneSimpleHtmlTag.javadoc""));
    }",html,hyper text markup language
Lcom/puppycrawl/tools/checkstyle/TreeWalkerTest;.testAcceptableTokens()V|Ljava/lang/Exception;#0#1#errorMsg,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/TreeWalkerTest.java;,VariableName,errorMsg," fail(""CheckstyleException is expected"");
        }
        catch (CheckstyleException ex) {
            final String errorMsg = ex.getMessage();
            final Pattern expected = Pattern.compile(Pattern.quote(""cannot initialize module""
                    + "" com.puppycrawl.tools.checkstyle.TreeWalker - Token "")
                    + ""\""(ENUM_DEF|CLASS_DEF|METHOD_DEF|IMPORT)\""""
                    + Pattern.quote("" was not found in Acceptable tokens list in check""
                    + "" com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck""));",msg,message
Lcom/puppycrawl/tools/checkstyle/TreeWalkerTest$VerifyInitCheck;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/TreeWalkerTest.java;,ClassName,VerifyInitCheck,"private static class VerifyInitCheck extends AbstractCheck {

        private static boolean initWasCalled;

        @Override
        public int[] getDefaultTokens() {
            return CommonUtils.EMPTY_INT_ARRAY;
        }",init,initialization
Lcom/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheck;.MSG_UNKNOWN_PKG)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheckTest.java;,VariableName,MSG_UNKNOWN_PKG,"    public void testWrong() throws Exception {
        final DefaultConfiguration checkConfig = createModuleConfig(ImportControlCheck.class);
        checkConfig.addAttribute(""file"", getPath(""InputImportControlWrong.xml""));
        final String[] expected = {""1:1: "" + getCheckMessage(MSG_UNKNOWN_PKG)};
        verify(checkConfig, getPath(""InputImportControl.java""), expected);
    }",pkg,package
Lcom/puppycrawl/tools/checkstyle/checks/whitespace/FileTabCharacterCheck;.MSG_CONTAINS_TAB)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/FileTabCharacterCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithPlainTextCommentFilterTest.java;,VariableName,MSG_CONTAINS_TAB,"final DefaultConfiguration checkConfig =
                createModuleConfig(FileTabCharacterCheck.class);
        checkConfig.addAttribute(""eachLine"", ""true"");
        final String[] expected = {
            ""19:25: "" + getCheckMessage(MSG_CONTAINS_TAB),
            ""145:35: "" + getCheckMessage(MSG_CONTAINS_TAB),
            ""146:64: "" + getCheckMessage(MSG_CONTAINS_TAB),
            ""154:9: "" + getCheckMessage(MSG_CONTAINS_TAB),
            ""155:10: "" + getCheckMessage(MSG_CONTAINS_TAB),
            ""156:1: "" + getCheckMessage(MSG_CONTAINS_TAB),
            ""157:3: "" + getCheckMessage(MSG_CONTAINS_TAB),
            ""158:3: "" + getCheckMessage(MSG_CONTAINS_TAB),
        };",msg,message
Lcom/puppycrawl/tools/checkstyle/ant/CheckstyleAntTaskTest;.testSetClasspathRef1()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/ant/CheckstyleAntTaskTest.java;,MethodName,testSetClasspathRef1,"/** This test is created to satisfy pitest, it is hard to emulate Reference by Id. */
    @Test
    public void testSetClasspathRef1() {
        final CheckstyleAntTask antTask = new CheckstyleAntTask();
        final Project project = new Project();
        antTask.setClasspath(new Path(project, ""firstPath""));
        antTask.setClasspathRef(new Reference(project, ""idXX""));",ref,reference
Lcom/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest;.testMultipleSuppression()V|Ljava/lang/Exception;#se2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest.java;,VariableName,se2,"   fc2.addFilter(se1);
        final SuppressElement se2 =
                new SuppressElement(""file2"", ""check2"", null, null, null, ""1,2-3"");
        fc2.addFilter(se2);",se,suppress element
Lcom/puppycrawl/tools/checkstyle/api/TokenTypes;.INTERFACE_DEF)I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationOnSameLineCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/utils/ScopeUtilsTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/modifier/RedundantModifierCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/design/InnerTypeLastCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingDeprecatedCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/design/InterfaceIsTypeCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/BooleanExpressionComplexityCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassFanOutComplexityCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/OuterTypeNumberCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/MethodCountCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationLocationCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/design/MutableExceptionCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/api/AbstractCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/xpath/XpathMapperTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTagInfoTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/OuterTypeFilenameCheckTest.java;,VariableName,INTERFACE_DEF,"        final int[] expected = {
            TokenTypes.CLASS_DEF,
            TokenTypes.INTERFACE_DEF,
            TokenTypes.ENUM_DEF,
            TokenTypes.METHOD_DEF,
            TokenTypes.CTOR_DEF,
            TokenTypes.VARIABLE_DEF,
            TokenTypes.PARAMETER_DEF,
            TokenTypes.ANNOTATION_DEF,
            TokenTypes.TYPECAST,
            TokenTypes.LITERAL_THROWS,
            TokenTypes.IMPLEMENTS_CLAUSE,
            TokenTypes.TYPE_ARGUMENT,
            TokenTypes.LITERAL_NEW,
            TokenTypes.DOT,
            TokenTypes.ANNOTATION_FIELD_DEF,
        };",def,definition
Lcom/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest;.testWithSumLessThenMinDefMsg()V|Ljava/lang/Exception;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java;,MethodName,testWithSumLessThenMinDefMsg,"    public void testWithSumLessThenMinDefMsg() throws Exception {
        final DefaultConfiguration checkConfig = createModuleConfig(DescendantTokenCheck.class);
        checkConfig.addAttribute(""tokens"", ""NOT_EQUAL,EQUAL"");
        checkConfig.addAttribute(""limitedTokens"", ""LITERAL_THIS,LITERAL_NULL"");",msg,message
Lcom/puppycrawl/tools/checkstyle/internal/utils/TestUtil;.findTokenInAstByPredicate(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;Ljava/util/function/Predicate<Lcom/puppycrawl/tools/checkstyle/api/DetailAST;>;)Ljava/util/Optional<Lcom/puppycrawl/tools/checkstyle/api/DetailAST;>;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/utils/CheckUtilsTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/SuperCloneCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/ReturnCountCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/ModifiedControlVariableCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/ParameterAssignmentCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/JavaParserTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/internal/utils/TestUtil.java;,MethodName,findTokenInAstByPredicate,"    private static DetailAST getNode(DetailAST root, int type) {
        final Optional<DetailAST> node = findTokenInAstByPredicate(root,
            ast -> ast.getType() == type);

        if (!node.isPresent()) {
            fail(""Cannot find node of specified type: "" + type);",ast,abstract syntax tree
Lcom/puppycrawl/tools/checkstyle/api/FullIdent;.createFullIdent(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)Lcom/puppycrawl/tools/checkstyle/api/FullIdent;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/api/FullIdentTest.java;,MethodName,createFullIdent,"        ast.setLineNo(15);
        ast.setText(""MyTest"");

        final FullIdent indent = FullIdent.createFullIdent(ast);
        Assert.assertEquals(""Invalid full indent"", ""MyTest[15x14]"", indent.toString());
    }",ident,indent
Lcom/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheckTest;.testNullClassLoader()V|Ljava/lang/Exception;#newAst,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheckTest.java;,VariableName,newAst,"public void testNullClassLoader() throws Exception {
        final DetailAST exprAst = new DetailAST();
        exprAst.setType(TokenTypes.EXPR);

        final DetailAST newAst = new DetailAST();
        newAst.setType(TokenTypes.LITERAL_NEW);
        newAst.setLineNo(1);
        newAst.setColumnNo(1);",ast,abstract syntax tree
Lcom/puppycrawl/tools/checkstyle/filters/CsvFilterTest;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/filters/CsvFilterTest.java;,ClassName,CsvFilterTest,"public class CsvFilterTest {

    @Test
    public void testDecideSingle() {
        final IntFilter filter = new CsvFilter(""0"");
        assertFalse(""less than"", filter.accept(-1));",csv,comma separated values
Lcom/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest;.testWithOneArgWithFullBody()V|Ljava/lang/Exception;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java;,MethodName,testWithOneArgWithFullBody,"    public void testWithOneArgWithFullBody()
            throws Exception {
        final DefaultConfiguration checkConfig =
                createModuleConfig(MemberNameCheck.class);
        final String[] expected = CommonUtils.EMPTY_STRING_ARRAY;
        verify(checkConfig, getPath(""InputLambda5.java""), expected);
    }",arg,argument
Lcom/puppycrawl/tools/checkstyle/api/TokenTypesTest;.lambda$0(Ljava/lang/String;)Z#desc#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/api/TokenTypesTest.java;,VariableName,desc,"    public void testAllDescriptionsEndsWithPeriod() {
        final Set<String> badDescriptions = Arrays.stream(TokenUtils.getAllTokenIds())
            .mapToObj(TokenUtils::getTokenName).map(TokenUtils::getShortDescription)
            .filter(desc -> desc.charAt(desc.length() - 1) != '.').collect(Collectors.toSet());
        assertEquals(""Malformed TokenType descriptions"", Collections.emptySet(), badDescriptions);
    }",desc,descriptions
Lcom/puppycrawl/tools/checkstyle/AbstractModuleTestSupport;.createRootConfig(Lcom/puppycrawl/tools/checkstyle/api/Configuration;)Lcom/puppycrawl/tools/checkstyle/DefaultConfiguration;#dc,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/AbstractModuleTestSupport.java;,VariableName,dc,"        final Checker checker = new Checker();
        checker.setModuleClassLoader(Thread.currentThread().getContextClassLoader());

        if (moduleCreationOption == ModuleCreationOption.IN_TREEWALKER) {
            final Configuration dc = createTreeWalkerConfig(moduleConfig);
            checker.configure(dc);
        }
        else if (ROOT_MODULE_NAME.equals(moduleConfig.getName())) {",dc,default configuration
Lcom/puppycrawl/tools/checkstyle/filters/SuppressionFilterTest;.testRemoteFileExternalResourceContentDoesNotChange()V|Ljava/lang/Exception;#1#firstFilterConfig,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionFilterTest.java;,VariableName,firstFilterConfig," // powermock disrupts the assume exception and turns into a failure
        // instead of a skip when it doesn't pass
        if (urlForTest != null) {
            final DefaultConfiguration firstFilterConfig =
                createModuleConfig(SuppressionFilter.class);
            // -@cs[CheckstyleTestMakeup] need to test dynamic property
            firstFilterConfig.addAttribute(""file"", urlForTest);",config,configuration
Lcom/puppycrawl/tools/checkstyle/internal/XdocsJavaDocsTest$JavaDocCapture;.makeFirstUpper(Ljava/lang/String;)Ljava/lang/String;#ch,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsJavaDocsTest.java;,VariableName,ch,"        private static String makeFirstUpper(String str) {
            final char ch = str.charAt(0);
            final String result;

            if (Character.isLowerCase(ch)) {
                result = Character.toUpperCase(ch) + str.substring(1);",ch,char
Ljava/net/HttpURLConnection;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionFilterTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest.java;,ClassName,HttpURLConnection,"        boolean result = true;
        try {
            final URL verifiableUrl = new URL(url);
            final HttpURLConnection urlConnect = (HttpURLConnection) verifiableUrl.openConnection();
            urlConnect.getContent();
        }
        catch (IOException ignored) {",http,hyper text transfer protocol
Lcom/puppycrawl/tools/checkstyle/api/FileContents;.getCppComments()Ljava/util/Map<Ljava/lang/Integer;Lcom/puppycrawl/tools/checkstyle/api/TextBlock;>;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/api/FileContentsTest.java;,MethodName,getCppComments,"        final Comment cppComment = new Comment(new String[] {""23""}, 1, 1, 2);
        final Comment cComment = new Comment(new String[] {""2""}, 1, 1, 1);
        assertEquals(""Invalid cpp comment"", cppComment.toString(),
                fileContents.getCppComments().get(1).toString());
        assertEquals(""Invalid c comment"", cComment.toString(),
                fileContents.getCComments().get(1).get(0).toString());
    }",cpp,c plus plus
Lcom/puppycrawl/tools/checkstyle/grammars/javadoc/JavadocParseTreeTest;.mixedCaseOfHtmlTags()V|Ljava/lang/Exception;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/grammars/javadoc/JavadocParseTreeTest.java;,MethodName,mixedCaseOfHtmlTags,"    public void mixedCaseOfHtmlTags() throws Exception {
        verifyJavadocTree(getHtmlPath(""expectedMixedCaseOfHtmlTagsAst.txt""),
                getHtmlPath(""InputMixedCaseOfHtmlTags.javadoc""));
    }",html,hyper text markup language
Lcom/puppycrawl/tools/checkstyle/utils/CommonUtilsTest;.testLengthExpandedTabs()V#s4,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/utils/CommonUtilsTest.java;,VariableName,s4,"        final String s4 = "" \t "";
        assertEquals(""Invalid expanded tabs length"", 9,
            CommonUtils.lengthExpandedTabs(s4, s4.length(), 8));",s,string
Lcom/puppycrawl/tools/checkstyle/api/FileContentsTest;.testReportCppComment()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/api/FileContentsTest.java;,MethodName,testReportCppComment,"    public void testReportCppComment() {
        final FileContents fileContents = new FileContents(
                new FileText(new File(""filename""), Collections.singletonList(""   //  "")));
        fileContents.reportCppComment(1, 2);
        final Map<Integer, TextBlock> cppComments = fileContents.getCppComments();",cpp,c plus plus
Lcom/puppycrawl/tools/checkstyle/AbstractModuleTestSupport;.createTreeWalkerConfig(Lcom/puppycrawl/tools/checkstyle/api/Configuration;)Lcom/puppycrawl/tools/checkstyle/DefaultConfiguration;#twConf,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/AbstractModuleTestSupport.java;,VariableName,twConf,"protected static DefaultConfiguration createTreeWalkerConfig(Configuration config) {
        final DefaultConfiguration dc =
                new DefaultConfiguration(""configuration"");
        final DefaultConfiguration twConf = createModuleConfig(TreeWalker.class);
        // make sure that the tests always run with this charset
        dc.addAttribute(""charset"", StandardCharsets.UTF_8.name());
        dc.addChild(twConf);",conf,configuration
Lcom/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest;.isUrlReachable(Ljava/lang/String;)Z#0#0#verifiableUrl,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest.java;,VariableName,verifiableUrl,"private static boolean isUrlReachable(String url) {
        boolean result = true;
        try {
            final URL verifiableUrl = new URL(url);
            final HttpURLConnection urlConnect = (HttpURLConnection) verifiableUrl.openConnection();
            urlConnect.getContent();
        }",url,uniform resource locator
Lcom/puppycrawl/tools/checkstyle/internal/XdocsPagesTest;.validateStyleModules(Ljava/util/Set<Lorg/w3c/dom/Node;>;Ljava/util/Set<Lorg/w3c/dom/Node;>;Ljava/util/Set<Ljava/lang/String;>;Ljava/lang/String;Ljava/lang/String;)V#itrConfigs,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java;,VariableName,itrConfigs,"private static void validateStyleModules(Set<Node> checks, Set<Node> configs,
            Set<String> styleChecks, String fileName, String ruleName) {
        final Iterator<Node> itrChecks = checks.iterator();
        final Iterator<Node> itrConfigs = configs.iterator();

        while (itrChecks.hasNext()) {
            final Node module = itrChecks.next();
            final String moduleName = module.getTextContent().trim();",itr,iterator
Lcom/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheckTest;.packageInfoAnnotation()V|Ljava/lang/Exception;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheckTest.java;,MethodName,packageInfoAnnotation,"    public void packageInfoAnnotation() throws Exception {
        final DefaultConfiguration checkConfig =
            createModuleConfig(JavadocStyleCheck.class);
        final String[] expected = CommonUtils.EMPTY_STRING_ARRAY;

        verify(createChecker(checkConfig),
               getPath(""pkginfo"" + File.separator + ""annotation"" + File.separator
                   + ""package-info.java""),
               expected);",info,information
Lcom/puppycrawl/tools/checkstyle/utils/TokenUtilsTest;.testTokenValueIncorrect()V|Ljava/lang/IllegalAccessException;#nextAfterMaxId,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/utils/TokenUtilsTest.java;,VariableName,nextAfterMaxId," if (id > maxId) {
                maxId = id;
            }
        }

        final int nextAfterMaxId = maxId + 1;
        try {
            TokenUtils.getTokenName(nextAfterMaxId);
            fail(""IllegalArgumentException is expected"");",max,maximum
Lcom/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck;.MSG_JAVADOC_MISSING)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressWarningsFilterTest.java;,VariableName,MSG_JAVADOC_MISSING,"public void testPublic() throws Exception {
        final DefaultConfiguration checkConfig =
            createModuleConfig(JavadocTypeCheck.class);
        checkConfig.addAttribute(""scope"", Scope.PUBLIC.getName());
        final String[] expected = {
            ""7: "" + getCheckMessage(MSG_JAVADOC_MISSING),
            ""38: "" + getCheckMessage(MSG_JAVADOC_MISSING),
        };
        verify(checkConfig,
               getPath(""InputJavadocTypeScopeInnerInterfaces.java""),
               expected);",msg,message
Lcom/puppycrawl/tools/checkstyle/internal/XdocsPagesTest;.validateStyleModules(Ljava/util/Set<Lorg/w3c/dom/Node;>;Ljava/util/Set<Lorg/w3c/dom/Node;>;Ljava/util/Set<Ljava/lang/String;>;Ljava/lang/String;Ljava/lang/String;)V#itrChecks,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java;,VariableName,itrChecks,"private static void validateStyleModules(Set<Node> checks, Set<Node> configs,
            Set<String> styleChecks, String fileName, String ruleName) {
        final Iterator<Node> itrChecks = checks.iterator();
        final Iterator<Node> itrConfigs = configs.iterator();

        while (itrChecks.hasNext()) {
            final Node module = itrChecks.next();",itr,iterator
Lcom/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheckTest;.testIgnoreNegativeOctalHex()V|Ljava/lang/Exception;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheckTest.java;,MethodName,testIgnoreNegativeOctalHex," public void testIgnoreNegativeOctalHex() throws Exception {
        final DefaultConfiguration checkConfig =
            createModuleConfig(MagicNumberCheck.class);
        checkConfig.addAttribute(""ignoreNumbers"",
            ""-9223372036854775808, -2147483648, -1, 0, 1, 2, -2"");
        checkConfig.addAttribute(""tokens"", ""NUM_INT, NUM_LONG"");",hex,hexadecimal
Lcom/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheckTest;.STD)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheckTest.java;,FieldName,STD,"    /** Shortcuts to make code more compact. */
    private static final String STATIC = CustomImportOrderCheck.STATIC_RULE_GROUP;
    private static final String SAME = CustomImportOrderCheck.SAME_PACKAGE_RULE_GROUP;
    private static final String THIRD = CustomImportOrderCheck.THIRD_PARTY_PACKAGE_RULE_GROUP;
    private static final String STD = CustomImportOrderCheck.STANDARD_JAVA_PACKAGE_RULE_GROUP;
    private static final String SPECIAL = CustomImportOrderCheck.SPECIAL_IMPORTS_RULE_GROUP;",std,standard
Ljava/net/URI;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/PropertyCacheFileTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoaderTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/utils/CommonUtilsTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/AbstractModuleTestSupport.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/ant/CheckstyleAntTaskTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheckTest.java;,ClassName,URI,"        final MessageDigest digest = MessageDigest.getInstance(""SHA-1"");
        final URI uri = CommonUtils.getUriByFilename(pathToResource);
        final byte[] input =
                ByteStreams.toByteArray(new BufferedInputStream(uri.toURL().openStream()));
        final ByteArrayOutputStream out = new ByteArrayOutputStream();",uri,uniform resource identifier
Lcom/puppycrawl/tools/checkstyle/filters/SuppressionXpathFilterTest;.testExistingSuppressionFileWithTrueOptional()V|Ljava/lang/Exception;#ev,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionXpathFilterTest.java;,VariableName,ev,"    public void testAcceptOne() throws Exception {
        final boolean optional = false;
        final SuppressionXpathFilter filter =
                createSuppressionXpathFilter(getPath(""InputSuppressionXpathFilterNone.xml""),
                        optional);

        final TreeWalkerAuditEvent ev = new TreeWalkerAuditEvent(null, ""ATest.java"", null, null);

        assertTrue(""TreeWalker audit event should be accepted when there are no suppressions"",
                filter.accept(ev));",ev,event
Lcom/puppycrawl/tools/checkstyle/api/AutomaticBeanTest;.testSetupInvalidChildFromBaseClass()V|Ljava/lang/Exception;#parentConf,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/api/AutomaticBeanTest.java;,VariableName,parentConf,"public void testSetupInvalidChildFromBaseClass() throws Exception {
        final TestBean testBean = new TestBean();
        final DefaultConfiguration parentConf = new DefaultConfiguration(""parentConf"");
        final DefaultConfiguration childConf = new DefaultConfiguration(""childConf"");
        final Field field = AutomaticBean.class.getDeclaredField(""configuration"");
        field.setAccessible(true);",conf,configuration
Lcom/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheckTest;.testCacheWhenFileExternalResourceContentDoesNotChange()V|Ljava/lang/Exception;#treeWalkerConfig,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheckTest.java;,VariableName,treeWalkerConfig,"public void testCacheWhenFileExternalResourceContentDoesNotChange() throws Exception {
        final DefaultConfiguration checkConfig = createModuleConfig(ImportControlCheck.class);
        checkConfig.addAttribute(""file"", getPath(""InputImportControlOneRegExp.xml""));

        final DefaultConfiguration treeWalkerConfig = createModuleConfig(TreeWalker.class);
        treeWalkerConfig.addChild(checkConfig);

        final DefaultConfiguration checkerConfig = createRootConfig(treeWalkerConfig);
        final File cacheFile = temporaryFolder.newFile();",config,configuration
Lcom/puppycrawl/tools/checkstyle/checks/naming/StaticVariableNameCheckTest;.testGetAcceptableTokens()V#staticVariableNameCheckObj,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/StaticVariableNameCheckTest.java;,VariableName,staticVariableNameCheckObj,"    public void testGetAcceptableTokens() {
        final StaticVariableNameCheck staticVariableNameCheckObj = new StaticVariableNameCheck();
        final int[] actual = staticVariableNameCheckObj.getAcceptableTokens();
        final int[] expected = {
            TokenTypes.VARIABLE_DEF,
        };
        assertArrayEquals(""Default acceptable tokens are invalid"", expected, actual);",obj,object
Lcom/puppycrawl/tools/checkstyle/filters/SuppressionFilterTest;.testRemoteFileExternalResourceContentDoesNotChange()V|Ljava/lang/Exception;#1#secondFilterConfig,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionFilterTest.java;,VariableName,secondFilterConfig,"verify(firstCheckerConfig, pathToEmptyFile, expected);

            // One more time to use cache.
            final DefaultConfiguration secondFilterConfig =
                createModuleConfig(SuppressionFilter.class);
            // -@cs[CheckstyleTestMakeup] need to test dynamic property
            secondFilterConfig.addAttribute(""file"", urlForTest);",config,configuration
Lcom/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest;.testWithSumLessThenMinDefMsg()V|Ljava/lang/Exception;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java;,MethodName,testWithSumLessThenMinDefMsg,"    public void testWithSumLessThenMinDefMsg() throws Exception {
        final DefaultConfiguration checkConfig = createModuleConfig(DescendantTokenCheck.class);
        checkConfig.addAttribute(""tokens"", ""NOT_EQUAL,EQUAL"");
        checkConfig.addAttribute(""limitedTokens"", ""LITERAL_THIS,LITERAL_NULL"");",min,minimum
Lcom/puppycrawl/tools/checkstyle/filters/SuppressWithNearbyCommentFilterTest;.testUsingTagMessageRegexp()V|Ljava/lang/Exception;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithNearbyCommentFilterTest.java;,MethodName,testUsingTagMessageRegexp,"    public void testUsingTagMessageRegexp() throws Exception {
        final DefaultConfiguration filterConfig =
            createModuleConfig(SuppressWithNearbyCommentFilter.class);
        filterConfig.addAttribute(""commentFormat"", ""SUPPRESS CHECKSTYLE (\\w+)"");
        filterConfig.addAttribute(""checkFormat"", ""IllegalCatchCheck"");",regexp,regular expression
Lcom/puppycrawl/tools/checkstyle/xpath/XpathMapperTest;.testQuerySelf()V|Ljava/lang/Exception;#objNode,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/xpath/XpathMapperTest.java;,VariableName,objNode,"   final RootNode rootNode = getRootNode(""InputXpathMapperAst.java"");
        final List<Item> objectNodes = getXpathItems(objectXpath, rootNode);
        assertEquals(""Invalid number of nodes"", 1, objectNodes.size());
        final AbstractNode objNode = (AbstractNode) objectNodes.get(0);
        final String methodsXpath = ""METHOD_DEF"";
        final List<Item> methodsNodes = getXpathItems(methodsXpath, objNode);
        assertEquals(""Invalid number of nodes"", 2, methodsNodes.size());",obj,object
Lcom/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheckTest$NonTightHtmlTagTolerantCheck;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheckTest.java;,ClassName,NonTightHtmlTagTolerantCheck,"    public static class NonTightHtmlTagTolerantCheck extends AbstractJavadocCheck {

        private boolean reportVisitJavadocToken;

        public final void setReportVisitJavadocToken(boolean reportVisitJavadocToken) {
            this.reportVisitJavadocToken = reportVisitJavadocToken;",html,hyper text markup language
Lcom/puppycrawl/tools/checkstyle/CheckerTest;.testXmlLoggerClosesItStreams()V|Ljava/lang/Exception;#0#0#testInfoOutputStream,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/CheckerTest.java;,VariableName,testInfoOutputStream,"public void testXmlLoggerClosesItStreams() throws Exception {
        final Checker checker = new Checker();
        try (CloseAndFlushTestByteArrayOutputStream testInfoOutputStream =
                new CloseAndFlushTestByteArrayOutputStream()) {
            checker.setModuleClassLoader(Thread.currentThread().getContextClassLoader());
            checker.addListener(new XMLLogger(testInfoOutputStream, true));",info,information
Lcom/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheckTest;.testNullClassLoader()V|Ljava/lang/Exception;#rparenAst,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheckTest.java;,VariableName,rparenAst,"lparenAst.setType(TokenTypes.LPAREN);

        final DetailAST elistAst = new DetailAST();
        elistAst.setType(TokenTypes.ELIST);

        final DetailAST rparenAst = new DetailAST();
        rparenAst.setType(TokenTypes.RPAREN);

        exprAst.addChild(newAst);
        newAst.addChild(identAst);",ast,abstract syntax tree
Lcom/puppycrawl/tools/checkstyle/ConfigurationLoaderTest;.testConfigWithIgnoreUsingInputSource()V|Ljava/lang/Exception;#config,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java;,VariableName,config,"        props.setProperty(""checkstyle.basedir"", ""basedir"");

        // load config that's only found in the classpath
        final DefaultConfiguration config =
            (DefaultConfiguration) ConfigurationLoader.loadConfiguration(
                getPath(""InputConfigurationLoaderChecks.xml""), new PropertiesExpander(props));

        //verify the root, and property substitution
        final Properties attributes = new Properties();",config,configuration
Lcom/puppycrawl/tools/checkstyle/checks/DescendantTokenCheck;.MSG_KEY_SUM_MIN)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java;,VariableName,MSG_KEY_SUM_MIN,"    final String[] expected = {
            ""16:44: "" + getCheckMessage(MSG_KEY_SUM_MIN, 0, 3, ""EQUAL""),
            ""22:32: "" + getCheckMessage(MSG_KEY_SUM_MIN, 2, 3, ""EQUAL""),
            ""22:50: "" + getCheckMessage(MSG_KEY_SUM_MIN, 2, 3, ""EQUAL""),",min,minimum
Lcom/puppycrawl/tools/checkstyle/internal/XdocsPagesTest;.XML_FILESET_LIST)Ljava/util/List<Ljava/lang/String;>;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java;,FieldName,XML_FILESET_LIST,"
    private static final List<String> XML_FILESET_LIST = Arrays.asList(
            ""TreeWalker"",
            ""name=\""Checker\"""",
            ""name=\""Header\"""",
            ""name=\""Translation\"""",
            ""name=\""SeverityMatchFilter\"""",
            ""name=\""SuppressWithPlainTextCommentFilter\"""",
            ""name=\""SuppressionFilter\"""",
            ""name=\""SuppressWarningsFilter\"""",
            ""name=\""BeforeExecutionExclusionFileFilter\"""",
            ""name=\""RegexpHeader\"""",
            ""name=\""RegexpOnFilename\"""",
            ""name=\""RegexpSingleline\"""",
            ""name=\""RegexpMultiline\"""",
            ""name=\""JavadocPackage\"""",
            ""name=\""NewlineAtEndOfFile\"""",
            ""name=\""UniqueProperties\"""",
            ""name=\""FileLength\"""",
            ""name=\""FileTabCharacter\""""
    );",xml,extensible markup language
Lcom/puppycrawl/tools/checkstyle/checks/whitespace/FileTabCharacterCheck;.MSG_FILE_CONTAINS_TAB)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/FileTabCharacterCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithPlainTextCommentFilterTest.java;,VariableName,MSG_FILE_CONTAINS_TAB,"final DefaultConfiguration checkConfig =
            createModuleConfig(FileTabCharacterCheck.class);
        checkConfig.addAttribute(""eachLine"", ""false"");
        final String[] expected = {
            ""19:25: "" + getCheckMessage(MSG_FILE_CONTAINS_TAB),
        };
        final File[] files = {
            new File(getPath(""InputFileTabCharacterSimple.java"")),
        };",msg,message
Ljava/net/URLStreamHandler;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessageTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/PackageNamesLoaderTest.java;,ClassName,URLStreamHandler,"        final ClassLoader classloader = mock(ClassLoader.class);
        final String resource =
                ""com/puppycrawl/tools/checkstyle/checks/coding/messages_en.properties"";
        final URLConnection mockUrlCon = mock(URLConnection.class);
        final URLStreamHandler stubUrlHandler = new URLStreamHandler() {
            @Override
            protected URLConnection openConnection(URL u) {
                return mockUrlCon;",url,uniform resource locator
Lcom/puppycrawl/tools/checkstyle/api/TokenTypes;.EOF)I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/design/FinalClassCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/utils/TokenUtilsTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/xpath/ElementNodeTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/xpath/RootNodeTest.java;,VariableName,EOF," public void testImproperToken() {
        final FinalClassCheck finalClassCheck = new FinalClassCheck();
        final DetailAST badAst = new DetailAST();
        final int unsupportedTokenByCheck = TokenTypes.EOF;
        badAst.setType(unsupportedTokenByCheck);
        try {
            finalClassCheck.visitToken(badAst);",eof,end of file
Lcom/puppycrawl/tools/checkstyle/AbstractXmlTestSupport;.verifyXmlNodes(Lorg/w3c/dom/Node;Lorg/w3c/dom/Node;Ljava/lang/String;Ljava/util/function/BiPredicate<Lorg/w3c/dom/Node;Lorg/w3c/dom/Node;>;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/AbstractXmlTestSupport.java;,MethodName,verifyXmlNodes,"    private static void verifyXmlNodes(Node expected, Node actual, String path,
            BiPredicate<Node, Node> ordered) {
        final Node expectedFirstChild = expected.getFirstChild();
        final Node actualFirstChild = actual.getFirstChild();

        if (expectedFirstChild == null) {",xml,extensible markup language
Lcom/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest;.testMultipleSuppression()V|Ljava/lang/Exception;#se4,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest.java;,VariableName,se4,"    final SuppressElement se3 =
                new SuppressElement(""file3"", ""check3"", null, null, ""1,2-3"", ""1,2-3"");
        fc2.addFilter(se3);
        final SuppressElement se4 =
                new SuppressElement(null, null, ""message0"", null, null, null);
        fc2.addFilter(se4);
        assertEquals(""Multiple suppressions were loaded incorrectly"", fc2, fc);",se,suppress element
Lcom/puppycrawl/tools/checkstyle/CheckerTest;.testRemoveListener()V|Ljava/lang/Exception;#aa2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/CheckerTest.java;,VariableName,aa2,"public void testRemoveListener() throws Exception {
        final Checker checker = new Checker();
        final DebugAuditAdapter auditAdapter = new DebugAuditAdapter();
        final DebugAuditAdapter aa2 = new DebugAuditAdapter();
        checker.addListener(auditAdapter);
        checker.addListener(aa2);
        checker.removeListener(auditAdapter);",aa,adapter
Lcom/puppycrawl/tools/checkstyle/filters/SuppressWarningsFilterTest;.verifySuppressed(Lcom/puppycrawl/tools/checkstyle/api/Configuration;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V|Ljava/lang/Exception;#uncommentedMainCheckConfig,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressWarningsFilterTest.java;,VariableName,uncommentedMainCheckConfig,"final DefaultConfiguration constantNameCheckConfig =
            createModuleConfig(ConstantNameCheck.class);
        constantNameCheckConfig.addAttribute(""id"", """");

        final DefaultConfiguration uncommentedMainCheckConfig =
            createModuleConfig(UncommentedMainCheck.class);
        uncommentedMainCheckConfig.addAttribute(""id"", ""ignore"");",config,configuration
Lcom/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest;.testTypeParamsTags()V|Ljava/lang/Exception;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java;,MethodName,testTypeParamsTags,"public void testTypeParamsTags() throws Exception {
        final DefaultConfiguration checkConfig = createModuleConfig(JavadocMethodCheck.class);
        final String[] expected = {
            ""26:8: "" + getCheckMessage(MSG_UNUSED_TAG, ""@param"", ""<BB>""),",params,parameters
Lcom/puppycrawl/tools/checkstyle/DetailNodeTreeStringPrinterTest;.testWrongHtmlTagOrder()V|Ljava/lang/Exception;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/DetailNodeTreeStringPrinterTest.java;,MethodName,testWrongHtmlTagOrder,"    public void testWrongHtmlTagOrder() throws Exception {
        try {
            DetailNodeTreeStringPrinter.printFileAst(new File(getPath(
                    ""InputDetailNodeTreeStringPrinterWrongHtmlTagOrder.javadoc""
            )));",html,hyper text markup language
Lcom/puppycrawl/tools/checkstyle/api/DetailASTTest;.checkTree(Ljava/lang/String;Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)V#prev,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/api/DetailASTTest.java;,VariableName,prev,"private static void checkTree(final String filename, final DetailAST root) {
        DetailAST curNode = root;
        DetailAST parent = null;
        DetailAST prev = null;
        while (curNode != null) {
            checkNode(curNode, parent, prev, filename, root);
            DetailAST toVisit = curNode.getFirstChild();",prev,previous
Lcom/puppycrawl/tools/checkstyle/api/FileContentsTest;.testDeprecatedAbbreviatedMethod()V#cComment,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/api/FileContentsTest.java;,VariableName,cComment,"fileContents.reportCppComment(1, 1);
        fileContents.reportCComment(1, 1, 1, 1);

        final Comment cppComment = new Comment(new String[] {""23""}, 1, 1, 2);
        final Comment cComment = new Comment(new String[] {""2""}, 1, 1, 1);
        assertEquals(""Invalid cpp comment"", cppComment.toString(),
                fileContents.getCppComments().get(1).toString());",c,comment
Lcom/puppycrawl/tools/checkstyle/CheckerTest;.testNoModuleFactory()V|Ljava/lang/Exception;#actualCtx,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/CheckerTest.java;,VariableName,actualCtx,"final ClassLoader classLoader = Thread.currentThread().getContextClassLoader();

        checker.setModuleClassLoader(classLoader);
        checker.finishLocalSetup();
        final Context actualCtx = Whitebox.getInternalState(checker, ""childContext"");

        assertNotNull(""Default module factory should be created when it is not specified"",
            actualCtx.get(""moduleFactory""));
        assertEquals(""Invalid classLoader"", classLoader, actualCtx.get(""classLoader""));",ctx,context
Lcom/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest;.testNoSuppressions()V|Ljava/lang/Exception;#fc2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest.java;,VariableName,fc2,"public void testMultipleSuppression() throws Exception {
        final FilterSet fc =
            SuppressionsLoader.loadSuppressions(getPath(""InputSuppressionsLoaderMultiple.xml""));
        final FilterSet fc2 = new FilterSet();

        final SuppressElement se0 =
                new SuppressElement(""file0"", ""check0"", null, null, null, null);",fc,from classpath
Lcom/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck;.MSG_KEY)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilterTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithNearbyCommentFilterTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressWarningsFilterTest.java;,VariableName,MSG_KEY,"final String[] expected = {
            ""7:11: "" + getCheckMessage(MSG_KEY, ""RuntimeException""),
            ""10:11: "" + getCheckMessage(MSG_KEY, ""RuntimeException""),
            ""13:11: "" + getCheckMessage(MSG_KEY, ""RuntimeException""),
            ""16:11: "" + getCheckMessage(MSG_KEY, ""RuntimeException""),
        };",msg,message
Lcom/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest;.testXpathSuppressions()V|Ljava/lang/Exception;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest.java;,MethodName,testXpathSuppressions,"    public void testXpathSuppressions() throws Exception {
        final String fn = getPath(""InputSuppressionsLoaderXpathCorrect.xml"");
        final Set<TreeWalkerFilter> filterSet = SuppressionsLoader.loadXpathSuppressions(fn);

        final Set<TreeWalkerFilter> expectedFilterSet = new HashSet<>();",xpath,xml path language
Lcom/puppycrawl/tools/checkstyle/filters/SuppressionXpathFilterTest;.createSuppressionXpathFilter(Ljava/lang/String;Z)Lcom/puppycrawl/tools/checkstyle/filters/SuppressionXpathFilter;|Lcom/puppycrawl/tools/checkstyle/api/CheckstyleException;#suppressionXpathFilter,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionXpathFilterTest.java;,VariableName,suppressionXpathFilter," private static SuppressionXpathFilter createSuppressionXpathFilter(String fileName,
                                                                       boolean optional)
            throws CheckstyleException {
        final SuppressionXpathFilter suppressionXpathFilter = new SuppressionXpathFilter();
        suppressionXpathFilter.setFile(fileName);
        suppressionXpathFilter.setOptional(optional);
        suppressionXpathFilter.finishLocalSetup();",xpath,xml path language
Lcom/puppycrawl/tools/checkstyle/internal/XdocsPagesTest;.buildXml(Ljava/lang/String;)Ljava/lang/String;|Ljava/io/IOException;#0#dtdPath,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java;,VariableName,dtdPath,"    if (!code.startsWith(""<?xml"")) {
            final String dtdPath = new File(
                    ""src/main/resources/com/puppycrawl/tools/checkstyle/configuration_1_3.dtd"")
                    .getCanonicalPath();

            code = ""<?xml version=\""1.0\""?>\n<!DOCTYPE module PUBLIC ""
                    + ""\""-//Puppy Crawl//DTD Check Configuration 1.3//EN\"" \"""" + dtdPath + ""\"">\n""
                    + code;",dtd,document type definition
Lcom/puppycrawl/tools/checkstyle/PropertyCacheFileTest;.testExternalResourceIsSavedInCache()V|Ljava/lang/Exception;#0#0#oos,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/PropertyCacheFileTest.java;,VariableName,oos,"final URI uri = CommonUtils.getUriByFilename(pathToResource);
        final byte[] input =
                ByteStreams.toByteArray(new BufferedInputStream(uri.toURL().openStream()));
        final ByteArrayOutputStream out = new ByteArrayOutputStream();
        try (ObjectOutputStream oos = new ObjectOutputStream(out)) {
            oos.writeObject(input);
        }
        digest.update(out.toByteArray());
        final String expected = BaseEncoding.base16().upperCase().encode(digest.digest());",oos,object output stream
Lcom/puppycrawl/tools/checkstyle/internal/utils/TestUtil;.isUtilsClassHasPrivateConstructor(Ljava/lang/Class<*>;Z)Z|Ljava/lang/ReflectiveOperationException;#utilClass#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/internal/utils/TestUtil.java;,ParameterName,utilClass," * @return true if constructor is expected.
     * @noinspection BooleanParameter
     */
    public static boolean isUtilsClassHasPrivateConstructor(final Class<?> utilClass,
                                                             boolean checkConstructorIsPrivate)
            throws ReflectiveOperationException {
        final Constructor<?> constructor = utilClass.getDeclaredConstructor();
        final boolean result;",util,utility
Lcom/puppycrawl/tools/checkstyle/filters/SuppressWithPlainTextCommentFilterTest;.testFilterWithCustomMessageFormat()V|Ljava/lang/Exception;#regexpCheckCfg,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithPlainTextCommentFilterTest.java;,VariableName,regexpCheckCfg,"        final DefaultConfiguration fileTabCheckCfg =
            createModuleConfig(FileTabCharacterCheck.class);
        fileTabCheckCfg.addAttribute(""eachLine"", ""true"");

        final DefaultConfiguration regexpCheckCfg = createModuleConfig(RegexpSinglelineCheck.class);
        regexpCheckCfg.addAttribute(""id"", ""ignore"");
        regexpCheckCfg.addAttribute(""format"", "".*[a-zA-Z][0-9].*"");",cfg,configuration
Lcom/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheckTest;.testOpWrapEol()V|Ljava/lang/Exception;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheckTest.java;,MethodName,testOpWrapEol,"    public void testOpWrapEol()
            throws Exception {
        final DefaultConfiguration checkConfig = createModuleConfig(OperatorWrapCheck.class);
        checkConfig.addAttribute(""option"", WrapOption.EOL.toString());",eol,end of life
Lcom/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheckTest;.testRegexpHeaderMulti1()V|Ljava/lang/Exception;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheckTest.java;,MethodName,testRegexpHeaderMulti1,"    public void testRegexpHeaderMulti1() throws Exception {
        final DefaultConfiguration checkConfig =
                createModuleConfig(RegexpHeaderCheck.class);
        checkConfig.addAttribute(""headerFile"", getPath(""InputRegexpHeader2.header""));
        checkConfig.addAttribute(""multiLines"", ""3, 6"");",multi,multiple
Lcom/puppycrawl/tools/checkstyle/api/LocalizedMessageTest$3594;.openConnection(Ljava/net/URL;)Ljava/net/URLConnection;#u#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessageTest.java;,ParameterName,u,"final URLConnection mockUrlCon = mock(URLConnection.class);
        final URLStreamHandler stubUrlHandler = new URLStreamHandler() {
            @Override
            protected URLConnection openConnection(URL u) {
                return mockUrlCon;
            }
        };",u,uniform resource locator
Lcom/puppycrawl/tools/checkstyle/internal/XdocsPagesTest;.getProperties(Ljava/lang/Class<*>;)Ljava/util/Set<Ljava/lang/String;>;#0#p,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java;,VariableName,p,"        final Set<String> result = new TreeSet<>();
        final PropertyDescriptor[] map = PropertyUtils.getPropertyDescriptors(clss);

        for (PropertyDescriptor p : map) {
            if (p.getWriteMethod() != null) {
                result.add(p.getName());
            }",p,property
Lcom/puppycrawl/tools/checkstyle/filters/SuppressWithPlainTextCommentFilterTest;.testSuppressionCommentsInSqlFile()V|Ljava/lang/Exception;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithPlainTextCommentFilterTest.java;,MethodName,testSuppressionCommentsInSqlFile,"    public void testSuppressionCommentsInSqlFile() throws Exception {
        final DefaultConfiguration filterCfg =
            createModuleConfig(SuppressWithPlainTextCommentFilter.class);
        filterCfg.addAttribute(""offCommentFormat"", ""-- CHECKSTYLE OFF"");
        filterCfg.addAttribute(""onCommentFormat"", ""-- CHECKSTYLE ON"");",sql,structured query language
Lcom/puppycrawl/tools/checkstyle/api/TokenTypes;.NUM_LONG)I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/UpperEllCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/utils/CheckUtilsTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTokenTextCheckTest.java;,VariableName,NUM_LONG,"    public void testGetRequiredTokens() {
        final UpperEllCheck checkObj = new UpperEllCheck();
        final int[] expected = {TokenTypes.NUM_LONG};
        assertArrayEquals(""Default required tokens are invalid"",
            expected, checkObj.getRequiredTokens());
    }",num,number
Lcom/puppycrawl/tools/checkstyle/CheckerTest;.testRemoveBeforeExecutionFileFilter()V|Ljava/lang/Exception;#f2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/CheckerTest.java;,VariableName,f2,"    public void testRemoveBeforeExecutionFileFilter() throws Exception {
        final Checker checker = new Checker();
        final TestBeforeExecutionFileFilter filter = new TestBeforeExecutionFileFilter();
        final TestBeforeExecutionFileFilter f2 = new TestBeforeExecutionFileFilter();
        checker.addBeforeExecutionFileFilter(filter);
        checker.addBeforeExecutionFileFilter(f2);
        checker.removeBeforeExecutionFileFilter(filter);",f,filter
Lcom/puppycrawl/tools/checkstyle/checks/javadoc/JavadocNodeImpl;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/utils/JavadocUtilsTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocNodeImplTest.java;,ClassName,JavadocNodeImpl,"    @Test
    public void testBranchContains() {
        final JavadocNodeImpl node = new JavadocNodeImpl();
        final JavadocNodeImpl firstChild = new JavadocNodeImpl();
        final JavadocNodeImpl secondChild = new JavadocNodeImpl();",impl,implement
Lcom/puppycrawl/tools/checkstyle/ant/CheckstyleAntTaskTest;.testXmlOutput()V|Ljava/io/IOException;#0#i,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/ant/CheckstyleAntTaskTest.java;,VariableName,i,"     final List<String> expected = FileUtils.readLines(
                new File(getPath(""InputCheckstyleAntTaskXmlOutput.xml"")), StandardCharsets.UTF_8);
        final List<String> actual = FileUtils.readLines(outputFile, StandardCharsets.UTF_8);
        for (int i = 0; i < expected.size(); i++) {
            final String line = expected.get(i);
            if (!line.startsWith(""<checkstyle version"") && !line.startsWith(""<file"")) {
                assertEquals(""Content of file with violations differs from expected"",
                        line, actual.get(i));",i,line
Lcom/puppycrawl/tools/checkstyle/checks/naming/AbstractNameCheck;.MSG_INVALID_PATTERN)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/ParameterNameCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/MemberNameCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/LocalVariableNameCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/MethodTypeParameterNameCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/TreeWalkerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithNearbyCommentFilterTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/InterfaceTypeParameterNameCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/StaticVariableNameCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressWarningsFilterTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/LocalFinalVariableNameCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/ClassTypeParameterNameCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/TypeNameCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/grammars/GeneratedJava14LexerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilterTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/MethodNameCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/CatchParameterNameCheckTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/ConstantNameCheckTest.java;,VariableName,MSG_INVALID_PATTERN,"        final String[] expected = {
            ""5:49: "" + getCheckMessage(MSG_INVALID_PATTERN, ""pubconstr"", pattern),
            ""9:31: "" + getCheckMessage(MSG_INVALID_PATTERN, ""inner"", pattern),
            ""19:24: "" + getCheckMessage(MSG_INVALID_PATTERN, ""pubpub"", pattern),
            ""30:21: "" + getCheckMessage(MSG_INVALID_PATTERN, ""pubifc"", pattern),
            ""44:24: "" + getCheckMessage(MSG_INVALID_PATTERN, ""packpub"", pattern),
            ""60:21: "" + getCheckMessage(MSG_INVALID_PATTERN, ""packifc"", pattern),
            };",msg,message
Lcom/puppycrawl/tools/checkstyle/ConfigurationLoaderTest;.verifyConfigNode(Lcom/puppycrawl/tools/checkstyle/DefaultConfiguration;Ljava/lang/String;ILjava/util/Properties;)V|Ljava/lang/Exception;#atts#0#3,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/checkstyle-master/src/test/java/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java;,ParameterName,atts,"private static void verifyConfigNode(
        DefaultConfiguration config, String name, int childrenLength,
        Properties atts) throws Exception {
        assertEquals(""name."", name, config.getName());
        assertEquals(
            ""children.length."",
            childrenLength,
            config.getChildren().length);",atts,attributes
Lorg/besus/meice/oramtt/erd/model/Attribute;.getConnectionPoints(Ljava/awt/Point;Ljava/awt/Point;)[I#p2#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/erd/model/Attribute.java;,ParameterName,p2,"private int[] getConnectionPoints(Point p1, Point p2) {
  int[] connectionPoints = new int[4];
  double angle = ((Math.atan((double) (p2.y - p1.y)
    / (double) (p2.x - p1.x))) * 180.0)
    / Math.PI;",p,point
Lorg/besus/meice/oramtt/ui/ConstraintDailog;.getForeignKeyRefDesc()Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/ui/ConstraintDailog.java;,MethodName,getForeignKeyRefDesc," static String selectedTableName;

 static String foreignKeyRefDesc;

 public static String getForeignKeyRefDesc() {
  return foreignKeyRefDesc;
 }

 public static void setForeignKeyRefDesc(String foreignKeyRefDesc) {
  ConstraintDailog.foreignKeyRefDesc = foreignKeyRefDesc;",ref,reference
Lorg/besus/meice/oramtt/ui/AttributeDialog;.lblEntity)Ljavax/swing/JLabel;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/ui/AttributeDialog.java;,FieldName,lblEntity," private JComboBox cmbDataType;
 private JLabel lblAttributeSize;
 private JTextField sizeField;
 private JLabel lblEntity;
 private JComboBox cmbEntity;

 private Attribute attribute;
 private ERDiagram diagram;",lbl,label
Lorg/besus/meice/oramtt/ui/EntityDialog;.(Lorg/besus/meice/oramtt/erd/model/Entity;Lorg/besus/meice/oramtt/erd/model/ERDiagram;)V#0#lblEntityName,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/ui/EntityDialog.java;,VariableName,lblEntityName,"contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
  getContentPane().add(contentPanel, BorderLayout.NORTH);
  {
   JLabel lblEntityName = new JLabel(""Entity Name"");
   contentPanel.add(lblEntityName);
  }
  {",lbl,label
Lorg/besus/meice/oramtt/ui/DatabaseFrame;.initializeTree()V#0#0#0#col,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/ui/DatabaseFrame.java;,VariableName,col,"   DefaultMutableTreeNode tbNodeCol = new DefaultMutableTreeNode(
     ""Columns"");
   for (String col : columnDetails) {
    DefaultMutableTreeNode tbNodeColDetails = new DefaultMutableTreeNode(
      col);
    tbNodeCol.add(tbNodeColDetails);
   ",col,column
Lorg/besus/meice/oramtt/ui/ERDCanvas;.paint(Ljava/awt/Graphics;)V#0#0#definingLoc1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/ui/ERDCanvas.java;,VariableName,definingLoc1," public void paint(Graphics g) {
  List<Model> models = diagram.getModels();

  for (Model model : models) {
   Point definingLoc1 = model.getStartingPoint();
   Point definingLoc2 = model.getReleasePoint();
   model.paint(definingLoc1, definingLoc2);
  }",loc,location
Lorg/besus/meice/oramtt/ui/AttributeDialog;.lblAttributeType)Ljavax/swing/JLabel;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/ui/AttributeDialog.java;,FieldName,lblAttributeType,"  {
   lblAttributeType = new JLabel(""Attribute Type : "");
   contentPanel.add(lblAttributeType);
  }",lbl,label
Lorg/besus/meice/oramtt/dao/PopupHandler$1208;.mouseClicked(Ljava/awt/event/MouseEvent;)V#e#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/dao/PopupHandler.java;,ParameterName,e,"private MouseListener ma = new MouseAdapter() {
  private void checkForPopup(MouseEvent e) {
   if (e.isPopupTrigger()) {
    loc = e.getPoint();
    popup.show(tree, loc.x, loc.y);",e,event
Lorg/besus/meice/oramtt/ui/EntityDialog$1934;.actionPerformed(Ljava/awt/event/ActionEvent;)V#arg0#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/ui/EntityDialog.java;,ParameterName,arg0,"   @Override
   public void actionPerformed(ActionEvent arg0) {
    String name = textField.getText();
    if(name != null && !name.equals("""")) {
     model.setName(name);",arg,argument
Lorg/besus/meice/oramtt/ui/RelationDialog;.cmbFromEntity)Ljavax/swing/JComboBox<>;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/ui/RelationDialog.java;,FieldName,cmbFromEntity," private JLabel lblRelationType;
 private JComboBox cmbRelationType;
 private JLabel lblFromEntity;
 private JComboBox cmbFromEntity;
 private JLabel lblToEntity;
 private JComboBox cmbToEntity;",cmb,combo
Lorg/besus/meice/oramtt/util/ConnectionManager;.url)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/util/ConnectionManager.java;,FieldName,url,"private static String driver = ""com.mysql.jdbc.Driver"";
 private static String url = ""jdbc:mysql://localhost:3306/"";
 private static String database = ""meice"";
 private static String uid = ""root"";
 private static String password = ""root"";",url,uniform resource locator
Lorg/besus/meice/oramtt/ui/DatabaseFrame;.initializeTree()V#0#0#0#0#tbNodeColDetails,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/ui/DatabaseFrame.java;,VariableName,tbNodeColDetails,"   DefaultMutableTreeNode tbNodeCol = new DefaultMutableTreeNode(
     ""Columns"");
   for (String col : columnDetails) {
    DefaultMutableTreeNode tbNodeColDetails = new DefaultMutableTreeNode(
      col);
    tbNodeCol.add(tbNodeColDetails);
   }",col,column
Lorg/besus/meice/oramtt/ui/RelationDialog;.lblRelationName)Ljavax/swing/JLabel;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/ui/RelationDialog.java;,FieldName,lblRelationName,"
 private JButton okButton;
 private JButton cancelButton;
 private JLabel lblRelationName;
 private JTextField txtName;
 private JLabel lblRelationType;
 private JComboBox cmbRelationType;",lbl,label
Lorg/besus/meice/oramtt/dao/TableDetails;.UpdateCell(Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)I#0#0#rs,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/dao/TableDetails.java;,VariableName,rs,"try {
   PreparedStatement pstmt = conn
     .prepareStatement(QueryConstants.TABLE_SELECTION_MYSQL);
   ResultSet rs = pstmt.executeQuery();
   while (rs.next()) {
    String tableName = rs.getString(1);
    tables.add(tableName);",rs,result set
Lorg/besus/meice/oramtt/ui/DatabaseFrame;.initializeTree()V#0#0#tbNodeCol,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/ui/DatabaseFrame.java;,VariableName,tbNodeCol,"List<String> indicesDetails = TableDetails
     .retriveConstraints(table);

   DefaultMutableTreeNode node = new DefaultMutableTreeNode(table);

   DefaultMutableTreeNode tbNodeCol = new DefaultMutableTreeNode(
     ""Columns"");
   for (String col : columnDetails) {
    DefaultMutableTreeNode tbNodeColDetails = new DefaultMutableTreeNode(",tb,tool bar
Lorg/besus/meice/oramtt/ui/ERDCanvas;.paint(Ljava/awt/Graphics;)V#0#0#definingLoc2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/ui/ERDCanvas.java;,VariableName,definingLoc2,"  for (Model model : models) {
   Point definingLoc1 = model.getStartingPoint();
   Point definingLoc2 = model.getReleasePoint();
   model.paint(definingLoc1, definingLoc2);
  }
 }",loc,location
Lorg/besus/meice/oramtt/ui/ConstraintDailog;.refLabel)Ljavax/swing/JLabel;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/ui/ConstraintDailog.java;,FieldName,refLabel,"private JPanel contentPane;
 private JLabel dbLabel;
 private JLabel tbLabel;
 private JLabel refLabel;
 private JTable table;
 private DefaultTableModel model;
",ref,reference
Lorg/besus/meice/oramtt/ui/AttributeDialog;.lblAttributeSize)Ljavax/swing/JLabel;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/ui/AttributeDialog.java;,FieldName,lblAttributeSize,"private JTextField textField;
 private JLabel lblAttributeType;
 private JComboBox cmbDataType;
 private JLabel lblAttributeSize;
 private JTextField sizeField;
 private JLabel lblEntity;
 private JComboBox cmbEntity;",lbl,label
Lorg/besus/meice/oramtt/ui/RelationDialog;.cmbRelationType)Ljavax/swing/JComboBox<>;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/ui/RelationDialog.java;,FieldName,cmbRelationType," private JLabel lblRelationName;
 private JTextField txtName;
 private JLabel lblRelationType;
 private JComboBox cmbRelationType;
 private JLabel lblFromEntity;
 private JComboBox cmbFromEntity;
 private JLabel lblToEntity;",cmb,combo
Lorg/besus/meice/oramtt/dao/TableDetails;.retriveColumnDetails(Ljava/lang/String;)Ljava/util/List<Ljava/lang/String;>;#conn,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/dao/TableDetails.java;,VariableName,conn,"public static String errorMessage = """";

 public static List<String> getTableNames() {
  List<String> tables = new ArrayList<String>();
  Connection conn = ConnectionManager.openConnection();

  try {
   PreparedStatement pstmt = conn
     .prepareStatement(QueryConstants.TABLE_SELECTION_MYSQL);
   ResultSet rs = pstmt.executeQuery();",conn,connection
Lorg/besus/meice/oramtt/Main$205;.run()V#0#1#e,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/Main.java;,VariableName,e,"    try {
     DatabaseFrame frame = new DatabaseFrame();
     frame.setVisible(true);
    } catch (Exception e) {
     e.printStackTrace();
    }
   }",e,exception
Lorg/besus/meice/oramtt/dao/TableDetails;.insertRow(Ljava/util/Map<Ljava/lang/Integer;Ljava/lang/Object;>;Ljava/lang/String;I)I#0#1#e,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/dao/TableDetails.java;,VariableName,e,"    String tableName = rs.getString(1);
    tables.add(tableName);
   }
  } catch (SQLException e) {
//   e.printStackTrace();
  } finally {
   ConnectionManager.closeConnection();
  }",e,error
Lorg/besus/meice/oramtt/erd/model/Attribute;.getConnectionPoints(Ljava/awt/Point;Ljava/awt/Point;)[I#p1#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/erd/model/Attribute.java;,ParameterName,p1,"private int[] getConnectionPoints(Point p1, Point p2) {
  int[] connectionPoints = new int[4];
  double angle = ((Math.atan((double) (p2.y - p1.y)
    / (double) (p2.x - p1.x))) * 180.0)
    / Math.PI;",p,point
Lorg/besus/meice/oramtt/ui/DatabaseFrame;.initializeTree()V#0#0#tbNodeInd,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/ui/DatabaseFrame.java;,VariableName,tbNodeInd,"    tbNodeCol.add(tbNodeColDetails);
   }

   DefaultMutableTreeNode tbNodeInd = new DefaultMutableTreeNode(
     ""Indices"");
   for (String index : indicesDetails) {
    DefaultMutableTreeNode tbNodeIndexDetails = new DefaultMutableTreeNode(
      index);",ind,indices
Lorg/besus/meice/oramtt/ui/DatabaseFrame;.initializeTree()V#0#0#tbNodeCol,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/ui/DatabaseFrame.java;,VariableName,tbNodeCol,"List<String> indicesDetails = TableDetails
     .retriveConstraints(table);

   DefaultMutableTreeNode node = new DefaultMutableTreeNode(table);

   DefaultMutableTreeNode tbNodeCol = new DefaultMutableTreeNode(
     ""Columns"");
   for (String col : columnDetails) {
    DefaultMutableTreeNode tbNodeColDetails = new DefaultMutableTreeNode(
      col);",col,column
Lorg/besus/meice/oramtt/dao/PopupHandler;.loc)Ljava/awt/Point;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/dao/PopupHandler.java;,FieldName,loc,"public class PopupHandler implements ActionListener {
 JTree tree;
 JPopupMenu popup;
 Point loc;
 static String selectedTableName;

 public PopupHandler(JTree tree, JPopupMenu popup) {
  this.tree = tree;",loc,location
Lorg/besus/meice/oramtt/dao/TableDetails;.retriveColumnDetails(Ljava/lang/String;)Ljava/util/List<Ljava/lang/String;>;#0#0#0#colName,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/dao/TableDetails.java;,VariableName,colName,"   PreparedStatement pstmt = conn
     .prepareStatement(""desc "" + tableName);
   ResultSet rs = pstmt.executeQuery();
   while (rs.next()) {
    String colName = rs.getString(""Field"");
    String colType = rs.getString(""Type"");
    columnDetails.add(colName + "" ["" + colType + ""]"");
   }",col,column
Lorg/besus/meice/oramtt/util/ConnectionManager;.uid)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/util/ConnectionManager.java;,FieldName,uid,"private static String driver = ""com.mysql.jdbc.Driver"";
 private static String url = ""jdbc:mysql://localhost:3306/"";
 private static String database = ""meice"";
 private static String uid = ""root"";
 private static String password = ""root"";",uid,user identifier
Lorg/besus/meice/oramtt/ui/AttributeDialog;.lblAttributeName)Ljavax/swing/JLabel;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/ui/AttributeDialog.java;,FieldName,lblAttributeName,"private final JPanel contentPanel = new JPanel();

 private JButton okButton;
 private JButton cancelButton;
 private JLabel lblAttributeName;
 private JTextField textField;
 private JLabel lblAttributeType;
 private JComboBox cmbDataType;",lbl,label
Lorg/besus/meice/oramtt/ui/ConstraintDailog;.setForeignKeyRefDesc(Ljava/lang/String;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/dao/TableDetails.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/ui/ConstraintDailog.java;,MethodName,setForeignKeyRefDesc," public static void setForeignKeyRefDesc(String foreignKeyRefDesc) {
  ConstraintDailog.foreignKeyRefDesc = foreignKeyRefDesc;
 }",desc,description
Lorg/besus/meice/oramtt/ui/RelationDialog;.lblRelationType)Ljavax/swing/JLabel;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/ui/RelationDialog.java;,FieldName,lblRelationType,"private JButton cancelButton;
 private JLabel lblRelationName;
 private JTextField txtName;
 private JLabel lblRelationType;
 private JComboBox cmbRelationType;
 private JLabel lblFromEntity;
 private JComboBox cmbFromEntity;",lbl,label
Lorg/besus/meice/oramtt/dao/TableDetails;.retriveConstraints(Ljava/lang/String;)Ljava/util/List<Ljava/lang/String;>;#0#0#0#0#foreignKeyVal,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/dao/TableDetails.java;,VariableName,foreignKeyVal,"     String remPart = index.substring(
       index.indexOf(""CONSTRAINT `"") + 12, index.length());
//     System.out.println(""lastPart..."" + remPart);
     String foreignKeyName = remPart.substring(0,
       remPart.indexOf(""`""));
     String foreignKeyVal = remPart.substring(
       remPart.indexOf(""FOREIGN KEY (`"") + 14,
       remPart.indexOf(""`)""));",val,value
Lorg/besus/meice/oramtt/ui/ConstraintDailog;.setForeignKeyRefDesc(Ljava/lang/String;)V#foreignKeyRefDesc#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/ui/ConstraintDailog.java;,ParameterName,foreignKeyRefDesc," public static void setForeignKeyRefDesc(String foreignKeyRefDesc) {
  ConstraintDailog.foreignKeyRefDesc = foreignKeyRefDesc;
 }",ref,reference
Lorg/besus/meice/oramtt/ui/ConstraintDailog;.serialVersionUID)J,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/ui/ConstraintDailog.java;,FieldName,serialVersionUID," private static final long serialVersionUID = 1L;
 private JPanel contentPane;
 private JLabel dbLabel;
 private JLabel tbLabel;",uid,user identifier
Lorg/besus/meice/oramtt/ui/RelationDialog;.cmbToEntity)Ljavax/swing/JComboBox<>;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/ui/RelationDialog.java;,FieldName,cmbToEntity,"private JLabel lblFromEntity;
 private JComboBox cmbFromEntity;
 private JLabel lblToEntity;
 private JComboBox cmbToEntity;

 private Relation relation;
 private ERDiagram diagram;",cmb,combo
Lorg/besus/meice/oramtt/ui/ConstraintDailog;.getForeignKeyRefDesc()Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/ui/ConstraintDailog.java;,MethodName,getForeignKeyRefDesc," static String selectedTableName;

 static String foreignKeyRefDesc;

 public static String getForeignKeyRefDesc() {
  return foreignKeyRefDesc;
 }",desc,description
Lorg/besus/meice/oramtt/ui/DatabaseFrame;.getMenuItem(Ljava/lang/String;Ljava/awt/event/ActionListener;)Ljavax/swing/JMenuItem;#al#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/ui/DatabaseFrame.java;,ParameterName,al," private JMenuItem getMenuItem(String s, ActionListener al) {
  JMenuItem menuItem = new JMenuItem(s);
  menuItem.addActionListener(al);
  return menuItem;
 }",al,action listener
Lorg/besus/meice/oramtt/dao/TableDetails;.getTableData(Ljava/lang/String;Ljava/util/List<Ljava/lang/String;>;)[[Ljava/lang/Object;#0#0#1#i,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/dao/TableDetails.java;,VariableName,i,"   ResultSet rs = pstmt.executeQuery();
   ResultSetMetaData metaData = rs.getMetaData();
   int numberOfColumns = metaData.getColumnCount();

   for (int i = 1; i <= numberOfColumns; i++) {
    columns.add(metaData.getColumnName(i));
   }

   int rowCount = 0;",i,index
Lorg/besus/meice/oramtt/ui/RelationDialog;.lblToEntity)Ljavax/swing/JLabel;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/ui/RelationDialog.java;,FieldName,lblToEntity," private JComboBox cmbRelationType;
 private JLabel lblFromEntity;
 private JComboBox cmbFromEntity;
 private JLabel lblToEntity;
 private JComboBox cmbToEntity;

 private Relation relation;
 private ERDiagram diagram;",lbl,label
Lorg/besus/meice/oramtt/ui/DatabaseFrame$8878;.actionPerformed(Ljava/awt/event/ActionEvent;)V#tcl,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/ui/DatabaseFrame.java;,VariableName,tcl,"   model.addRow(new Object[] {});
   databaseTable = new JTable(model);
   oldRowCount = model.getRowCount() - 1;
   TableCellListener tcl = new TableCellListener(databaseTable, action);
   JPanel rightPane = new JPanel();
   rightPane.setLayout(new BorderLayout(0, 0));
   rightPane.add(toolBar, BorderLayout.NORTH);",tcl,table cell listener
Lorg/besus/meice/oramtt/dao/TableDetails;.retriveColumnDetails(Ljava/lang/String;)Ljava/util/List<Ljava/lang/String;>;#0#0#0#colType,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/dao/TableDetails.java;,VariableName,colType,"   ResultSet rs = pstmt.executeQuery();
   while (rs.next()) {
    String colName = rs.getString(""Field"");
    String colType = rs.getString(""Type"");
    columnDetails.add(colName + "" ["" + colType + ""]"");
   }",col,column
Lorg/besus/meice/oramtt/ui/ConstraintDailog;.setForeignKeyRefDesc(Ljava/lang/String;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/dao/TableDetails.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/ui/ConstraintDailog.java;,MethodName,setForeignKeyRefDesc," public static void setForeignKeyRefDesc(String foreignKeyRefDesc) {
  ConstraintDailog.foreignKeyRefDesc = foreignKeyRefDesc;
 }",ref,reference
Lorg/besus/meice/oramtt/erd/model/Attribute;.paint(Ljava/awt/Point;Ljava/awt/Point;)V#g,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/erd/model/Attribute.java;,VariableName,g,"  int[] connectionPoints = getConnectionPoints(centrePointOfEntity,
    centrePointOfAttribute);
  Graphics g = getEditor().getGraphics();
  g.drawLine(connectionPoints[0], connectionPoints[1],
    connectionPoints[2], connectionPoints[3]);

 }",g,graphics
Lorg/besus/meice/oramtt/ui/AttributeDialog;.cmbEntity)Ljavax/swing/JComboBox<>;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/ui/AttributeDialog.java;,FieldName,cmbEntity,"private JLabel lblAttributeSize;
 private JTextField sizeField;
 private JLabel lblEntity;
 private JComboBox cmbEntity;

 private Attribute attribute;
 private ERDiagram diagram;",cmb,combo
Lorg/besus/meice/oramtt/ui/ConstraintDailog;.setForeignKeyRefDesc(Ljava/lang/String;)V#foreignKeyRefDesc#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/ui/ConstraintDailog.java;,ParameterName,foreignKeyRefDesc," public static void setForeignKeyRefDesc(String foreignKeyRefDesc) {
  ConstraintDailog.foreignKeyRefDesc = foreignKeyRefDesc;
 }",desc,description
Ljava/sql/SQLException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/util/ConnectionManager.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/dao/TableDetails.java;,ClassName,SQLException,"    tables.add(tableName);
   }
  } catch (SQLException e) {
//   e.printStackTrace();
  } finally {
   ConnectionManager.closeConnection();
  }",sql,structured query language
Lorg/besus/meice/oramtt/dao/PopupHandler;.actionPerformed(Ljava/awt/event/ActionEvent;)V#ac,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/dao/PopupHandler.java;,VariableName,ac," public void actionPerformed(ActionEvent e) {
  String ac = e.getActionCommand();
//  System.out.println(""ac."" + ac);
  if (ac.equals(""Insert / Update data"")) {
   (new DatabaseFrame()).retrieveTableDetails();",ac,action
Lorg/besus/meice/oramtt/ui/DatabaseFrame;.initializeTree()V#0#0#0#0#tbNodeColDetails,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/ui/DatabaseFrame.java;,VariableName,tbNodeColDetails,"   DefaultMutableTreeNode tbNodeCol = new DefaultMutableTreeNode(
     ""Columns"");
   for (String col : columnDetails) {
    DefaultMutableTreeNode tbNodeColDetails = new DefaultMutableTreeNode(
      col);
    tbNodeCol.add(tbNodeColDetails);
   }",tb,tool bar
Lorg/besus/meice/oramtt/ui/DatabaseFrame;.getMenuItem(Ljava/lang/String;Ljava/awt/event/ActionListener;)Ljavax/swing/JMenuItem;#s#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/ui/DatabaseFrame.java;,ParameterName,s," private JMenuItem getMenuItem(String s, ActionListener al) {
  JMenuItem menuItem = new JMenuItem(s);
  menuItem.addActionListener(al);
  return menuItem;
 }",s,string
Lorg/besus/meice/oramtt/ui/RelationDialog;.txtName)Ljavax/swing/JTextField;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/ui/RelationDialog.java;,FieldName,txtName,"private JButton okButton;
 private JButton cancelButton;
 private JLabel lblRelationName;
 private JTextField txtName;
 private JLabel lblRelationType;
 private JComboBox cmbRelationType;
 private JLabel lblFromEntity;",txt,text
Lorg/besus/meice/oramtt/ui/RelationDialog;.lblFromEntity)Ljavax/swing/JLabel;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/ui/RelationDialog.java;,FieldName,lblFromEntity,"private JTextField txtName;
 private JLabel lblRelationType;
 private JComboBox cmbRelationType;
 private JLabel lblFromEntity;
 private JComboBox cmbFromEntity;
 private JLabel lblToEntity;
 private JComboBox cmbToEntity;",lbl,label
Lorg/besus/meice/oramtt/ui/AttributeDialog;.cmbDataType)Ljavax/swing/JComboBox<>;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/ui/AttributeDialog.java;,FieldName,cmbDataType,"private JLabel lblAttributeName;
 private JTextField textField;
 private JLabel lblAttributeType;
 private JComboBox cmbDataType;
 private JLabel lblAttributeSize;
 private JTextField sizeField;
 private JLabel lblEntity;",cmb,combo
Lorg/besus/meice/oramtt/dao/TableDetails;.getTableNames()Ljava/util/List<Ljava/lang/String;>;#0#0#pstmt,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/DB-Manager-master/src/org/besus/meice/oramtt/dao/TableDetails.java;,VariableName,pstmt,"String command = """";
  Connection conn = ConnectionManager.openConnection();
  try {
   PreparedStatement pstmt = conn
     .prepareStatement(""desc "" + tableName);
   ResultSet rs = pstmt.executeQuery();
   while (rs.next()) {
    String key = rs.getString(""Key"");",pstmt,prepared statement
Lnet/filebot/ui/rename/RenameList$3140;.mouseDragged(Ljava/awt/event/MouseEvent;)V#m#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/rename/RenameList.java;,ParameterName,m,"  public void mousePressed(MouseEvent m) {
   lastIndex = getListComponent().getSelectedIndex();
  }",m,mouse
Lnet/filebot/similarity/EpisodeMetrics$5168;.getSimilarity(Ljava/lang/Object;Ljava/lang/Object;)F#f2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/similarity/EpisodeMetrics.java;,VariableName,f2,"public float getSimilarity(Object o1, Object o2) {
   String[] f1 = normalize(fields(o1));
   String[] f2 = normalize(fields(o2));

   // match all fields and average similarity
   double sum = 0;
   for (int i = 0; i < f1.length; i++) {",f,fields
Ljava/net/URI;.toURL()Ljava/net/URL;|Ljava/net/MalformedURLException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/test/net/filebot/web/AnidbClientTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/cli/ScriptSource.java;,MethodName,toURL,"  public ScriptProvider getScriptProvider(String input) throws Exception {
   URI resource = new URI(getApplicationProperty(""github.stable""));
   Resource<byte[]> bundle = getCache().bytes(resource, URI::toURL, XZInputStream::new).expire(Cache.ONE_WEEK);

   return new ScriptBundle(bundle, getClass().getResourceAsStream(""repository.cer""));
  }",url,uniform resource locator
Lnet/filebot/similarity/DateMatcher$DateFormatPattern;.match(Ljava/lang/CharSequence;)Lnet/filebot/web/SimpleDate;#seq#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/similarity/DateMatcher.java;,ParameterName,seq," protected String getMonthNamePatternGroup(TextStyle style, Locale locale) {
  return StreamEx.of(Month.values()).map(m -> m.getDisplayName(style, locale)).map(Pattern::quote).joining(""|"", ""("", "")"");
 }

 public SimpleDate match(CharSequence seq) {
  for (DatePattern pattern : patterns) {
   SimpleDate match = pattern.match(seq);

   if (match != null) {",seq,sequence
Lnet/filebot/ui/filter/FileTree$ExpandCollapsePopupListener;.mousePressed(Ljava/awt/event/MouseEvent;)V#e#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/filter/FileTree.java;,ParameterName,e," public void mouseReleased(MouseEvent e) {
   maybeShowPopup(e);
  }
",e,event
Lnet/filebot/ui/list/ListPanel;.setFormat(Lnet/filebot/format/ExpressionFormat;)V#0#itr,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/list/ListPanel.java;,VariableName,itr,"  this.format = format;

  // update items
  for (ListIterator<ListItem> itr = list.getModel().listIterator(); itr.hasNext();) {
   itr.set(new ListItem(itr.next().getBindings(), format));
  }
 }",itr,iterator
Lnet/filebot/ui/SelectButtonTextField$CompletionCellRenderer;.getListCellRendererComponent(Ljavax/swing/JList;Ljava/lang/Object;IZZ)Ljava/awt/Component;#htmlText,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/SelectButtonTextField.java;,VariableName,htmlText,"// highlight the matching sequence
   Matcher matcher = Pattern.compile(highlightText, Pattern.LITERAL | Pattern.CASE_INSENSITIVE).matcher(value.toString());

   // use no-break, because we really don't want line-wrapping in our table cells
   StringBuffer htmlText = new StringBuffer(""<html><nobr>"");
   if (matcher.find()) {
    if (isSelected) {
     matcher.appendReplacement(htmlText, ""<span style='font-weight: bold;'>$0</span>"");",html,hyper text markup language
Lnet/filebot/similarity/CommonSequenceMatcher;.(Ljava/text/Collator;IZ)V#commonSequenceMaxStartIndex#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/similarity/CommonSequenceMatcher.java;,ParameterName,commonSequenceMaxStartIndex," protected final Collator collator;
 protected final int commonSequenceMaxStartIndex;
 protected final boolean returnFirstMatch;

 public CommonSequenceMatcher(Collator collator, int commonSequenceMaxStartIndex, boolean returnFirstMatch) {
  this.collator = collator;
  this.commonSequenceMaxStartIndex = commonSequenceMaxStartIndex;
  this.returnFirstMatch = returnFirstMatch;
 }",max,maximum
Lnet/filebot/ui/subtitle/SubtitleDropTarget;.paintComponent(Ljava/awt/Graphics;)V#w,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/subtitle/SubtitleDropTarget.java;,VariableName,w,"protected void paintComponent(Graphics g) {
  Graphics2D g2d = (Graphics2D) g;
  g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

  float w = getWidth();
  float h = getHeight();
  float d = Math.min(w, h) - 1f;",w,width
Lnet/filebot/torrent/BDecoder;.getNumberFromStream(Ljava/io/InputStream;C)J|Ljava/io/IOException;#str_value,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/torrent/BDecoder.java;,VariableName,str_value,"  // return the value
  CharBuffer cb = ISO_8859_1.decode(ByteBuffer.wrap(tempArray));

  String str_value = new String(cb.array(), 0, cb.limit());

  return Long.parseLong(str_value);
 }",str,string
Lnet/filebot/web/OMDbClient;.getMovieInfo(Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Z)Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;|Ljava/lang/Exception;#y#0#2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/OMDbClient.java;,ParameterName,y," public Map<String, String> getMovieInfo(Integer i, String t, String y, boolean tomatoes) throws Exception {
  // e.g. http://www.imdbapi.com/?i=tt0379786&r=xml&tomatoes=true
  Map<String, Object> param = new LinkedHashMap<String, Object>(2);
  if (i != null) {
   param.put(""i"", String.format(""tt%07d"", i));",y,year
Lnet/filebot/web/WebRequest;.CHARSET_UTF8)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/WebRequest.java;,FieldName,CHARSET_UTF8,"public final class WebRequest {

 private static final String ENCODING_GZIP = ""gzip"";
 private static final String CHARSET_UTF8 = ""UTF-8"";

 public static Reader getReader(URLConnection connection) throws IOException {
  try {
   connection.addRequestProperty(""Accept-Encoding"", ENCODING_GZIP);",utf,unicode transformation format
Lnet/filebot/ui/rename/FormatDialog;.(Ljava/awt/Window;Lnet/filebot/ui/rename/FormatDialog$Mode;Lnet/filebot/format/MediaBindingBean;Z)V#initMode#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/rename/FormatDialog.java;,ParameterName,initMode," public FormatDialog(Window owner, Mode initMode, MediaBindingBean bindings, boolean locked) {
  super(owner, ModalityType.DOCUMENT_MODAL);

  // initialize hidden
  progressIndicator.setVisible(false);",init,initialize
Lnet/filebot/ui/sfv/ChecksumCell;.pcs)Ljavax/swing/event/SwingPropertyChangeSupport;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/sfv/ChecksumCell.java;,FieldName,pcs,"  // forward property change events
  task.addPropertyChangeListener(taskListener);

  // state changed to PENDING
  pcs.firePropertyChange(""state"", null, getState());
 }",pcs,property change support
Lnet/filebot/web/ShooterSubtitles;.getSubApiUrl()Ljava/net/URL;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/ShooterSubtitles.java;,MethodName,getSubApiUrl," protected URL getSubApiUrl() {
  try {
   return new URL(System.getProperty(""net.filebot.web.ShooterSubtitles.url"", ""https://www.shooter.cn/api/subapi.php""));
  } catch (MalformedURLException e) {",api,application programming interface
Ljava/time/ZoneOffset;.UTC)Ljava/time/ZoneOffset;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/License.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/format/MediaBindingBean.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/WebRequest.java;,VariableName,UTC," private String getExpirationDate() {
  return expires == null ? null : expires.atZone(ZoneOffset.UTC).format(DateTimeFormatter.ISO_LOCAL_DATE);
 }",utc,Coordinated Universal Time
Lnet/filebot/ui/subtitle/SubtitleDropTarget$3104;.dragExit(Ljava/awt/dnd/DropTargetEvent;)V#dte#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/subtitle/SubtitleDropTarget.java;,ParameterName,dte,"  @Override
  public void dragExit(DropTargetEvent dte) {
   // reset to default state
   setDropAction(DropAction.Accept);
  };",dte,Drop Target Event
Lnet/filebot/web/SortOrder;.DVD)Lnet/filebot/web/SortOrder;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/TheTVDBClient.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/SortOrder.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/TheTVDBClientV1.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/test/net/filebot/web/TheTVDBClientTest.java;,VariableName,DVD,"// adjust for forced absolute numbering (if possible)
    if (sortOrder == SortOrder.DVD) {
     Integer dvdSeasonNumber = getInteger(it, ""dvdSeason"");
     Integer dvdEpisodeNumber = getInteger(it, ""dvdEpisodeNumber"");",dvd,Digital Video Disk
Lnet/filebot/ui/sfv/SwingWorkerCellRenderer;.repaint(Ljava/awt/Rectangle;)V#r#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/sfv/SwingWorkerCellRenderer.java;,ParameterName,r," /**
  * Overridden for performance reasons.
  */
 @Override
 public void repaint(Rectangle r) {
 }",r,rectangle
Lnet/filebot/ui/sfv/HighlightPatternCellRenderer;.createReplacement(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#cssFontWeight#0#2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/sfv/HighlightPatternCellRenderer.java;,ParameterName,cssFontWeight," protected String createReplacement(String cssColor, String cssFontSize, String cssFontWeight) {
  // build replacement string like
  // e.g. <span style='font-size: smaller; color: #009900;'>$0</span>
  StringBuilder replacement = new StringBuilder(60);",css,cascading style sheets
Lnet/filebot/similarity/FileSizeMetric;.getSimilarity(Ljava/lang/Object;Ljava/lang/Object;)F#l2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/similarity/FileSizeMetric.java;,VariableName,l2,"  if (l1 < 0)
   return 0;

  long l2 = getLength(o2);
  if (l2 < 0)
   return 0;",l,length
Lnet/filebot/util/ui/SwingUI;.showMultiValueInputDialog(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;Ljava/awt/Component;)Ljava/util/List<Ljava/lang/String;>;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/rename/EpisodeListMatcher.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/ui/SwingUI.java;,MethodName,showMultiValueInputDialog," public static boolean isMaximized(Frame frame) {
  return (frame.getExtendedState() & Frame.MAXIMIZED_BOTH) != 0;
 }

 public static List<String> showMultiValueInputDialog(final Object message, final String initialValue, final String title, final Component parent) {
  String input = showInputDialog(message, initialValue, title, parent);
  if (input == null || input.isEmpty()) {
   return emptyList();",multi,multiple
Lorg/xml/sax/XMLReader;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/WebRequest.java;,ClassName,XMLReader,"  sax.setValidating(false);
  sax.setNamespaceAware(false);

  XMLReader reader = sax.newSAXParser().getXMLReader();

  // throw exception on error
  reader.setErrorHandler(new DefaultHandler());",xml,extensible markup language
Lnet/filebot/StandardRenameAction;.revert(Ljava/io/File;Ljava/io/File;)Ljava/io/File;|Ljava/io/IOException;#originalAttr,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/StandardRenameAction.java;,VariableName,originalAttr,"   return FileUtilities.moveRename(current, original);
  }

  BasicFileAttributes currentAttr = Files.readAttributes(current.toPath(), BasicFileAttributes.class, LinkOption.NOFOLLOW_LINKS);
  BasicFileAttributes originalAttr = Files.readAttributes(original.toPath(), BasicFileAttributes.class, LinkOption.NOFOLLOW_LINKS);

  // reverse symlink
  if (currentAttr.isSymbolicLink() && !originalAttr.isSymbolicLink()) {",attr,attributes
Lnet/filebot/util/ui/ListView;.addSelectionInterval(Ljava/awt/Rectangle;)V#p2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/ui/ListView.java;,VariableName,p2,"public void addSelectionInterval(Rectangle selection) {
  Point p1 = selection.getLocation();
  Point p2 = new Point(p1.x + selection.width, p1.y + selection.height);

  int startIndex = locationToIndex(p1);
  int endIndex = locationToIndex(p2);",p,point
Ljava/awt/geom/RectangularShape;.getMinY()D,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/ui/ProgressIndicator.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/ui/GradientStyle.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/platform/mac/DropToUnlock.java;,MethodName,getMinY,"  g2d.setColor(Color.gray);
  g2d.setFont(g2d.getFont().deriveFont(Font.ITALIC, 36));
  g2d.drawString(""Drop 'em"", (int) dropArea.getMinX() + 15, (int) dropArea.getMinY() + 40);
  g2d.drawString(""to Unlock 'em"", (int) dropArea.getMinX() + 45, (int) dropArea.getMinY() + 40 + 35);
 }",min,minimum
Lnet/filebot/media/AutoDetection;.anyMatch(Ljava/io/File;Ljava/util/regex/Pattern;)Z#0#f,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/media/AutoDetection.java;,VariableName,f," protected Stream<File> resolve(Stream<File> root, FileFilter excludes) {
  return root.flatMap(f -> {
   if (f.isHidden() || excludes.accept(f)) {
    return Stream.empty();
   }",f,folder
Lnet/filebot/ui/rename/RenamePanel;.getDebugInfo()Ljava/lang/String;|Ljava/lang/Exception;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/rename/RenamePanel.java;,MethodName,getDebugInfo,"private String getDebugInfo() throws Exception {
  StringBuilder sb = new StringBuilder();

  for (Match<Object, File> m : renameModel.matches()) {
   String f = getStructurePathTail(m.getCandidate()).getPath();",info,information
Ljavax/swing/plaf/TextUI;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/rename/CharacterHighlightPainter.java;,ClassName,TextUI,"try {
   // determine locations
   TextUI mapper = c.getUI();
   Rectangle2D p1 = mapper.modelToView2D(c, offset1, Bias.Backward);
   Rectangle2D p2 = mapper.modelToView2D(c, offset2, Bias.Backward);

   Rectangle2D r = p1.createUnion(p2);",ui,user interface
Lnet/filebot/util/JsonUtilities;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/JsonUtilities.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/CachedResource.java;,ClassName,JsonUtilities,"public class JsonUtilities {

 public static final Object[] EMPTY_ARRAY = new Object[0];

 public static Object readJson(CharSequence json) {
  if (json.length() == 0) {",json,javascript object notation
Lnet/filebot/similarity/DateMatcher$DateFilter;.minYear)I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/similarity/DateMatcher.java;,FieldName,minYear,"public static class DateFilter implements Predicate<LocalDate> {

  public final LocalDate min;
  public final LocalDate max;

  private final int minYear;
  private final int maxYear;

  public DateFilter(LocalDate min, LocalDate max) {
   this.min = min;",min,minimum
Lnet/filebot/util/ui/AbstractFancyListCellRenderer;.configureListCellRendererComponent(Ljavax/swing/JList;Ljava/lang/Object;IZZ)V#sc,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/ui/AbstractFancyListCellRenderer.java;,VariableName,sc,"protected void configureListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
  setGradientPainted(isSelected);
  setBorderPainted(isSelected);

  Color sc = list.getSelectionBackground();

  if (isSelected) {
   setGradientColors(sc.brighter(), sc);
  }
",sc,selection
Lnet/filebot/cli/PseudoConsole;.(Ljava/io/InputStream;Ljava/io/PrintStream;Ljava/nio/charset/Charset;)V#cs#0#2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/cli/PseudoConsole.java;,ParameterName,cs,"private final BufferedReader reader;
 private final PrintWriter writer;

 public PseudoConsole(InputStream in, PrintStream out, Charset cs) {
  reader = new BufferedReader(new InputStreamReader(in, cs));
  writer = new PrintWriter(new OutputStreamWriter(out, cs), true);
 }",cs,charset
Lnet/filebot/similarity/EpisodeMetricsTest;.substringMetrics()V#fY2T2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/test/net/filebot/similarity/EpisodeMetricsTest.java;,VariableName,fY2T2,"public void substringMetrics() {
  Episode eY1T1 = new Episode(""Doctor Who"", 1, 1, ""Rose"");

  File fY1T1 = new File(""Doctor Who (2005)/Doctor Who - 1x01 - Rose"");
  File fY2T2 = new File(""Doctor Who (1963)/Doctor Who - 1x01 - An Unearthly Child"");

  assertEquals(0.5, SubstringFields.getSimilarity(eY1T1, fY1T1), 0.1);
  assertEquals(0.5, SubstringFields.getSimilarity(eY1T1, fY2T2), 0.1);",f,file
Lnet/filebot/ui/sfv/ChecksumButton;.paintComponent(Ljava/awt/Graphics;)V#g#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/sfv/ChecksumButton.java;,ParameterName,g," protected void paintComponent(Graphics g) {
  Graphics2D g2d = (Graphics2D) g;

  g2d.setRenderingHint(KEY_TEXT_ANTIALIASING, VALUE_TEXT_ANTIALIAS_ON);
  g2d.setRenderingHint(KEY_RENDERING, VALUE_RENDER_QUALITY);",g,graphics
Lnet/filebot/media/AutoDetection$Group;.lambda$3(Lnet/filebot/media/AutoDetection$Group;Lnet/filebot/media/AutoDetection$Type;)I#t#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/media/AutoDetection.java;,VariableName,t,"   if (size() != other.size()) {
    return Integer.compare(size(), other.size());
   }

   return stream(Type.values()).mapToInt(t -> {
    return Comparator.nullsLast(String.CASE_INSENSITIVE_ORDER).compare(Objects.toString(get(t), null), Objects.toString(other.get(t), null));
   }).filter(i -> i != 0).findFirst().orElse(0);
  }",t,type
Lnet/filebot/ui/episodelist/SeasonSpinnerModel;.SEASON_MAX_VALUE)I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/episodelist/SeasonSpinnerModel.java;,FieldName,SEASON_MAX_VALUE,"class SeasonSpinnerModel extends SpinnerListModel {

 public static final int ALL_SEASONS = 0;

 public static final int YEAR_SEASON_MIN_VALUE = 1990;
 public static final int YEAR_SEASON_MAX_VALUE = 2100;

 public static final int SEASON_MIN_VALUE = 1;
 public static final int SEASON_MAX_VALUE = 50;",max,maximum
LCmdLineParser;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/cli/BindingsHandler.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/cli/ArgumentBean.java;,ClassName,CmdLineParser," public ArgumentBean(String... args) throws CmdLineException {
  this.args = args;

  CmdLineParser parser = new CmdLineParser(this);
  parser.parseArgument(args);
 }",cmd,command
Lnet/filebot/ui/transfer/LoadAction;.getFileFilter(Lnet/filebot/ui/transfer/TransferablePolicy;)Lnet/filebot/util/FileUtilities$ExtensionFileFilter;#0#ftp,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/transfer/LoadAction.java;,VariableName,ftp," protected ExtensionFileFilter getFileFilter(TransferablePolicy transferablePolicy) {
  if (transferablePolicy instanceof FileTransferablePolicy) {
   final FileTransferablePolicy ftp = ((FileTransferablePolicy) transferablePolicy);
   if (ftp.getFileFilterDescription() != null && ftp.getFileFilterExtensions() != null) {
    return new ExtensionFileFilter(ftp.getFileFilterExtensions()) {
     @Override",ftp,File Transferable Policy
Lnet/filebot/util/ui/ColorTintImageFilter;.filterRGB(III)I#rgb#0#2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/ui/ColorTintImageFilter.java;,ParameterName,rgb," @Override
 public int filterRGB(int x, int y, int rgb) {
  Color c = new Color(rgb, true);

  int red = (int) ((c.getRed() * (1 - intensity)) + color.getRed() * intensity);
  int green = (int) ((c.getGreen() * (1 - intensity)) + color.getGreen() * intensity);",rgb,red green blue
Ljava/nio/file/attribute/FileTime;.toMillis()J,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/similarity/TimeStampMetric.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/media/MetaAttributes.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/format/ExpressionFormatMethods.java;,MethodName,toMillis,"public class TimeStampMetric implements SimilarityMetric {

 private long epoch;

 public TimeStampMetric(int i, ChronoUnit unit) {
  this.epoch = unit.getDuration().multipliedBy(i).toMillis();
 }
",millis,milliseconds
Lnet/filebot/vfs/SimpleFileInfo;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/archive/SevenZipExecutable.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/filter/ExtractTool.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/cli/CmdlineOperations.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/rename/RenamePanel.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/vfs/SimpleFileInfo.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/rename/NamesListTransferablePolicy.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/archive/SevenZipNativeBindings.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/media/MetaAttributes.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/archive/ApacheVFS.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/torrent/Torrent.java;,ClassName,SimpleFileInfo,"    size = Long.parseLong(value);
   }

   if (path != null && size >= 0) {
    paths.add(new SimpleFileInfo(path, size));

    path = null;
    size = -1;
   }",info,information
Lnet/filebot/cli/PseudoConsole;.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintWriter;#fmt#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/cli/PseudoConsole.java;,ParameterName,fmt,"public Reader reader() {
  return reader;
 }

 public PrintWriter format(String fmt, Object... args) {
  return writer.format(fmt, args);
 }",fmt,format
Lnet/filebot/web/ShooterSubtitles;.lambda$0(Ljava/util/Locale;)Z#l#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/ShooterSubtitles.java;,VariableName,l," public synchronized List<SubtitleDescriptor> getSubtitleList(File file, Locale locale) throws Exception {
  if (Stream.of(Locale.CHINESE, Locale.ENGLISH).noneMatch(l -> l.getLanguage().equals(locale.getLanguage()))) {
   throw new IllegalArgumentException(""Language not supported: "" + locale);
  }",l,locale
Lnet/filebot/similarity/FileSizeMetric;.getSimilarity(Ljava/lang/Object;Ljava/lang/Object;)F#l1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/similarity/FileSizeMetric.java;,VariableName,l1,"public float getSimilarity(Object o1, Object o2) {
  long l1 = getLength(o1);
  if (l1 < 0)
   return 0;",l,length
Lnet/filebot/ui/HistoryPanel;.add(Ljava/lang/String;Ljava/net/URI;Ljavax/swing/Icon;Ljava/lang/String;Ljava/lang/String;)V#c1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/HistoryPanel.java;,VariableName,c1," public void add(String column1, URI link, Icon icon, String column2, String column3) {
  JComponent c1 = link != null ? new LinkButton(column1, null, icon, link) : new JLabel(column1, icon, SwingConstants.LEFT);
  JComponent c2 = new JLabel(column2, SwingConstants.RIGHT);
  JComponent c3 = new JLabel(column3, SwingConstants.RIGHT);",c,component
Lnet/filebot/cli/ScriptShell;.createScriptEngine()Ljavax/script/ScriptEngine;#config,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/cli/ScriptShell.java;,VariableName,config," public static ScriptEngine createScriptEngine() {
  ResourceBundle bundle = ResourceBundle.getBundle(ScriptShell.class.getName());

  CompilerConfiguration config = new CompilerConfiguration();
  config.setScriptBaseClass(bundle.getString(""scriptBaseClass""));",config,configuration
Lnet/filebot/ui/MainFrame$PanelSelectionList$DragDropListener;.dragEnter(Ljava/awt/dnd/DropTargetDragEvent;)V#dtde#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/MainFrame.java;,ParameterName,dtde,"   public void dragOver(DropTargetDragEvent dtde) {
    if (selectEnabled) {
     int index = locationToIndex(dtde.getLocation());
     setSelectedIndex(index);
    }
   }",dtde,Drop Target Drag Event
Lnet/filebot/platform/gnome/NativeGVFS;.getPathForURI(Ljava/net/URI;)Ljava/io/File;#uri#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/platform/gnome/NativeGVFS.java;,ParameterName,uri,"private static final LibGIO lib_gio = (LibGIO) Native.loadLibrary(""gio-2.0"", LibGIO.class);
 private static final Pointer gvfs = lib_gio.g_vfs_get_default();

 public File getPathForURI(URI uri) {
  Pointer gfile = lib_gio.g_vfs_get_file_for_uri(gvfs, uri.toString());
  Pointer chars = lib_gio.g_file_get_path(gfile);",uri,uniform resource identifier
Lnet/filebot/similarity/EpisodeMetrics$18593;.getHint(Ljava/lang/Object;)Ljava/util/Set<Ljava/lang/String;>;#o#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/similarity/EpisodeMetrics.java;,ParameterName,o," public Object getTitle(Object o) {
   if (o instanceof Episode) {
    Episode e = (Episode) o;
    return e.getSeriesName() + "" "" + e.getTitle();
   }",o,object
Lnet/filebot/util/TeePrintStream;.write([B)V|Ljava/io/IOException;#b#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/TeePrintStream.java;,ParameterName,b," public void write(int b) {
  super.write(b);
  cc.write(b);
 }",b,byte
Lnet/filebot/media/MediaDetection;.detectSeriesNames(Ljava/util/Collection<Ljava/io/File;>;Ljava/util/List<Lnet/filebot/media/IndexEntry<Lnet/filebot/web/SearchResult;>;>;Ljava/util/Locale;)Ljava/util/List<Ljava/lang/String;>;|Ljava/lang/Exception;#3#0#0#0#0#sn,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/media/MediaDetection.java;,VariableName,sn,"    for (int i = 0; i < 3 && f != null && !isStructureRoot(f); i++, f = f.getParentFile()) {
     String fn = getName(f);

     // try to minimize noise
     String sn = strictSeriesNameMatcher.matchByEpisodeIdentifier(fn);
     if (sn != null) {
      fn = sn;
     }",sn,series name
Lnet/filebot/ui/filter/MediaInfoTool;.lambda$5(Ljava/util/List;Lnet/filebot/ui/filter/MediaInfoTool$MediaInfoKey;)[Ljava/lang/String;#k#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/filter/MediaInfoTool.java;,VariableName,k,"     mi.snapshot().forEach((kind, streams) -> {
      IntStream.range(0, streams.size()).forEach(i -> {
       streams.get(i).forEach((name, value) -> {
        String[] values = data.computeIfAbsent(new MediaInfoKey(kind, i, name), k -> new String[files.size()]);
        values[f] = value;
       });",k,key
Lnet/filebot/StandardRenameAction$1917;.rename(Ljava/io/File;Ljava/io/File;)Ljava/io/File;|Ljava/lang/Exception;#dest,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/StandardRenameAction.java;,VariableName,dest,"public File rename(File from, File to) throws Exception {
   File dest = FileUtilities.resolveDestination(from, to);

   // move file and the create a symlink to the new location via NIO.2
   try {
    Files.move(from.toPath(), dest.toPath());",dest,destination
Lnet/filebot/similarity/SeasonEpisodeMatcher;.multi(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List<Lnet/filebot/similarity/SeasonEpisodeMatcher$SxE;>;#s,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/similarity/SeasonEpisodeMatcher.java;,VariableName,s,"  if (season == null && stats.getMax() - stats.getMin() >= 9) {
   return emptyList();
  }

  Integer s = matchInteger(season);
  return IntStream.rangeClosed(stats.getMin(), stats.getMax()).boxed().map(e -> new SxE(s, e)).collect(toList());
 }",s,season
Lnet/filebot/web/TheTVDBClientV1;.getArtwork(ILjava/lang/String;Ljava/util/Locale;)Ljava/util/List<Lnet/filebot/web/Artwork;>;|Ljava/lang/Exception;#dom,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/TheTVDBClientV1.java;,VariableName,dom," public List<SearchResult> fetchSearchResult(String query, Locale locale) throws Exception {
  // perform online search
  Document dom = getXmlResource(MirrorType.SEARCH, ""GetSeries.php?seriesname="" + encode(query, true) + ""&language="" + getLanguageCode(locale));

  Map<Integer, SearchResult> resultSet = new LinkedHashMap<Integer, SearchResult>();

  for (Node node : selectNodes(""Data/Series"", dom)) {",dom,document
Lnet/filebot/format/AssociativeEnumObject;.toArray<T:Ljava/lang/Object;>([TT;)[TT;#a#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/format/AssociativeEnumObject.java;,ParameterName,a," public <T> T[] toArray(T[] a) {
  return values.values().toArray(a);
 }
",a,array
Lnet/filebot/web/SeriesInfo;.(Lnet/filebot/web/Datasource;Lnet/filebot/web/SortOrder;Ljava/util/Locale;Ljava/lang/Integer;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/SeriesInfo.java;,MethodName,SeriesInfo," public SeriesInfo(Datasource database, Locale language, Integer id) {
  this.database = database.getIdentifier();
  this.language = language.getLanguage();
  this.id = id;
 }",info,information
Lnet/filebot/similarity/CrossPropertyMetric;.getSimilarity(Ljava/lang/Object;Ljava/lang/Object;)F#m1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/similarity/CrossPropertyMetric.java;,VariableName,m1," public float getSimilarity(Object o1, Object o2) {
  Map<String, Object> m1 = getProperties(o1);
  if (m1.isEmpty())
   return 0;
",m,map
Lnet/filebot/ui/subtitle/SubtitlePanel$QueryFilter;.remove(Ljava/lang/String;)Ljava/lang/String;#s#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/subtitle/SubtitlePanel.java;,ParameterName,s,"  public T match(String s) {
   Matcher m = pattern.matcher(s);
   if (m.find()) {
    return parser.apply(m.group(m.groupCount()));
   }",s,string
Lnet/filebot/media/MetaAttributes;.toJson(Ljava/lang/Object;)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/format/MediaBindingBean.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/rename/RenamePanel.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/rename/FormatDialog.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/media/MetaAttributes.java;,MethodName,toJson," public String getInfoObjectDump() {
  return MetaAttributes.toJson(infoObject);
 }",json,javascript object notation
Lnet/filebot/ui/episodelist/SeasonSpinnerModel;.YEAR_SEASON_MIN_VALUE)I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/episodelist/SeasonSpinnerModel.java;,FieldName,YEAR_SEASON_MIN_VALUE,"class SeasonSpinnerModel extends SpinnerListModel {

 public static final int ALL_SEASONS = 0;

 public static final int YEAR_SEASON_MIN_VALUE = 1990;
 public static final int YEAR_SEASON_MAX_VALUE = 2100;

 public static final int SEASON_MIN_VALUE = 1;
 public static final int SEASON_MAX_VALUE = 50;",min,minimum
Lnet/filebot/ui/MainFrame$PanelSelectionList;.lambda$0(Lnet/filebot/ui/PanelBuilder;)I#p#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/MainFrame.java;,VariableName,p,"  public PanelSelectionList(PanelBuilder[] builders) {
   super(builders);

   setCellRenderer(new PanelCellRenderer());
   setPrototypeCellValue(stream(builders).max(comparingInt(p -> p.getName().length())).get());

   setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
   setBorder(createEmptyBorder(4, 5, 4, 5));",p,panel
Lnet/filebot/subtitle/SubtitleMetrics$1247;.getSimilarity(Ljava/lang/Object;Ljava/lang/Object;)F#o1#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/subtitle/SubtitleMetrics.java;,ParameterName,o1,"public enum SubtitleMetrics implements SimilarityMetric {

 // subtitle verification metric specifically excluding SxE mismatches
 AbsoluteSeasonEpisode(new SimilarityMetric() {

  @Override
  public float getSimilarity(Object o1, Object o2) {
   float f = SeasonEpisode.getSimilarity(o1, o2);
   if (f == 0 && (getEpisodeIdentifier(o1.toString(), true) == null) == (getEpisodeIdentifier(o2.toString(), true) == null)) {
    return 0;",o,object
Lnet/filebot/ui/rename/PresetEditor;.setPreset(Lnet/filebot/ui/rename/Preset;)V#p#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/rename/PresetEditor.java;,ParameterName,p,"public void setPreset(Preset p) {
  presetNameHeader.getTitleLabel().setText(p.getName());
  pathInput.setText(p.getInputFolder() == null ? """" : p.getInputFolder().getPath());
  filterEditor.setText(p.getIncludeFilter() == null ? """" : p.getIncludeFilter().getExpressionFilter().getExpression());",p,preset
Lnet/filebot/ui/rename/RenameListCellRenderer;.resolveAbsolutePath(Ljava/io/File;Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;#targetDir#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/rename/RenameListCellRenderer.java;,ParameterName,targetDir," protected File resolveAbsolutePath(File targetDir, String path, String extension) {
  File f = new File(extension == null || extension.isEmpty() ? path : String.format(""%s.%s"", path, extension));
  if (!f.isAbsolute()) {
   f = new File(targetDir, f.getPath()); // resolve path against target folder",dir,directory
Lnet/filebot/web/OMDbClient;.getMovieInfo(Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Z)Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;|Ljava/lang/Exception;#param,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/OMDbClient.java;,VariableName,param,"public Map<String, String> getMovieInfo(Integer i, String t, String y, boolean tomatoes) throws Exception {
  // e.g. http://www.imdbapi.com/?i=tt0379786&r=xml&tomatoes=true
  Map<String, Object> param = new LinkedHashMap<String, Object>(2);
  if (i != null) {
   param.put(""i"", String.format(""tt%07d"", i));
  }",param,parameter
Lnet/filebot/web/TheTVDBSeriesInfo;.getBannerUrl()Ljava/net/URL;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/test/net/filebot/web/TheTVDBClientTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/TheTVDBSeriesInfo.java;,MethodName,getBannerUrl," public URL getBannerUrl() {
  return banner;
 }",url,uniform resource locator
Lnet/filebot/web/AcoustIDClient;.lambda$1(Ljava/util/Map;Ljava/util/Map;)I#0#i2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/AcoustIDClient.java;,VariableName,i2,"for (Object result : getArray(data, ""results"")) {
   // pick most likely matching recording
   return streamJsonObjects(result, ""recordings"").sorted((r1, r2) -> {
    Integer i1 = getInteger(r1, ""duration"");
    Integer i2 = getInteger(r2, ""duration"");
    return Double.compare(i1 == null ? Double.NaN : Math.abs(i1 - targetDuration), i2 == null ? Double.NaN : Math.abs(i2 - targetDuration));
   }).map((Map<?, ?> recording) -> {",i,integer
Lnet/filebot/similarity/TimeStampMetric;.getTimeStamp(Ljava/lang/Object;)J#0#0#0#attr,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/similarity/TimeStampMetric.java;,VariableName,attr,"if (object instanceof File) {
   File f = (File) object;
   try {
    BasicFileAttributes attr = Files.readAttributes(f.toPath(), BasicFileAttributes.class);
    long creationTime = attr.creationTime().toMillis();
    if (creationTime > 0) {
     return creationTime;",attr,attribute
Lnet/filebot/ui/episodelist/SeasonSpinnerModel;.SEASON_MIN_VALUE)I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/episodelist/SeasonSpinnerModel.java;,FieldName,SEASON_MIN_VALUE,"class SeasonSpinnerModel extends SpinnerListModel {

 public static final int ALL_SEASONS = 0;

 public static final int YEAR_SEASON_MIN_VALUE = 1990;
 public static final int YEAR_SEASON_MAX_VALUE = 2100;

 public static final int SEASON_MIN_VALUE = 1;
 public static final int SEASON_MAX_VALUE = 50;",min,minimum
Lnet/filebot/cli/ScriptShellBaseClass;.get_args()Lnet/filebot/cli/ArgumentBean;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/cli/ScriptShellBaseClass.java;,MethodName,get_args," // define global variable: _args
 public ArgumentBean get_args() {
  return getArgumentBean();
 }",args,arguments
Lnet/filebot/platform/mac/MacAppUtilities;.initializeApplication(Ljavax/swing/JMenuBar;Ljava/util/function/Consumer<Ljava/util/List<Ljava/io/File;>;>;)V#appMenuBar#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/platform/mac/MacAppUtilities.java;,ParameterName,appMenuBar,"public static void initializeApplication(JMenuBar appMenuBar, Consumer<List<File>> openFileHandler) {
  // improved UI defaults
  UIManager.put(""TitledBorder.border"", UIManager.getBorder(""InsetBorder.aquaVariant""));

  // make sure Application Quit Events get forwarded to normal Window Listeners
  Desktop.getDesktop().setQuitStrategy(QuitStrategy.CLOSE_ALL_WINDOWS);",app,application
Lnet/filebot/util/ui/PrototypeCellValueUpdater;.intervalRemoved(Ljavax/swing/event/ListDataEvent;)V#m,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/ui/PrototypeCellValueUpdater.java;,VariableName,m," public void intervalRemoved(ListDataEvent evt) {
  // reset prototype value
  ListModel<T> m = (ListModel<T>) evt.getSource();
  if (m.getSize() == 0) {
   longestItemLength = -1;
   list.setPrototypeCellValue(null);
  }
 }",m,model
Lnet/filebot/ui/rename/CharacterHighlightPainter;.paint(Ljava/awt/Graphics;IILjava/awt/Shape;Ljavax/swing/text/JTextComponent;)V#0#0#h,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/rename/CharacterHighlightPainter.java;,VariableName,h," Rectangle2D r = p1.createUnion(p2);
   double w = r.getWidth() + 1;
   double h = r.getHeight();
   double x = r.getX() - 1;
   double y = r.getY();
   double arch = 5f;",h,height
Lnet/filebot/Settings;.getPurchaseURL()Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/Settings.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/cli/ArgumentProcessor.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/rename/RenameAction.java;,MethodName,getPurchaseURL," public static String getPurchaseURL() {
  return getApplicationProperty(""link.app.purchase"");
 }",url,uniform resource locator
Lnet/filebot/format/MediaBindingBean;.getAudioChannels()Ljava/lang/String;#ch,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/format/MediaBindingBean.java;,VariableName,ch," public String getAudioChannels() {
  String channels = getMediaInfo(StreamKind.Audio, 0, ""Channel(s)_Original"", ""Channel(s)"");

  // e.g. 15 objects / 6 channels
  int ch = tokenize(channels, SLASH).map(s -> matchInteger(s)).filter(Objects::nonNull).min(Integer::compare).get();

  // get first number, e.g. 6ch
  return ch + ""ch"";",ch,channel
Lnet/filebot/media/MediaDetection;.stripReleaseInfo(Ljava/lang/String;Z)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/media/AutoDetection.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/subtitle/upload/MovieEditor.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/cli/ScriptShellMethods.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/similarity/EpisodeMetrics.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/media/MediaDetection.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/subtitle/SubtitleUtilities.java;,MethodName,stripReleaseInfo,"  public boolean episodeNumbers() throws Exception {
   String n = stripReleaseInfo(asn, false);
   if (parseEpisodeNumber(n, false) != null || NUMBER_PAIR.matcher(n).find()) {
    return Stream.of(dn, fn).anyMatch(it -> snm.matcher(it).find()) && getMovieMatches(f, true).isEmpty();
   }",info,information
Lnet/filebot/util/DefaultThreadFactory;.(Ljava/lang/String;IZ)V#sm,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/DefaultThreadFactory.java;,VariableName,sm," public DefaultThreadFactory(String groupName, int priority, boolean daemon) {
  SecurityManager sm = System.getSecurityManager();
  ThreadGroup parentGroup = (sm != null) ? sm.getThreadGroup() : Thread.currentThread().getThreadGroup();

  this.group = new ThreadGroup(parentGroup, groupName);",sm,security manager
Lnet/filebot/ui/HistoryPanel;.add(Ljava/lang/String;Ljava/net/URI;Ljavax/swing/Icon;Ljava/lang/String;Ljava/lang/String;)V#c2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/HistoryPanel.java;,VariableName,c2," public void add(String column1, URI link, Icon icon, String column2, String column3) {
  JComponent c1 = link != null ? new LinkButton(column1, null, icon, link) : new JLabel(column1, icon, SwingConstants.LEFT);
  JComponent c2 = new JLabel(column2, SwingConstants.RIGHT);
  JComponent c3 = new JLabel(column3, SwingConstants.RIGHT);

  add(c1, ""align left"");",c,component
Lnet/filebot/similarity/SeriesNameMatcherTest;.firstCommonSequence()V#seq1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/test/net/filebot/similarity/SeriesNameMatcherTest.java;,VariableName,seq1,"public void firstCommonSequence() {
  String[] seq1 = ""Common Name 1 Any Title"".split("" "");
  String[] seq2 = ""abc xyz Common Name 2 Any Title"".split("" "");

  // check if common sequence can be determined
  assertArrayEquals(new String[] { ""Common"", ""Name"" }, matcher.firstCommonSequence(seq1, seq2, 2, String.CASE_INSENSITIVE_ORDER));",seq,sequence
Lnet/filebot/web/ID3Lookup;.getString(Lnet/filebot/mediainfo/MediaInfo;[Ljava/lang/String;)Ljava/lang/String;#mediaInfo#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/ID3Lookup.java;,ParameterName,mediaInfo," private String getString(MediaInfo mediaInfo, String... keys) {
  for (String key : keys) {
   String value = mediaInfo.get(StreamKind.General, 0, key);
   if (value.length() > 0) {",info,information
Lnet/filebot/subtitle/SubtitleTimeFormat;.parse(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;#pos#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/subtitle/SubtitleTimeFormat.java;,ParameterName,pos," public Date parse(String source, ParsePosition pos) {
  String[] split = delimiter.split(source, 4);

  // reset state
  calendar.clear();",pos,position
Lnet/filebot/subtitle/SubRipReader;.readNext()Lnet/filebot/subtitle/SubtitleElement;|Ljava/lang/Exception;#t2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/subtitle/SubRipReader.java;,VariableName,t2,"  if (interval.length < 2)
   return null;

  long t1 = timeFormat.parse(interval[0].trim()).getTime();
  long t2 = timeFormat.parse(interval[1].trim()).getTime();

  List<String> lines = new ArrayList<String>(2);",t,time
Lnet/filebot/similarity/Matcher$DisjointMatchCollection;:TV;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/similarity/Matcher.java;,ClassName,V,"  public Match<V, C> getByValue(V value) {
   return values.get(value);
  }",v,value
Lnet/filebot/format/MediaBindingBean;.getNameWithYear()Ljava/lang/String;#n,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/format/MediaBindingBean.java;,VariableName,n,"public String getNameWithYear() {
  String n = getName().toString();
  String y = "" ("" + getYear().toString() + "")"";

  // account for TV Shows that contain the year in the series name, e.g. Doctor Who (2005)
  return n.endsWith(y) ? n : n + y;",n,name 
Lnet/filebot/util/ui/SwingUI;.toHex(Ljava/awt/Color;)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/ui/SwingUI.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/SelectButtonTextField.java;,MethodName,toHex," public static String toHex(Color c) {
  return c == null ? ""inherit"" : String.format(""#%02x%02x%02x"", c.getRed(), c.getGreen(), c.getBlue());
 }",hex,Hexadecimal
Ljava/nio/charset/StandardCharsets;.UTF_8)Ljava/nio/charset/Charset;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/License.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/BOM.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/ShooterSubtitles.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/FileUtilities.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/subtitle/SubtitleDownloadComponent.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/AnidbClient.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/TheTVDBClient.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/cli/CmdlineOperations.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/subtitle/SubtitleFileChooser.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/cli/ScriptBundle.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/AcoustIDClient.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/DownloadTask.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/subtitle/SubtitleUtilities.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/media/ReleaseInfo.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/prefs/PropertyFileBackingStore.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/platform/mac/xattr/XAttrUtil.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/test/net/filebot/util/ByteBufferOutputStreamTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/cli/PseudoConsole.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/CacheManager.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/sfv/ChecksumTableExportHandler.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/Cache.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/archive/SevenZipExecutable.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/cli/ScriptShellMethods.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/transfer/TextFileTransferable.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/FileSet.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/MetaAttributeView.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/WebRequest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/torrent/Torrent.java;,VariableName,UTF_8,"// normalize clear sign message
  String clearSignMessage = NEWLINE.splitAsStream(UTF_8.decode(content.getByteBuffer())).map(String::trim).collect(joining(""\r\n""));

  // verify signature
  signature.update(clearSignMessage.getBytes(UTF_8));

  if (!signature.verify()) {
   throw new PGPException(""Bad Signature"");
  }",utf,unicode transformation format
Lnet/filebot/web/WebRequest;.getXmlString(Lorg/w3c/dom/Document;Z)Ljava/lang/String;|Ljavax/xml/transform/TransformerException;#tr,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/WebRequest.java;,VariableName,tr,"
 public static String getXmlString(Document dom, boolean indent) throws TransformerException {
  Transformer tr = TransformerFactory.newInstance().newTransformer();
  tr.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION, ""yes"");
  tr.setOutputProperty(OutputKeys.INDENT, indent ? ""yes"" : ""no"");",tr,transformer
Lnet/filebot/similarity/EpisodeMatcher;.isMultiEpisode([Lnet/filebot/web/Episode;)Z#seqIndex,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/similarity/EpisodeMatcher.java;,VariableName,seqIndex,"// use getEpisode() or getSpecial() as number function
  Function<Episode, Integer> number = stream(episodes).allMatch(e -> e.getSpecial() == null) ? e -> e.getEpisode() : e -> e.getSpecial();

  // check episode sequence integrity
  Integer seqIndex = null;
  for (Episode it : episodes) {
   // any illegal episode object breaks the chain
   Integer i = number.apply(it);",seq,sequence
Lnet/filebot/util/ui/SwingUI;.escapeHTML(Ljava/lang/String;)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/rename/EpisodeListMatcher.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/ui/SwingUI.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/rename/TextColorizer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/SelectDialog.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/rename/MovieMatcher.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/rename/BindingDialog.java;,MethodName,escapeHTML,"StringBuilder html = new StringBuilder(512);
  html.append(""<html>"");
  if (header != null) {
   html.append(escapeHTML(header)).append(""<br>"");
  }",html,hyper text markup language
Lnet/filebot/util/ui/SwingUI;.interpolateHSB(Ljava/awt/Color;Ljava/awt/Color;F)Ljava/awt/Color;#c2#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/ui/SwingUI.java;,ParameterName,c2,"public static final Color TRANSLUCENT = new Color(255, 255, 255, 0);

 public static Color interpolateHSB(Color c1, Color c2, float f) {
  float[] hsb1 = Color.RGBtoHSB(c1.getRed(), c1.getGreen(), c1.getBlue(), null);
  float[] hsb2 = Color.RGBtoHSB(c2.getRed(), c2.getGreen(), c2.getBlue(), null);
  float[] hsb = new float[3];",c,color
Ljava/net/MalformedURLException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/ShooterSubtitles.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/OpenSubtitlesXmlRpc.java;,ClassName,MalformedURLException,"protected URL getSubApiUrl() {
  try {
   return new URL(System.getProperty(""net.filebot.web.ShooterSubtitles.url"", ""https://www.shooter.cn/api/subapi.php""));
  } catch (MalformedURLException e) {
   throw new RuntimeException(e);
  }
 }",url,uniform resource locator
Ljava/util/stream/IntStream;.mapToObj<U:Ljava/lang/Object;>(Ljava/util/function/IntFunction<+TU;>;)Ljava/util/stream/Stream<TU;>;%<Lnet/filebot/ui/list/ListItem;>,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/list/ListPanel.java;,MethodName,mapToObj," public void createItemSequence(List<?> objects) {
  List<ListItem> items = IntStream.range(0, objects.size()).mapToObj(i -> createItem(objects.get(i), i + 1, 1, objects.size(), objects)).collect(toList());

  list.getListComponent().clearSelection();
  list.getModel().clear();
  list.getModel().addAll(items);
 }",obj,object
Lnet/filebot/cli/ScriptShellBaseClass;.getSubtitles(Ljava/util/Map<Ljava/lang/String;*>;)Ljava/util/List<Ljava/io/File;>;|Ljava/lang/Exception;#args,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/cli/ScriptShellBaseClass.java;,VariableName,args," public Object runScript(String input, String... argv) throws Throwable {
  try {
   ArgumentBean args = argv == null || argv.length == 0 ? getArgumentBean() : new ArgumentBean(argv);
   return executeScript(input, asList(getArgumentBean().getArgumentArray()), args.defines, args.getFiles(false));
  } catch (Exception e) {",args,arguments
Lnet/filebot/web/MovieInfo;.(Ljava/util/Map<Lnet/filebot/web/MovieInfo$Property;Ljava/lang/String;>;Ljava/util/List<Ljava/lang/String;>;Ljava/util/List<Ljava/lang/String;>;Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;Ljava/util/List<Ljava/lang/String;>;Ljava/util/List<Ljava/lang/String;>;Ljava/util/List<Ljava/lang/String;>;Ljava/util/List<Lnet/filebot/web/Person;>;Ljava/util/List<Lnet/filebot/web/Trailer;>;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/MovieInfo.java;,MethodName,MovieInfo,"public MovieInfo(Map<Property, String> fields, List<String> alternativeTitles, List<String> genres, Map<String, String> certifications, List<String> spokenLanguages, List<String> productionCountries, List<String> productionCompanies, List<Person> people, List<Trailer> trailers) {
  this.fields = new EnumMap<Property, String>(fields);
  this.alternativeTitles = alternativeTitles.toArray(new String[0]);
  this.genres = genres.toArray(new String[0]);",info,information
Lnet/filebot/similarity/CrossPropertyMetric;.getSimilarity(Ljava/lang/Object;Ljava/lang/Object;)F#m2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/similarity/CrossPropertyMetric.java;,VariableName,m2,"Map<String, Object> m1 = getProperties(o1);
  if (m1.isEmpty())
   return 0;

  Map<String, Object> m2 = getProperties(o2);
  if (m2.isEmpty())
   return 0;",m,map
Lnet/filebot/format/ExpressionFormatFunctions;.getUserFile(Ljava/lang/Object;)Ljava/io/File;#f,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/format/ExpressionFormatFunctions.java;,VariableName,f,"public static File getUserFile(Object path) {
  File f = new File(path.toString());

  if (!f.isAbsolute()) {
   f = ApplicationFolder.UserHome.resolve(f.getPath());",f,file
Lnet/filebot/ui/rename/RenameListCellRenderer;.getPreferredSize()Ljava/awt/Dimension;#dim,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/rename/RenameListCellRenderer.java;,VariableName,dim," public Dimension getPreferredSize() {
  // force equals cell height for both lists
  Dimension dim = super.getPreferredSize();
  dim.height = 28;
  return dim;
 }",dim,Dimension
Lnet/filebot/ui/rename/ConflictDialog;.(Ljava/awt/Window;Ljava/util/List<Lnet/filebot/ui/rename/ConflictDialog$Conflict;>;)V#b,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/rename/ConflictDialog.java;,VariableName,b," c.add(new JScrollPane(table), ""grow, wrap"");
  c.add(newButton(""Cancel"", ResourceManager.getIcon(""dialog.cancel""), this::cancel), ""tag left"");
  c.add(newButton(""Continue"", ResourceManager.getIcon(""dialog.continue""), this::ignore), ""tag ok"");

  JButton b = newButton(""Override"", ResourceManager.getIcon(""dialog.continue.invalid""), this::override);
  b.setEnabled(conflicts.stream().anyMatch(it -> it.override));
  b.addActionListener(evt -> b.setEnabled(false));
  c.add(b, ""tag next"");",b,button
Lnet/filebot/subtitle/SubViewerReader;.readNext()Lnet/filebot/subtitle/SubtitleElement;|Ljava/lang/Exception;#0#0#t1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/subtitle/SubViewerReader.java;,VariableName,t1,"try {
   long t1 = timeFormat.parse(interval[0]).getTime();
   long t2 = timeFormat.parse(interval[1]).getTime();

   // translate [br] to new lines
   String[] lines = newline.split(scanner.nextLine());",t,time
Lnet/filebot/web/AcoustIDClient;.lambda$1(Ljava/util/Map;Ljava/util/Map;)I#0#i1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/AcoustIDClient.java;,VariableName,i1,"  for (Object result : getArray(data, ""results"")) {
   // pick most likely matching recording
   return streamJsonObjects(result, ""recordings"").sorted((r1, r2) -> {
    Integer i1 = getInteger(r1, ""duration"");
    Integer i2 = getInteger(r2, ""duration"");
    return Double.compare(i1 == null ? Double.NaN : Math.abs(i1 - targetDuration), i2 == null ? Double.NaN : Math.abs(i2 - targetDuration));
   }).map((Map<?, ?> recording) -> {",i,integer
Ljava/lang/Math;.max(II)I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/subtitle/SubtitleMetrics.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/EntryList.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/sfv/ChecksumButton.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/subtitle/SubtitleViewer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/ui/FancyTreeCellRenderer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/subtitle/SimpleComboBox.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/ui/ListView.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/ui/ShadowBorder.java;,MethodName,max,"  protected float similarity(String match, String s1, String s2) {
   return (float) match.length() / Math.max(s1.length(), s2.length()) > 0.8 ? 1 : 0;
  }",max,maximum
Lnet/filebot/archive/ApacheVFS;.fsm)LFileSystemManager;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/archive/ApacheVFS.java;,FieldName,fsm,"public class ApacheVFS implements ArchiveExtractor, Closeable {

 private static final FileSelector ALL_FILES = new AllFileSelector();

 private final FileSystemManager fsm;
 private final FileObject archive;

 public ApacheVFS(File file) throws Exception {
  if (!file.exists()) {",fsm,File System Manager
Lnet/filebot/util/ui/SwingUI;.isShiftOrAltDown(Ljava/awt/event/ActionEvent;)Z#evt#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/ui/SwingUI.java;,ParameterName,evt," public static boolean isShiftOrAltDown(InputEvent evt) {
  return checkModifiers(evt.getModifiersEx(), InputEvent.SHIFT_DOWN_MASK) || checkModifiers(evt.getModifiersEx(), InputEvent.ALT_DOWN_MASK);
 }",evt,event
Lnet/filebot/cli/CmdlineOperations;.compute(Ljava/util/Collection<Ljava/io/File;>;Ljava/io/File;Lnet/filebot/hash/HashType;Ljava/nio/charset/Charset;)Ljava/io/File;|Ljava/lang/Exception;#csm,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/cli/CmdlineOperations.java;,VariableName,csm,"  for (int i = 0; i < fileList.length; i++) {
   pathArray[i] = listPath(fileList[i].getParentFile()).toArray(new File[0]);
  }

  CommonSequenceMatcher csm = new CommonSequenceMatcher(null, 0, true);
  File[] common = csm.matchFirstCommonSequence(pathArray);

  if (common == null) {
   throw new CmdlineException(""All paths must be on the same filesystem: "" + files);
  }",csm,Common Sequence Matcher
Lnet/filebot/ApplicationFolder;.AppData)Lnet/filebot/ApplicationFolder;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/License.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ApplicationFolder.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/cli/ArgumentBean.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/cli/GroovyPad.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/HistorySpooler.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/Main.java;,VariableName,AppData,"  return String.format(""%s License %s (Valid-Until: %s)"", product, id, getExpirationDate());
 }

 public static final SystemProperty<File> FILE = SystemProperty.of(""net.filebot.license"", File::new, ApplicationFolder.AppData.resolve(""license.txt""));
 public static final MemoizedResource<License> INSTANCE = Resource.lazy(() -> new License(FILE.get()));
",app,application
Lnet/filebot/util/WeakValueHashMap;.getReferenceValue(Lnet/filebot/util/WeakValueHashMap<TK;TV;>.WeakValue<TV;>;)TV;#valueRef#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/WeakValueHashMap.java;,ParameterName,valueRef," private V getReferenceValue(WeakValue<V> valueRef) {
  return valueRef == null ? null : valueRef.get();
 }",ref,reference
Lnet/filebot/UserFiles$9638;.runAndWait<T:Ljava/lang/Object;>(Ljava/util/concurrent/Callable<TT;>;)TT;:TT;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/UserFiles.java;,ClassName,T,"public <T> T runAndWait(Callable<T> c) {
    try {
     // run on FX Thread
     FutureTask<T> task = new FutureTask<T>(c);
     invokeJavaFX(task);
     return task.get();",t,thread
Lnet/filebot/ui/HistoryPanel;.add(Ljava/lang/String;Ljava/net/URI;Ljavax/swing/Icon;Ljava/lang/String;Ljava/lang/String;)V#c3,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/HistoryPanel.java;,VariableName,c3,"public void add(String column1, URI link, Icon icon, String column2, String column3) {
  JComponent c1 = link != null ? new LinkButton(column1, null, icon, link) : new JLabel(column1, icon, SwingConstants.LEFT);
  JComponent c2 = new JLabel(column2, SwingConstants.RIGHT);
  JComponent c3 = new JLabel(column3, SwingConstants.RIGHT);

  add(c1, ""align left"");

  // set minimum with to 100px so the text is aligned to the right,
  // even though the whole label is centered",c,component
Lnet/filebot/cli/ScriptShellBaseClass;.get_def()Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/cli/ScriptShellBaseClass.java;,MethodName,get_def," // define global variable: _def
 public Map<String, String> get_def() {
  return unmodifiableMap(getArgumentBean().defines);
 }",def,define
Lnet/filebot/format/MediaBindingBean;.getTitle()Ljava/lang/String;#t,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/format/MediaBindingBean.java;,VariableName,t," public String getTitle() {
  String t = null;

  if (infoObject instanceof Episode) {
   t = infoObject instanceof MultiEpisode ? EpisodeFormat.SeasonEpisode.formatMultiTitle(getEpisodes()) : getEpisode().getTitle(); // implicit support for multi-episode title formatting
  } else if (infoObject instanceof Movie) {",t,title
Lnet/filebot/util/JsonUtilities;.streamJsonObjects(Ljava/lang/Object;Ljava/lang/String;)Ljava/util/stream/Stream<Ljava/util/Map<**>;>;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/media/ImageMetadata.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/TheTVDBClient.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/ShooterSubtitles.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/AcoustIDClient.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/JsonUtilities.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/TMDbTVClient.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/TMDbClient.java;,MethodName,streamJsonObjects,"   Map<AddressComponent, String> address = new EnumMap<AddressComponent, String>(AddressComponent.class);

   streamJsonObjects(json, ""results"").limit(1).forEach(r -> {
    streamJsonObjects(r, ""address_components"").forEach(a -> {
     String name = getString(a, ""long_name"");
     if (name != null) {
      for (Object type : getArray(a, ""types"")) {",json,javascript object notation
Lnet/filebot/ui/rename/HistoryDialog$RevertAction;.getRenameMap(Ljava/io/File;)Ljava/util/Map<Ljava/io/File;Ljava/io/File;>;#0#0#dir,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/rename/HistoryDialog.java;,VariableName,dir,"for (Element element : elements()) {
    // use given directory or default directory
    File dir = directory != null ? directory : element.dir();

    // reverse
    File from = new File(element.to());
    File to = new File(element.from());",dir,directory
Lnet/filebot/web/TheTVDBClientV1$MirrorType;.lambda$0(Lnet/filebot/web/TheTVDBClientV1$MirrorType;)Z#m#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/TheTVDBClientV1.java;,VariableName,m,"     return MirrorType.fromTypeMask(typeMask).stream().collect(toMap(m -> m, m -> mirror)).entrySet().stream();
    }).collect(groupingBy(Entry::getKey, MirrorType::newMap, mapping(Entry::getValue, toList())));

    // select random mirror for each type
    Random random = new Random();",m,mirror
LWString;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/mediainfo/MediaInfoLibrary.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/mediainfo/MediaInfo.java;,ClassName,WString," /**
  * Open a file and collect information about it (technical information and tags).
  *
  * @param handle
  * @param file
  *            full name of the file to open
  * @return 1 if file was opened, 0 if file was not not opened
  */
 int Open(Pointer handle, WString file);",w,width
Lnet/filebot/platform/mac/DropToUnlock;.lambda$7()Ljava/lang/Boolean;|Ljava/lang/Exception;#0#h,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/platform/mac/DropToUnlock.java;,VariableName,h,"   d.setBorder(createEmptyBorder(5, 15, 120, 15));

   JComponent c = (JComponent) dialog.getContentPane();
   c.setLayout(new MigLayout(""insets 0, fill""));

   HeaderPanel h = new HeaderPanel();
   h.getTitleLabel().setText(""Folder Permissions Required"");
   h.getTitleLabel().setIcon(ResourceManager.getIcon(""file.lock""));
   h.getTitleLabel().setBorder(createEmptyBorder(0, 0, 0, 64));",h,header
Lnet/filebot/web/TheTVDBSeriesInfo;.setBannerUrl(Ljava/net/URL;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/TheTVDBClient.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/TheTVDBClientV1.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/TheTVDBSeriesInfo.java;,MethodName,setBannerUrl,"  info.setAirsDayOfWeek(getString(data, ""airsDayOfWeek""));
  info.setAirsTime(getString(data, ""airsTime""));
  info.setBannerUrl(getStringValue(data, ""banner"", this::resolveImage));
  info.setLastUpdated(getStringValue(data, ""lastUpdated"", Long::parseLong));

  return info;",url,uniform resource locator
Lnet/filebot/media/XattrMetaInfo;.(ZZ)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/media/XattrMetaInfo.java;,MethodName,XattrMetaInfo," public XattrMetaInfo(boolean useExtendedFileAttributes, boolean useCreationDate) {
  this.useExtendedFileAttributes = useExtendedFileAttributes;
  this.useCreationDate = useCreationDate;
 }",info,information
Lnet/filebot/ui/rename/PresetEditor;.lambda$5(Ljava/awt/event/ActionEvent;)V#0#1#e,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/rename/PresetEditor.java;,VariableName,e,"  if (files.size() > 0) {
     for (File f : files) {
      popup.add(newAction(f.getPath(), e -> {
       BindingDialog dialog = new BindingDialog(getWindow(evt.getSource()), ""File Bindings"", Mode.File.getFormat(), false);
       dialog.setLocation(getOffsetLocation(getWindow(evt.getSource())));
       dialog.setSample(new MediaBindingBean(f, f));
       dialog.setVisible(true);
      }));",e,exception
Lnet/filebot/util/ui/SwingUI;.openURI(Ljava/lang/String;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/FileBotMenuBar.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/ui/SwingUI.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/rename/RenameAction.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/MainFrame.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/rename/FormatDialog.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/Main.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/SupportDialog.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/GettingStartedStage.java;,MethodName,openURI," private static Action createLink(final String title, final String uri) {
  return newAction(title, null, evt -> openURI(uri));
 }",uri,uniform resource identifier
Lnet/filebot/ui/rename/HistoryDialog$RevertCurrentSelectionAction;.elements()Ljava/util/List<Lnet/filebot/History$Element;>;#0#i,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/rename/HistoryDialog.java;,VariableName,i,"    List<Element> selection = new ArrayList<Element>();

    for (int i : table.getSelectedRows()) {
     int index = table.convertRowIndexToModel(i);

     if (sequenceModel == table.getModel()) {
      selection.addAll(sequenceModel.getRow(index).elements());",i,index
Ljava/io/IOException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/transfer/FileExportHandler.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/FastFile.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/format/MediaBindingBean.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/ByteBufferInputStream.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/media/MetaAttributes.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/cli/FolderWatchService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/format/ExpressionFormatMethods.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/UserFiles.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/torrent/BDecoder.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/archive/ExtractOutProvider.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/media/ImageMetadata.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/archive/ExtractCallback.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/hash/VerificationUtilities.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/media/MediaDetection.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/mediainfo/MediaInfo.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/InvalidResponseException.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/CachedResource.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/TemporaryFolder.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/archive/Archive.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/sfv/ChecksumTableExportHandler.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/transfer/TextFileExportHandler.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/rename/NamesListTransferablePolicy.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/transfer/FileTransferablePolicy.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/Logging.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/archive/FileMapper.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/FileSet.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/MetaAttributeView.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/Main.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/StandardRenameAction.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/media/FFProbe.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/WebRequest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/format/ExpressionFormatFunctions.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/hash/VerificationFileWriter.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/list/FileListTransferablePolicy.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ApplicationFolder.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/cli/BindingsHandler.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/ShooterSubtitles.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/transfer/ArrayTransferable.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/cli/ScriptShellBaseClass.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/archive/ArchiveOpenVolumeCallback.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/FileUtilities.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/OpenSubtitlesClient.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/subtitle/SubRipWriter.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/archive/ApacheVFS.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/subtitle/SubtitleDownloadComponent.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/subtitle/SubtitlePackage.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/ByteBufferOutputStream.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/archive/ExtractOutStream.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/cli/CmdlineOperations.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/cli/ExecutableRenameAction.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/transfer/SaveAction.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/transfer/ByteBufferTransferable.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/TeePrintStream.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/AcoustIDClient.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/DownloadTask.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/HistorySpooler.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/subtitle/SubtitleUtilities.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/prefs/PropertyFileBackingStore.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/transfer/FileTransferable.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/rename/HistoryDialog.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/vfs/ZipArchive.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/sfv/SfvPanel.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/archive/SevenZipNativeBindings.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/transfer/CompositeTranserable.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/cli/PseudoConsole.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/CacheManager.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/OpenSubtitlesXmlRpc.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/archive/SevenZipExecutable.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/cli/ExecCommand.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/OpenSubtitlesHasher.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/sfv/ChecksumTableTransferablePolicy.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/cli/GroovyPad.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/hash/VerificationFileReader.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/cli/ScriptShellMethods.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/test/net/filebot/web/OpenSubtitlesXmlRpcTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/subtitle/SubtitleReader.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/torrent/Torrent.java;,ClassName,IOException," public boolean canExport();


 public void export(File file) throws IOException;


 public String getDefaultFileName();",io,input output
Lnet/filebot/media/VideoFormatTest;.vf)Lnet/filebot/media/VideoFormat;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/test/net/filebot/media/VideoFormatTest.java;,FieldName,vf,"public class VideoFormatTest {

 VideoFormat vf = new VideoFormat();

 @Test
 public void trickyResolutions() {
  assertEquals(1080, vf.guessFormat(1920, 1040));
  assertEquals(720, vf.guessFormat(1280, 528));",vf,video format
Lnet/filebot/web/WebRequest;.head(Ljava/net/URL;)I|Ljava/io/IOException;#c,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/WebRequest.java;,VariableName,c," public static int head(URL url) throws IOException {
  HttpURLConnection c = (HttpURLConnection) url.openConnection();
  c.setRequestMethod(""HEAD"");
  return c.getResponseCode();
 }",c,connection
Lnet/filebot/subtitle/SubtitleTimeFormat;.format(Ljava/util/Date;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;#millis,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/subtitle/SubtitleTimeFormat.java;,VariableName,millis,"  sb.append(String.format(""%02d"", calendar.get(Calendar.HOUR_OF_DAY)));
  sb.append(':').append(String.format(""%02d"", calendar.get(Calendar.MINUTE)));
  sb.append(':').append(String.format(""%02d"", calendar.get(Calendar.SECOND)));

  String millis = String.format(""%03d"", calendar.get(Calendar.MILLISECOND));
  sb.append('.').append(millis.substring(0, 2));

  return sb;",millis,millisecond
Lnet/filebot/subtitle/SubtitleUtilities;.lambda$0(Ljava/io/File;Ljava/util/List;)V#0#0#topN,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/subtitle/SubtitleUtilities.java;,VariableName,topN,"if (bestMatch != null) {
    if (addOptions) {
     Stream<SubtitleDescriptor> top1 = Stream.of(bestMatch);
     Stream<SubtitleDescriptor> topN = v.stream().filter(Predicate.isEqual(bestMatch).negate()).sorted(SimilarityComparator.compareTo(getName(k), SubtitleDescriptor::getName));
     results.put(k, Stream.concat(top1, topN).collect(toList()));
    } else {
     results.put(k, singletonList(bestMatch));",n,number
Lnet/filebot/similarity/EpisodeMetrics$12994;.getSimilarity(Ljava/lang/Object;Ljava/lang/Object;)F#f1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/similarity/EpisodeMetrics.java;,VariableName,f1,"SubstringFields(new SubstringMetric() {

  @Override
  public float getSimilarity(Object o1, Object o2) {
   String[] f1 = normalize(fields(o1));
   String[] f2 = normalize(fields(o2));

   // match all fields and average similarity
   double sum = 0;",f,fields
Lnet/filebot/util/DefaultThreadFactory;.newThread(Ljava/lang/Runnable;)Ljava/lang/Thread;#r#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/DefaultThreadFactory.java;,ParameterName,r,"public Thread newThread(Runnable r) {
  Thread thread = new Thread(group, r, String.format(""%s-thread-%d"", group.getName(), threadNumber.incrementAndGet()));

  if (daemon != thread.isDaemon())
   thread.setDaemon(daemon);",r,runnable
Lnet/filebot/similarity/SequenceMatchSimilarity;.getSimilarity(Ljava/lang/Object;Ljava/lang/Object;)F#s1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/similarity/SequenceMatchSimilarity.java;,VariableName,s1,"public float getSimilarity(Object o1, Object o2) {
  String s1 = normalize(o1);
  String s2 = normalize(o2);

  // match common word sequence
  String match = match(s1, s2);",s,string
Lnet/filebot/util/StringUtilities;.matchInteger(Ljava/lang/CharSequence;)Ljava/lang/Integer;#s#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/StringUtilities.java;,ParameterName,s,"public static List<Integer> matchIntegers(CharSequence s) {
  if (s == null || s.length() == 0) {
   return emptyList();
  }",s,sequence
Lnet/filebot/media/MediaDetection;.grepTheTvdbId(Ljava/lang/CharSequence;)Ljava/util/List<Ljava/lang/Integer;>;#tvdbUrl,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/media/MediaDetection.java;,VariableName,tvdbUrl," public static List<Integer> grepTheTvdbId(CharSequence text) {
  // scan for thetvdb id patterns like http://www.thetvdb.com/?tab=series&id=78874&lid=14
  Pattern tvdbUrl = Pattern.compile(""thetvdb.com[\\p{Graph}]*?[\\p{Punct}]id=(\\d+)"", Pattern.CASE_INSENSITIVE);
  return streamMatches(text, tvdbUrl, m -> m.group(1)).map(Integer::parseInt).collect(toList());
 }",url,uniform resource locator
Lnet/filebot/util/PreferencesMap$Adapter;.remove(Ljava/util/prefs/Preferences;Ljava/lang/String;)V#prefs#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/PreferencesMap.java;,ParameterName,prefs," private final Preferences prefs;
 private final Adapter<T> adapter;

 public PreferencesMap(Preferences prefs, Adapter<T> adapter) {
  this.prefs = prefs;
  this.adapter = adapter;
 }",prefs,preferences
Lnet/filebot/format/ExpressionFormatFunctions;.readXml(Ljava/lang/Object;)Ljava/lang/Object;|Ljava/lang/Exception;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/format/ExpressionFormatFunctions.java;,MethodName,readXml," public static Object readXml(Object path) throws Exception {
  return new XmlSlurper().parse(getUserFile(path));
 }",xml,extensible markup language
Ljavax/swing/text/JTextComponent;.getUI()Ljavax/swing/plaf/TextUI;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/rename/CharacterHighlightPainter.java;,MethodName,getUI,"  try {
   // determine locations
   TextUI mapper = c.getUI();
   Rectangle2D p1 = mapper.modelToView2D(c, offset1, Bias.Backward);
   Rectangle2D p2 = mapper.modelToView2D(c, offset2, Bias.Backward);",ui,user interface
Lnet/filebot/ui/transfer/FileTransferable;.createUriListFlavor()Ljava/awt/datatransfer/DataFlavor;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/transfer/FileTransferable.java;,MethodName,createUriListFlavor,"public class FileTransferable implements Transferable {

 public static final DataFlavor uriListFlavor = createUriListFlavor();

 private static DataFlavor createUriListFlavor() {
  try {
   return new DataFlavor(""text/uri-list;class=java.nio.CharBuffer"");
  } catch (ClassNotFoundException e) {",uri,uniform resource identifier
Lnet/filebot/web/ShooterSubtitles;.getSubApiUrl()Ljava/net/URL;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/ShooterSubtitles.java;,MethodName,getSubApiUrl," protected URL getSubApiUrl() {
  try {
   return new URL(System.getProperty(""net.filebot.web.ShooterSubtitles.url"", ""https://www.shooter.cn/api/subapi.php""));
  } catch (MalformedURLException e) {",url,uniform resource locator
Ljavax/script/CompiledScript;.eval(Ljavax/script/ScriptContext;)Ljava/lang/Object;|Ljavax/script/ScriptException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/format/ExpressionFilter.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/format/ExpressionFormat.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/format/SecureCompiledScript.java;,MethodName,eval,"ScriptContext context = new SimpleScriptContext();
  context.setBindings(priviledgedBindings, ScriptContext.GLOBAL_SCOPE);

  try {
   // evaluate user script
   Object value = compiledExpression.eval(context);

   // value as boolean
   return DefaultTypeTransformation.castToBoolean(value);
  } catch (Throwable e) {",eval,evaluate
Lnet/filebot/web/EpisodeFormat;.formatS00E00(Lnet/filebot/web/Episode;)Ljava/lang/String;#sb,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/EpisodeFormat.java;,VariableName,sb,"if (episode instanceof MultiEpisode) {
   return formatMultiRangeSxE(((MultiEpisode) episode).getEpisodes());
  }

  StringBuilder sb = new StringBuilder();
  if (episode.getSeason() != null || episode.getSpecial() != null) {
   sb.append(episode.getSpecial() == null ? episode.getSeason() : 0).append('x');
  }",sb,string builder
Lnet/filebot/platform/gnome/GVFS;.getPathForURI(Ljava/net/URI;)Ljava/io/File;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/platform/gnome/GVFS.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/test/net/filebot/gio/PlatformGVFSTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/transfer/FileTransferable.java;,MethodName,getPathForURI,"File getPathForURI(URI uri);

 public static GVFS getDefaultVFS() {
  GVFS gvfs = SystemProperty.of(""net.filebot.gio.GVFS"", path -> new PlatformGVFS(new File(path))).get();

  // default to native implementation GVFS folder is not set",uri,uniform resource identifier
Lnet/filebot/ui/rename/RenamePanel;.lambda$26(Lnet/filebot/Language;)Z#l#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/rename/RenamePanel.java;,VariableName,l,"    orderCombo.setSelectedItem(SortOrder.forName(persistentPreferredEpisodeOrder.getValue()));

    String selectedLanguage = persistentPreferredLanguage.getValue();
    languages.stream().filter(l -> l.getCode().equals(selectedLanguage)).findFirst().ifPresent(l -> languageList.setSelectedValue(l, true));
   } catch (Exception e) {
    debug.log(Level.WARNING, e.getMessage(), e);
   }",l,language
Ljava/util/Locale;.getISO3Language()Ljava/lang/String;|Ljava/util/MissingResourceException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/OpenSubtitlesClient.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/media/ReleaseInfo.java;,MethodName,getISO3Language,"   for (String key : new String[] { subLanguageID, languageCode }) {
    Locale locale = additionalLanguageMappings.get(key);
    if (locale != null) {
     for (String identifier : asList(locale.getLanguage(), locale.getISO3Language(), locale.getDisplayLanguage(Locale.ENGLISH))) {
      if (identifier != null && identifier.length() > 0 && !subLanguageMap.containsKey(identifier.toLowerCase())) {
       subLanguageMap.put(identifier.toLowerCase(), subLanguageID);
      }",iso,International Organization for Standardization
Lnet/filebot/ui/rename/RenamePanelBuilder;.equals(Ljava/lang/Object;)Z#obj#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/rename/RenamePanelBuilder.java;,ParameterName,obj," public boolean equals(Object obj) {
  return obj instanceof RenamePanelBuilder;
 }",obj,object
Lnet/filebot/format/MediaBindingBean;.identityIndexOf(Ljava/lang/Iterable<*>;Ljava/lang/Object;)Ljava/lang/Integer;#itr,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/format/MediaBindingBean.java;,VariableName,itr,"
 private Integer identityIndexOf(Iterable<?> c, Object o) {
  Iterator<?> itr = c.iterator();
  for (int i = 0; itr.hasNext(); i++) {
   Object next = itr.next();
   if (o == next) {",itr,iterator
Lnet/filebot/web/ID3Lookup;.read<T:Ljava/lang/Object;>(Ljava/io/File;Ljava/util/function/Function<Lnet/filebot/mediainfo/MediaInfo;TT;>;)TT;#0#0#m,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/ID3Lookup.java;,VariableName,m,"private <T> Map<File, T> read(Collection<File> files, Function<MediaInfo, T> parse, FileFilter... filters) {
  Map<File, T> info = new LinkedHashMap<File, T>(files.size());

  try (MediaInfo m = new MediaInfo()) {
   for (File f : filter(files, filters)) {
    try {
     // open or throw exception
     m.open(f);",m,media
Lnet/filebot/web/LocalSearch;.search(Ljava/lang/String;)Ljava/util/List<TT;>;|Ljava/util/concurrent/ExecutionException;|Ljava/lang/InterruptedException;#q#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/LocalSearch.java;,ParameterName,q,"public List<T> search(String q) throws ExecutionException, InterruptedException {
  String query = normalize(q);

  return IntStream.range(0, objects.length).mapToObj(i -> {
   T object = objects[i];
   Set<String> field = fields[i];",q,query
Ljava/net/HttpURLConnection;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/DownloadTask.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/WebRequest.java;,ClassName,HttpURLConnection," protected HttpURLConnection createConnection() throws Exception {
  HttpURLConnection connection = (HttpURLConnection) url.openConnection();

  if (requestHeaders != null) {
   for (Entry<String, String> entry : requestHeaders.entrySet()) {
    connection.addRequestProperty(entry.getKey(), entry.getValue());
   }",url,uniform resource locator
Ljava/net/HttpURLConnection;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/DownloadTask.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/WebRequest.java;,ClassName,HttpURLConnection,"protected ByteBuffer doInBackground() throws Exception {
  setDownloadState(DownloadState.CONNECTING);

  HttpURLConnection connection = createConnection();

  if (postParameters != null) {
   ByteBuffer postData = UTF_8.encode(encodeParameters(postParameters, true));

   // add content type and content length headers",http,hyper text transfer protocol
Lnet/filebot/util/FileUtilities$5084;.visitFile(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;|Ljava/io/IOException;#attrs#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/FileUtilities.java;,ParameterName,attrs,"   public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException {
    Path linkFile = destination.resolve(source.relativize(file));
    Files.createDirectories(linkFile.getParent());
    Files.createLink(linkFile, file);",attrs,attributes
Lnet/filebot/util/ui/DefaultFancyListCellRenderer;.setForeground(Ljava/awt/Color;)V#fg#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/ui/DefaultFancyListCellRenderer.java;,ParameterName,fg," public void setForeground(Color fg) {
  super.setForeground(fg);

  // label is null while in super constructor
  if (label != null) {
   label.setForeground(fg);",fg,foreground
Lnet/filebot/web/TheTVDBClientV1$MirrorType;.XML)Lnet/filebot/web/TheTVDBClientV1$MirrorType;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/TheTVDBClientV1.java;,VariableName,XML,"  public static EnumSet<MirrorType> fromTypeMask(int mask) {
   // convert bit mask to enumset
   return EnumSet.of(SEARCH, XML, BANNER).stream().filter(m -> {
    return (mask & m.bitMask) != 0;
   }).collect(toCollection(MirrorType::newSet));
  };",xml,extensible markup language
Lnet/filebot/similarity/SeriesNameMatcherTest;.firstCommonSequence()V#seq2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/test/net/filebot/similarity/SeriesNameMatcherTest.java;,VariableName,seq2,"public void firstCommonSequence() {
  String[] seq1 = ""Common Name 1 Any Title"".split("" "");
  String[] seq2 = ""abc xyz Common Name 2 Any Title"".split("" "");

  // check if common sequence can be determined
  assertArrayEquals(new String[] { ""Common"", ""Name"" }, matcher.firstCommonSequence(seq1, seq2, 2, String.CASE_INSENSITIVE_ORDER));",seq,sequence
Lnet/filebot/subtitle/MicroDVDReaderTest;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/test/net/filebot/subtitle/SubtitleReaderTestSuite.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/test/net/filebot/subtitle/MicroDVDReaderTest.java;,ClassName,MicroDVDReaderTest,"public class MicroDVDReaderTest {

 @Test
 public void parse() throws Exception {
  MicroDVDReader reader = new MicroDVDReader(new Scanner(""{856}{900}what's the plan?""));

  SubtitleElement element = reader.next();",dvd,Digital Video Disk
Lnet/filebot/util/ui/notification/QueueNotificationLayout;.getBaseAnchor(Ljava/awt/Dimension;Ljava/awt/Insets;)Ljava/awt/Point;#p,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/ui/notification/QueueNotificationLayout.java;,VariableName,p," private Point getBaseAnchor(Dimension screen, Insets insets) {
  Point p = new Point();

  screen.height -= insets.top + insets.bottom;
  screen.width -= insets.left + insets.right;",p,point
Lnet/filebot/ui/transfer/ClipboardHandler;.exportToClipboard(Ljavax/swing/JComponent;Ljava/awt/datatransfer/Clipboard;I)V|Ljava/lang/IllegalStateException;#comp#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/transfer/ClipboardHandler.java;,ParameterName,comp,"public interface ClipboardHandler {

 public void exportToClipboard(JComponent comp, Clipboard clip, int action) throws IllegalStateException;

}",comp,Component
Lnet/filebot/similarity/DateMetric;.getSimilarity(Ljava/lang/Object;Ljava/lang/Object;)F#d1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/similarity/DateMetric.java;,VariableName,d1,"public float getSimilarity(Object o1, Object o2) {
  SimpleDate d1 = parse(o1);
  if (d1 == null)
   return 0;
",d,date
Lnet/filebot/util/ui/ListView;.addSelectionInterval(Ljava/awt/Rectangle;)V#p1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/ui/ListView.java;,VariableName,p1," public void addSelectionInterval(Rectangle selection) {
  Point p1 = selection.getLocation();
  Point p2 = new Point(p1.x + selection.width, p1.y + selection.height);

  int startIndex = locationToIndex(p1);
  int endIndex = locationToIndex(p2);",p,point
Ljava/net/URLConnection;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/OpenSubtitlesSubtitleDescriptor.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/DownloadTask.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/WebRequest.java;,ClassName,URLConnection,"public ByteBuffer fetch() throws Exception {
  checkDownloadQuota();

  URLConnection c = new URL(getProperty(Property.SubDownloadLink)).openConnection();
  try (InputStream in = c.getInputStream()) {
   // check download quota
   String quota = c.getHeaderField(""Download-Quota"");",url,uniform resource locator
Lnet/filebot/web/TheTVDBClientV1;.fetchSeriesData(Lnet/filebot/web/SearchResult;Lnet/filebot/web/SortOrder;Ljava/util/Locale;)Lnet/filebot/web/AbstractEpisodeListProvider$SeriesData;|Ljava/lang/Exception;#0#0#0#dvdSeasonNumber,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/TheTVDBClientV1.java;,VariableName,dvdSeasonNumber,"// adjust for DVD numbering if possible
   if (sortOrder == SortOrder.DVD) {
    Integer dvdSeasonNumber = matchInteger(getTextContent(""DVD_season"", node));
    Integer dvdEpisodeNumber = matchInteger(getTextContent(""DVD_episodenumber"", node));",dvd,Digital Video Disk
Lnet/filebot/web/WebRequest;.getXmlString(Lorg/w3c/dom/Document;Z)Ljava/lang/String;|Ljavax/xml/transform/TransformerException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/WebRequest.java;,MethodName,getXmlString,"public static String getXmlString(Document dom, boolean indent) throws TransformerException {
  Transformer tr = TransformerFactory.newInstance().newTransformer();
  tr.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION, ""yes"");
  tr.setOutputProperty(OutputKeys.INDENT, indent ? ""yes"" : ""no"");",xml,extensible markup language
Lnet/filebot/format/ExpressionFormatFunctions;.csv(Ljava/lang/Object;)Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;|Ljava/io/IOException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/format/ExpressionFormatFunctions.java;,MethodName,csv,"public static Map<String, String> csv(Object path) throws IOException {
  Pattern[] delimiter = { TAB, SEMICOLON };
  Map<String, String> map = new LinkedHashMap<String, String>();
  for (String line : readLines(path)) {",csv,Comma Separated Value 
Lnet/filebot/similarity/SeriesNameMatcher;.firstCommonSequence<T:Ljava/lang/Object;>([TT;[TT;ILjava/util/Comparator<TT;>;)[TT;#0#0#0#len,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/similarity/SeriesNameMatcher.java;,VariableName,len,"for (int i = 0; i < seq1.length && i <= maxStartIndex; i++) {
   for (int j = 0; j < seq2.length && j <= maxStartIndex; j++) {
    // common sequence length
    int len = 0;

    // iterate over common sequence
    while ((i + len < seq1.length) && (j + len < seq2.length) && (equalsComparator.compare(seq1[i + len], seq2[j + len]) == 0)) {
     len++;",len,length
Lnet/filebot/archive/FileMapper;.getOutputDir()Ljava/io/File;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/filter/ExtractTool.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/cli/CmdlineOperations.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/archive/FileMapper.java;,MethodName,getOutputDir,"if (!skip || conflictAction == ConflictAction.OVERRIDE) {
       if (filter == null || forceExtractAll) {
        // extract all files
        archive.extract(outputMapper.getOutputDir());
       } else {
        // extract files selected by the given filter
        archive.extract(outputMapper.getOutputDir(), outputMapper.newPathFilter(selection));",dir,directory
Lnet/filebot/ui/rename/RenameListCellRenderer;.configureListCellRendererComponent(Ljavax/swing/JList;Ljava/lang/Object;IZZ)V#1#0#ext,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/rename/RenameListCellRenderer.java;,VariableName,ext,"File file = renameModel.getMatch(index).getCandidate();
     File path = resolveAbsolutePath(file.getParentFile(), formattedFuture.toString(), null);
     setText(isSelected || matchProbablity < 1 ? formatPath(path) : colorizePath(path, true));

     String ext = getExtension(path);
     typeRenderer.setText(ext != null ? ext.toLowerCase() : ""MISSING EXTENSION"");
     if (file.isDirectory()) {
      typeRenderer.setText(""Folder"");",ext,extension
Lnet/filebot/subtitle/SubtitleMetrics;.getSimilarity(Ljava/lang/Object;Ljava/lang/Object;)F#o2#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/subtitle/SubtitleMetrics.java;,ParameterName,o2,"public float getSimilarity(Object o1, Object o2) {
   float f = SeasonEpisode.getSimilarity(o1, o2);
   if (f == 0 && (getEpisodeIdentifier(o1.toString(), true) == null) == (getEpisodeIdentifier(o2.toString(), true) == null)) {
    return 0;",o,object
Lnet/filebot/similarity/DateMatcher$DateFilter;.maxYear)I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/similarity/DateMatcher.java;,FieldName,maxYear,"public final LocalDate min;
  public final LocalDate max;

  private final int minYear;
  private final int maxYear;

  public DateFilter(LocalDate min, LocalDate max) {
   this.min = min;
   this.max = max;",max,maximum
Lnet/filebot/media/ReleaseInfo;.getLanguageMap([Ljava/util/Locale;)Ljava/util/Map<Ljava/lang/String;Ljava/util/Locale;>;#0#0#iso3locale,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/media/ReleaseInfo.java;,VariableName,iso3locale,"for (String code : Locale.getISOLanguages()) {
   Locale locale = new Locale(code); // force ISO3 language as default toString() value
   Locale iso3locale = new Locale(locale.getISO3Language());

   languageMap.put(locale.getLanguage(), iso3locale);
   languageMap.put(locale.getISO3Language(), iso3locale);
",iso,International Organization for Standardization
Lnet/filebot/web/OpenSubtitlesClient;.checkSubtitle(Ljava/io/File;Ljava/io/File;)Lnet/filebot/web/VideoHashSubtitleService$CheckResult;|Ljava/lang/Exception;#0#0#lang,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/OpenSubtitlesClient.java;,VariableName,lang,"if (response.getSubtitleData().size() > 0) {
   try {
    Map<String, String> fields = response.getSubtitleData().get(0);

    String lang = fields.get(""SubLanguageID"");
    language = new Locale(lang);

    String imdb = fields.get(""IDMovieImdb"");
    String name = fields.get(""MovieName"");",lang,language
Lnet/filebot/ui/transfer/FileTransferable;.getUriList()Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/transfer/FileTransferable.java;,MethodName,getUriList,"/**
  * @return line separated list of file URIs
  */
 private String getUriList() {
  StringBuilder sb = new StringBuilder(80 * files.length);

  for (File file : files) {
   // use URI encoded path",uri,uniform resource identifier
Lnet/filebot/platform/windows/WinAppUtilities;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/Main.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/platform/windows/WinAppUtilities.java;,ClassName,WinAppUtilities,"public class WinAppUtilities {

 public static void setAppUserModelID(String appID) {
  try {
   Shell32.INSTANCE.SetCurrentProcessExplicitAppUserModelID(new WString(appID));",app,application
Lnet/filebot/media/AutoDetection$Rule;.(IILnet/filebot/media/AutoDetection$Test;)V#t#0#2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/media/AutoDetection.java;,ParameterName,t,"public final int s;
  public final int m;

  private final Test t;

  public Rule(int s, int m, Test t) {
   this.s = s;",t,test
Lnet/filebot/platform/gnome/LibGIO;.g_vfs_get_file_for_uri(LPointer;Ljava/lang/String;)LPointer;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/platform/gnome/LibGIO.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/platform/gnome/NativeGVFS.java;,MethodName,g_vfs_get_file_for_uri,"void g_type_init();

 Pointer g_vfs_get_default();

 Pointer g_vfs_get_file_for_uri(Pointer gvfs, String uri);

 Pointer g_file_get_path(Pointer gfile);

 void g_free(Pointer gpointer);",uri,uniform resource identifier
Lnet/filebot/mediainfo/MediaInfo;.open(Ljava/io/File;)Lnet/filebot/mediainfo/MediaInfo;|Ljava/io/IOException;|Ljava/lang/IllegalArgumentException;#0#0#raf,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/mediainfo/MediaInfo.java;,VariableName,raf,"String path = file.getCanonicalPath();

  if (preferOpenViaBuffer(path)) {
   try (RandomAccessFile raf = new RandomAccessFile(file, ""r"")) {
    if (openViaBuffer(raf)) {
     return this;
    }",raf,random access file
Lnet/filebot/StandardRenameAction;.revert(Ljava/io/File;Ljava/io/File;)Ljava/io/File;|Ljava/io/IOException;#currentAttr,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/StandardRenameAction.java;,VariableName,currentAttr,"if (current.exists() && !original.exists()) {
   return FileUtilities.moveRename(current, original);
  }

  BasicFileAttributes currentAttr = Files.readAttributes(current.toPath(), BasicFileAttributes.class, LinkOption.NOFOLLOW_LINKS);
  BasicFileAttributes originalAttr = Files.readAttributes(original.toPath(), BasicFileAttributes.class, LinkOption.NOFOLLOW_LINKS);
",attr,attributes
Lnet/filebot/format/MediaBindingBean;.getPrimarySeriesInfo()Lnet/filebot/web/SeriesInfo;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/format/MediaBindingBean.java;,MethodName,getPrimarySeriesInfo," public SeriesInfo getPrimarySeriesInfo() {
  if (TheTVDB.getIdentifier().equals(getSeriesInfo().getDatabase())) {
   try {
    return TheTVDB.getSeriesInfo(getSeriesInfo().getId(), Locale.ENGLISH);",info,information
Lnet/filebot/cli/BindingsHandler;.parseArguments(LParameters;)I|LCmdLineException;#params#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/cli/BindingsHandler.java;,ParameterName,params,"public int parseArguments(Parameters params) throws CmdLineException {
  FieldSetter fs = setter.asFieldSetter();
  Map map = (Map) fs.getValue();
  if (map == null) {",params,parameters
Lnet/filebot/similarity/EpisodeMetrics$18593;.getSimilarity(Ljava/lang/Object;Ljava/lang/Object;)F#h2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/similarity/EpisodeMetrics.java;,VariableName,h2,"public float getSimilarity(Object o1, Object o2) {
   Set<String> h1 = getHint(o1);
   Set<String> h2 = getHint(o2);

   return h1.isEmpty() || h2.isEmpty() ? 0 : h1.containsAll(h2) || h2.containsAll(h1) ? 1 : 0;
  }",h,hint
Ljavax/swing/JTable;.getCellRect(IIZ)Ljava/awt/Rectangle;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/subtitle/SubtitleViewer.java;,MethodName,getCellRect,"  installAction(table, KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), newAction(""focus"", evt -> {
   // disable row filter
   setTableFilter(null);

   // ensure selected row is visible and roughly in the center of the table
   Rectangle focus = table.getCellRect(Math.max(table.getSelectedRow() - 7, 0), 0, true);
   focus.height = table.getSize().height;
   table.scrollRectToVisible(focus);
  }));",rect,rectangle
Lnet/filebot/util/ui/SelectButton$SelectIcon;.paintIcon(Ljava/awt/Component;Ljava/awt/Graphics;II)V#g2d,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/ui/SelectButton.java;,VariableName,g2d,"protected void paintComponent(Graphics g) {
  Graphics2D g2d = (Graphics2D) g;
  Rectangle bounds = new Rectangle(getSize());

  if (hover)
   g2d.setPaint(GradientStyle.TOP_TO_BOTTOM.getGradientPaint(bounds, beginColorHover, endColorHover));",g,graphics
Lnet/filebot/util/ui/ProgressMonitor;.runTask<T:Ljava/lang/Object;>(Ljava/lang/String;Ljava/lang/String;Lnet/filebot/util/ui/ProgressMonitor$ProgressWorker<TT;>;)Ljava/util/concurrent/FutureTask<TT;>;:TT;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/ui/ProgressMonitor.java;,ClassName,T,"Task<T> task = new Task<T>() {

   @Override
   protected T call() throws Exception {
    return worker.call(this::updateMessage, this::updateProgress, this::isCancelled);
   }
  };",t,task
Lnet/filebot/media/MediaDetection;.matchMovieByWordSequence(Ljava/lang/String;Ljava/util/Collection<Lnet/filebot/web/Movie;>;I)Ljava/util/List<Lnet/filebot/web/Movie;>;#0#0#0#commonSeq,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/media/MediaDetection.java;,VariableName,commonSeq,"for (Movie movie : options) {
   for (String alias : movie.getEffectiveNames()) {
    CollationKey[] movieSeq = HighPerformanceMatcher.prepare(normalizePunctuation(alias));
    CollationKey[] commonSeq = nameMatcher.matchFirstCommonSequence(new CollationKey[][] { nameSeq, movieSeq });

    if (commonSeq != null && commonSeq.length >= movieSeq.length) {
     movies.add(movie);",seq,sequence
Lnet/filebot/History;.getRenameMap()Ljava/util/Map<Ljava/io/File;Ljava/io/File;>;#0#0#elem,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/History.java;,VariableName,elem,"public Map<File, File> getRenameMap() {
  Map<File, File> map = new LinkedHashMap<File, File>();
  for (History.Sequence seq : this.sequences()) {
   for (History.Element elem : seq.elements()) {
    File to = new File(elem.to());
    if (!to.isAbsolute()) {
     to = new File(elem.dir(), elem.to());",elem,element
Lnet/filebot/similarity/DateMetric;.getSimilarity(Ljava/lang/Object;Ljava/lang/Object;)F#d2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/similarity/DateMetric.java;,VariableName,d2,"if (d1 == null)
   return 0;

  SimpleDate d2 = parse(o2);
  if (d2 == null)
   return 0;",d,date
Lnet/filebot/similarity/SeasonEpisodeMatcher;.(Lnet/filebot/similarity/SeasonEpisodeMatcher$SeasonEpisodeFilter;Z)V#Num101_TOKEN,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/similarity/SeasonEpisodeMatcher.java;,VariableName,Num101_TOKEN,"  // match patterns like 01, 102, 1003, 10102 (enclosed in separators)
  Num101_TOKEN = new SeasonEpisodePattern(sanity, ""(?<!\\p{Alnum})([0-2]?\\d?)(\\d{2})(\\d{2})?(?!\\p{Alnum})"", m -> {
   return numbers(m.group(1), streamCapturingGroups(m).skip(1).toArray(String[]::new));
  });",num,number
Lnet/filebot/util/ui/SwingUI;.lambda$5(Ljava/awt/Window;)V#w#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/ui/SwingUI.java;,VariableName,w,"Optional<Window> window = Optional.ofNullable(getWindow(source));

  try {
   window.ifPresent(w -> w.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR)));
   runnable.run();
  } catch (Exception e) {
   debug.log(Level.SEVERE, e, e::getMessage);",w,window
Lnet/filebot/web/WebRequest;.validateXml(Ljava/lang/String;)V|Lorg/xml/sax/SAXException;|Ljavax/xml/parsers/ParserConfigurationException;|Ljava/io/IOException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/WebRequest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/CachedResource.java;,MethodName,validateXml,"public static void validateXml(String xml) throws SAXException, ParserConfigurationException, IOException {
  if (xml.isEmpty())
   return;

  SAXParserFactory sax = SAXParserFactory.newInstance();",xml,extensible markup language
Lnet/filebot/ui/rename/Preset;.getValue<T:Ljava/lang/Object;>(Ljava/lang/String;Lnet/filebot/CachedResource$Transform<Ljava/lang/String;TT;>;)TT;#t#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/rename/Preset.java;,ParameterName,t,"private <T> T getValue(String s, Transform<String, T> t) {
  try {
   return s == null || s.isEmpty() ? null : t.transform(s);
  } catch (Exception e) {
   debug.log(Level.WARNING, e, e::toString);",t,transform
Lnet/filebot/media/MediaDetection;.lambda$18(Ljava/io/File;)Ljava/lang/Object;#0#0#0#v,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/media/MediaDetection.java;,VariableName,v,"if (VIDEO_FILES.accept(f) && f.length() > ONE_MEGABYTE) {
     try (MediaCharacteristics mi = MediaCharacteristicsParser.open(f)) {
      ChronoUnit d = mi.getDuration().toMinutes() < 10 ? ChronoUnit.MINUTES : ChronoUnit.HOURS;
      String v = mi.getVideoCodec();
      String a = mi.getAudioCodec();
      Integer w = mi.getWidth();
      Integer h = mi.getHeight();",v,video
Lnet/filebot/platform/mac/MacAppUtilities;.NSURL_URLByResolvingBookmarkData_startAccessingSecurityScopedResource(Ljava/lang/String;)Ljava/lang/Object;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/platform/mac/MacAppUtilities.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/platform/mac/DropToUnlock.java;,MethodName,NSURL_URLByResolvingBookmarkData_startAccessingSecurityScopedResource," public static Object NSURL_URLByResolvingBookmarkData_startAccessingSecurityScopedResource(String text) {
  return objc().sendProxy(""NSURL"", ""URLByResolvingBookmarkData:options:relativeToURL:bookmarkDataIsStale:error:"", NSData_initWithBase64Encoding(text), 1024, null, false, null).send(""startAccessingSecurityScopedResource"");
 }",url,uniform resource locator
Lnet/filebot/ui/subtitle/SimpleComboBox$SimpleComboBoxUI;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/subtitle/SimpleComboBox.java;,ClassName,SimpleComboBoxUI," setUI(new SimpleComboBoxUI(dropDownArrowIcon));
  setBorder(createEmptyBorder());
 }

 private static class SimpleComboBoxUI extends BasicComboBoxUI {

  private final Icon dropDownArrowIcon;

  public SimpleComboBoxUI(Icon dropDownArrowIcon) {
   this.dropDownArrowIcon = dropDownArrowIcon;",ui,user interface
Lnet/filebot/ui/episodelist/SeasonSpinnerModel;.YEAR_SEASON_MAX_VALUE)I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/ui/episodelist/SeasonSpinnerModel.java;,FieldName,YEAR_SEASON_MAX_VALUE,"class SeasonSpinnerModel extends SpinnerListModel {

 public static final int ALL_SEASONS = 0;

 public static final int YEAR_SEASON_MIN_VALUE = 1990;
 public static final int YEAR_SEASON_MAX_VALUE = 2100;

 public static final int SEASON_MIN_VALUE = 1;
 public static final int SEASON_MAX_VALUE = 50;

 public static List<Integer> getSeasonValues() {",max,maximum
Lnet/filebot/StandardRenameAction$1201;.rename(Ljava/io/File;Ljava/io/File;)Ljava/io/File;|Ljava/lang/Exception;#0#1#e,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/StandardRenameAction.java;,VariableName,e,"   try {
    Files.move(from.toPath(), dest.toPath());
    FileUtilities.createRelativeSymlink(from, dest, true);
   } catch (LinkageError e) {
    throw new Exception(""Unsupported Operation: move, createSymbolicLink"");
   }

   return dest;",e,error
Lnet/filebot/util/JsonUtilities;.getEnumMap<K:Ljava/lang/Enum<TK;>;>(Ljava/lang/Object;Ljava/lang/Class<TK;>;)Ljava/util/EnumMap<TK;Ljava/lang/String;>;#cls#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/JsonUtilities.java;,ParameterName,cls," public static <K extends Enum<K>> EnumMap<K, String> getEnumMap(Object node, Class<K> cls) {
  return getEnumMap(node, cls, StringUtilities::asNonEmptyString);
 }",cls,class
Lnet/filebot/web/OMDbClient;.split<T:Ljava/lang/Object;>(Ljava/util/regex/Pattern;Ljava/lang/String;Ljava/util/function/Function<Ljava/lang/String;TT;>;)Ljava/util/List<TT;>;#regex#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/OMDbClient.java;,ParameterName,regex," private <T> List<T> split(Pattern regex, String value, Function<String, T> toObject) {
  if (value == null || value.isEmpty())
   return emptyList();

  return regex.splitAsStream(value).map(String::trim).filter(s -> !s.isEmpty() && !s.equals(""N/A"")).map(toObject).collect(toList());
 }",regex,regular expression
Lnet/filebot/util/JsonUtilities;.readJson(Ljava/lang/CharSequence;)Ljava/lang/Object;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/TheTVDBClient.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/ShooterSubtitles.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/OpenSubtitlesClient.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/AcoustIDClient.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/util/JsonUtilities.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/CachedResource.java;,MethodName,readJson," protected Object postJson(String path, Object object) throws Exception {
  // curl -X POST --header 'Content-Type: application/json' --header 'Accept: application/json' 'https://api.thetvdb.com/login' --data '{""apikey"":""XXXXX""}'
  ByteBuffer response = post(getEndpoint(path), json(object, false).getBytes(UTF_8), ""application/json"", null);
  return readJson(UTF_8.decode(response));
 }",json,javascript object notation
Lnet/filebot/similarity/EpisodeMetrics$18593;.getSimilarity(Ljava/lang/Object;Ljava/lang/Object;)F#h1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/similarity/EpisodeMetrics.java;,VariableName,h1,"public float getSimilarity(Object o1, Object o2) {
   Set<String> h1 = getHint(o1);
   Set<String> h2 = getHint(o2);

   return h1.isEmpty() || h2.isEmpty() ? 0 : h1.containsAll(h2) || h2.containsAll(h1) ? 1 : 0;
  }",h,hint
Lnet/filebot/cli/BindingsHandler;.isIdentifier(Ljava/lang/String;)Z#0#0#c,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/cli/BindingsHandler.java;,VariableName,c," return false;
  }

  for (int i = 0; i < n.length();) {
   int c = n.codePointAt(i);

   if (i == 0) {
    if (!Character.isUnicodeIdentifierStart(c))
     return false;",c,code
Lnet/filebot/similarity/SequenceMatchSimilarity;.getSimilarity(Ljava/lang/Object;Ljava/lang/Object;)F#s2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/similarity/SequenceMatchSimilarity.java;,VariableName,s2,"public float getSimilarity(Object o1, Object o2) {
  String s1 = normalize(o1);
  String s2 = normalize(o2);

  // match common word sequence
  String match = match(s1, s2);",s,string
Lnet/filebot/web/EpisodeUtilities;.isAnime(Lnet/filebot/web/Episode;)Z#e#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/source/net/filebot/web/EpisodeUtilities.java;,ParameterName,e," public static List<Episode> getMultiEpisodeList(Episode e) {
  return e instanceof MultiEpisode ? ((MultiEpisode) e).getEpisodes() : singletonList(e);
 }",e,episode
Lnet/filebot/media/ReleaseInfoTest;.clean(Ljava/util/regex/Pattern;Ljava/lang/String;)Ljava/lang/String;#p#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/filebot-master/test/net/filebot/media/ReleaseInfoTest.java;,ParameterName,p," private static String clean(Pattern p, String s) {
  return p.matcher(s).replaceAll("""");
 }",p,pattern
Ledu/umd/cs/findbugs/AddMessages;.execute()V#0#annElementIter,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/AddMessages.java;,VariableName,annElementIter,"// Add pre-formatted display strings in ""Message""
            // elements for all bug annotations.
            Iterator<?> annElementIter = element.elements().iterator();
            Iterator<BugAnnotation> annIter = bugInstance.annotationIterator();
            while (annElementIter.hasNext() && annIter.hasNext()) {",ann,annotations
Ledu/umd/cs/findbugs/AddMessages;.execute()V#0#annIter,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/AddMessages.java;,VariableName,annIter,"// Add pre-formatted display strings in ""Message""
            // elements for all bug annotations.
            Iterator<?> annElementIter = element.elements().iterator();
            Iterator<BugAnnotation> annIter = bugInstance.annotationIterator();
            while (annElementIter.hasNext() && annIter.hasNext()) {
                Element annElement = (Element) annElementIter.next();
                BugAnnotation ann = annIter.next();",ann,annotation
Ledu/umd/cs/findbugs/AnalysisError;.(Ljava/lang/String;Ljava/lang/Throwable;)V#0#initCause,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/AnalysisError.java;,VariableName,initCause,"if (exception != null) {
            exceptionMessage = exception.toString();
            stackTrace = getStackTraceAsStringArray(exception);
            Throwable initCause = exception.getCause();
            if (initCause != null) {
                nestedExceptionMessage = initCause.toString();
                nestedStackTrace = getStackTraceAsStringArray(initCause);",init,initialize
Ledu/umd/cs/findbugs/AnalysisError;.getStackTraceAsStringArray(Ljava/lang/Throwable;)[Ljava/lang/String;#arr,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/AnalysisError.java;,VariableName,arr,"private String[] getStackTraceAsStringArray(Throwable exception) {
        StackTraceElement[] exceptionStackTrace = exception.getStackTrace();
        ArrayList<String> arr = new ArrayList<String>();
        for (StackTraceElement aExceptionStackTrace : exceptionStackTrace) {
            arr.add(aExceptionStackTrace.toString());
        }",arr,array
Ledu/umd/cs/findbugs/anttask/AbstractFindBugsTask;.jvm)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/anttask/AbstractFindBugsTask.java;,FieldName,jvm," private final String mainClass;

    private boolean debug = false;

    private File homeDir = null;

    private String jvm = """";

    private String jvmargs = """";

    private long timeout = DEFAULT_TIMEOUT;

    private boolean failOnError = false;",jvm,java virtual machine
Ledu/umd/cs/findbugs/anttask/FindBugsTask;.setAuxClasspath(LPath;)V#src#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/anttask/FindBugsTask.java;,ParameterName,src,"/**
     * the auxclasspath to use.
     */
    public void setAuxClasspath(Path src) {
        boolean nonEmpty = false;

        String[] elementList = src.list();
        for (String anElementList : elementList) {",src,source
Ledu/umd/cs/findbugs/ba/AbstractFrameModelingVisitor;.visitLLOAD(LLLOAD;)V#obj#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ba/AbstractFrameModelingVisitor.java;,ParameterName,obj," @Override
    public void visitStackInstruction(StackInstruction obj) {
    }",obj,object
Ledu/umd/cs/findbugs/ba/bcp/Binding;.getVarName()Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ba/bcp/Binding.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ba/bcp/BindingSet.java;,MethodName,getVarName,"/**
     * Get the variable name.
     */
    public String getVarName() {
        return varName;
    }",var,variable
Ledu/umd/cs/findbugs/ba/bcp/Invoke$RegexpStringMatcher;.(Ljava/lang/String;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ba/bcp/Invoke.java;,MethodName,RegexpStringMatcher,"    private static class RegexpStringMatcher implements StringMatcher {
        private final Pattern pattern;

        public RegexpStringMatcher(String re) {
            pattern = Pattern.compile(re);
        }",regexp,regular expression
Ledu/umd/cs/findbugs/ba/CFGBuilderException;.serialVersionUID)J,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ba/CFGBuilderException.java;,FieldName,serialVersionUID,"public class CFGBuilderException extends CheckedAnalysisException {
    /**
     *
     */
    private static final long serialVersionUID = 1L;

    public CFGBuilderException(String message) {
        super(message);
    }",uid,user identifier
Ledu/umd/cs/findbugs/ba/CFGPrinter;.print(Ljava/io/PrintStream;)V#0#edgeIter,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ba/CFGPrinter.java;,VariableName,edgeIter,"out.println(""END"" + blockAnnotate(bb));
            Iterator<Edge> edgeIter = isForwards ? cfg.outgoingEdgeIterator(bb) : cfg.incomingEdgeIterator(bb);
            while (edgeIter.hasNext()) {
                Edge edge = edgeIter.next();
                out.println(""  "" + edge.formatAsString(!isForwards) + "" "" + edgeAnnotate(edge));",iter,iterator
Ledu/umd/cs/findbugs/ba/ch/Subtypes2;.computeFirstCommonSuperclassOfDifferentDimensionArrays(LArrayType;LArrayType;)LReferenceType;#bArrType#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ba/ch/Subtypes2.java;,ParameterName,bArrType," * @param bArrType
     *            another ArrayType with the same number of dimensions
     * @return first common supertype
     * @throws ClassNotFoundException
     */
    private ReferenceType computeFirstCommonSuperclassOfSameDimensionArrays(ArrayType aArrType, ArrayType bArrType)
            throws ClassNotFoundException {
        assert aArrType.getDimensions() == bArrType.getDimensions();",arr,array
Ledu/umd/cs/findbugs/ba/CheckReturnValueAnnotation;.(Ljava/lang/String;ILjava/lang/String;I)V#p#0#3,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ba/CheckReturnValueAnnotation.java;,ParameterName,p,"    private CheckReturnValueAnnotation(String s, int i, int p) {
        super(s, i);
        pattern = ""RV_RETURN_VALUE_IGNORED"";
        priority = p;
    }",p,priority
Ledu/umd/cs/findbugs/ba/ClassContext;.dumpDataflowInformation(LMethod;Ledu/umd/cs/findbugs/ba/CFG;Ledu/umd/cs/findbugs/ba/vna/ValueNumberDataflow;Ledu/umd/cs/findbugs/ba/npe/IsNullValueDataflow;Ledu/umd/cs/findbugs/ba/deref/UnconditionalValueDerefDataflow;Ledu/umd/cs/findbugs/ba/type/TypeDataflow;)V|Ledu/umd/cs/findbugs/ba/DataflowAnalysisException;#vnd#0#2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ba/ClassContext.java;,ParameterName,vnd,"public static void dumpDataflowInformation(Method method, CFG cfg, ValueNumberDataflow vnd, IsNullValueDataflow inv,
            @CheckForNull UnconditionalValueDerefDataflow dataflow, @CheckForNull TypeDataflow typeDataflow)
                    throws DataflowAnalysisException {
        System.out.println(""\n\n{ UnconditionalValueDerefAnalysis analysis for "" + method.getName());
        TreeSet<Location> tree = new TreeSet<Location>();",vnd,value number data
Ledu/umd/cs/findbugs/ba/constant/ConstantDataflow;.(Ledu/umd/cs/findbugs/ba/CFG;Ledu/umd/cs/findbugs/ba/constant/ConstantAnalysis;)V#cfg#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ba/constant/ConstantDataflow.java;,ParameterName,cfg,"/**
 * Dataflow class for ConstantAnalysis.
 *
 * @see edu.umd.cs.findbugs.ba.Dataflow
 * @see edu.umd.cs.findbugs.ba.constant.ConstantAnalysis
 * @author David Hovemeyer
 */
public class ConstantDataflow extends Dataflow<ConstantFrame, ConstantAnalysis> {
    public ConstantDataflow(CFG cfg, ConstantAnalysis analysis) {
        super(cfg, analysis);
    }",cfg,control flow graph
Ledu/umd/cs/findbugs/ba/Dataflow;.reportAnalysis(Ljava/lang/String;)V#pkgEnd,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ba/Dataflow.java;,VariableName,pkgEnd,"private void reportAnalysis(String msg) {
        String shortAnalysisName = analysis.getClass().getName();
        int pkgEnd = shortAnalysisName.lastIndexOf('.');
        if (pkgEnd >= 0) {
            shortAnalysisName = shortAnalysisName.substring(pkgEnd + 1);
        }",pkg,package
Ledu/umd/cs/findbugs/ba/deref/UnconditionalValueDerefAnalysis;.(Ledu/umd/cs/findbugs/ba/ReverseDepthFirstSearch;Ledu/umd/cs/findbugs/ba/DepthFirstSearch;Ledu/umd/cs/findbugs/ba/CFG;LMethod;LMethodGen;Ledu/umd/cs/findbugs/ba/vna/ValueNumberDataflow;Ledu/umd/cs/findbugs/ba/AssertionMethods;)V#rdfs#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ba/deref/UnconditionalValueDerefAnalysis.java;,ParameterName,rdfs," * @param vnaDataflow
     * @param assertionMethods
     *            AssertionMethods for the analyzed class
     */
    public UnconditionalValueDerefAnalysis(ReverseDepthFirstSearch rdfs, DepthFirstSearch dfs, CFG cfg, Method method,
            MethodGen methodGen, ValueNumberDataflow vnaDataflow, AssertionMethods assertionMethods) {
        super(rdfs, dfs);
        this.cfg = cfg;
        this.methodGen = methodGen;",rdfs,reverse depth first search
Ledu/umd/cs/findbugs/ba/Hierarchy;.findMethod([LJavaClass;Ljava/lang/String;Ljava/lang/String;Ledu/umd/cs/findbugs/ba/JavaClassAndMethodChooser;)Ledu/umd/cs/findbugs/ba/JavaClassAndMethod;#methodSig#0#2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ba/Hierarchy.java;,ParameterName,methodSig,"* @param methodSig
     *            signature of the method
     * @return true if the method is a monitor wait, false if not
     */
    public static boolean isMonitorWait(String methodName, String methodSig) {
        return methodName.equals(""wait"") && (methodSig.equals(""()V"") || methodSig.equals(""(J)V"") || methodSig.equals(""(JI)V""));
    }",sig,signature
Ledu/umd/cs/findbugs/ba/interproc/PropertyDatabaseFormatException;.serialVersionUID)J,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ba/interproc/PropertyDatabaseFormatException.java;,FieldName,serialVersionUID,"public class PropertyDatabaseFormatException extends Exception {
    private static final long serialVersionUID = 1L;

    public PropertyDatabaseFormatException(String message) {
        super(message);
    }
}",uid,user identifier
Ledu/umd/cs/findbugs/ba/jsr305/AbstractMethodAnnotationAccumulator;.lookupAnnotation(Ledu/umd/cs/findbugs/ba/XMethod;)Ledu/umd/cs/findbugs/ba/jsr305/TypeQualifierAnnotation;#xm#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ba/jsr305/AbstractMethodAnnotationAccumulator.java;,ParameterName,xm,"    public abstract TypeQualifierAnnotationLookupResult getResult();

    protected abstract TypeQualifierAnnotation lookupAnnotation(XMethod xm);

    public abstract boolean overrides();",xm,xmethod
Ledu/umd/cs/findbugs/ba/jsr305/Analysis;.addEffectiveRelevantQualifiers(Ljava/util/HashSet<Ledu/umd/cs/findbugs/ba/jsr305/TypeQualifierValue<*>;>;Ledu/umd/cs/findbugs/ba/XMethod;)V#0#0#0#numParams,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ba/jsr305/Analysis.java;,VariableName,numParams,"if (!add) {
                int numParams = xmethod.getNumParams();
                for (int i = 0; i < numParams; i++) {
                    tqa = TypeQualifierApplications.getEffectiveTypeQualifierAnnotation(xmethod, i, tqv);
                    if (tqa != null) {",params,parameters
Ledu/umd/cs/findbugs/ba/jsr305/TypeQualifierAnnotationLookupResult;.combine(Ledu/umd/cs/findbugs/ba/jsr305/TypeQualifierAnnotation;Ledu/umd/cs/findbugs/ba/jsr305/TypeQualifierAnnotation;)Ledu/umd/cs/findbugs/ba/jsr305/TypeQualifierAnnotation;#a#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ba/jsr305/TypeQualifierAnnotationLookupResult.java;,ParameterName,a,"* @param a
     *            a TypeQualifierAnnotation
     * @param b
     *            another TypeQualifierAnnotation
     * @return combined TypeQualifierAnnotation compatible with both input
     *         TypeQualifierAnnotations, or null if no such
     *         TypeQualifierAnnotation exists
     */
    protected TypeQualifierAnnotation combine(TypeQualifierAnnotation a, TypeQualifierAnnotation b) {
        return null;
    }",a,annotation
Ledu/umd/cs/findbugs/ba/jsr305/TypeQualifierApplications;.constructTypeQualifierAnnotation(Ljava/util/Set<Ledu/umd/cs/findbugs/ba/jsr305/TypeQualifierAnnotation;>;Ledu/umd/cs/findbugs/classfile/analysis/AnnotationValue;)V#tqa,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ba/jsr305/TypeQualifierApplications.java;,VariableName,tqa,"When when = whenValue == null ? When.ALWAYS : When.valueOf(whenValue.value);
        ClassDescriptor annotationClass = v.getAnnotationClass();
        TypeQualifierValue<?> tqv = TypeQualifierValue.getValue(annotationClass, v.getValue(""value""));
        TypeQualifierAnnotation tqa = TypeQualifierAnnotation.getValue(tqv, when);
        return tqa;
    }",tqa,type qualifier annotation
Ledu/umd/cs/findbugs/ba/jsr305/TypeQualifierDataflowAnalysis;.initEntryFact(Ledu/umd/cs/findbugs/ba/jsr305/TypeQualifierValueSet;)V|Ledu/umd/cs/findbugs/ba/DataflowAnalysisException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ba/jsr305/TypeQualifierDataflowAnalysis.java;,MethodName,initEntryFact,"/*
     * (non-Javadoc)
     *
     * @see
     * edu.umd.cs.findbugs.ba.DataflowAnalysis#initEntryFact(java.lang.Object)
     */
    @Override
    public void initEntryFact(TypeQualifierValueSet result) throws DataflowAnalysisException {
        result.makeValid();
    }",init,initialize
Ledu/umd/cs/findbugs/ba/jsr305/TypeQualifierValue;.toString()Ljava/lang/String;#buf,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ba/jsr305/TypeQualifierValue.java;,VariableName,buf,"    public String toString() {
        StringBuilder buf = new StringBuilder();
        buf.append(typeQualifier.toString());
        if (value != null) {
            buf.append(':');",buf,buffer
Ledu/umd/cs/findbugs/ba/jsr305/ValidationSecurityManagerTest;.havePermissions()V|Ljava/lang/InterruptedException;#t,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ba/jsr305/ValidationSecurityManagerTest.java;,VariableName,t," When forConstantValue(@Nonnull
                SlashedClassName annotation, Object value) {
            Thread  t = new Thread() {
                @Override
                public void run() {
                    System.out.println(""bang"");
                }
            };",t,thread
Ledu/umd/cs/findbugs/ba/jsr305/ValidationSecurityManagerTest;.havePermissions()V|Ljava/lang/InterruptedException;#b,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ba/jsr305/ValidationSecurityManagerTest.java;,VariableName,b,"public void havePermissions() throws InterruptedException {
        final AtomicBoolean b = new AtomicBoolean(false);
        Thread t = new Thread() {
            @Override
            public void run() {
                b.set(true);
            }
        };",b,boolean
Ledu/umd/cs/findbugs/ba/npe/IsNullValue;.parameterMarkedAsNonnull(Ledu/umd/cs/findbugs/ba/XMethodParameter;)Ledu/umd/cs/findbugs/ba/npe/IsNullValue;#mp#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ba/npe/IsNullValue.java;,ParameterName,mp,"    /**
     * Get instance representing a parameter marked as MightBeNull
     */
    public static IsNullValue parameterMarkedAsMightBeNull(XMethodParameter mp) {
        return instanceByFlagsList[PARAM >> FLAG_SHIFT][NSP];
    }",mp,method parameter
Ledu/umd/cs/findbugs/ba/npe/IsNullValueFrame$PointerEqualityInfo;.addr2)Ledu/umd/cs/findbugs/ba/vna/ValueNumber;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ba/npe/IsNullValueFrame.java;,FieldName,addr2,"public class IsNullValueFrame extends Frame<IsNullValue> {

    static class PointerEqualityInfo {
        final ValueNumber addr1, addr2;

        final boolean areEqual;

        public PointerEqualityInfo(ValueNumber addr1, ValueNumber addr2, boolean areEqual) {
            if (addr1.getNumber() > addr2.getNumber()) {",addr,address
Ledu/umd/cs/findbugs/ba/npe/IsNullValueFrame$PointerEqualityInfo;.(Ledu/umd/cs/findbugs/ba/vna/ValueNumber;Ledu/umd/cs/findbugs/ba/vna/ValueNumber;Z)V#addr1#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ba/npe/IsNullValueFrame.java;,ParameterName,addr1,"final ValueNumber addr1, addr2;

        final boolean areEqual;

        public PointerEqualityInfo(ValueNumber addr1, ValueNumber addr2, boolean areEqual) {
            if (addr1.getNumber() > addr2.getNumber()) {
                ValueNumber tmp = addr1;
                addr1 = addr2;
                addr2 = tmp;
            }",addr,address
Ledu/umd/cs/findbugs/ba/npe/NullDerefAndRedundantComparisonFinder;.removeStrictlyDominatedLocations(Ljava/util/Set<Ledu/umd/cs/findbugs/ba/Location;>;Ledu/umd/cs/findbugs/ba/DominatorsAnalysis;)V#0#loc,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ba/npe/NullDerefAndRedundantComparisonFinder.java;,VariableName,loc,"LinkedList<Location> locations2 = new LinkedList<Location>(locations);

        for (Iterator<Location> i = locations.iterator(); i.hasNext();) {
            Location loc = i.next();
            if (strictlyDominated.get(loc.getBasicBlock().getLabel())) {
                i.remove();
                continue;
            }",loc,location
Ledu/umd/cs/findbugs/ba/npe/NullDerefAndRedundantComparisonFinder;.analyzeNullCheck(Ledu/umd/cs/findbugs/ba/npe/IsNullValueDataflow;Ledu/umd/cs/findbugs/ba/BasicBlock;)V|Ledu/umd/cs/findbugs/ba/DataflowAnalysisException;|Ledu/umd/cs/findbugs/ba/CFGBuilderException;#0#bb,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ba/npe/NullDerefAndRedundantComparisonFinder.java;,VariableName,bb,"int position = exceptionThrowerHandle.getPosition();
        int line = table == null ? 0 : table.getSourceLine(position);
        while (bbIter.hasNext()) {
            BasicBlock bb = bbIter.next();

            if (!bb.isNullCheck()) {
                continue;
            }",bb,basic block
Ledu/umd/cs/findbugs/ba/ResourceValueAnalysis;.initEntryFact(Ledu/umd/cs/findbugs/ba/ResourceValueFrame;)V#numSlots,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ba/ResourceValueAnalysis.java;,VariableName,numSlots,"public void initEntryFact(ResourceValueFrame result) {
        result.setValid();
        result.clearStack();
        final int numSlots = result.getNumSlots();
        for (int i = 0; i < numSlots; ++i) {
            boolean slotContainsInstance = resourceTracker.isParamInstance(resource, i);
            result.setValue(i, slotContainsInstance ? ResourceValue.instance() : ResourceValue.notInstance());
        }",num,number
Ledu/umd/cs/findbugs/ba/SignatureConverter;.shorten(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#0#otherPkg,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ba/SignatureConverter.java;,VariableName,otherPkg,"public static String shorten(String pkgName, String typeName) {
        int index = typeName.lastIndexOf('.');
        if (index >= 0) {
            String otherPkg = typeName.substring(0, index);
            if (otherPkg.equals(pkgName) || otherPkg.equals(""java.lang"")) {
                typeName = typeName.substring(index + 1);
            }
        }",pkg,package
Ledu/umd/cs/findbugs/ba/SignatureConverter;.shorten(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#pkgName#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ba/SignatureConverter.java;,ParameterName,pkgName," public static String shorten(String pkgName, String typeName) {
        int index = typeName.lastIndexOf('.');
        if (index >= 0) {
            String otherPkg = typeName.substring(0, index);",pkg,package
Ledu/umd/cs/findbugs/ba/SignatureParser;.getParameter(I)Ljava/lang/String;#pos#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ba/SignatureParser.java;,ParameterName,pos,"    public String getParameter(int pos) {
        int count = 0;
        for (Iterator<String> i = parameterSignatureIterator(); i.hasNext();) {
            String p = i.next();",pos,position
Ledu/umd/cs/findbugs/ba/SourceFinder;.findSourceFile(Ljava/lang/String;Ljava/lang/String;)Ledu/umd/cs/findbugs/ba/SourceFile;|Ljava/io/IOException;#0#repos,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ba/SourceFinder.java;,VariableName,repos,"/**
     * Set the list of source directories.
     */
    void setSourceBaseList(Iterable<String> sourceBaseList) {
        for (String repos : sourceBaseList) {
            if (repos.endsWith("".zip"") || repos.endsWith("".jar"") || repos.endsWith("".z0p.gz"")) {
                // Zip or jar archive
                try {",repos,repository
Ledu/umd/cs/findbugs/ba/TargetEnumeratingVisitor;.(LInstructionHandle;LConstantPoolGen;)V#constPoolGen#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ba/TargetEnumeratingVisitor.java;,ParameterName,constPoolGen,"* @param constPoolGen
     *            the ConstantPoolGen object for the class
     */
    public TargetEnumeratingVisitor(InstructionHandle handle, ConstantPoolGen constPoolGen) {
        this.handle = handle;
        this.constPoolGen = constPoolGen;
        targetList = new LinkedList<Target>();",const,constant
Ledu/umd/cs/findbugs/ba/TestCaseDetector;.likelyTestCase(Ledu/umd/cs/findbugs/ba/XMethod;)Z#c,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ba/TestCaseDetector.java;,VariableName,c,"if (m.getAnnotation(JUNIT4TEST) != null) {
            return true;
        }

        ClassDescriptor c = m.getClassDescriptor();
        if (m.getName().startsWith(""test"") || m.getName().startsWith(""assert"")) {
            Subtypes2 subtypes2 = AnalysisContext.currentAnalysisContext().getSubtypes2();",c,class
Ledu/umd/cs/findbugs/ba/type/TypeFrameModelingVisitor;.handleStoreInstruction(LStoreInstruction;)V#0#0#0#0#gType,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ba/type/TypeFrameModelingVisitor.java;,VariableName,gType,"if (methodName.equals(""entrySet"") && signature.equals(""()Ljava/util/Set;"") && className.startsWith(""java.util"")
                && className.endsWith(""Map"")) {
            Type argType;
            try {
                argType = frame.popValue();
            } catch (DataflowAnalysisException e) {",g,generic
Ledu/umd/cs/findbugs/ba/URLClassPath$RemoteArchiveEntry;.openStream(Ljava/lang/String;)Ljava/io/InputStream;|Ljava/io/IOException;#remoteFileURL,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ba/URLClassPath.java;,VariableName,remoteFileURL," @Override
        public InputStream openStream(String resourceName) throws IOException {
            URL remoteFileURL = new URL(""jar:"" + remoteArchiveURL.toString() + ""/"" + resourceName);
            try {
                return remoteFileURL.openStream();
            } catch (IOException e) {
                return null;",url,uniform resource locator
Ledu/umd/cs/findbugs/ba/URLClassPath$LocalDirectoryEntry;.(Ljava/lang/String;)V|Ljava/io/IOException;#dirName#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ba/URLClassPath.java;,ParameterName,dirName,"* @param dirName
         *            name of the local directory
         * @throws IOException
         *             if dirName is not a directory
         */
        public LocalDirectoryEntry(String dirName) throws IOException {
            this.dirName = dirName;
            if (!(new File(dirName).isDirectory())) {
                throw new IOException(dirName + "" is not a directory"");",dir,directory
Ledu/umd/cs/findbugs/ba/AbstractFrameModelingVisitor<Ledu/umd/cs/findbugs/ba/vna/ValueNumber;Ledu/umd/cs/findbugs/ba/vna/ValueNumberFrame;>;.getNumWordsConsumed(LInstruction;)I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ba/vna/ValueNumberFrameModelingVisitor.java;,MethodName,getNumWordsConsumed,"ValueNumberFrame frame = getFrame();

        AvailableLoad availableLoad = new AvailableLoad(staticField);

        int numWordsConsumed = getNumWordsConsumed(obj);
        ValueNumber[] inputValueList = popInputValues(numWordsConsumed);",num,number
Ledu/umd/cs/findbugs/bcel/BCELUtil;.JDK15_MINOR)I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/bcel/BCELUtil.java;,FieldName,JDK15_MINOR,"public static ClassDescriptor getClassDescriptor(JavaClass jclass) {
        return DescriptorFactory.instance().getClassDescriptor(ClassName.toSlashedClassName(jclass.getClassName()));
    }

    private static final int JDK15_MAJOR = 48;

    private static final int JDK15_MINOR = 0;

    /**
     * Checks if classfile was compiled for pre 1.5 target
     */",jdk,java development kit
Ledu/umd/cs/findbugs/BugInstance;.addSourceLine(Ledu/umd/cs/findbugs/ba/ClassContext;LMethodGen;Ljava/lang/String;LInstructionHandle;LInstructionHandle;)Ledu/umd/cs/findbugs/BugInstance;#0#tmp,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/BugInstance.java;,VariableName,tmp,"public BugInstance addSourceLine(ClassContext classContext, MethodGen methodGen, String sourceFile, InstructionHandle start,
            InstructionHandle end) {
        // Make sure start and end are really in the right order.
        if (start.getPosition() > end.getPosition()) {
            InstructionHandle tmp = start;
            start = end;
            end = tmp;
        }",tmp,temporary
Ledu/umd/cs/findbugs/BugInstanceTest;.testWriteCloudPropertiesWithoutMessagesEnabled()V|Ljava/lang/Exception;#bc,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/BugInstanceTest.java;,VariableName,bc,"inst.getXmlProps().setConsensus(""NOT_A_BUG"");
        inst.getXmlProps().setFirstSeen(BugInstance.firstSeenXMLFormat().parse(""4/11/10 2:00 PM""));
        inst.getXmlProps().setReviewCount(3);

        SortedBugCollection bc = new SortedBugCollection();
        bc.setWithMessages(false);


        String output = writeXML(inst, bc);
        System.err.println(output);",bc,bug collection
Ledu/umd/cs/findbugs/BugPattern;.(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V#abbrev#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/BugPattern.java;,ParameterName,abbrev,"   * @param abbrev
     *            the abbreviation or ""bug code""; see {@link BugCode}
     * @param category
     *            the category
     * @param experimental
     *            true if the bug pattern is experimental
     * @param shortDescription
     *            short one-line description of the bug species
     * @param longDescription
     *            longer one-line description; may contain placeholders for use
     *            by {@link FindBugsMessageFormat} to format BugAnnotations
     * @param detailText
     *            HTML text containing a full description of the bug species
     */
    public BugPattern(String type, String abbrev, String category, boolean experimental, String shortDescription,
            String longDescription, String detailText) {
        this(type, abbrev, category, experimental, shortDescription, longDescription, detailText, 0);
    }",abbrev,abbreviation
Ledu/umd/cs/findbugs/classfile/analysis/MethodInfo;.newArray(I)[Ledu/umd/cs/findbugs/classfile/analysis/MethodInfo;#sz#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/classfile/analysis/MethodInfo.java;,ParameterName,sz,"public class MethodInfo extends MethodDescriptor implements XMethod {

    public static final MethodInfo[] EMPTY_ARRAY = new MethodInfo[0];

    public static MethodInfo[] newArray(int sz) {
        if (sz == 0) {
            return EMPTY_ARRAY;
        }",sz,size
Ledu/umd/cs/findbugs/classfile/engine/AbstractMethodVisitor;.visitTableSwitchInsn(IILLabel;[LLabel;)V#min#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/classfile/engine/AbstractMethodVisitor.java;,ParameterName,min,"     * @see org.objectweb.asm.MethodVisitor#visitTableSwitchInsn(int, int,
     * org.objectweb.asm.Label, org.objectweb.asm.Label[])
     */
    @Override
    public void visitTableSwitchInsn(int min, int max, Label dflt, Label... labels) {
        // TODO Auto-generated method stub

    }",min,minimum
Ledu/umd/cs/findbugs/classfile/engine/bcel/CFGFactory;.analyze(Ledu/umd/cs/findbugs/classfile/IAnalysisCache;Ledu/umd/cs/findbugs/classfile/MethodDescriptor;)Ledu/umd/cs/findbugs/ba/CFG;|Ledu/umd/cs/findbugs/classfile/CheckedAnalysisException;#3#0#i,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/classfile/engine/bcel/CFGFactory.java;,VariableName,i,"        boolean ASSUME_ASSERTIONS_ENABLED = true;
        if (ASSUME_ASSERTIONS_ENABLED) {
            LinkedList<Edge> edgesToRemove = new LinkedList<Edge>();
            for (Iterator<Edge> i = cfg.edgeIterator(); i.hasNext();) {
                Edge e = i.next();
                if (e.getType() == EdgeTypes.IFCMP_EDGE) {
                    try {",ii,if instruction
Ledu/umd/cs/findbugs/classfile/engine/bcel/CFGFactory;.analyze(Ledu/umd/cs/findbugs/classfile/IAnalysisCache;Ledu/umd/cs/findbugs/classfile/MethodDescriptor;)Ledu/umd/cs/findbugs/ba/CFG;|Ledu/umd/cs/findbugs/classfile/CheckedAnalysisException;#3#0#i,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/classfile/engine/bcel/CFGFactory.java;,VariableName,i,"boolean ASSUME_ASSERTIONS_ENABLED = true;
        if (ASSUME_ASSERTIONS_ENABLED) {
            LinkedList<Edge> edgesToRemove = new LinkedList<Edge>();
            for (Iterator<Edge> i = cfg.edgeIterator(); i.hasNext();) {
                Edge e = i.next();
                if (e.getType() == EdgeTypes.IFCMP_EDGE) {
                    try {",i,iterator
Ledu/umd/cs/findbugs/classfile/engine/bcel/CFGFactory;.analyze(Ledu/umd/cs/findbugs/classfile/IAnalysisCache;Ledu/umd/cs/findbugs/classfile/MethodDescriptor;)Ledu/umd/cs/findbugs/ba/CFG;|Ledu/umd/cs/findbugs/classfile/CheckedAnalysisException;#3#1#e,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/classfile/engine/bcel/CFGFactory.java;,VariableName,e," if (ASSUME_ASSERTIONS_ENABLED) {
            LinkedList<Edge> edgesToRemove = new LinkedList<Edge>();
            for (Iterator<Edge> i = cfg.edgeIterator(); i.hasNext();) {
                Edge e = i.next();
                if (e.getType() == EdgeTypes.IFCMP_EDGE) {
                    try {
                        BasicBlock source = e.getSource();",e,entry
Ljava/io/DataInputStream;.readUTF()Ljava/lang/String;|Ljava/io/IOException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/classfile/engine/ClassParser.java;,MethodName,readUTF,"char spec = format.charAt(i);
            switch (spec) {
            case '8':
                data[i] = in.readUTF();
                break;
            case 'I':
                data[i] = in.readInt();",utf,unicode transformation format
Ledu/umd/cs/findbugs/classfile/IClassConstants;.ACC_VARARGS)I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/classfile/IClassConstants.java;,FieldName,ACC_VARARGS,"    public static final int ACC_ENUM = 0x4000;

    public static final int ACC_SYNCHRONIZED = 0x0020;

    public static final int ACC_BRIDGE = 0x0040;

    public static final int ACC_VARARGS = 0x0080;

    public static final int ACC_NATIVE = 0x0100;

    public static final int ACC_STRICT = 0x0800;",acc,accumulator
Ledu/umd/cs/findbugs/classfile/IClassConstants;.ACC_ENUM)I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/classfile/IClassConstants.java;,FieldName,ACC_ENUM,"    public static final int ACC_ABSTRACT = 0x0400;

    public static final int ACC_SYNTHETIC = 0x1000;

    public static final int ACC_ANNOTATION = 0x2000;

    public static final int ACC_ENUM = 0x4000;

    public static final int ACC_SYNCHRONIZED = 0x0020;

    public static final int ACC_BRIDGE = 0x0040;

    public static final int ACC_VARARGS = 0x0080;",acc,accumulator
Ledu/umd/cs/findbugs/classfile/ICodeBase;.setApplicationCodeBase(Z)V#isAppCodeBase#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/classfile/ICodeBase.java;,ParameterName,isAppCodeBase,"* @param isAppCodeBase
     *            true if this is an application codebase, false if not
     */
    public void setApplicationCodeBase(boolean isAppCodeBase);",app,application
Ledu/umd/cs/findbugs/classfile/impl/ClassPathBuilder;.addWorkListItemsForExtDir(Ljava/util/LinkedList<Ledu/umd/cs/findbugs/classfile/impl/ClassPathBuilder$WorkListItem;>;Ljava/lang/String;)V#extDir#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/classfile/impl/ClassPathBuilder.java;,ParameterName,extDir,"* @param extDir
     *            an extensions directory
     */
    private void addWorkListItemsForExtDir(LinkedList<WorkListItem> workList, String extDir) {
        File dir = new File(extDir);
        File[] fileList = dir.listFiles(new FileFilter() {",ext,extensions
Ledu/umd/cs/findbugs/classfile/impl/ClassPathBuilder;.addWorkListItemsForExtDir(Ljava/util/LinkedList<Ledu/umd/cs/findbugs/classfile/impl/ClassPathBuilder$WorkListItem;>;Ljava/lang/String;)V#extDir#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/classfile/impl/ClassPathBuilder.java;,ParameterName,extDir,"* @param extDir
     *            an extensions directory
     */
    private void addWorkListItemsForExtDir(LinkedList<WorkListItem> workList, String extDir) {
        File dir = new File(extDir);
        File[] fileList = dir.listFiles(new FileFilter() {",dir,directory
Ledu/umd/cs/findbugs/classfile/impl/ClassPathImpl;.toString()Ljava/lang/String;#0#cb,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/classfile/impl/ClassPathImpl.java;,VariableName,cb,"public String toString() {
        StringBuilder buf = new StringBuilder();
        for (IScannableCodeBase cb : appCodeBaseList) {
            buf.append(cb);
            buf.append("" "");
        }",cb,codebase
Ledu/umd/cs/findbugs/classfile/impl/ClassPathImpl;.getApplicationCodebaseEntries()Ljava/util/Map<Ljava/lang/String;Ledu/umd/cs/findbugs/classfile/ICodeBaseEntry;>;#appEntries,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/classfile/impl/ClassPathImpl.java;,VariableName,appEntries,"public Map<String, ICodeBaseEntry> getApplicationCodebaseEntries() {
        Map<String, ICodeBaseEntry> appEntries = new HashMap<String, ICodeBaseEntry>();
        Iterator<Entry<String, ICodeBaseEntry>> iterator = codeBaseEntryMap.entrySet().iterator();
        while(iterator.hasNext()) {
            Entry<String, ICodeBaseEntry> entry = iterator.next();",app,application
Ledu/umd/cs/findbugs/classfile/impl/ZipInputStreamCodeBase$MyIterator;.zis)Ljava/util/zip/ZipInputStream;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/classfile/impl/ZipInputStreamCodeBase.java;,FieldName,zis,"super(codeBaseLocator);

        this.file = file;
        setLastModifiedTime(file.lastModified());
        ZipInputStream zis = new ZipInputStream(new FileInputStream(file));
        try {
            ZipEntry ze;",zis,zip input stream
Ledu/umd/cs/findbugs/ClassScreener;.dotsToRegex(Ljava/lang/String;)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ClassScreener.java;,MethodName,dotsToRegex,"/**
     * replace the dots in a fully-qualified class/package name to a regular
     * expression fragment that will match file names.
     *
     * @param dotsName
     *            such as ""java.io"" or ""java.io.File""
     * @return regex fragment such as ""java[/\\\\]io"" (single backslash escaped
     *         twice)
     */
    private static String dotsToRegex(String dotsName) {",regex,regular expression
Ledu/umd/cs/findbugs/ClassScreener;.addAllowedPrefix(Ljava/lang/String;)V#packageRegex,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ClassScreener.java;,VariableName,packageRegex," if (DEBUG) {
            System.out.println(""Allowed prefix: "" + prefix);
        }
        String packageRegex = START + dotsToRegex(prefix) + SEP;
        if (DEBUG) {
            System.out.println(""Prefix regex: "" + packageRegex);
        }",regex,regular expression
Ledu/umd/cs/findbugs/cloud/AbstractCloud;.printLeaderBoard(Ljava/io/PrintWriter;Ledu/umd/cs/findbugs/util/Multiset<Ljava/lang/String;>;ILjava/lang/String;ZLjava/lang/String;)V#w#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/cloud/AbstractCloud.java;,ParameterName,w," public void printCloudSummary(PrintWriter w, Iterable<BugInstance> bugs, String[] packagePrefixes) {

        Multiset<String> evaluations = new Multiset<String>();
        Multiset<String> designations = new Multiset<String>();
        Multiset<String> bugStatus = new Multiset<String>();",w,writer
Ledu/umd/cs/findbugs/cloud/AbstractCloud;.printCloudSummary(Ljava/io/PrintWriter;Ljava/lang/Iterable<Ledu/umd/cs/findbugs/BugInstance;>;[Ljava/lang/String;)V#2#0#0#d,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/cloud/AbstractCloud.java;,VariableName,d,"int isAProblem = 0;
        int notAProblem = 0;
        for (BugDesignation designation : getLatestDesignationFromEachUser(b)) {
            UserDesignation d = UserDesignation.valueOf(designation.getDesignationKey());
            if (d == UserDesignation.I_WILL_FIX) {
                d = UserDesignation.MUST_FIX;
            } else if (d == UserDesignation.UNCLASSIFIED) {",d,designation
Ledu/umd/cs/findbugs/cloud/AbstractCloud;.getUserDesignation(Ledu/umd/cs/findbugs/BugInstance;)Ledu/umd/cs/findbugs/cloud/Cloud$UserDesignation;#bd,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/cloud/AbstractCloud.java;,VariableName,bd,"w.println();
        int count = 0;
        for (BugInstance bd : bugs) {

            count++;
            HashSet<String> reviewers = new HashSet<String>();
            String status = supportsBugLinks() && getBugLinkStatus(bd).bugIsFiled() ? getBugStatus(bd) : null;",bd,bug designation
Ledu/umd/cs/findbugs/cloud/BugFilingCommentHelper;.getBugReportSourceCode(Ledu/umd/cs/findbugs/BugInstance;)Ljava/lang/String;#0#0#s,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/cloud/BugFilingCommentHelper.java;,VariableName,s,"int lastLine = Integer.MIN_VALUE;
        for (BugAnnotation a : b.getAnnotations()) {
            if (a instanceof SourceLineAnnotation) {
                SourceLineAnnotation s = (SourceLineAnnotation) a;
                if (s.getClassName().equals(primaryClass.getClassName()) && s.getStartLine() > 0) {
                    firstLine = Math.min(firstLine, s.getStartLine());
                    lastLine = Math.max(lastLine, s.getEndLine());",s,source
Ledu/umd/cs/findbugs/cloud/Cloud;.updateBugStatusCache(Ledu/umd/cs/findbugs/BugInstance;Ljava/lang/String;)V#b#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/cloud/Cloud.java;,ParameterName,b,"    String getBugLinkType(BugInstance instance);

    URL fileBug(BugInstance b);

    void setBugLinkOnCloudAndStoreIssueDetails(BugInstance b, String viewUrl, String linkType) throws IOException,
    SignInCancelledException;",b,bug
Ledu/umd/cs/findbugs/cloud/DoNothingCloud;.getFirstSeenFromVersion(Ledu/umd/cs/findbugs/BugInstance;)J#v,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/cloud/DoNothingCloud.java;,VariableName,v,"public long getFirstSeenFromVersion(BugInstance b) {
        long firstVersion = b.getFirstVersion();
        AppVersion v = getBugCollection().getAppVersionFromSequenceNumber(firstVersion);
        if (v == null) {
            return getBugCollection().getTimestamp();
        }",v,version
Ledu/umd/cs/findbugs/CommandLineUiCallback;.br)Ljava/io/BufferedReader;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/CommandLineUiCallback.java;,FieldName,br,"public class CommandLineUiCallback implements IGuiCallback {
    private final CurrentThreadExecutorService bugUpdateExecutor = new CurrentThreadExecutorService();

    public CommandLineUiCallback() {
    }
    BufferedReader br = UserTextFile.bufferedReader(System.in);",br,buffered reader
Ledu/umd/cs/findbugs/config/CommandLine;.parse([Ljava/lang/String;IILjava/lang/String;)I#0#3#e,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/config/CommandLine.java;,VariableName,e,"        } catch (RuntimeException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }",e,edge
Ledu/umd/cs/findbugs/config/ProjectFilterSettings;.getIntPriorityAsString(I)Ljava/lang/String;#prio#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/config/ProjectFilterSettings.java;,ParameterName,prio," /**
     * Convert an integer warning priority threshold value to a String.
     */
    public static String getIntPriorityAsString(int prio) {
        String minPriority;
        switch (prio) {",prio,priority
Ledu/umd/cs/findbugs/config/UserPreferences;.write()V#0#0#prefFile,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/config/UserPreferences.java;,VariableName,prefFile," * Read persistent global UserPreferences from file in the user's home
     * directory.
     */
    public void read() {
        File prefFile = new File(SystemProperties.getProperty(""user.home""), PREF_FILE_NAME);
        if (!prefFile.exists() || !prefFile.isFile()) {
            return;
        }",pref,preference
Ledu/umd/cs/findbugs/config/UserPreferencesTest;.prefs)Ledu/umd/cs/findbugs/config/UserPreferences;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/config/UserPreferencesTest.java;,FieldName,prefs,"public class UserPreferencesTest extends TestCase {
    UserPreferences prefs;",prefs,preferences
Ledu/umd/cs/findbugs/DeepSubtypeAnalysis;.isDeepRemote(Ljava/lang/String;)D#refJavaClass,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/DeepSubtypeAnalysis.java;,VariableName,refJavaClass," if (refName.equals(""java.lang.Object"")) {
            return 0.99;
        }

        JavaClass refJavaClass = Repository.lookupClass(refName);
        return isDeepSerializable(refJavaClass);",ref,reference
Ledu/umd/cs/findbugs/DeepSubtypeAnalysis;.isDeepSerializable(LReferenceType;)D|Ljava/lang/ClassNotFoundException;#0#a,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/DeepSubtypeAnalysis.java;,VariableName,a," public static double isDeepSerializable(ReferenceType type) throws ClassNotFoundException {
        if (type instanceof ArrayType) {
            ArrayType a = (ArrayType) type;
            Type t = a.getBasicType();
            if (t instanceof ReferenceType) {",a,array
Ledu/umd/cs/findbugs/detect/BadlyOverriddenAdapter;.visitAfter(LJavaClass;)V#0#bi,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/detect/BadlyOverriddenAdapter.java;,VariableName,bi,"public void visitAfter(JavaClass obj) {
        for (BugInstance bi : badOverrideMap.values()) {
            if (bi != null) {
                bugReporter.reportBug(bi);
            }",bi,buginstance
Ledu/umd/cs/findbugs/detect/BadSyntaxForRegularExpression;.singleDotPatternWouldBeSilly(IZ)V#regex,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/detect/BadSyntaxForRegularExpression.java;,VariableName,regex,"if (value == null || !(value instanceof String)) {
            return;
        }
        String regex = (String) value;
        boolean dotIsUsed = regex.equals(""."");
        if (!dotIsUsed && !regex.equals(""|"")) {
            return;",regex,regular expression
Ledu/umd/cs/findbugs/detect/BadSyntaxForRegularExpression;.sawRegExPattern(II)V#0#1#eol,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/detect/BadSyntaxForRegularExpression.java;,VariableName,eol,"Pattern.compile(regex, flags);
        } catch (PatternSyntaxException e) {
            String message = e.getMessage();
            int eol = message.indexOf('\n');
            if (eol > 0) {
                message = message.substring(0, eol);
            }",eol,end of list
Ljava/lang/Number;.intValue()I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/detect/BadSyntaxForRegularExpression.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/detect/DumbMethods.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/detect/SerializableIdiom.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/OpcodeStack.java;,MethodName,intValue,"if (value == null || !(value instanceof Integer)) {
            return defaultValue;
        }
        return ((Number) value).intValue();
    }",int,integer
Ledu/umd/cs/findbugs/ba/interproc/ParameterProperty;.setParamsWithProperty(Ljava/util/BitSet;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/detect/BuildUnconditionalParamDerefDatabase.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ba/interproc/ParameterProperty.java;,MethodName,setParamsWithProperty,"         dataflow, classContext.getTypeDataflow(method));
            }
            ParameterProperty property = new ParameterProperty();
            property.setParamsWithProperty(unconditionalDerefSet);

            AnalysisContext.currentAnalysisContext().getUnconditionalDerefParamDatabase()
            .setProperty(xmethod.getMethodDescriptor(), property);
            if (DEBUG) {",params,parameter
Ledu/umd/cs/findbugs/detect/CallToUnsupportedMethod;.analyzeMethod(Ledu/umd/cs/findbugs/ba/ClassContext;LMethod;)V|Ledu/umd/cs/findbugs/ba/MethodUnprofitableException;|Ledu/umd/cs/findbugs/ba/CFGBuilderException;|Ledu/umd/cs/findbugs/ba/DataflowAnalysisException;#0#0#1#0#xc,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/detect/CallToUnsupportedMethod.java;,VariableName,xc,"if (!m.isUnsupported()) {
                    continue locationLoop;
                }
                XClass xc = AnalysisContext.currentXFactory().getXClass(m.getClassDescriptor());
                if (!(inv instanceof INVOKESTATIC) && !(m.isFinal() || xc.isFinal())) {
                    priority = Priorities.NORMAL_PRIORITY;
                }",xc,xclass
Ledu/umd/cs/findbugs/classfile/engine/asm/FindBugsASM;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/detect/CheckRelaxingNullnessAnnotation.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/classfile/engine/ClassParserUsingASM.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/classfile/engine/AbstractFieldAnnotationVisitor.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/classfile/engine/SelfMethodCalls.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/classfile/engine/asm/FindBugsASM.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/asm/FBMethodVisitor.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/asm/ClassNodeDetector.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/classfile/analysis/AnnotationValue.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/classfile/engine/AbstractMethodVisitor.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/asm/FBClassReader.java;,ClassName,FindBugsASM,"        DetectorNode(int access, String name, String desc, String signature, String[] exceptions, XMethod xmethod) {
            super(FindBugsASM.ASM_VERSION, access, name, desc, signature, exceptions);
            this.xmethod = xmethod;
        }",asm,assembler source language
Ledu/umd/cs/findbugs/detect/CheckTypeQualifiers;.checkForEqualityTest(Ledu/umd/cs/findbugs/ba/XMethod;Ledu/umd/cs/findbugs/ba/CFG;Ledu/umd/cs/findbugs/ba/jsr305/TypeQualifierValue<*>;Ledu/umd/cs/findbugs/ba/jsr305/TypeQualifierValueSet;Ledu/umd/cs/findbugs/ba/Location;Ledu/umd/cs/findbugs/ba/vna/ValueNumberFrame;)V|Ledu/umd/cs/findbugs/ba/DataflowAnalysisException;#1#nextTQ,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/detect/CheckTypeQualifiers.java;,VariableName,nextTQ,"if (next.hasFlag(ValueNumber.CONSTANT_VALUE)) {
                return;
            }
            FlowValue topTQ = forwardsFact.getValue(top);
            FlowValue nextTQ = forwardsFact.getValue(next);
            if (DEBUG) {
                System.out.println(""Comparing values at "" + loc.toCompactString());
                System.out.println("" Comparing "" + topTQ + "" and "" + nextTQ);",tq,type qualifiers
Ledu/umd/cs/findbugs/detect/DumbMethods;.sawOpcode(I)V#5#args,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/detect/DumbMethods.java;,VariableName,args,"if (seen == INVOKESTATIC && (getClassConstantOperand().equals(""com/google/common/base/Preconditions"")
                && getNameConstantOperand().equals(""checkNotNull"")
                || getClassConstantOperand().equals(""com/google/common/base/Strings"")
                && (getNameConstantOperand().equals(""nullToEmpty"") ||
                        getNameConstantOperand().equals(""emptyToNull"") ||
                        getNameConstantOperand().equals(""isNullOrEmpty"")))
                ) {
            int args = PreorderVisitor.getNumberArguments(getSigConstantOperand());

            OpcodeStack.Item item = stack.getStackItem(args - 1);
            Object o = item.getConstant();
            if (o instanceof String) {",args,argument
Ledu/umd/cs/findbugs/detect/DuplicateBranches;.getFinalTarget(Ledu/umd/cs/findbugs/ba/CFG;ILjava/util/Collection<LInstructionHandle;>;)I#bbi,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/detect/DuplicateBranches.java;,VariableName,bbi,"    return;
            }

            CFG cfg = classContext.getCFG(method);

            Iterator<BasicBlock> bbi = cfg.blockIterator();
            while (bbi.hasNext()) {
                BasicBlock bb = bbi.next();",bbi,basic block iterator
Ledu/umd/cs/findbugs/detect/FindDoubleCheck;.sawOpcode(I)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/detect/FindDoubleCheck.java;,MethodName,sawOpcode," public void sawOpcode(int seen) {
        if (DEBUG) {
            System.out.println(getPC() + ""\t"" + OPCODE_NAMES[seen] + ""\t"" + stage + ""\t"" + count + ""\t"" + countSinceGetReference);
        }
",opcode,operation code
Ledu/umd/cs/findbugs/detect/FindInconsistentSync2;.report()V#0#0#printFreq,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/detect/FindInconsistentSync2.java;,VariableName,printFreq,"  // continue;
                propertySet.addProperty(InconsistentSyncWarningProperty.NO_LOCAL_LOCKS);
            }

            int freq, printFreq;
            if (locked + unlocked > 0) {
                freq = (100 * locked) / (locked + unlocked);
                printFreq = (100 * locked) / (locked + unlocked + numNullCheckUnlocked);",freq,frequency
Ledu/umd/cs/findbugs/detect/FindJSR166LockMonitorenter;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/detect/FindJSR166LockMonitorenter.java;,ClassName,FindJSR166LockMonitorenter,"/**
 * Find places where ordinary (balanced) synchronization is performed on JSR166
 * Lock objects. Suggested by Doug Lea.
 *
 * @author David Hovemeyer
 */
public final class FindJSR166LockMonitorenter implements Detector, StatelessDetector {",jsr,java specification request
Ledu/umd/cs/findbugs/detect/FindNullDeref;.unconditionalDerefParamDatabase)Ledu/umd/cs/findbugs/ba/npe/ParameterNullnessPropertyDatabase;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/detect/FindNullDeref.java;,FieldName,unconditionalDerefParamDatabase,"// Fields
    private final BugReporter bugReporter;

    private final BugAccumulator bugAccumulator;

    // Cached database stuff
    private ParameterNullnessPropertyDatabase unconditionalDerefParamDatabase;

    private boolean checkedDatabases = false;

    // Transient state",param,parameter
Ledu/umd/cs/findbugs/detect/FindRefComparison$RefComparisonTypeFrameModelingVisitor;.visitGETSTATIC(LGETSTATIC;)V#xf,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/detect/FindRefComparison.java;,VariableName,xf,"public void visitGETSTATIC(GETSTATIC obj) {
            Type type = obj.getType(getCPG());
            XField xf = XFactory.createXField(obj, cpg);
            if (xf.isFinal()) {
                FieldSummary fieldSummary = AnalysisContext.currentAnalysisContext().getFieldSummary();",xf,xfield
Ledu/umd/cs/findbugs/detect/FindRefComparison;.checkEqualsComparison(Ledu/umd/cs/findbugs/ba/Location;LJavaClass;LMethod;LMethodGen;LConstantPoolGen;Ledu/umd/cs/findbugs/ba/type/TypeDataflow;)V|Ledu/umd/cs/findbugs/ba/DataflowAnalysisException;#inv,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/detect/FindRefComparison.java;,VariableName,inv,"checkRefComparison(location, jclass, method, methodGen, visitor, typeDataflow, stringComparisonList,
                    refComparisonList);
        } else if (ins instanceof InvokeInstruction) {
            InvokeInstruction inv = (InvokeInstruction) ins;
            boolean isStatic = inv instanceof INVOKESTATIC;
            @DottedClassName String className = inv.getClassName(cpg);
            String methodName = inv.getMethodName(cpg);",inv,invoke
Ledu/umd/cs/findbugs/detect/FindRoughConstants$BadConstant;.addApprox(Ljava/math/BigDecimal;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/detect/FindRoughConstants.java;,MethodName,addApprox,"private void addApprox(BigDecimal roundFloor) {
            double approxDouble = roundFloor.doubleValue();
            if (approxDouble != value && Math.abs(approxDouble - value) / value < 0.0001) {
                approxSet.add(approxDouble);",approx,approximate
Ledu/umd/cs/findbugs/detect/FindSqlInjection;.(Ledu/umd/cs/findbugs/BugReporter;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/detect/FindSqlInjection.java;,MethodName,FindSqlInjection,"BugReporter bugReporter;

    BugAccumulator bugAccumulator;

    private final boolean testingEnabled;

    public FindSqlInjection(BugReporter bugReporter) {
        this.bugReporter = bugReporter;
        this.bugAccumulator = new BugAccumulator(bugReporter);
        testingEnabled = SystemProperties.getBoolean(""report_TESTING_pattern_in_standard_detectors"");",sql,structured query language
Ledu/umd/cs/findbugs/detect/FindSqlInjection;.getStringAppendState(Ledu/umd/cs/findbugs/ba/CFG;LConstantPoolGen;)Ledu/umd/cs/findbugs/detect/FindSqlInjection$StringAppendState;|Ledu/umd/cs/findbugs/ba/CFGBuilderException;#0#0#0#prevLocation,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/detect/FindSqlInjection.java;,VariableName,prevLocation,"} else if (isStringAppend(ins, cpg)) {
                stringAppendState.setSawAppend(handle);

                Location prevLocation = getPreviousLocation(cfg, location, true);
                if (prevLocation != null && !isSafeValue(prevLocation, cpg)) {
                    stringAppendState.setSawUnsafeAppend(handle);
                }",prev,previous
Ledu/umd/cs/findbugs/detect/FindSqlInjection;.generateBugInstance(LJavaClass;LMethodGen;LInstructionHandle;Ledu/umd/cs/findbugs/detect/FindSqlInjection$StringAppendState;)Ledu/umd/cs/findbugs/BugInstance;#methodGen#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/detect/FindSqlInjection.java;,ParameterName,methodGen,"private BugInstance generateBugInstance(JavaClass javaClass, MethodGen methodGen, InstructionHandle handle,
            StringAppendState stringAppendState) {
        Instruction instruction = handle.getInstruction();
        ConstantPoolGen cpg = methodGen.getConstantPool();
        int priority = LOW_PRIORITY;",gen,generate
Ledu/umd/cs/findbugs/detect/FindSqlInjectionTest;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/detect/FindSqlInjectionTest.java;,ClassName,FindSqlInjectionTest,"public class FindSqlInjectionTest extends TestCase {

    public void testOpenQuote() {
        assertTrue(FindSqlInjection.isOpenQuote(""'""));
        assertTrue(FindSqlInjection.isOpenQuote("" '""));",sql,structured query language
Ledu/umd/cs/findbugs/detect/FindUnrelatedTypesInGenericContainer;.isSynthetic(LMethod;)Z#0#attr,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/detect/FindUnrelatedTypesInGenericContainer.java;,VariableName,attr,"    return true;
        }
        Attribute[] attrs = m.getAttributes();
        for (Attribute attr : attrs) {
            if (attr instanceof Synthetic) {
                return true;
            }",attr,attribute
Ledu/umd/cs/findbugs/detect/FindUnreleasedLock;.visitClassContext(Ledu/umd/cs/findbugs/ba/ClassContext;)V#sawUtilConcurrentLocks,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/detect/FindUnreleasedLock.java;,VariableName,sawUtilConcurrentLocks," if (BCELUtil.preTiger(jclass)) {
            return;
        }

        boolean sawUtilConcurrentLocks = false;
        for (Constant c : jclass.getConstantPool().getConstantPool()) {
            if (c instanceof ConstantMethodref) {
                ConstantMethodref m = (ConstantMethodref) c;",util,utility
Ledu/umd/cs/findbugs/ba/AbstractFrameModelingVisitor<Ledu/umd/cs/findbugs/ba/ResourceValue;Ledu/umd/cs/findbugs/ba/ResourceValueFrame;>;.getCPG()LConstantPoolGen;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/detect/FindUnreleasedLock.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/detect/StreamFrameModelingVisitor.java;,MethodName,getCPG," public void transferInstruction(InstructionHandle handle, BasicBlock basicBlock) throws DataflowAnalysisException {
            final Instruction ins = handle.getInstruction();
            final ConstantPoolGen cpg = getCPG();
            final ResourceValueFrame frame = getFrame();

            int status = -1;",cpg,constant pool gen
Ledu/umd/cs/findbugs/detect/FindUseOfNonSerializableValue$Use;.STORE_INTO_HTTP_SESSION)Ledu/umd/cs/findbugs/detect/FindUseOfNonSerializableValue$Use;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/detect/FindUseOfNonSerializableValue.java;,VariableName,STORE_INTO_HTTP_SESSION," enum Use { STORE_INTO_HTTP_SESSION, PASSED_TO_WRITE_OBJECT, STORED_IN_SERIALZIED_FIELD }

    @CheckForNull Use getUse(ConstantPoolGen cpg, Instruction ins) {
        if (ins instanceof InvokeInstruction) {
            InvokeInstruction invoke = (InvokeInstruction) ins;",http,hypertext transfer protocol
Ledu/umd/cs/findbugs/IntAnnotation;.INT_ACTUAL_ARGUMENTS)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/detect/FormatStringChecker.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/IntAnnotation.java;,FieldName,INT_ACTUAL_ARGUMENTS,"             bugReporter.reportBug(new BugInstance(this, ""VA_FORMAT_STRING_MISSING_ARGUMENT"", HIGH_PRIORITY)
                        .addClassAndMethod(this).addCalledMethod(this).addString(e.formatSpecifier)
                        .describe(StringAnnotation.FORMAT_SPECIFIER_ROLE).addString(formatString)
                        .describe(StringAnnotation.FORMAT_STRING_ROLE).addInt(e.pos + 1)
                        .describe(IntAnnotation.INT_EXPECTED_ARGUMENTS).addInt(arguments.length)
                        .describe(IntAnnotation.INT_ACTUAL_ARGUMENTS).addSourceLine(this));
                    }",int,integer
Ljava/lang/Long;.toHexString(J)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/detect/IncompatMask.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/IntAnnotation.java;,MethodName,toHexString,"        // System.out.println(""Match at offset "" + getPC());
            BugInstance bug = new BugInstance(this, t, HIGH_PRIORITY).addClassAndMethod(this);
            if (!t.equals(""BIT_AND_ZZ"")) {
                bug.addString(""0x"" + Long.toHexString(arg0)).addString(""0x"" + Long.toHexString(arg1));
            }

            bug.addSourceLine(this);
            bugReporter.reportBug(bug);",hex,hexadecimal
Ledu/umd/cs/findbugs/detect/InefficientMemberAccess;.visitClassContext(Ledu/umd/cs/findbugs/ba/ClassContext;)V#cls,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/detect/InefficientMemberAccess.java;,VariableName,cls,"public void visitClassContext(ClassContext classContext) {
        JavaClass cls = classContext.getJavaClass();
        clsName = cls.getClassName();
        if (clsName.indexOf('$') >= 0) {
            super.visitClassContext(classContext);",cls,class
Ledu/umd/cs/findbugs/detect/InfiniteLoop;.constantSince(Ledu/umd/cs/findbugs/OpcodeStack$Item;I)Z#reg,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/detect/InfiniteLoop.java;,VariableName,reg,"private boolean isConstant(Item item0, BackwardsBranch bb) {

        int reg = item0.getRegisterNumber();
        if (reg >= 0) {
            return bb.invariantRegisters.contains(reg) || reg >= bb.numLastUpdates;
        }",reg,register
Ledu/umd/cs/findbugs/detect/InfiniteLoop$ForwardConditionalBranch;.equals(Ljava/lang/Object;)Z#o#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/detect/InfiniteLoop.java;,ParameterName,o,"public boolean equals(Object o) {
            if (o == null) {
                return false;
            }",o,object
Ledu/umd/cs/findbugs/detect/NoiseNullDeref;.getDescription(Ledu/umd/cs/findbugs/ba/Location;Ledu/umd/cs/findbugs/ba/vna/ValueNumber;)Ljava/lang/String;#pu,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/detect/NoiseNullDeref.java;,VariableName,pu,"String getDescription(Location loc, ValueNumber refValue) {
        PointerUsageRequiringNonNullValue pu;
        try {
            UsagesRequiringNonNullValues usages = classContext.getUsagesRequiringNonNullValues(method);
            pu = usages.get(loc, refValue, vnaDataflow);",pu,pointer usage
Ledu/umd/cs/findbugs/detect/OverridingEqualsNotSymmetrical;.count(Ledu/umd/cs/findbugs/ba/EqualsKindSummary$KindOfEquals;)V#k#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/detect/OverridingEqualsNotSymmetrical.java;,ParameterName,k,"private void count(EqualsKindSummary.KindOfEquals k) {
        Integer v = count.get(k);
        if (v == null) {
            count.put(k, 1);",k,kind
Ledu/umd/cs/findbugs/detect/ReadReturnShouldBeChecked;.lastCallSig)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/detect/ReadReturnShouldBeChecked.java;,FieldName,lastCallSig,"BugAccumulator accumulator;

    private int locationOfCall;

    private String lastCallClass = null, lastCallMethod = null, lastCallSig = null;

    public ReadReturnShouldBeChecked(BugReporter bugReporter) {
        this.accumulator = new BugAccumulator(bugReporter);
    }",sig,signature
Ledu/umd/cs/findbugs/detect/RedundantInterfaces;.visitClassContext(Ledu/umd/cs/findbugs/ba/ClassContext;)V#0#0#superObj,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/detect/RedundantInterfaces.java;,VariableName,superObj,"try {
            JavaClass superObj = obj.getSuperClass();
            SortedSet<String> redundantInfNames = new TreeSet<String>();

            for (String interfaceName : interfaceNames) {
                if (!""java/io/Serializable"".equals(interfaceName)) {",obj,object
Ledu/umd/cs/findbugs/detect/SerializableIdiom;.visit(LField;)V#fieldSig,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/detect/SerializableIdiom.java;,VariableName,fieldSig,"FieldSummary fieldSummary = AnalysisContext.currentAnalysisContext().getFieldSummary();
        Item summary = fieldSummary.getSummary(getXField());
        String fieldSig = summary.getSignature();

        if (isEjbImplClass) {
            ClassDescriptor fieldType = DescriptorFactory.createClassDescriptorFromFieldSignature(fieldSig);",sig,signature
Ledu/umd/cs/findbugs/detect/UnnecessaryMath;.constValue)D,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/detect/UnnecessaryMath.java;,FieldName,constValue,"private final BugReporter bugReporter;

    private int state = SEEN_NOTHING;

    private double constValue;

    @edu.umd.cs.findbugs.internalAnnotations.StaticConstant
    private static final Set<String> zeroMethods = new HashSet<String>() {",const,constant
Ledu/umd/cs/findbugs/detect/UnreadFields;.sawOpcode(I)V#7#f,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/detect/UnreadFields.java;,VariableName,f,"public void visit(Field obj) {
        super.visit(obj);
        XField f = XFactory.createXField(this);
        data.allMyFields.add(f);
        String signature = obj.getSignature();
        if (!getFieldName().equals(""serialVersionUID"")) {",f,field
Ledu/umd/cs/findbugs/detect/UnreadFields;.classHasParameter(LJavaClass;)Z#0#a,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/detect/UnreadFields.java;,VariableName,a,"public static boolean classHasParameter(JavaClass obj) {
        for (Attribute a : obj.getAttributes()) {
            if (a instanceof Signature) {
                String sig = ((Signature) a).getSignature();
                return sig.charAt(0) == '<';",a,attribute
Ledu/umd/cs/findbugs/detect/UselessSubclassMethod;.findSuperclassMethod(Ljava/lang/String;LMethod;)LMethod;|Ljava/lang/ClassNotFoundException;#0#m,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/detect/UselessSubclassMethod.java;,VariableName,m,"Type[] subArgs = null;
        JavaClass superClass = Repository.lookupClass(superclassName);
        Method[] methods = superClass.getMethods();
        outer: for (Method m : methods) {
            if (m.getName().equals(methodName)) {
                if (subArgs == null) {
                    subArgs = Type.getArgumentTypes(subclassMethod.getSignature());",m,method
Ledu/umd/cs/findbugs/DetectorFactory;.constructorArgTypes)[Ljava/lang/Class<Ljava/lang/Class;{0}*>;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/DetectorFactory.java;,FieldName,constructorArgTypes," private static final boolean SUPPORT_OLD_DETECTOR_INTERFACE = SystemProperties
            .getBoolean(""findbugs.support.old.detector.interface"");

    private static final Class<?>[] constructorArgTypes = new Class<?>[] { BugReporter.class };

    static class ReflectionDetectorCreator {
        private final Class<?> detectorClass;",arg,argument
Ledu/umd/cs/findbugs/DiscoverSourceDirectories;.execute()V|Ledu/umd/cs/findbugs/classfile/CheckedAnalysisException;|Ljava/io/IOException;|Ljava/lang/InterruptedException;#dir,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/DiscoverSourceDirectories.java;,VariableName,dir,"/**
     * Execute the search for source directories.
     *
     * @throws edu.umd.cs.findbugs.classfile.CheckedAnalysisException
     * @throws java.io.IOException
     * @throws java.lang.InterruptedException
     */
    public void execute() throws CheckedAnalysisException, IOException, InterruptedException {
        File dir = new File(rootSourceDirectory);
        if (!dir.isDirectory()) {
            throw new IOException(""Path "" + rootSourceDirectory + "" is not a directory"");
        }",dir,directory
Ledu/umd/cs/findbugs/DiscoverSourceDirectories;.execute()V|Ledu/umd/cs/findbugs/classfile/CheckedAnalysisException;|Ljava/io/IOException;|Ljava/lang/InterruptedException;#dir,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/DiscoverSourceDirectories.java;,VariableName,dir,"/**
     * Execute the search for source directories.
     *
     * @throws edu.umd.cs.findbugs.classfile.CheckedAnalysisException
     * @throws java.io.IOException
     * @throws java.lang.InterruptedException
     */
    public void execute() throws CheckedAnalysisException, IOException, InterruptedException {
        File dir = new File(rootSourceDirectory);
        if (!dir.isDirectory()) {
            throw new IOException(""Path "" + rootSourceDirectory + "" is not a directory"");
        }",dir,directory
Ledu/umd/cs/findbugs/BugInstance;.getAbbrev()Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/filter/BugMatcher.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/BugInstance.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/SortedBugCollection.java;,MethodName,getAbbrev," public boolean match(BugInstance bugInstance) {
        boolean result1 = codes.match(bugInstance.getAbbrev());
        boolean result2 = patterns.match(bugInstance.getType());
        boolean result3 = categories.match(bugInstance.getBugPattern().getCategory());
        if (DEBUG) {",abbrev,abbreviation
Ledu/umd/cs/findbugs/filter/Filter;.parse(Ljava/lang/String;Ljava/io/InputStream;)V|Ljava/io/IOException;|Lorg/xml/sax/SAXException;#0#0#xr,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/filter/Filter.java;,VariableName,xr," private void parse(String fileName, @WillClose InputStream stream) throws IOException, SAXException {
        try {
            SAXBugCollectionHandler handler = new SAXBugCollectionHandler(this, new File(fileName));
            XMLReader xr = XMLReaderFactory.createXMLReader();
            xr.setContentHandler(handler);
            xr.setErrorHandler(handler);
            Reader reader = Util.getReader(stream);",xr,xml reader
Ledu/umd/cs/findbugs/filter/FirstVersionMatcher;.writeXML(Ledu/umd/cs/findbugs/xml/XMLOutput;Z)V|Ljava/io/IOException;#xmlOutput#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/filter/FirstVersionMatcher.java;,ParameterName,xmlOutput,"public void writeXML(XMLOutput xmlOutput, boolean disabled) throws IOException {
        XMLAttributeList attributes = new XMLAttributeList().addAttribute(""value"", Long.toString(version)).addAttribute(""relOp"",
                relOp.getName());
        if (disabled) {
            attributes.addAttribute(""disabled"", ""true"");",xml,extensible markup language
Ledu/umd/cs/findbugs/FindBugsCommandLine;.loadProject(Ljava/lang/String;)V|Ljava/io/IOException;#arg#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/FindBugsCommandLine.java;,ParameterName,arg," * @param arg
     *            name of project file
     * @throws java.io.IOException
     */
    public void loadProject(String arg) throws IOException {
        Project newProject = Project.readProject(arg);
        newProject.setConfiguration(project.getConfiguration());",arg,argument
Ledu/umd/cs/findbugs/FuzzyBugComparator;.compareSourceLines(Ledu/umd/cs/findbugs/BugCollection;Ledu/umd/cs/findbugs/BugCollection;Ledu/umd/cs/findbugs/SourceLineAnnotation;Ledu/umd/cs/findbugs/SourceLineAnnotation;)I#lhsCollection#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/FuzzyBugComparator.java;,ParameterName,lhsCollection,"public int compareClasses(BugCollection lhsCollection, BugCollection rhsCollection, ClassAnnotation lhsClass,
            ClassAnnotation rhsClass) {
        if (lhsClass == null || rhsClass == null) {
            return compareNullElements(lhsClass, rhsClass);
        } else {",lhs,left hand side
Ledu/umd/cs/findbugs/graph/AbstractGraph;.addVertex(TVertexType;)V#v#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/graph/AbstractGraph.java;,ParameterName,v,"@Override
    public void addVertex(VertexType v) {
        vertexList.add(v);
        v.setLabel(maxVertexLabel++);
    }",v,vertex
Ledu/umd/cs/findbugs/graph/AbstractGraph<Ledu/umd/cs/findbugs/graph/AbstractGraph;:TEdgeType;Ledu/umd/cs/findbugs/graph/AbstractGraph;:TVertexType;>;.maxVertexLabel)I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/graph/AbstractGraph.java;,VariableName,maxVertexLabel,"private final ArrayList<VertexType> vertexList;

    private final ArrayList<EdgeType> edgeList;

    private int maxVertexLabel;

    // private int nextVertexId;
    private int maxEdgeLabel;
",max,maximum
Ledu/umd/cs/findbugs/graph/Transpose;.m_origToTransposeMap)Ljava/util/IdentityHashMap<Ledu/umd/cs/findbugs/graph/Transpose;:TVertexType;Ledu/umd/cs/findbugs/graph/Transpose;:TVertexType;>;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/graph/Transpose.java;,FieldName,m_origToTransposeMap,"public class Transpose<GraphType extends Graph<EdgeType, VertexType>, EdgeType extends GraphEdge<EdgeType, VertexType>, VertexType extends GraphVertex<VertexType>> {

    private final IdentityHashMap<VertexType, VertexType> m_origToTransposeMap;

    private final IdentityHashMap<VertexType, VertexType> m_transposeToOrigMap;",orig,original
Ledu/umd/cs/findbugs/gui2/AbstractSwingGuiCallback;.getProgressMonitorInputStream(Ljava/io/InputStream;ILjava/lang/String;)Ljava/io/InputStream;#pmin,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/gui2/AbstractSwingGuiCallback.java;,VariableName,pmin,"public InputStream getProgressMonitorInputStream(InputStream in, int length, String msg) {
        ProgressMonitorInputStream pmin = new ProgressMonitorInputStream(parent, msg, in);
        ProgressMonitor pm = pmin.getProgressMonitor();",pmin,progress monitor input
Ledu/umd/cs/findbugs/gui2/BugLoader;.doAnalysis(Ledu/umd/cs/findbugs/Project;Ledu/umd/cs/findbugs/FindBugsProgress;)Ledu/umd/cs/findbugs/BugCollection;|Ljava/io/IOException;|Ljava/lang/InterruptedException;#fb,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/gui2/BugLoader.java;,VariableName,fb,"StringWriter stringWriter = new StringWriter();
        BugCollectionBugReporter pcb = new BugCollectionBugReporter(p, new PrintWriter(stringWriter, true));
        pcb.setPriorityThreshold(Priorities.NORMAL_PRIORITY);
        IFindBugsEngine fb = createEngine(p, pcb);
        fb.setUserPreferences(getUserPreferences());
        fb.setProgressCallback(progressCallback);
        fb.setProjectName(p.getProjectName());",fb,find bugs
Ledu/umd/cs/findbugs/gui2/BugLoader;.loadBugs(Ledu/umd/cs/findbugs/gui2/MainFrame;Ledu/umd/cs/findbugs/Project;Ljava/io/File;)Ledu/umd/cs/findbugs/SortedBugCollection;#col,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/gui2/BugLoader.java;,VariableName,col,"   JOptionPane.showMessageDialog(mainFrame, ""Unable to read "" + source);
            return null;
        }
        SortedBugCollection col = new SortedBugCollection(project);
        try {
            col.readXML(source);
            initiateCommunication(col);
            if (col.hasDeadBugs()) {",col,collection
Ledu/umd/cs/findbugs/gui2/BugSet;.setAsRootAndCache(Ledu/umd/cs/findbugs/gui2/BugSet;)V#bs#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/gui2/BugSet.java;,ParameterName,bs,"/**
     * Sets the BugSet passed in to be the mainBugSet, this should always match
     * up with the data set in the BugTreeModel
     *
     * @param bs
     */
    static void setAsRootAndCache(BugSet bs) {
        mainBugSet = bs;
        bs.sortList();
        bs.cacheSortables();",bs,bugset
Ledu/umd/cs/findbugs/gui2/BugTreeModel;.getChildCount(Ljava/lang/Object;)I#a,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/gui2/BugTreeModel.java;,VariableName,a,"if (!(o instanceof BugAspects)) {
            return 0;
        }

        BugAspects a = (BugAspects) o;

        if (st.getOrderBeforeDivider().size() == 0 && a.size() == 0) {
            // the root
            // and we
            // aren't
            // sorting
            // by
            // anything
            return bugSet.size();
        }",a,aspects
Ledu/umd/cs/findbugs/gui2/CloudCommentsPane;.updateBugCommentsView()V#txt,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/gui2/CloudCommentsPane.java;,VariableName,txt,"setCanAddComments(false, true);
        CommentInfo commentInfo = new CommentInfo().invoke();
        boolean sameText = commentInfo.isSameText();
        String txt = commentInfo.getTxt();
        if (!sameText) {
            txt = """";
        }",txt,text
Ledu/umd/cs/findbugs/gui2/CloudCommentsPane;.commentBoxClicked()V#commentInfo,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/gui2/CloudCommentsPane.java;,VariableName,commentInfo,"    return;
        }
        setCanAddComments(false, true);
        CommentInfo commentInfo = new CommentInfo().invoke();
        boolean sameText = commentInfo.isSameText();
        String txt = commentInfo.getTxt();
        if (!sameText) {",info,information
Ledu/umd/cs/findbugs/gui2/FBDialog;.(Ljava/awt/Dialog;)V#d#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/gui2/FBDialog.java;,ParameterName,d,"public FBDialog(Frame f) {
        super(f);
    }

    public FBDialog(Dialog d) {
        super(d);
    }",d,dialog
Ledu/umd/cs/findbugs/gui2/FBDialog;.setFontSizeHelper([Ljava/awt/Component;F)V#0#comp,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/gui2/FBDialog.java;,VariableName,comp,"if (comps.length <= 0) {
            return;
        }

        for (Component comp : comps) {
            comp.setFont(comp.getFont().deriveFont(size));
            if (comp instanceof Container) {
                setFontSizeHelper(((Container) comp).getComponents(), size);",comp,component
Ledu/umd/cs/findbugs/gui2/FilterFactory;.makeMatcher(Ledu/umd/cs/findbugs/gui2/BugAspects$SortableValue;)Ledu/umd/cs/findbugs/filter/Matcher;#sv#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/gui2/FilterFactory.java;,ParameterName,sv,"private static Matcher makeMatcher(SortableValue sv) {
        Sortables s = sv.key;
        String value = sv.value;
        switch (s) {",sv,sortable value
Ledu/umd/cs/findbugs/gui2/MainFrame$MyGuiCallback;.(Ledu/umd/cs/findbugs/gui2/MainFrame;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/gui2/MainFrame.java;,MethodName,MyGuiCallback," private final static String WINDOW_MODIFIED = ""windowModified"";

    public static final boolean USE_WINDOWS_LAF = false;

    private static MainFrame instance;

    private final MyGuiCallback guiCallback = new MyGuiCallback();

    private BugCollection bugCollection;

    private BugAspects currentSelectedBugAspects;

    private volatile Project curProject = new Project();",gui,graphical user interface
Ledu/umd/cs/findbugs/gui2/MainFrame;.updateProjectAndBugCollection(Ledu/umd/cs/findbugs/BugCollection;)V#0#bs,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/gui2/MainFrame.java;,VariableName,bs,"void updateProjectAndBugCollection(BugCollection bugCollection) {

        if (bugCollection != null) {
            displayer.clearCache();
            BugSet bs = new BugSet(bugCollection);
            // Dont clear data, the data's correct, just get the tree off the
            // listener lists.
            BugTreeModel model = (BugTreeModel) mainFrameTree.getTree().getModel();",bs,bugset
Ledu/umd/cs/findbugs/gui2/MainFrameLoadSaveHelper;.save()V#sFile,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/gui2/MainFrameLoadSaveHelper.java;,VariableName,sFile," if (!mainFrame.canNavigateAway()) {
            return;
        }
        File sFile = mainFrame.getSaveFile();
        assert sFile != null;

        SaveReturn result = SaveReturn.SAVE_ERROR;",s,save
Ledu/umd/cs/findbugs/gui2/MainFrameMenu;.setViewMenu()V#2#0#rbMenuItem,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/gui2/MainFrameMenu.java;,VariableName,rbMenuItem,"ButtonGroup rankButtonGroup = new ButtonGroup();
        for (final ViewFilter.RankFilter r : ViewFilter.RankFilter.values()) {
            JRadioButtonMenuItem rbMenuItem = new JRadioButtonMenuItem(r.toString());
            rankButtonGroup.add(rbMenuItem);
            if (r == ViewFilter.RankFilter.ALL) {
                rbMenuItem.setSelected(true);",rb,radio button
Ledu/umd/cs/findbugs/gui2/MainFrameMenu$16825;.actionPerformed(Ljava/awt/event/ActionEvent;)V#evt#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/gui2/MainFrameMenu.java;,ParameterName,evt,"        public void actionPerformed(ActionEvent evt) {
            JTextComponent text = getTextComponent(evt);

            if (text == null) {
                return;",evt,event
Ledu/umd/cs/findbugs/gui2/MainFrameMenu;.setViewMenu()V#evalButtonGroup,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/gui2/MainFrameMenu.java;,VariableName,evalButtonGroup," }
            viewMenu.addSeparator();
        }

        ButtonGroup evalButtonGroup = new ButtonGroup();
        for (final ViewFilter.CloudFilter r : ViewFilter.CloudFilter.values()) {
            if (cloud != null && !r.supported(cloud)) {
                continue;",eval,evaluation
Ledu/umd/cs/findbugs/gui2/OSXAdapter;.handleQuit(LApplicationEvent;)V#ae#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/gui2/OSXAdapter.java;,ParameterName,ae,"// implemented handler methods. These are basically hooks into
    // existing functionality from the main app, as if it came
    // over from another platform.

    @Override
    public void handleAbout(ApplicationEvent ae) {
        if (mainApp != null) {
            ae.setHandled(true);
            // We need to invoke modal About Dialog asynchronously",ae,application event
Ledu/umd/cs/findbugs/gui2/PreferencesFrame;.TAB_MIN)I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/gui2/PreferencesFrame.java;,FieldName,TAB_MIN,"public class PreferencesFrame extends FBDialog {
    private static final Logger LOGGER = Logger.getLogger(PreferencesFrame.class.getName());

    private static final int TAB_MIN = 1;
    private static final int TAB_MAX = 20;

    private static final int FONT_MIN = 10;
    private static final int FONT_MAX = 99;",min,minimum
Ledu/umd/cs/findbugs/gui2/PreferencesFrame$MatchBox;.(Ljava/lang/String;Ledu/umd/cs/findbugs/filter/Matcher;)V#m#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/gui2/PreferencesFrame.java;,ParameterName,m,"private static class MatchBox extends JCheckBox {
        Matcher m;

        MatchBox(String text, Matcher m) {
            super(text);
            this.m = m;
        }",m,matcher
Ledu/umd/cs/findbugs/gui2/SorterTableColumnModel;.makeTableColumn(ILedu/umd/cs/findbugs/gui2/Sortables;)Ljavax/swing/table/TableColumn;#temp,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/gui2/SorterTableColumnModel.java;,VariableName,temp,"private TableColumn makeTableColumn(int x, Sortables c) {
        TableColumn tc = new TableColumn(x);
        FBTableCellRenderer temp = new FBTableCellRenderer();
        tc.setHeaderRenderer(temp);
        tc.setIdentifier(c);
        tc.setHeaderValue(c);",temp,temporary
Ledu/umd/cs/findbugs/gui2/SorterTableColumnModel;.([Ledu/umd/cs/findbugs/gui2/Sortables;)V#0#0#tc,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/gui2/SorterTableColumnModel.java;,VariableName,tc," shown.add(c);
            TableColumn tc = makeTableColumn(x, c);
            columnList.add(tc);
            for (TableColumnModelListener l : watchers) {
                l.columnAdded(new TableColumnModelEvent(this, x, x));
            }",tc,table column
Ledu/umd/cs/findbugs/gui2/SorterTableColumnModel;.setSelectionModel(Ljavax/swing/ListSelectionModel;)V#arg0#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/gui2/SorterTableColumnModel.java;,ParameterName,arg0,"    public void addColumn(TableColumn arg0) {
        throw new UnsupportedOperationException(""Can't change sorter table columns using addColumn"");
    }
",arg,argument
Ledu/umd/cs/findbugs/I18N$DesignationKeyComparator;.compare(Ljava/lang/String;Ljava/lang/String;)I#catDiff,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/I18N.java;,VariableName,catDiff,"public int compare(String lKey, String rKey) {
            int lCat = categoryOf(lKey);
            int catDiff = lCat - categoryOf(rKey);
            if (catDiff != 0 || lCat != 0) {
                return catDiff;
            }",diff,difference
Ledu/umd/cs/findbugs/jaif/JAIFParser;.readType()Ljava/lang/String;|Ljava/io/IOException;|Ledu/umd/cs/findbugs/jaif/JAIFSyntaxException;#buf,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/jaif/JAIFParser.java;,VariableName,buf,"private String readCompoundName() throws IOException, JAIFSyntaxException {
        StringBuilder buf = new StringBuilder();

        boolean firstToken = true;

        while (true) {
            JAIFToken t = scanner.nextToken();",buf,buffer
Ledu/umd/cs/findbugs/jaif/JAIFScanner;.isHorizWhitespace(C)Z#c#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/jaif/JAIFScanner.java;,ParameterName,c,"    private boolean isHorizWhitespace(char c) {
        return c == ' ' || c == '\t';
    }
",c,char
Ljava/lang/Math;.sqrt(D)D,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/log/Profiler.java;,MethodName,sqrt,"long totalSquareMicros = totalSquareMicroseconds.get();
            long averageSquareMicros = totalSquareMicros / callCount;
            long timeVariance = averageSquareMicros - averageTimeMicros * averageTimeMicros;
            long timeStandardDeviation = (long) Math.sqrt(timeVariance);
            if (timeMillis > 10) {
                xmlOutput.startTag(""ClassProfile"");",sqrt,square root
Ledu/umd/cs/findbugs/log/Profiler$Filter;.accepts(Ledu/umd/cs/findbugs/log/Profiler$Profile;)Z#p#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/log/Profiler.java;,ParameterName,p,"        public ClassNameComparator(Profiler p) {
            this.profiler = p;
        }",p,profile
Ledu/umd/cs/findbugs/log/Profiler$Profile;.writeXML(Ledu/umd/cs/findbugs/xml/XMLOutput;)V|Ljava/io/IOException;#timeMillis,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/log/Profiler.java;,VariableName,timeMillis," long time = totalTime.get();
            int callCount = totalCalls.get();
            long maxTimeMicros = TimeUnit.MICROSECONDS.convert(maxTime.get(), TimeUnit.NANOSECONDS);
            long timeMillis = TimeUnit.MILLISECONDS.convert(time, TimeUnit.NANOSECONDS);
            long timeMicros = TimeUnit.MICROSECONDS.convert(time, TimeUnit.NANOSECONDS);

            long averageTimeMicros = timeMicros / callCount;
            long totalSquareMicros = totalSquareMicroseconds.get();",millis,milliseconds
Ledu/umd/cs/findbugs/OpcodeStack;.handleDup2X2()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/OpcodeStack.java;,MethodName,handleDup2X2,"private void handleDup2X2() {
        Item it = pop();
        Item it2 = pop();

        if (it.isWide()) {",dup,duplicate
Ledu/umd/cs/findbugs/OpcodeStack;.nullSafeSize(Ljava/util/Collection<*>;)I#c#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/OpcodeStack.java;,ParameterName,c,"    int nullSafeSize(@CheckForNull Collection<?> c) {
        if (c == null) {
            return 0;
        }
        return c.size();
    }",c,collection
Ledu/umd/cs/findbugs/Plugin;.getAllPluginsURIs()Ljava/util/Set<Ljava/net/URI;>;#0#0#0#uri,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/Plugin.java;,VariableName,uri,"for (Plugin plugin : plugins) {

            try {
                URI uri = plugin.getPluginLoader().getURL().toURI();
                uris.add(uri);
            } catch (URISyntaxException e) {",uri,uniform resource identifier
Ledu/umd/cs/findbugs/Plugin;.loadCustomPlugin(Ljava/io/File;Ledu/umd/cs/findbugs/Project;)Ledu/umd/cs/findbugs/Plugin;|Ledu/umd/cs/findbugs/PluginException;#f#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/Plugin.java;,ParameterName,f,"/**
     * Loads the given plugin and enables it for the given project.
     */
    public static Plugin loadCustomPlugin(File f, @CheckForNull Project project)
            throws PluginException {
        URL urlString;",f,file
Ledu/umd/cs/findbugs/PluginLoader;.addClassPathFromManifest(Ljava/net/URL;Ljava/util/List<Ljava/net/URL;>;Ljava/util/jar/Manifest;)V|Ljava/net/MalformedURLException;#mf#0#2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/PluginLoader.java;,ParameterName,mf,"private static void addClassPathFromManifest(@Nonnull URL url, @Nonnull List<URL> urls,
            @Nonnull Manifest mf) throws MalformedURLException {
        Attributes atts = mf.getMainAttributes();
        if (atts == null)  {",mf,manifest
Ledu/umd/cs/findbugs/PluginLoader;.loadPluginComponents()V|Ledu/umd/cs/findbugs/PluginException;#1#0#2#0#requireJRE,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/PluginLoader.java;,VariableName,requireJRE,"String speed = detectorNode.valueOf(""@speed"");
                String disabled = detectorNode.valueOf(""@disabled"");
                String reports = detectorNode.valueOf(""@reports"");
                String requireJRE = detectorNode.valueOf(""@requirejre"");
                String hidden = detectorNode.valueOf(""@hidden"");
                if (speed == null || speed.length() == 0) {
                    speed = ""fast"";",jre,java runtime environment
Ledu/umd/cs/findbugs/PluginLoader;.parseDocument(Ljava/io/InputStream;)LDocument;|LDocumentException;#0#0#d,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/PluginLoader.java;,VariableName,d," Reader r = UTF8.bufferedReader(in);
        try {
            SAXReader reader = new SAXReader();
            Document d = reader.read(r);
            return d;
        } finally {
            Util.closeSilently(r);",d,document
Ledu/umd/cs/findbugs/DetectorFactory;.setDetailHTML(Ljava/lang/String;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/PluginLoader.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/DetectorFactory.java;,MethodName,setDetailHTML,"        buf.append(""<HTML><HEAD><TITLE>Detector Description</TITLE></HEAD><BODY>\n"");
                buf.append(detailHTML);
                buf.append(""</BODY></HTML>\n"");
                factory.setDetailHTML(buf.toString());
            }
        } catch (ClassNotFoundException e) {",html,hypertext markup language
Ljava/net/HttpURLConnection;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/PluginLoader.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/updates/UpdateChecker.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/cloud/username/WebCloudNameLookup.java;,ClassName,HttpURLConnection,"URLConnection connection = url.openConnection();
                        String contentType = connection.getContentType();
                        DetectorFactoryCollection.jawsDebugMessage(""contentType : "" + contentType);
                        if (connection instanceof HttpURLConnection) {
                            ((HttpURLConnection) connection).disconnect();
                        }
                        loadInitialPlugin(url, true, false);
                    } catch (IOException e) {",http,hypertext transfer protocol
Ledu/umd/cs/findbugs/Project;.write(Ljava/lang/String;ZLjava/lang/String;)V|Ljava/io/IOException;#0#0#2#auxClasspathEntry,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/Project.java;,VariableName,auxClasspathEntry," writer.println(AUX_CLASSPATH_ENTRIES_KEY);
            for (String auxClasspathEntry : auxClasspathEntryList) {
                if (useRelativePaths) {
                    auxClasspathEntry = convertToRelative(auxClasspathEntry, relativeBase);",aux,auxiliary
Ledu/umd/cs/findbugs/ProjectStats;.transformSummaryToHTML(Ljava/io/Writer;)V|Ljava/io/IOException;|Ljavax/xml/transform/TransformerException;#xslInputStream,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ProjectStats.java;,VariableName,xslInputStream,"reportSummary(summaryOut);

        StreamSource in = new StreamSource(new ByteArrayInputStream(summaryOut.toByteArray()));
        StreamResult out = new StreamResult(htmlWriter);
        InputStream xslInputStream = this.getClass().getClassLoader().getResourceAsStream(""summary.xsl"");
        if (xslInputStream == null) {",xsl,extensible stylesheet language
[I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ProjectStats.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/detect/DuplicateBranches.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ba/SourceFile.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/graph/StronglyConnectedComponents.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ba/LockSet.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/gui2/SorterTableColumnModel.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ba/BytecodeScanner.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/FindBugs2.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/cloud/AbstractCloud.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/PackageStats.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/NoOpFindBugsProgress.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/graph/AbstractDepthFirstSearch.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/gui2/NewFilterFrame.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/TextUIProgressCallback.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/util/EditDistance.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ba/Path.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ba/vna/ValueNumberFactory.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/detect/FindDeadLocalStores.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/workflow/Churn.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/SwitchHandler.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/OpcodeStack.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/graph/VisitationTimeComparator.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/FindBugsProgress.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/detect/FindInconsistentSync2.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ba/deref/UnconditionalValueDerefAnalysis.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/gui2/MainFrameMenu.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/workflow/MineBugHistory.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ba/SignatureParser.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/visitclass/DismantleBytecode.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/tools/ComparePerfomance.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/util/ProfilingMapCache.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/detect/DumbMethods.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/classfile/engine/ClassParserUsingASM.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/gui2/AnalyzingDialog.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/classfile/engine/AbstractMethodVisitor.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/gui2/BugTreeModel.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/gui2/MainFrameTree.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/detect/InfiniteLoop.java;,ClassName,int[],"   private static final boolean OMIT_PACKAGE_STATS = SystemProperties.getBoolean(""findbugs.packagestats.omit"");

    private final SortedMap<String, PackageStats> packageStatsMap;

    private final int[] totalErrors = new int[] { 0, 0, 0, 0, 0 };

    private int totalClasses;

    private int referencedClasses;",int,integer
Ledu/umd/cs/findbugs/PropertyBundle;.getOSDependentProperty(Ljava/lang/String;)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/PropertyBundle.java;,MethodName,getOSDependentProperty," /**
     * @param name
     *            property name
     * @return string value (or null if the property does not exist)
     */
    public String getOSDependentProperty(String name) {
        String osDependentName = name + SystemProperties.OS_NAME;
        String value = getProperty(osDependentName);
        if (value != null) {",os,operating system
Ledu/umd/cs/findbugs/io/IO;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/PropertyBundle.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/classfile/impl/ZipInputStreamCodeBase.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/ba/SourceFinder.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/classfile/engine/ClassDataAnalysisEngine.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/classfile/impl/ClassPathBuilder.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/classfile/impl/NestedZipFileCodeBase.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/PluginLoader.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/SystemProperties.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/classfile/impl/SingleFileCodeBase.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/io/IOTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/io/IO.java;,ClassName,IO,"public class IO {
    static ThreadLocal<byte[]> myByteBuf = new ThreadLocal<byte[]>() {
        @Override
        protected byte[] initialValue() {
            return new byte[4096];",io,input output
Ledu/umd/cs/findbugs/props/WarningPropertySet;.computePriority(I)I#0#0#adj,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/props/WarningPropertySet.java;,VariableName,adj,"int priority = basePriority;
        if (!relaxedReporting) {
            for (T warningProperty : map.keySet()) {
                PriorityAdjustment adj = warningProperty.getPriorityAdjustment();
                if (adj == PriorityAdjustment.PEGGED_HIGH) {
                    peggedHigh = true;
                    priority--;",adj,adjustment
Ledu/umd/cs/findbugs/SortedBugCollection;.getSummaryHTML()Ljava/lang/String;|Ljava/io/IOException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/SortedBugCollection.java;,MethodName,getSummaryHTML,"public String getSummaryHTML() throws IOException {
        if (summaryHTML == null) {
            try {
                StringWriter writer = new StringWriter();",html,hypertext markup language
Ledu/umd/cs/findbugs/SortedBugCollection;.wrapGzip(Ljava/io/InputStream;Ljava/lang/Object;)Ljava/io/InputStream;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/SortedBugCollection.java;,MethodName,wrapGzip,"public InputStream wrapGzip(InputStream in, Object source) {
        try {
            if (source instanceof File) {
                File f = (File) source;",gzip,gnu zip
Ledu/umd/cs/findbugs/SortedBugCollection;.checkInputStream(Ljava/io/InputStream;)V|Ljava/io/IOException;#isEOF,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/SortedBugCollection.java;,VariableName,isEOF,"byte[] buf = new byte[200];
        in.mark(buf.length);

        int numRead = 0;

        boolean isEOF = false;
        while (numRead < buf.length && !isEOF) {
            int n = in.read(buf, numRead, buf.length - numRead);
            if (n < 0) {",eof,end of file
Ledu/umd/cs/findbugs/SortedBugCollection;.cloneAll(Ljava/util/Collection<Ledu/umd/cs/findbugs/BugInstance;>;Ljava/util/Collection<Ledu/umd/cs/findbugs/BugInstance;>;)V#dest#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/SortedBugCollection.java;,ParameterName,dest,"* @param dest
     *            the destination Collection
     * @param source
     *            the source Collection
     */
    public static void cloneAll(Collection<BugInstance> dest, Collection<BugInstance> source) {
        for (BugInstance obj : source) {
            dest.add((BugInstance) obj.clone());",dest,destination
Ledu/umd/cs/findbugs/sourceViewer/NavigableTextPane;.scrollLineToVisibleImpl(II)V#0#1#ble,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/sourceViewer/NavigableTextPane.java;,VariableName,ble," }
            return element.getStartOffset();
        } catch (ArrayIndexOutOfBoundsException aioobe) {
            BadLocationException ble = new BadLocationException(""line "" + line + "" does not exist"", -line);
            ble.initCause(aioobe);
            throw ble;",ble,badlocationexception
Ledu/umd/cs/findbugs/SwitchHandler$SwitchDetails;.swOffsets)[I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/SwitchHandler.java;,FieldName,swOffsets,"public static class SwitchDetails {
        final int switchPC;

        final int[] swOffsets;

        final int defaultOffset;
        final int maxOffset;

        int nextOffset;",sw,switch
Ledu/umd/cs/findbugs/TextUICommandLine;.addAuxClassPathEntries(Ljava/lang/String;)V#tok,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/TextUICommandLine.java;,VariableName,tok,"// Explicitly enable or disable the selected detectors.
            StringTokenizer tok = new StringTokenizer(argument, "","");
            while (tok.hasMoreTokens()) {
                String visitorName = tok.nextToken().trim();
                DetectorFactory factory = DetectorFactoryCollection.instance().getFactory(visitorName);",tok,tokenizer
Ledu/umd/cs/findbugs/TextUIProgressCallback;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/TextUIProgressCallback.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/TextUICommandLine.java;,ClassName,TextUIProgressCallback,"public class TextUIProgressCallback implements FindBugsProgress {
    private final PrintStream out;

    private int goal;

    private int count;",ui,user interface
Ledu/umd/cs/findbugs/tools/FilterAndCombineBitfieldPropertyDatabase;.process(Ljava/io/InputStream;Ljava/util/Map<Ljava/lang/String;Ljava/lang/Integer;>;Ljava/util/Map<Ljava/lang/String;Ljava/lang/Integer;>;)V|Ljava/io/UnsupportedEncodingException;|Ljava/io/IOException;#p,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/tools/FilterAndCombineBitfieldPropertyDatabase.java;,VariableName,p,"private static void process(@WillClose InputStream inSource, Map<String, Integer> properties, Map<String, Integer> accessFlags)
            throws UnsupportedEncodingException, IOException {
        BufferedReader in = new BufferedReader(Util.getReader(inSource));
        Pattern p = Pattern.compile(""^(([^,]+),.+),([0-9]+)\\|([0-9]+)$"");
        try {
            while (true) {
                String s = in.readLine();",p,pattern
Ledu/umd/cs/findbugs/tools/FilterAndCombineBitfieldPropertyDatabase;.process(Ljava/io/InputStream;Ljava/util/Map<Ljava/lang/String;Ljava/lang/Integer;>;Ljava/util/Map<Ljava/lang/String;Ljava/lang/Integer;>;)V|Ljava/io/UnsupportedEncodingException;|Ljava/io/IOException;#0#0#0#0#accFlags,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/tools/FilterAndCombineBitfieldPropertyDatabase.java;,VariableName,accFlags," if (getStatus(className) == Status.UNEXPOSED) {
                        continue;
                    }
                    int accFlags = Integer.parseInt(m.group(3));
                    int bits = Integer.parseInt(m.group(4));
                    if ((accFlags & FLAGS) != 0) {
                        accessFlags.put(key, accFlags);",acc,accumulator
Ledu/umd/cs/findbugs/tools/xml/CheckMessages$XMLFile;.xpathIterator(Ljava/lang/String;)Ljava/util/Iterator<LNode;>;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/tools/xml/CheckMessages.java;,MethodName,xpathIterator,"       /**
         * Get iterator over Nodes selected by given XPath expression.
         */
        @SuppressWarnings(""unchecked"")
        public Iterator<Node> xpathIterator(String xpath) {
            List<Node> nodes = XMLUtil.selectNodes(document, xpath);
            return nodes.iterator();
        }",xpath,XML Path Language
Ledu/umd/cs/findbugs/tools/xml/CheckMessages$XMLFile;.checkAttribute(LNode;Ljava/lang/String;)LAttribute;|LDocumentException;#attrName#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/tools/xml/CheckMessages.java;,ParameterName,attrName,"public Attribute checkAttribute(Node node, String attrName) throws DocumentException {
            if (!(node instanceof Element)) {
                throw new CheckMessagesException(""Node is not an element"", this, node);
            }",attr,attribute
Ledu/umd/cs/findbugs/updates/UpdateChecker;.ENV_FB_NO_UPDATE_CHECKS)Z,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/updates/UpdateChecker.java;,FieldName,ENV_FB_NO_UPDATE_CHECKS,"private static final Logger LOGGER = Logger.getLogger(UpdateChecker.class.getName());
    private static final String KEY_DISABLE_ALL_UPDATE_CHECKS = ""noUpdateChecks"";
    private static final String KEY_REDIRECT_ALL_UPDATE_CHECKS = ""redirectUpdateChecks"";
    private static final boolean ENV_FB_NO_UPDATE_CHECKS = System.getenv(""FB_NO_UPDATE_CHECKS"") != null;

    private final UpdateCheckCallback dfc;
    private final List<PluginUpdate> pluginUpdates = new CopyOnWriteArrayList<PluginUpdate>();",env,environment
Ledu/umd/cs/findbugs/updates/UpdateChecker;.main([Ljava/lang/String;)V|Ljava/lang/Exception;#dfc,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/updates/UpdateChecker.java;,VariableName,dfc,"private static final String KEY_DISABLE_ALL_UPDATE_CHECKS = ""noUpdateChecks"";
    private static final String KEY_REDIRECT_ALL_UPDATE_CHECKS = ""redirectUpdateChecks"";
    private static final boolean ENV_FB_NO_UPDATE_CHECKS = System.getenv(""FB_NO_UPDATE_CHECKS"") != null;

    private final UpdateCheckCallback dfc;
    private final List<PluginUpdate> pluginUpdates = new CopyOnWriteArrayList<PluginUpdate>();

    public UpdateChecker(UpdateCheckCallback dfc) {
        this.dfc = dfc;",dfc,detector factory collection
Ledu/umd/cs/findbugs/util/RegexStringMatcher;.(Ljava/lang/String;)V#patStr#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/util/RegexStringMatcher.java;,ParameterName,patStr,"     * @param patStr
     *            a String defining the regular expression pattern to match
     */
    public RegexStringMatcher(String patStr) {
        pattern = Pattern.compile(patStr);
    }",str,string
Ledu/umd/cs/findbugs/util/Strings;.unescapeXml(Ljava/lang/String;)Ljava/lang/String;#0#0#0#1#nfe,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/util/Strings.java;,VariableName,nfe,"try {
                    escapeCode = Integer.parseInt(digits, 16);
                } catch (NumberFormatException nfe) {
                    /*
                     * the static regular expression string should guarantee
                     * that this exception is never thrown
                     */
                    System.err.println(""Impossible error: escape sequence '"" + digits + ""' is not a valid hex number!  ""
                            + ""Exception: "" + nfe.toString());",nfe,number format exception
Ledu/umd/cs/findbugs/util/TestDesktopIntegration;.()V#4#3#0#c,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/util/TestDesktopIntegration.java;,VariableName,c,"try {
                    URL u = new URL(sampleURL);
                    writer.println(""Checking access to "" + u);
                    URLConnection c = u.openConnection();
                    writer.println(""Content type: "" + c.getContentType());
                    writer.println(""Content length: "" + c.getContentLength());
                } catch (Throwable e) {",c,connection
Ljava/sql/SQLException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/util/Util.java;,ClassName,SQLException,"        try {
            if (c != null) {
                c.close();
            }
        } catch (SQLException e) {
            assert true;
        }
    }",sql,structured query language
Ledu/umd/cs/findbugs/VersionInsensitiveBugComparator;.interestingNext(Ljava/util/Iterator<Ledu/umd/cs/findbugs/BugAnnotation;>;)Z#0#a,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/VersionInsensitiveBugComparator.java;,VariableName,a,"
    private boolean interestingNext(Iterator<BugAnnotation> i) {
        while (i.hasNext()) {
            BugAnnotation a = i.next();
            if (isBoring(a)) {
                continue;
            }",a,annotation
Ledu/umd/cs/findbugs/visitclass/AnnotationVisitor;.getAnnotationParameterAsString(Ljava/util/Map<Ljava/lang/String;LElementValue;>;Ljava/lang/String;)Ljava/lang/String;#0#0#ev,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/visitclass/AnnotationVisitor.java;,VariableName,ev,"    protected static String getAnnotationParameterAsString(Map<String, ElementValue> map, String parameter) {
        try {
            ElementValue ev = map.get(parameter);

            if (ev instanceof SimpleElementValue) {
                return ((SimpleElementValue) ev).getValueString();
            }",ev,element value
Ledu/umd/cs/findbugs/workflow/Churn;.dump(Ljava/io/PrintStream;)V#0#t,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/workflow/Churn.java;,VariableName,t,"
            }            } else if (first != 0) {
                int lifespan = (int) (bugCollection.getSequenceNumber() - first + 1);
                for (int t = 1; t < lifespan; t++) {
                    aliveAt[t]++;
                }
            }",t,temporary
Ledu/umd/cs/findbugs/workflow/Churn;.dump(Ljava/io/PrintStream;)V#1#0#d,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/workflow/Churn.java;,VariableName,d,"        double highFixRate = fixRate + 0.05;
        double lowFixRate = fixRate - 0.05;
        for (Map.Entry<String, Data> e : data.entrySet()) {
            Data d = e.getValue();
            int total = d.persist + d.fixed;
            if (total < 2) {
                continue;",d,data
Ledu/umd/cs/findbugs/workflow/CountClassVersions;.readFrom(Ljava/io/Reader;)Ljava/util/List<Ljava/lang/String;>;|Ljava/io/IOException;#r#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/workflow/CountClassVersions.java;,ParameterName,r,"
    public static List<String> readFromStandardInput() throws IOException {
        return readFrom(UserTextFile.reader(System.in));
    }

    public static List<String> readFrom(Reader r) throws IOException {
        BufferedReader in = new BufferedReader(r);
        List<String> lst = new LinkedList<String>();
        while (true) {",r,reader
Ledu/umd/cs/findbugs/workflow/CountClassVersions;.main([Ljava/lang/String;)V|Ljava/lang/Exception;#0#0#0#0#0#0#e,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/workflow/CountClassVersions.java;,VariableName,e,"            try (ZipFile zipInputFile = new ZipFile(f)){
                for (Enumeration<? extends ZipEntry> e = zipInputFile.entries(); e.hasMoreElements();) {
                    ZipEntry ze = e.nextElement();

                    if (ze == null) {
                        break;",e,exception
Ledu/umd/cs/findbugs/workflow/CountClassVersions;.main([Ljava/lang/String;)V|Ljava/lang/Exception;#0#0#0#0#0#0#e,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/workflow/CountClassVersions.java;,VariableName,e,"try (ZipFile zipInputFile = new ZipFile(f)){
                for (Enumeration<? extends ZipEntry> e = zipInputFile.entries(); e.hasMoreElements();) {
                    ZipEntry ze = e.nextElement();

                    if (ze == null) {
                        break;",e,enumeration
Ledu/umd/cs/findbugs/workflow/Filter$FilterCommandLine;.maxAge)I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/workflow/Filter.java;,FieldName,maxAge,"
        public boolean removedCodeSpecified = false;

        public boolean dontUpdateStats = false;

        public boolean dontUpdateStatsSpecified = false;

        public int maxAge = 0;

        public boolean maxAgeSpecified = false;

        public boolean withMessagesSpecified = false;

        public boolean withMessages = false;",max,maximum
Ledu/umd/cs/findbugs/workflow/ListErrors;.main([Ljava/lang/String;)V|Ljava/lang/Exception;#0#0#msg,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/workflow/ListErrors.java;,VariableName,msg,"        SortedBugCollection bugCollection = new SortedBugCollection();
        bugCollection.readXML(args[0]);
        for (AnalysisError e : bugCollection.getErrors()) {
            String msg = e.getExceptionMessage();
            if (msg != null && msg.trim().length() > 0) {
                System.out.println(e.getMessage() + "" : "" + msg);
            } else {",msg,message
Ledu/umd/cs/findbugs/workflow/MineBugHistory;.print(IZLjava/io/PrintStream;Ljava/lang/Object;)V#padLen,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/workflow/MineBugHistory.java;,VariableName,padLen,"     */
    private static void print(int width, boolean alignRight, PrintStream out, Object obj) {
        String s = String.valueOf(obj);
        int padLen = width - s.length();
        if (alignRight) {
            pad(padLen, out);
        }",len,length
Ledu/umd/cs/findbugs/workflow/RejarClassesForAnalysis$ZipElementHandler;.handle(Ljava/util/zip/ZipFile;Ljava/util/zip/ZipEntry;)V|Ljava/io/IOException;#ze#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/workflow/RejarClassesForAnalysis.java;,ParameterName,ze,"
                @Override
                public void handle(ZipFile file, ZipEntry ze) throws IOException {
                    if (commandLine.skip(ze)) {
                        return;
                    }",ze,zip entry
Ledu/umd/cs/findbugs/workflow/TreemapVisualization;.generateTreeMap(Ledu/umd/cs/findbugs/BugCollection;)V#3#e,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/workflow/TreemapVisualization.java;,VariableName,e,"        for (Map.Entry<String, Integer> e : goodCodeSize.entrySet()) {
            System.out.printf(""%d\t%d\t%d\t%d\t%g\t\t%s%n"", e.getValue(), goodCodeCount.getCount(e.getKey()), 0, 0, 0.0, e
                    .getKey().substring(11).replace('.', '\t'));

        }",e,exception
Ledu/umd/cs/findbugs/workflow/Update;.mergeCollections(Ledu/umd/cs/findbugs/BugCollection;Ledu/umd/cs/findbugs/BugCollection;ZZ)Ledu/umd/cs/findbugs/BugCollection;#1#0#appVersion,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/findbug/src/edu/umd/cs/findbugs/workflow/Update.java;,VariableName,appVersion,"       // of the orig collection.
        resultCollection.clearAppVersions();
        for (Iterator<AppVersion> i = origCollection.appVersionIterator(); i.hasNext();) {
            AppVersion appVersion = i.next();
            resultCollection.addAppVersion((AppVersion) appVersion.clone());
        }",app,application
Lorg/apache/maven/repository/internal/MavenRepositorySystemUtilsTest;.testGetRepositorySystem()V#repoSys,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-resolver-provider/src/test/java/org/apache/maven/repository/internal/MavenRepositorySystemUtilsTest.java;,VariableName,repoSys,"    public void testGetRepositorySystem()
    {
        ServiceLocator locator = MavenRepositorySystemUtils.newServiceLocator();
        RepositorySystem repoSys = locator.getService( RepositorySystem.class );
        assertNotNull( repoSys );
    }",repo,repository
Lorg/apache/maven/project/PomConstructionTest;.BASE_POM_DIR)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/test/java/org/apache/maven/project/PomConstructionTest.java;,FieldName,BASE_POM_DIR,"public class PomConstructionTest
    extends PlexusTestCase
{
    private static String BASE_DIR = ""src/test"";

    private static String BASE_POM_DIR = BASE_DIR + ""/resources-project-builder"";

    private static String BASE_MIXIN_DIR = BASE_DIR + ""/resources-mixins"";

    private DefaultProjectBuilder projectBuilder;

    private RepositorySystem repositorySystem;",dir,directory
Lorg/apache/maven/artifact/DefaultArtifactTest;.testNonResolvedVersionRangeConsistentlyYieldsNullVersions()V|Ljava/lang/Exception;#vr,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/test/java/org/apache/maven/artifact/DefaultArtifactTest.java;,VariableName,vr,"    public void testNonResolvedVersionRangeConsistentlyYieldsNullVersions()
        throws Exception
    {
        VersionRange vr = VersionRange.createFromVersionSpec( ""[1.0,2.0)"" );
        artifact = new DefaultArtifact( groupId, artifactId, vr, scope, type, null, artifactHandler );
        assertEquals( null, artifact.getVersion() );
        assertEquals( null, artifact.getBaseVersion() );",vr,version range
Lorg/apache/maven/repository/metadata/MetadataGraphVertex;.compareStrings(Ljava/lang/String;Ljava/lang/String;)I#s2#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/repository/metadata/MetadataGraphVertex.java;,ParameterName,s2,"
    // ---------------------------------------------------------------------
    private static int compareStrings( String s1, String s2 )
    {
        if ( s1 == null && s2 == null )
        {
            return 0;",s,string
Lorg/apache/maven/repository/metadata/ArtifactMetadata;.(Lorg/apache/maven/artifact/Artifact;)V#af#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/repository/metadata/ArtifactMetadata.java;,ParameterName,af,"    public ArtifactMetadata( Artifact af )
    {
        /*
        if ( af != null )
        {
            init( af );
        }
        */
    }",af,artifact
Lorg/apache/maven/cli/CLIManager;.displayHelp(Ljava/io/PrintStream;)V#pw,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-embedder/src/main/java/org/apache/maven/cli/CLIManager.java;,VariableName,pw,"    public void displayHelp( PrintStream stdout )
    {
        stdout.println();

        PrintWriter pw = new PrintWriter( stdout );

        HelpFormatter formatter = new HelpFormatter();

        formatter.printHelp( pw, HelpFormatter.DEFAULT_WIDTH, ""mvn [options] [<goal(s)>] [<phase(s)>]"", ""\nOptions:"",
                             options, HelpFormatter.DEFAULT_LEFT_PAD, HelpFormatter.DEFAULT_DESC_PAD, ""\n"", false );

        pw.flush();",pw,print writer
Lorg/apache/maven/lifecycle/internal/MojoDescriptorCreator;.getMojoDescriptor(Ljava/lang/String;Lorg/apache/maven/execution/MavenSession;Lorg/apache/maven/project/MavenProject;)Lorg/apache/maven/plugin/descriptor/MojoDescriptor;|Lorg/apache/maven/plugin/PluginNotFoundException;|Lorg/apache/maven/plugin/PluginResolutionException;|Lorg/apache/maven/plugin/PluginDescriptorParsingException;|Lorg/apache/maven/plugin/MojoNotFoundException;|Lorg/apache/maven/plugin/prefix/NoPluginFoundForPrefixException;|Lorg/apache/maven/plugin/InvalidPluginDescriptorException;|Lorg/apache/maven/plugin/version/PluginVersionResolutionException;#tok,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/lifecycle/internal/MojoDescriptorCreator.java;,VariableName,tok,"{
        String goal = null;

        Plugin plugin = null;

        StringTokenizer tok = new StringTokenizer( task, "":"" );

        int numTokens = tok.countTokens();

        if ( numTokens >= 4 )",tok,token
Lorg/apache/maven/repository/metadata/DefaultClasspathTransformation$ClasspathGraphVisitor;.cpc)Lorg/apache/maven/repository/metadata/ClasspathContainer;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/repository/metadata/DefaultClasspathTransformation.java;,FieldName,cpc,"    private class ClasspathGraphVisitor
    {
        MetadataGraph graph;

        ClasspathContainer cpc;

        List<MetadataGraphVertex> visited;",cpc,classpath container
Lorg/apache/maven/usability/plugin/Expression;.setApiMethods(Ljava/util/Properties;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/target/generated-sources/modello/org/apache/maven/usability/plugin/Expression.java;,MethodName,setApiMethods,"/**
     * Set the programmatic methods used to change the value of
     * this expression.
     * 
     * @param apiMethods
     */
    public void setApiMethods( java.util.Properties apiMethods )
    {
        this.apiMethods = apiMethods;
    } //-- void setApiMethods( java.util.Properties )",api,application programming interface
Lorg/apache/maven/toolchain/java/JavaToolchainImpl;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/toolchain/java/JavaToolchainImpl.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/toolchain/java/JavaToolchainFactory.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/toolchain/java/DefaultJavaToolChain.java;,ClassName,JavaToolchainImpl,"/**
 * JDK toolchain implementation.
 *
 * @author Milos Kleint
 * @since 2.0.9, renamed from DefaultJavaToolChain in 3.2.4
 */
class JavaToolchainImpl
    extends DefaultToolchain
    implements JavaToolchain",impl,implementation
Lorg/apache/maven/model/building/ModelSource2;.getRelatedSource(Ljava/lang/String;)Lorg/apache/maven/model/building/ModelSource2;#relPath#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-model-builder/src/main/java/org/apache/maven/model/building/ModelSource2.java;,ParameterName,relPath,"     *
     * @param relPath is the path of the requested model source relative to this model source POM.
     * @return related model source or <code>null</code> if no such model source.
     */
    ModelSource2 getRelatedSource( String relPath );",rel,related
Lorg/apache/maven/project/inheritance/t01/ProjectInheritanceTest;.testProjectInheritance()V|Ljava/lang/Exception;#p1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/test/java/org/apache/maven/project/inheritance/t01/ProjectInheritanceTest.java;,VariableName,p1,"        // ----------------------------------------------------------------------
        // Check p1 value for org name
        // ----------------------------------------------------------------------

        MavenProject p1 = getProject( projectFile( ""maven.t01"", ""p1"" ) );

        assertEquals( ""p1-org"", p1.getOrganization().getName() );",p,project
Lorg/apache/maven/cli/MavenCli;.loadCoreExtensions(Lorg/apache/maven/cli/CliRequest;Lorg/codehaus/plexus/classworlds/realm/ClassRealm;Ljava/util/Set<Ljava/lang/String;>;)Ljava/util/List<Lorg/apache/maven/extension/internal/CoreExtensionEntry;>;#0#0#cc,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-embedder/src/main/java/org/apache/maven/cli/MavenCli.java;,VariableName,cc,"
        ClassRealm containerRealm = setupContainerRealm( cliRequest.classWorld, coreRealm, extClassPath, extensions );

        ContainerConfiguration cc = new DefaultContainerConfiguration().setClassWorld( cliRequest.classWorld )
            .setRealm( containerRealm ).setClassPathScanning( PlexusConstants.SCANNING_INDEX ).setAutoWiring( true )
            .setJSR250Lifecycle( true ).setName( ""maven"" );",cc,container configuration
Lorg/apache/maven/repository/internal/DefaultVersionResolver;.merge(Ljava/util/Map<Ljava/lang/String;Lorg/apache/maven/repository/internal/DefaultVersionResolver$VersionInfo;>;Ljava/lang/String;Ljava/lang/String;)V#srcInfo,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/DefaultVersionResolver.java;,VariableName,srcInfo,"
    private void merge( Map<String, VersionInfo> infos, String srcKey, String dstKey )
    {
        VersionInfo srcInfo = infos.get( srcKey );
        VersionInfo dstInfo = infos.get( dstKey );

        if ( dstInfo == null || ( srcInfo != null && dstInfo.isOutdated( srcInfo.timestamp )
            && srcInfo.repository != dstInfo.repository ) )",info,information
Lorg/apache/maven/repository/metadata/ArtifactMetadata;.(Ljava/lang/String;)V#ind2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/repository/metadata/ArtifactMetadata.java;,VariableName,ind2," if ( name == null )
        {
            return;
        }
        int ind1 = name.indexOf( ':' );
        int ind2 = name.lastIndexOf( ':' );

        if ( ind1 == -1 || ind2 == -1 )
        {
            return;
        }",ind,index
Lorg/codehaus/plexus/util/xml/pull/XmlPullParser;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-plugin-api/target/generated-sources/modello/org/apache/maven/plugin/lifecycle/io/xpp3/LifecycleMappingsXpp3Reader.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/target/generated-sources/modello/org/apache/maven/profiles/io/xpp3/ProfilesXpp3Reader.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-embedder/target/generated-sources/modello/org/apache/maven/cli/internal/extension/model/io/xpp3/CoreExtensionsXpp3Reader.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/target/generated-sources/modello/org/apache/maven/usability/plugin/io/xpp3/ParamdocXpp3Reader.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-model/target/generated-sources/modello/org/apache/maven/model/io/xpp3/MavenXpp3ReaderEx.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/target/generated-sources/modello/org/apache/maven/toolchain/model/io/xpp3/MavenToolchainsXpp3Reader.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-model/target/generated-sources/modello/org/apache/maven/model/io/xpp3/MavenXpp3Reader.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-repository-metadata/target/generated-sources/modello/org/apache/maven/artifact/repository/metadata/io/xpp3/MetadataXpp3Reader.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-settings/target/generated-sources/modello/org/apache/maven/settings/io/xpp3/SettingsXpp3Reader.java;,ClassName,XmlPullParser,"     * @throws XmlPullParserException
     * @throws IOException
     */
    private void checkUnknownAttribute( XmlPullParser parser, String attribute, String tagName, boolean strict )
        throws XmlPullParserException, IOException
    {
        // strictXmlAttributes = true for model: if strict == true, not only elements are checked but attributes too
        if ( strict )",xml,extensible markup language
Lorg/apache/maven/artifact/testutils/TestFileManager;.TEMP_DIR_PATH)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/test/java/org/apache/maven/artifact/testutils/TestFileManager.java;,FieldName,TEMP_DIR_PATH,"public class TestFileManager
{

    public static final String TEMP_DIR_PATH = System.getProperty( ""java.io.tmpdir"" );

    private List<File> filesToDelete = new ArrayList<>();

    private final String baseFilename;

    private final String fileSuffix;",dir,directory
Lorg/apache/maven/project/inheritance/DefaultModelInheritanceAssembler;.assembleDistributionInheritance(Lorg/apache/maven/model/Model;Lorg/apache/maven/model/Model;Ljava/lang/String;Z)V#0#parentDistMgmt,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/project/inheritance/DefaultModelInheritanceAssembler.java;,VariableName,parentDistMgmt,"    private void assembleDistributionInheritance( Model child, Model parent, String childPathAdjustment,
                                                  boolean appendPaths )
    {
        if ( parent.getDistributionManagement() != null )
        {
            DistributionManagement parentDistMgmt = parent.getDistributionManagement();

            DistributionManagement childDistMgmt = child.getDistributionManagement();

            if ( childDistMgmt == null )
            {",dist,distribution
Lorg/apache/maven/repository/metadata/ArtifactMetadata;.setArtifactUri(Ljava/lang/String;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/repository/metadata/ArtifactMetadata.java;,MethodName,setArtifactUri,"    public void setArtifactUri( String artifactUri )
    {
        this.artifactUri = artifactUri;
    }",uri,uniform resource identifier
Lorg/apache/maven/execution/scope/internal/MojoExecutionScopeTest;.testNestedEnter()V|Ljava/lang/Exception;#o1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/test/java/org/apache/maven/execution/scope/internal/MojoExecutionScopeTest.java;,VariableName,o1,"MojoExecutionScope scope = new MojoExecutionScope();

        scope.enter();

        Object o1 = new Object();
        scope.seed( Object.class, o1 );
        assertSame( o1, scope.scope( Key.get( Object.class ), null ).get() );",o,object
Lorg/apache/maven/project/AbstractMavenProjectTestCase;.getFileForClasspathResource(Ljava/lang/String;)Ljava/io/File;|Ljava/io/FileNotFoundException;#resourceUrl,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/test/java/org/apache/maven/project/AbstractMavenProjectTestCase.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/test/java/org/apache/maven/project/AbstractMavenProjectTestCase.java;,VariableName,resourceUrl,"    protected static File getFileForClasspathResource( String resource )
        throws FileNotFoundException
    {
        ClassLoader cloader = Thread.currentThread().getContextClassLoader();

        URL resourceUrl = cloader.getResource( resource );

        if ( resourceUrl == null )
        {
            throw new FileNotFoundException( ""Unable to find: "" + resource );
        }",url,uniform resource locator
Lorg/apache/maven/repository/internal/RepositorySystemTest;.testResolveArtifacts()V|Ljava/lang/Exception;#req1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-resolver-provider/src/test/java/org/apache/maven/repository/internal/RepositorySystemTest.java;,VariableName,req1,"    public void testResolveArtifacts()
        throws Exception
    {
        ArtifactRequest req1 = new ArtifactRequest();
        req1.setArtifact( new DefaultArtifact( ""ut.simple:artifact:1.0"" ) );
        req1.addRepository( newTestRepository() );",req,request
Lorg/apache/maven/plugin/descriptor/PluginDescriptorBuilder;.build(Ljava/io/Reader;Ljava/lang/String;)Lorg/apache/maven/plugin/descriptor/PluginDescriptor;|Lorg/codehaus/plexus/configuration/PlexusConfigurationException;#1#0#cd,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-plugin-api/src/main/java/org/apache/maven/plugin/descriptor/PluginDescriptorBuilder.java;,VariableName,cd,"        List<ComponentDependency> dependencies = new ArrayList<>();

        for ( PlexusConfiguration d : dependencyConfigurations )
        {
            ComponentDependency cd = new ComponentDependency();

            cd.setArtifactId( d.getChild( ""artifactId"" ).getValue() );

            cd.setGroupId( d.getChild( ""groupId"" ).getValue() );

            cd.setType( d.getChild( ""type"" ).getValue() );",cd,component dependency
Lorg/apache/maven/artifact/repository/MavenArtifactRepository;.decode(Ljava/lang/String;)Ljava/lang/String;#0#0#ch,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/artifact/repository/MavenArtifactRepository.java;,VariableName,ch,"                if ( pos + 2 < decoded.length() )
                {
                    String hexStr = decoded.substring( pos + 1, pos + 3 );
                    char ch = (char) Integer.parseInt( hexStr, 16 );
                    decoded = decoded.substring( 0, pos ) + ch + decoded.substring( pos + 3 );
                }
            }",ch,char
Lorg/apache/maven/plugin/descriptor/PluginDescriptorBuilder;.buildComponentDescriptor(Lorg/codehaus/plexus/configuration/PlexusConfiguration;Lorg/apache/maven/plugin/descriptor/PluginDescriptor;)Lorg/apache/maven/plugin/descriptor/MojoDescriptor;|Lorg/codehaus/plexus/configuration/PlexusConfigurationException;#0#0#paramConfig,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-plugin-api/src/main/java/org/apache/maven/plugin/descriptor/PluginDescriptorBuilder.java;,VariableName,paramConfig,"            parameter.setDeprecated( d.getChild( ""deprecated"" ).getValue() );

            parameter.setImplementation( d.getChild( ""implementation"" ).getValue() );

            parameter.setSince( d.getChild( ""since"" ).getValue() );

            PlexusConfiguration paramConfig = mojoConfig.getChild( parameter.getName(), false );
            if ( paramConfig != null )
            {
                parameter.setExpression( paramConfig.getValue( null ) );",config,configuration
Lorg/slf4j/impl/SimpleLogger;.debug(Ljava/lang/String;Ljava/lang/Throwable;)V#t#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-slf4j-provider/target/generated-sources/slf4j-simple/org/slf4j/impl/SimpleLogger.java;,ParameterName,t,"     * @param t
     *            The exception whose stack trace should be logged
     */
    private void log(int level, String message, Throwable t) {
        if (!isLevelEnabled(level)) {
            return;
        }",t,throwable
Lorg/slf4j/impl/StaticLoggerBinder;.REQUESTED_API_VERSION)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-slf4j-provider/src/main/java/org/slf4j/impl/StaticLoggerBinder.java;,FieldName,REQUESTED_API_VERSION,"    public static String REQUESTED_API_VERSION = ""1.7.25""; // !final

    private static final String LOGGER_FACTORY_CLASS_STR = MavenSimpleLoggerFactory.class.getName();",api,application programming interface
Lorg/apache/maven/repository/legacy/LegacyRepositorySystem;.getAuthentication(Lorg/eclipse/aether/RepositorySystemSession;Lorg/apache/maven/artifact/repository/ArtifactRepository;)Lorg/apache/maven/artifact/repository/Authentication;#0#0#0#authCtx,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/repository/legacy/LegacyRepositorySystem.java;,VariableName,authCtx,"                if ( auth != null )
                {
                    repo = new RemoteRepository.Builder( repo ).setAuthentication( auth ).build();
                    AuthenticationContext authCtx = AuthenticationContext.forRepository( session, repo );
                    Authentication result =
                        new Authentication( authCtx.get( AuthenticationContext.USERNAME ),
                                            authCtx.get( AuthenticationContext.PASSWORD ) );",ctx,context
Lorg/apache/maven/model/building/ModelProblemCollectorExt;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelProblemCollector.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelBuilder.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-model-builder/src/main/java/org/apache/maven/model/building/ModelProblemCollectorExt.java;,ClassName,ModelProblemCollectorExt,"/**
 * Extends the ModelproblemCollector by the capacity of returning the collected problems.
 * @author Milos Kleint
 */
public interface ModelProblemCollectorExt extends ModelProblemCollector
{",ext,context
Lorg/apache/maven/model/merge/ModelMerger;.mergeSite_Url(Lorg/apache/maven/model/Site;Lorg/apache/maven/model/Site;ZLjava/util/Map<Ljava/lang/Object;Ljava/lang/Object;>;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-model/src/main/java/org/apache/maven/model/merge/ModelMerger.java;,MethodName,mergeSite_Url,"
    protected void mergeSite_Url( Site target, Site source, boolean sourceDominant, Map<Object, Object> context )
    {
        String src = source.getUrl();
        if ( src != null )",url,uniform resource locator
Lorg/apache/maven/model/merge/ModelMerger;.mergeScm_Connection(Lorg/apache/maven/model/Scm;Lorg/apache/maven/model/Scm;ZLjava/util/Map<Ljava/lang/Object;Ljava/lang/Object;>;)V#src,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-model/src/main/java/org/apache/maven/model/merge/ModelMerger.java;,VariableName,src,"    protected void mergeRepository_Releases( Repository target, Repository source, boolean sourceDominant,
                                             Map<Object, Object> context )
    {
        RepositoryPolicy src = source.getReleases();
        if ( src != null )
        {
            RepositoryPolicy tgt = target.getReleases();",src,source
Lorg/apache/maven/project/LegacyLocalRepositoryManager;.insertRepositoryKey(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#idx,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/test/java/org/apache/maven/project/LegacyLocalRepositoryManager.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/test/java/org/apache/maven/project/LegacyLocalRepositoryManager.java;,VariableName,idx,"    private String insertRepositoryKey( String filename, String repositoryKey )
    {
        String result;
        int idx = filename.indexOf( '.' );
        if ( idx < 0 )
        {
            result = filename + '-' + repositoryKey;
        }",idx,index
Lorg/apache/maven/model/Contributor;.organizationUrl)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-model/target/generated-sources/modello/org/apache/maven/model/Contributor.java;,FieldName,organizationUrl,"    /**
     * The URL of the organization.
     */
    private String organizationUrl;",url,uniform resource locator
Lorg/apache/maven/project/inheritance/DefaultModelInheritanceAssembler;.assembleDistributionInheritance(Lorg/apache/maven/model/Model;Lorg/apache/maven/model/Model;Ljava/lang/String;Z)V#0#childDistMgmt,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/project/inheritance/DefaultModelInheritanceAssembler.java;,VariableName,childDistMgmt,"        if ( parent.getDistributionManagement() != null )
        {
            DistributionManagement parentDistMgmt = parent.getDistributionManagement();

            DistributionManagement childDistMgmt = child.getDistributionManagement();

            if ( childDistMgmt == null )
            {
                childDistMgmt = new DistributionManagement();",mgmt,management
Lorg/apache/maven/model/interpolation/StringSearchModelInterpolator$InterpolateObjectAction$MapField;.doInterpolate(Ljava/lang/Object;Lorg/apache/maven/model/interpolation/StringSearchModelInterpolator$InterpolateObjectAction;)V|Ljava/lang/IllegalAccessException;#m,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-model-builder/src/main/java/org/apache/maven/model/interpolation/StringSearchModelInterpolator.java;,VariableName,m,"            void doInterpolate( Object target, InterpolateObjectAction ctx )
                throws IllegalAccessException
            {
                @SuppressWarnings( ""unchecked"" ) Map<Object, Object> m = (Map<Object, Object>) field.get( target );
                if ( m == null || m.isEmpty() )
                {
                    return;",m,map
Lorg/apache/maven/cli/MavenCli;.encryption(Lorg/apache/maven/cli/CliRequest;)V|Ljava/lang/Exception;#1#sec,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-embedder/src/main/java/org/apache/maven/cli/MavenCli.java;,VariableName,sec,"            String file = System.getProperty( DefaultSecDispatcher.SYSTEM_PROPERTY_SEC_LOCATION, configurationFile );

            String master = null;

            SettingsSecurity sec = SecUtil.read( file, true );
            if ( sec != null )
            {
                master = sec.getMaster();",sec,security
Lorg/apache/maven/artifact/versioning/VersionRange;.intersection(Ljava/util/List<Lorg/apache/maven/artifact/versioning/Restriction;>;Ljava/util/List<Lorg/apache/maven/artifact/versioning/Restriction;>;)Ljava/util/List<Lorg/apache/maven/artifact/versioning/Restriction;>;#res1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-artifact/src/main/java/org/apache/maven/artifact/versioning/VersionRange.java;,VariableName,res1,"        List<Restriction> restrictions = new ArrayList<>( r1.size() + r2.size() );
        Iterator<Restriction> i1 = r1.iterator();
        Iterator<Restriction> i2 = r2.iterator();
        Restriction res1 = i1.next();
        Restriction res2 = i2.next();",res,restriction
Lorg/apache/maven/project/ProjectUtils;.rss(Lorg/codehaus/plexus/PlexusContainer;)Lorg/eclipse/aether/RepositorySystemSession;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/project/ProjectUtils.java;,MethodName,rss,"    private static RepositorySystemSession rss( PlexusContainer c )
    {
        try
        {
            LegacySupport legacySupport = c.lookup( LegacySupport.class );

            return legacySupport.getRepositorySession();",rss,repository system session
Lorg/apache/maven/usability/plugin/ExpressionDocumentation;.getExpressionsBySyntax()Ljava/util/Map;#0#0#0#expr,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/target/generated-sources/modello/org/apache/maven/usability/plugin/ExpressionDocumentation.java;,VariableName,expr,"            if ( expressions != null && !expressions.isEmpty() )
            {
                for ( java.util.Iterator it = expressions.iterator(); it.hasNext(); )
                {
                    Expression expr = (Expression) it.next();

                    expressionsBySyntax.put( expr.getSyntax(), expr );
                }",expr,expression
Lorg/apache/maven/plugin/PluginParameterExpressionEvaluatorTest;.testValueExtractionFromSystemPropertiesWithMissingProject()V|Ljava/lang/Exception;#ee,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/test/java/org/apache/maven/plugin/PluginParameterExpressionEvaluatorTest.java;,VariableName,ee,"        Model model = new Model();
        model.setVersion( ""1"" );

        MavenProject project = new MavenProject( model );

        ExpressionEvaluator ee = createExpressionEvaluator( project, null, new Properties() );

        Object value = ee.evaluate( ""$"" + var );

        assertEquals( var, value );",ee,expression evaluator
Lorg/apache/maven/project/DefaultMavenProjectBuilderTest;.testBuildFromMiddlePom()V|Ljava/lang/Exception;#f2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/test/java/org/apache/maven/project/DefaultMavenProjectBuilderTest.java;,VariableName,f2,"    /**
     * Check that we can build ok from the middle pom of a (parent,child,grandchild) hierarchy
     * @throws Exception
     */
    public void testBuildFromMiddlePom() throws Exception
    {
        File f1 = getTestFile( ""src/test/resources/projects/grandchild-check/child/pom.xml"");
        File f2 = getTestFile( ""src/test/resources/projects/grandchild-check/child/grandchild/pom.xml"");

        getProject( f1 );",f,file
Lorg/apache/maven/artifact/deployer/DefaultArtifactDeployer;.repoSystem)Lorg/eclipse/aether/RepositorySystem;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/artifact/deployer/DefaultArtifactDeployer.java;,FieldName,repoSystem,"public class DefaultArtifactDeployer
    extends AbstractLogEnabled
    implements ArtifactDeployer
{

    @Requirement
    private RepositorySystem repoSystem;

    @Requirement
    private LegacySupport legacySupport;

    private Map<Object, MergeableMetadata> relatedMetadata = new ConcurrentHashMap<>();",repo,repository
Lorg/apache/maven/plugin/PluginParameterExpressionEvaluator;.evaluate(Ljava/lang/String;Ljava/lang/Class<*>;)Ljava/lang/Object;|Lorg/codehaus/plexus/component/configurator/expression/ExpressionEvaluationException;#7#val,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/plugin/PluginParameterExpressionEvaluator.java;,VariableName,val,"        if ( value instanceof String )
        {
            // TODO without #, this could just be an evaluate call...

            String val = (String) value;

            int exprStartDelimiter = val.indexOf( ""${"" );

            if ( exprStartDelimiter >= 0 )
            {
                if ( exprStartDelimiter > 0 )",val,value
Lorg/apache/maven/usability/plugin/Expression;.getApiMethods()Ljava/util/Properties;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/target/generated-sources/modello/org/apache/maven/usability/plugin/Expression.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/target/generated-sources/modello/org/apache/maven/usability/plugin/io/xpp3/ParamdocXpp3Writer.java;,MethodName,getApiMethods,"/**
     * Method getApiMethods.
     * 
     * @return Properties
     */
    public java.util.Properties getApiMethods()
    {
        if ( this.apiMethods == null )
        {
            this.apiMethods = new java.util.Properties();",api,application programming interface
Lorg/apache/maven/model/interpolation/StringSearchModelInterpolatorTest;.testInterpolateObjectWithUnmodifiableStringToStringMapField()V|Ljava/lang/Exception;#obj,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-model-builder/src/test/java/org/apache/maven/model/interpolation/StringSearchModelInterpolatorTest.java;,VariableName,obj,"        p.setProperty( ""key"", ""value"" );
        p.setProperty( ""key2"", ""value2"" );

        String[] values = { ""${key}"", ""${key2}"" };

        ObjectWithStringArrayField obj = new ObjectWithStringArrayField( values );

        StringSearchModelInterpolator interpolator = (StringSearchModelInterpolator) createInterpolator();

        ModelBuildingRequest config = createModelBuildingRequest( p );

        final SimpleProblemCollector collector = new SimpleProblemCollector();",obj,object
Lorg/apache/maven/repository/legacy/TransferListenerAdapter;.wrap(Lorg/apache/maven/wagon/events/TransferEvent;)Lorg/apache/maven/repository/ArtifactTransferEvent;#0#evt,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/repository/legacy/TransferListenerAdapter.java;,VariableName,evt,"            ArtifactTransferEvent evt;
            if ( event.getException() != null )
            {
                evt = new ArtifactTransferEvent( wagon, event.getException(), event.getRequestType(), artifact );
            }
            else
            {
                evt = new ArtifactTransferEvent( wagon, event.getEventType(), event.getRequestType(), artifact );
            }",evt,event
Lorg/apache/maven/repository/internal/DefaultVersionRangeResolver;.resolveVersionRange(Lorg/eclipse/aether/RepositorySystemSession;Lorg/eclipse/aether/resolution/VersionRangeRequest;)Lorg/eclipse/aether/resolution/VersionRangeResult;|Lorg/eclipse/aether/resolution/VersionRangeResolutionException;#1#0#0#0#ver,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/DefaultVersionRangeResolver.java;,VariableName,ver,"            for ( Map.Entry<String, ArtifactRepository> v : versionIndex.entrySet() )
            {
                try
                {
                    Version ver = versionScheme.parseVersion( v.getKey() );
                    if ( versionConstraint.containsVersion( ver ) )
                    {
                        versions.add( ver );
                        result.setRepository( ver, v.getValue() );",ver,version
Lorg/apache/maven/cli/CLIManager;.displayHelp(Ljava/io/PrintStream;)V#stdout#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-embedder/src/main/java/org/apache/maven/cli/CLIManager.java;,ParameterName,stdout,"    public void displayHelp( PrintStream stdout )
    {
        stdout.println();

        PrintWriter pw = new PrintWriter( stdout );

        HelpFormatter formatter = new HelpFormatter();",stdout,standard output
Lorg/apache/maven/project/inheritance/DefaultModelInheritanceAssembler;.assembleDistributionInheritance(Lorg/apache/maven/model/Model;Lorg/apache/maven/model/Model;Ljava/lang/String;Z)V#0#parentDistMgmt,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/project/inheritance/DefaultModelInheritanceAssembler.java;,VariableName,parentDistMgmt,"private void assembleDistributionInheritance( Model child, Model parent, String childPathAdjustment,
                                                  boolean appendPaths )
    {
        if ( parent.getDistributionManagement() != null )
        {
            DistributionManagement parentDistMgmt = parent.getDistributionManagement();

            DistributionManagement childDistMgmt = child.getDistributionManagement();

            if ( childDistMgmt == null )
            {
                childDistMgmt = new DistributionManagement();",mgmt,management
Lorg/apache/maven/model/interpolation/AbstractModelInterpolatorTest;.testShouldInterpolateSourceDirectoryReferencedFromResourceDirectoryCorrectly()V|Ljava/lang/Exception;#res3,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-model-builder/src/test/java/org/apache/maven/model/interpolation/AbstractModelInterpolatorTest.java;,VariableName,res3,"        Resource res2 = new Resource();
        res2.setDirectory( ""${pom.build.sourceDirectory}"" );

        build.addResource( res2 );

        Resource res3 = new Resource();
        res3.setDirectory( ""${build.sourceDirectory}"" );

        build.addResource( res3 );

        model.setBuild( build );",res,resource
Lorg/apache/maven/artifact/resolver/DefaultArtifactResolverTest;.testMNG4738()V|Ljava/lang/Exception;#tgList,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/test/java/org/apache/maven/artifact/resolver/DefaultArtifactResolverTest.java;,VariableName,tgList,"        while ( tg.getParent() == null )
        {
            tg = tg.getParent();
        }

        ThreadGroup[] tgList = new ThreadGroup[tg.activeGroupCount()];
        tg.enumerate( tgList );

        boolean seen = false;

        for ( ThreadGroup aTgList : tgList )",tg,thread group
Lorg/apache/maven/building/FileSourceTest;.testGetLocation()V#txtFile,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-builder-support/src/test/java/org/apache/maven/building/FileSourceTest.java;,VariableName,txtFile,"    public void testGetInputStream()
        throws Exception
    {
        File txtFile = new File( ""target/test-classes/source.txt"" );
        FileSource source = new FileSource( txtFile );

        try ( InputStream is = source.getInputStream();
              Scanner scanner = new Scanner( is ) )",txt,text
Lorg/apache/maven/project/artifact/DefaultMavenMetadataCacheTest;.testCacheKey()V|Ljava/lang/Exception;#k1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/test/java/org/apache/maven/project/artifact/DefaultMavenMetadataCacheTest.java;,VariableName,k1,"        assertNotSame( a1, a2 );
        assertNotSame( lr1, lr2 );
        assertNotSame( rr1, rr2 );

        CacheKey k1 = new CacheKey( a1, false, lr1, Collections.singletonList( rr1 ) );
        CacheKey k2 = new CacheKey( a2, false, lr2, Collections.singletonList( rr2 ) );

        assertEquals(k1.hashCode(), k2.hashCode());",k,key
Lorg/apache/maven/repository/internal/DefaultArtifactDescriptorReader;.getRelocation(Lorg/apache/maven/model/Model;)Lorg/apache/maven/model/Relocation;#distMgmt,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/DefaultArtifactDescriptorReader.java;,VariableName,distMgmt,"    private Relocation getRelocation( Model model )
    {
        Relocation relocation = null;
        DistributionManagement distMgmt = model.getDistributionManagement();
        if ( distMgmt != null )
        {
            relocation = distMgmt.getRelocation();
        }",mgmt,management
Lorg/apache/maven/model/building/UrlModelSource;.(Ljava/net/URL;)V#pomUrl#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-model-builder/src/main/java/org/apache/maven/model/building/UrlModelSource.java;,ParameterName,pomUrl,"    /**
     * Creates a new model source backed by the specified URL.
     *
     * @param pomUrl The POM file, must not be {@code null}.
     */
    public UrlModelSource( URL pomUrl )
    {
        super( pomUrl );
    }",url,uniform resource locator
Lorg/apache/maven/project/interpolation/AbstractStringBasedModelInterpolator;.interpolate(Lorg/apache/maven/model/Model;Ljava/io/File;Lorg/apache/maven/project/ProjectBuilderConfiguration;Z)Lorg/apache/maven/model/Model;|Lorg/apache/maven/project/interpolation/ModelInterpolationException;#sReader,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/project/interpolation/AbstractStringBasedModelInterpolator.java;,VariableName,sReader,"        String serializedModel = sWriter.toString();
        serializedModel = interpolate( serializedModel, model, projectDir, config, debugEnabled );

        StringReader sReader = new StringReader( serializedModel );

        MavenXpp3Reader modelReader = new MavenXpp3Reader();
        try
        {
            model = modelReader.read( sReader );",s,string
Lorg/apache/maven/project/inheritance/DefaultModelInheritanceAssembler;.appendPath(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;#protocolIdx,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/project/inheritance/DefaultModelInheritanceAssembler.java;,VariableName,protocolIdx,"        String cleanedPath = """";

        int protocolIdx = uncleanPath.indexOf( ""://"" );

        if ( protocolIdx > -1 )
        {
            cleanedPath = uncleanPath.substring( 0, protocolIdx + 3 );
            uncleanPath = uncleanPath.substring( protocolIdx + 3 );",idx,index
Lorg/apache/maven/repository/metadata/DefaultClasspathTransformationTest;.v4)Lorg/apache/maven/repository/metadata/MetadataGraphVertex;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/test/java/org/apache/maven/repository/metadata/DefaultClasspathTransformationTest.java;,FieldName,v4,"     v2 = graph.addVertex(new ArtifactMetadata(""g"",""a2"",""1.0""));
     v3 = graph.addVertex(new ArtifactMetadata(""g"",""a3"",""1.0""));
     v4 = graph.addVertex(new ArtifactMetadata(""g"",""a4"",""1.0""));
     
     // v1-->v2
     graph.addEdge(v1, v2, new MetadataGraphEdge( ""1.1"", true, null, null, 2, 1 ) );
     graph.addEdge(v1, v2, new MetadataGraphEdge( ""1.2"", true, null, null, 2, 2 ) );",v,vertex
Lorg/apache/maven/plugin/logging/SystemStreamLog;.error(Ljava/lang/CharSequence;Ljava/lang/Throwable;)V#sWriter,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-plugin-api/src/main/java/org/apache/maven/plugin/logging/SystemStreamLog.java;,VariableName,sWriter,"    public void error( CharSequence content, Throwable error )
    {
        StringWriter sWriter = new StringWriter();
        PrintWriter pWriter = new PrintWriter( sWriter );

        error.printStackTrace( pWriter );

        System.err.println( ""[error] "" + content.toString() + ""\n\n"" + sWriter.toString() );",s,string
Lorg/apache/maven/settings/SettingsUtils;.convertFromSettingsProfile(Lorg/apache/maven/settings/Profile;)Lorg/apache/maven/model/Profile;#pluginRepos,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/settings/SettingsUtils.java;,VariableName,pluginRepos,"                profile.addRepository( convertToSettingsRepository( repo ) );
            }
        }

        List<org.apache.maven.model.Repository> pluginRepos = modelProfile.getPluginRepositories();
        if ( pluginRepos != null )
        {
            for ( org.apache.maven.model.Repository pluginRepo : pluginRepos )
            {",repos,repositories
Lorg/apache/maven/artifact/repository/metadata/DefaultRepositoryMetadataManager;.resolve(Lorg/apache/maven/artifact/repository/metadata/RepositoryMetadata;Lorg/apache/maven/artifact/repository/RepositoryRequest;)V|Lorg/apache/maven/artifact/repository/metadata/RepositoryMetadataResolutionException;#0#0#0#0#1#0#1#ie,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/artifact/repository/metadata/DefaultRepositoryMetadataManager.java;,VariableName,ie,"                 try
                                {
                                    Thread.sleep( 10 );
                                }
                                catch ( InterruptedException ie )
                                {
                                    // ignore
                                }
                                file.delete(); // if this fails, forget about it
                            }",ie,interrupted exception
Lorg/apache/maven/DefaultMaven;.validateLocalRepository(Lorg/apache/maven/execution/MavenExecutionRequest;)V|Lorg/apache/maven/repository/LocalRepositoryNotAccessibleException;#localRepoDir,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/DefaultMaven.java;,VariableName,localRepoDir,"    private void validateLocalRepository( MavenExecutionRequest request )
        throws LocalRepositoryNotAccessibleException
    {
        File localRepoDir = request.getLocalRepositoryPath();

        logger.debug( ""Using local repository at "" + localRepoDir );

        localRepoDir.mkdirs();

        if ( !localRepoDir.isDirectory() )",repo,repository
Lorg/apache/maven/toolchain/DefaultToolchainManagerPrivateTest;.testMisconfiguredToolchain()V|Ljava/lang/Exception;#req,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/test/java/org/apache/maven/toolchain/DefaultToolchainManagerPrivateTest.java;,VariableName,req,"    public void testToolchainsForAvailableType()
        throws Exception
    {
        // prepare
        MavenSession session = mock( MavenSession.class );
        MavenExecutionRequest req = new DefaultMavenExecutionRequest();
        when( session.getRequest() ).thenReturn( req );

        ToolchainPrivate basicToolchain = mock( ToolchainPrivate.class );
        when( toolchainFactory_basicType.createDefaultToolchain() ).thenReturn( basicToolchain );",req,request
Lorg/apache/maven/repository/metadata/DefaultGraphConflictResolver;.resolveConflicts(Lorg/apache/maven/repository/metadata/MetadataGraph;Lorg/apache/maven/artifact/ArtifactScopeEnum;)Lorg/apache/maven/repository/metadata/MetadataGraph;|Lorg/apache/maven/repository/metadata/GraphConflictResolutionException;#0#0#0#0#0#newMd,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/repository/metadata/DefaultGraphConflictResolver.java;,VariableName,newMd,"                    // System.out.println(""+++>""+v.getMd().toDomainString()+"" still has ""+edge.toString() );
                    // fill in domain md with actual version data
                    ArtifactMetadata md = v.getMd();
                    ArtifactMetadata newMd =
                        new ArtifactMetadata( md.getGroupId(), md.getArtifactId(), edge.getVersion(), md.getType(),
                                              md.getScopeAsEnum(), md.getClassifier(), edge.getArtifactUri(),
                                              edge.getSource() == null ? """" : edge.getSource().getMd().toString(),
                                              edge.isResolved(), edge.getTarget() == null ? null
                                                              : edge.getTarget().getMd().getError() );
                    MetadataGraphVertex newV = res.addVertex( newMd );
                    MetadataGraphVertex sourceV = res.addVertex( edge.getSource().getMd() );",md,metadata
Ljava/nio/charset/StandardCharsets;.UTF_8)Ljava/nio/charset/Charset;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-model-builder/src/test/java/org/apache/maven/model/inheritance/DefaultInheritanceAssemblerTest.java;,VariableName,UTF_8,"        // check with getPom( baseName + ""-expected"" )
        File expected = getPom( baseName + ""-expected"" );
        try ( Reader control = new InputStreamReader( new FileInputStream( expected ), StandardCharsets.UTF_8 );
              Reader test = new InputStreamReader( new FileInputStream( actual ), StandardCharsets.UTF_8 ) )
        {
            XMLUnit.setIgnoreComments( true );
            XMLUnit.setIgnoreWhitespace( true );",utf,unicode transformation format
Lorg/apache/maven/repository/legacy/DefaultWagonManager;.getArtifact(Lorg/apache/maven/artifact/Artifact;Ljava/util/List<Lorg/apache/maven/artifact/repository/ArtifactRepository;>;Lorg/apache/maven/wagon/events/TransferListener;Z)V|Lorg/apache/maven/wagon/TransferFailedException;|Lorg/apache/maven/wagon/ResourceDoesNotExistException;#tfe,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/repository/legacy/DefaultWagonManager.java;,VariableName,tfe,"    public void getArtifact( Artifact artifact, List<ArtifactRepository> remoteRepositories,
                             TransferListener downloadMonitor, boolean force )
        throws TransferFailedException, ResourceDoesNotExistException
    {
        TransferFailedException tfe = null;

        for ( ArtifactRepository repository : remoteRepositories )
        {
            try
            {
                getArtifact( artifact, repository, downloadMonitor, force );",tfe,transfer failed exception
Lorg/apache/maven/cli/MavenCli;.encryption(Lorg/apache/maven/cli/CliRequest;)V|Ljava/lang/Exception;#0#passwd,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-embedder/src/main/java/org/apache/maven/cli/MavenCli.java;,VariableName,passwd,"    private void encryption( CliRequest cliRequest )
        throws Exception
    {
        if ( cliRequest.commandLine.hasOption( CLIManager.ENCRYPT_MASTER_PASSWORD ) )
        {
            String passwd = cliRequest.commandLine.getOptionValue( CLIManager.ENCRYPT_MASTER_PASSWORD );

            if ( passwd == null )
            {
                Console cons = System.console();
                char[] password = ( cons == null ) ? null : cons.readPassword( ""Master password: "" );",passwd,password
Lorg/apache/maven/profiles/ProfilesConversionUtils;.convertRepositoryPolicy(Lorg/apache/maven/profiles/RepositoryPolicy;)Lorg/apache/maven/model/RepositoryPolicy;#profileXmlRepo#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/profiles/ProfilesConversionUtils.java;,ParameterName,profileXmlRepo,"    private static Repository convertFromProfileXmlRepository( org.apache.maven.profiles.Repository profileXmlRepo )
    {
        Repository repo = new Repository();

        repo.setId( profileXmlRepo.getId() );
        repo.setLayout( profileXmlRepo.getLayout() );",xml,extensible markup language
Lorg/apache/maven/artifact/DefaultArtifact;.setDownloadUrl(Ljava/lang/String;)V#downloadUrl#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-artifact/src/main/java/org/apache/maven/artifact/DefaultArtifact.java;,ParameterName,downloadUrl,"    public void setDownloadUrl( String downloadUrl )
    {
        this.downloadUrl = downloadUrl;
    }",url,uniform resource locator
Lorg/apache/maven/cli/CLIReportingUtils;.formatDuration(J)Ljava/lang/String;#h,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-embedder/src/main/java/org/apache/maven/cli/CLIReportingUtils.java;,VariableName,h,"        long ms = duration % 1000;
        long s = ( duration / ONE_SECOND ) % 60;
        long m = ( duration / ONE_MINUTE ) % 60;
        long h = ( duration / ONE_HOUR ) % 24;
        long d = duration / ONE_DAY;
        // CHECKSTYLE_ON: MagicNumber",h,hour
Lorg/apache/maven/plugin/descriptor/PluginDescriptorBuilderTest;.testBuildReader()V|Ljava/lang/Exception;#pc,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-plugin-api/src/test/java/org/apache/maven/plugin/descriptor/PluginDescriptorBuilderTest.java;,VariableName,pc,"        assertNotNull( md.getMojoConfiguration() );
        assertEquals( 1, md.getMojoConfiguration().getChildCount() );

        PlexusConfiguration pc = md.getMojoConfiguration().getChild( 0 );

        assertEquals( ""${jar.finalName}"", pc.getValue() );
        assertEquals( ""${project.build.finalName}"", pc.getAttribute( ""default-value"" ) );
        assertEquals( ""java.lang.String"", pc.getAttribute( ""implementation"" ) );",pc,plexus configuration
Lorg/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory;.newRepositorySession(Lorg/apache/maven/execution/MavenExecutionRequest;)Lorg/eclipse/aether/DefaultRepositorySystemSession;#authSelector,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java;,VariableName,authSelector,"        session.setProxySelector( proxySelector );

        DefaultAuthenticationSelector authSelector = new DefaultAuthenticationSelector();
        for ( Server server : decrypted.getServers() )
        {
            AuthenticationBuilder authBuilder = new AuthenticationBuilder();
            authBuilder.addUsername( server.getUsername() ).addPassword( server.getPassword() );",auth,authentication
Lorg/apache/maven/cli/event/ExecutionEventLogger;.MAX_PROJECT_NAME_LENGTH)I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-embedder/src/main/java/org/apache/maven/cli/event/ExecutionEventLogger.java;,FieldName,MAX_PROJECT_NAME_LENGTH,"public class ExecutionEventLogger
    extends AbstractExecutionListener
{
    private final Logger logger;

    private static final int LINE_LENGTH = 72;
    private static final int MAX_PADDED_BUILD_TIME_DURATION_LENGTH = 9;
    private static final int MAX_PROJECT_NAME_LENGTH = 52;",max,maximum
Lorg/apache/maven/artifact/versioning/ComparableVersion$ListItem;.compareTo(Lorg/apache/maven/artifact/versioning/ComparableVersion$Item;)I#1#0#l,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-artifact/src/main/java/org/apache/maven/artifact/versioning/ComparableVersion.java;,VariableName,l,"
                    while ( left.hasNext() || right.hasNext() )
                    {
                        Item l = left.hasNext() ? left.next() : null;
                        Item r = right.hasNext() ? right.next() : null;

                        // if this is shorter, then invert the compare and mul with -1
                        int result = l == null ? ( r == null ? 0 : -1 * r.compareTo( l ) ) : l.compareTo( r );
",l,left
Lorg/apache/maven/artifact/AbstractArtifactComponentTestCase;.assertRemoteArtifactPresent(Lorg/apache/maven/artifact/Artifact;)V|Ljava/lang/Exception;#remoteRepo,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/test/java/org/apache/maven/artifact/AbstractArtifactComponentTestCase.java;,VariableName,remoteRepo,"    protected void assertRemoteArtifactPresent( Artifact artifact )
        throws Exception
    {
        ArtifactRepository remoteRepo = remoteRepository();

        String path = remoteRepo.pathOf( artifact );

        File file = new File( remoteRepo.getBasedir(), path );

        if ( !file.exists() )",repo,repository
Lorg/apache/maven/cli/internal/BootstrapCoreExtensionManager;.resolveExtension(Lorg/apache/maven/cli/internal/extension/model/CoreExtension;Lorg/eclipse/aether/RepositorySystemSession;Ljava/util/List<Lorg/eclipse/aether/repository/RemoteRepository;>;Lorg/eclipse/aether/graph/DependencyFilter;)Ljava/util/List<Lorg/eclipse/aether/artifact/Artifact;>;|Lorg/apache/maven/plugin/PluginResolutionException;#repoSession#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-embedder/src/main/java/org/apache/maven/cli/internal/BootstrapCoreExtensionManager.java;,ParameterName,repoSession,"    private List<CoreExtensionEntry> resolveCoreExtensions( RepositorySystemSession repoSession,
                                                            List<RemoteRepository> repositories,
                                                            Set<String> providedArtifacts,
                                                            List<CoreExtension> configuration )
        throws Exception
    {
        List<CoreExtensionEntry> extensions = new ArrayList<>();

        DependencyFilter dependencyFilter = new ExclusionsDependencyFilter( providedArtifacts );",repo,repository
Lorg/apache/maven/plugin/descriptor/PluginDescriptorBuilder;.buildComponentDescriptor(Lorg/codehaus/plexus/configuration/PlexusConfiguration;Lorg/apache/maven/plugin/descriptor/PluginDescriptor;)Lorg/apache/maven/plugin/descriptor/MojoDescriptor;|Lorg/codehaus/plexus/configuration/PlexusConfigurationException;#0#0#paramConfig,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-plugin-api/src/main/java/org/apache/maven/plugin/descriptor/PluginDescriptorBuilder.java;,VariableName,paramConfig,"            parameter.setDeprecated( d.getChild( ""deprecated"" ).getValue() );

            parameter.setImplementation( d.getChild( ""implementation"" ).getValue() );

            parameter.setSince( d.getChild( ""since"" ).getValue() );

            PlexusConfiguration paramConfig = mojoConfig.getChild( parameter.getName(), false );
            if ( paramConfig != null )
            {
                parameter.setExpression( paramConfig.getValue( null ) );
                parameter.setDefaultValue( paramConfig.getAttribute( ""default-value"" ) );
            }",param,parameter
Lorg/apache/maven/model/interpolation/AbstractModelInterpolatorTest;.testShouldInterpolateOrganizationNameCorrectly()V|Ljava/lang/Exception;#org,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-model-builder/src/test/java/org/apache/maven/model/interpolation/AbstractModelInterpolatorTest.java;,VariableName,org,"        String orgName = ""MyCo"";

        Model model = new Model();
        model.setName( ""${pom.organization.name} Tools"" );

        Organization org = new Organization();
        org.setName( orgName );

        model.setOrganization( org );

        ModelInterpolator interpolator = createInterpolator();",org,organization
Lorg/apache/maven/cli/MavenCli;.doMain([Ljava/lang/String;Ljava/lang/String;Ljava/io/PrintStream;Ljava/io/PrintStream;)I#stderr#0#3,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-embedder/src/main/java/org/apache/maven/cli/MavenCli.java;,ParameterName,stderr,"    /**
     * This supports painless invocation by the Verifier during embedded execution of the core ITs.
     * See <a href=""http://maven.apache.org/shared/maven-verifier/xref/org/apache/maven/it/Embedded3xLauncher.html"">
     * <code>Embedded3xLauncher</code> in <code>maven-verifier</code></a>
     */
    public int doMain( String[] args, String workingDirectory, PrintStream stdout, PrintStream stderr )
    {
        PrintStream oldout = System.out;
        PrintStream olderr = System.err;",stderr,standard error
Lorg/apache/maven/model/validation/DefaultModelValidator;.validateEffectiveModel(Lorg/apache/maven/model/Model;Lorg/apache/maven/model/building/ModelBuildingRequest;Lorg/apache/maven/model/building/ModelProblemCollector;)V#m#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java;,ParameterName,m,"    private static final String ILLEGAL_FS_CHARS = ""\\/:\""<>|?*"";

    private static final String ILLEGAL_VERSION_CHARS = ILLEGAL_FS_CHARS;

    private static final String ILLEGAL_REPO_ID_CHARS = ILLEGAL_FS_CHARS;

    @Override
    public void validateRawModel( Model m, ModelBuildingRequest request, ModelProblemCollector problems )
    {
        Parent parent = m.getParent();
        if ( parent != null )
        {",m,model
Lorg/apache/maven/plugin/DebugConfigurationListener;.toString(Ljava/lang/Object;)Ljava/lang/String;#str,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/plugin/DebugConfigurationListener.java;,VariableName,str,"                }
                buf.append( String.valueOf( Array.get( obj, i ) ) );
            }
            buf.append( ']' );
            str = buf.toString();
        }
        else
        {
            str = String.valueOf( obj );",str,string
Lorg/apache/maven/repository/legacy/MavenArtifact;.repositoryUrl)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/repository/legacy/MavenArtifact.java;,FieldName,repositoryUrl,"class MavenArtifact
    implements ArtifactTransferResource
{

    private String repositoryUrl;

    private Resource resource;

    private long transferStartTime;

    public MavenArtifact( String repositoryUrl, Resource resource )",url,uniform resource locator
Lorg/apache/maven/properties/internal/EnvironmentUtils;.addEnvVars(Ljava/util/Properties;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/properties/internal/EnvironmentUtils.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-embedder/src/main/java/org/apache/maven/cli/MavenCli.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/project/artifact/MavenMetadataSource.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/project/DefaultMavenProjectBuilder.java;,MethodName,addEnvVars,"    /**
     * Adds the environment variables in the form of properties whose keys are prefixed with {@code env.}, e.g. {@code
     * env.PATH}. Unlike native environment variables, properties are always case-sensitive. For the sake of
     * determinism, the environment variable names will be normalized to upper case on platforms with case-insensitive
     * variable lookup.
     *
     * @param props The properties to add the environment variables to, may be {@code null}.
     */
    public static void addEnvVars( Properties props )
    {
        if ( props != null )
        {
            if ( envVars == null )",env,environment
Lorg/apache/maven/project/ProjectSorterTest;.testShouldNotFailWhenManagedPluginDepReferencesCurrentProject()V|Lorg/codehaus/plexus/util/dag/CycleDetectedException;|Lorg/apache/maven/project/DuplicateProjectException;#dep,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/test/java/org/apache/maven/project/ProjectSorterTest.java;,VariableName,dep,"        MavenProject project = createProject( ""group"", ""artifact"", ""1.0"" );

        Build build = project.getModel().getBuild();

        Plugin plugin = createPlugin( ""other.group"", ""other-artifact"", ""1.0"" );

        Dependency dep = createDependency( ""group"", ""artifact"", ""1.0"" );

        plugin.addDependency( dep );

        build.addPlugin( plugin );

        new ProjectSorter( Collections.singletonList( project ) );",dep,dependency
Lorg/apache/maven/repository/legacy/DefaultWagonManagerTest;.createStringRepo()Lorg/apache/maven/artifact/repository/ArtifactRepository;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/test/java/org/apache/maven/repository/legacy/DefaultWagonManagerTest.java;,MethodName,createStringRepo,"    private ArtifactRepository createStringRepo()
    {
        return artifactRepositoryFactory.createArtifactRepository( ""id"", ""string://url"", new ArtifactRepositoryLayoutStub(), null, null );
    }",repo,repository
Lorg/apache/maven/plugin/PluginParameterException;.buildDiagnosticMessage()Ljava/lang/String;#params,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/plugin/PluginParameterException.java;,VariableName,params,"    public String buildDiagnosticMessage()
    {
        StringBuilder messageBuffer = new StringBuilder( 256 );

        List<Parameter> params = getParameters();
        MojoDescriptor mojo = getMojoDescriptor();

        messageBuffer.append( ""One or more required plugin parameters are invalid/missing for \'"" )
            .append( mojo.getPluginDescriptor().getGoalPrefix() ).append( ':' ).append( mojo.getGoal() )
            .append( ""\'\n"" );",params,parameters
Lorg/apache/maven/plugin/descriptor/PluginDescriptorBuilder;.buildComponentDescriptor(Lorg/codehaus/plexus/configuration/PlexusConfiguration;Lorg/apache/maven/plugin/descriptor/PluginDescriptor;)Lorg/apache/maven/plugin/descriptor/MojoDescriptor;|Lorg/codehaus/plexus/configuration/PlexusConfigurationException;#langConfig,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-plugin-api/src/main/java/org/apache/maven/plugin/descriptor/PluginDescriptorBuilder.java;,VariableName,langConfig,"        mojo.setPluginDescriptor( pluginDescriptor );

        mojo.setGoal( c.getChild( ""goal"" ).getValue() );

        mojo.setImplementation( c.getChild( ""implementation"" ).getValue() );

        PlexusConfiguration langConfig = c.getChild( ""language"" );

        if ( langConfig != null )
        {
            mojo.setLanguage( langConfig.getValue() );
        }",config,configuration
Lorg/apache/maven/repository/legacy/DefaultWagonManager;.connectWagon(Lorg/apache/maven/wagon/Wagon;Lorg/apache/maven/artifact/repository/ArtifactRepository;)V|Lorg/apache/maven/wagon/ConnectionException;|Lorg/apache/maven/wagon/authentication/AuthenticationException;#0#0#0#0#setHttpHeaders,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/repository/legacy/DefaultWagonManager.java;,VariableName,setHttpHeaders,"                headers.put( ""User-Agent"", ConfigUtils.getString( legacySupport.getRepositorySession(), ""Maven"",
                                                                  ConfigurationProperties.USER_AGENT ) );
                try
                {
                    Method setHttpHeaders = wagon.getClass().getMethod( ""setHttpHeaders"", Properties.class );
                    setHttpHeaders.invoke( wagon, headers );
                }
                catch ( NoSuchMethodException e )",http,hyper text transfer protocol
Lorg/apache/maven/project/interpolation/RegexBasedModelInterpolator;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/project/interpolation/RegexBasedModelInterpolator.java;,ClassName,RegexBasedModelInterpolator,"/**
 * Use a regular expression search to find and resolve expressions within the POM.
 *
 * @author jdcasey Created on Feb 3, 2005
 * TODO Consolidate this logic with the PluginParameterExpressionEvaluator, minus deprecations/bans.
 */
@Deprecated
public class RegexBasedModelInterpolator
    extends AbstractStringBasedModelInterpolator
{",regex,regular expression
Lorg/slf4j/impl/SimpleLoggerConfiguration$4146;.run()Ljava/io/InputStream;#threadCL,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-slf4j-provider/target/generated-sources/slf4j-simple/org/slf4j/impl/SimpleLoggerConfiguration.java;,VariableName,threadCL,"        // Add props from the resource simplelogger.properties
        InputStream in = AccessController.doPrivileged(new PrivilegedAction<InputStream>() {
            public InputStream run() {
                ClassLoader threadCL = Thread.currentThread().getContextClassLoader();
                if (threadCL != null) {
                    return threadCL.getResourceAsStream(CONFIGURATION_FILE);
                } else {",cl,class loader
Lorg/apache/maven/project/ModelUtilsTest;.testShouldMergePluginExecutionWhenExecInheritedIsTrueAndTreatAsInheritanceIsTrue()V#eParent,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/test/java/org/apache/maven/project/ModelUtilsTest.java;,VariableName,eParent,"PluginContainer parent = new PluginContainer();
        Plugin pParent = createPlugin( gid, aid, ver, Collections.EMPTY_MAP );

        pParent.setInherited( Boolean.toString( true ) );

        PluginExecution eParent = new PluginExecution();

        String testId = ""test"";

        eParent.setId( testId );
        eParent.addGoal( ""run"" );",e,execution
Lorg/apache/maven/cli/CLIReportingUtils;.createMavenVersionString(Ljava/util/Properties;)Ljava/lang/String;#0#ts,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-embedder/src/main/java/org/apache/maven/cli/CLIReportingUtils.java;,VariableName,ts,"            msg += ( rev != null ? rev : """" );
            if ( StringUtils.isNotBlank( timestamp ) )
            {
                String ts = formatTimestamp( Long.valueOf( timestamp ) );
                msg += ( rev != null ? ""; "" : """" ) + ts;
            }
            msg += "")"";",ts,timestamp
Lorg/apache/maven/artifact/repository/LegacyLocalRepositoryManager;.overlay(Lorg/apache/maven/artifact/repository/ArtifactRepository;Lorg/eclipse/aether/RepositorySystemSession;Lorg/eclipse/aether/RepositorySystem;)Lorg/eclipse/aether/RepositorySystemSession;#llrm,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/artifact/repository/LegacyLocalRepositoryManager.java;,VariableName,llrm,"        else
        {
            session = new DefaultRepositorySystemSession();
        }

        final LocalRepositoryManager llrm = new LegacyLocalRepositoryManager( repository );

        return new DefaultRepositorySystemSession( session ).setLocalRepositoryManager( llrm );
    }",llrm,legacy local repository manager
Lorg/apache/maven/toolchain/DefaultToolchainTest;.testEquals()V|Ljava/lang/Exception;#0#0#0#tc1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/test/java/org/apache/maven/toolchain/DefaultToolchainTest.java;,VariableName,tc1,"            PersistedToolchains jdks = reader.read( jdksIS );
            PersistedToolchains jdksExtra = reader.read( jdksExtraIS );

            DefaultToolchain tc1 = new DefaultJavaToolChain( jdks.getToolchains().get( 0 ), null );
            DefaultToolchain tc2 = new DefaultJavaToolChain( jdksExtra.getToolchains().get( 0 ), null );

            assertTrue( tc1.equals( tc1 ) );
            assertFalse( tc1.equals( tc2 ) );",tc,tool chain
Lorg/apache/maven/rtinfo/internal/DefaultRuntimeInformationTest;.testGetMavenVersion()V|Ljava/lang/Exception;#rtInfo,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/test/java/org/apache/maven/rtinfo/internal/DefaultRuntimeInformationTest.java;,VariableName,rtInfo,"    public void testGetMavenVersion()
        throws Exception
    {
        RuntimeInformation rtInfo = lookup( RuntimeInformation.class );

        String mavenVersion = rtInfo.getMavenVersion();
        assertNotNull( mavenVersion );
        assertTrue( mavenVersion.length() > 0 );",info,information
Lorg/apache/maven/repository/metadata/DefaultGraphConflictResolutionPolicyTest;.e3)Lorg/apache/maven/repository/metadata/MetadataGraphEdge;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/test/java/org/apache/maven/repository/metadata/DefaultGraphConflictResolutionPolicyTest.java;,FieldName,e3,"     policy = (GraphConflictResolutionPolicy) lookup( GraphConflictResolutionPolicy.ROLE, ""default"" );
     e1 = new MetadataGraphEdge( ""1.1"", true, null, null, 2, 1 );
     e2 = new MetadataGraphEdge( ""1.2"", true, null, null, 3, 2 );
     e3 = new MetadataGraphEdge( ""1.2"", true, null, null, 2, 3 );
 }",e,edge
Lorg/apache/maven/cli/MavenCli;.calculateDegreeOfConcurrencyWithCoreMultiplier(Ljava/lang/String;)I#procs,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-embedder/src/main/java/org/apache/maven/cli/MavenCli.java;,VariableName,procs,"    int calculateDegreeOfConcurrencyWithCoreMultiplier( String threadConfiguration )
    {
        int procs = Runtime.getRuntime().availableProcessors();
        return (int) ( Float.valueOf( threadConfiguration.replace( ""C"", """" ) ) * procs );
    }

    static File resolveFile( File file, String workingDirectory )",procs,processors
Lorg/apache/maven/project/artifact/DefaultMavenMetadataCacheTest;.testCacheKey()V|Ljava/lang/Exception;#rr1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/test/java/org/apache/maven/project/artifact/DefaultMavenMetadataCacheTest.java;,VariableName,rr1,"        Artifact a1 = repositorySystem.createArtifact( ""testGroup"", ""testArtifact"", ""1.2.3"", ""jar"" );
        @SuppressWarnings( ""deprecation"" )
        ArtifactRepository lr1 = new DelegatingLocalArtifactRepository( repositorySystem.createDefaultLocalRepository() );
        ArtifactRepository rr1 = repositorySystem.createDefaultRemoteRepository();
        a1.setDependencyFilter( new ExcludesArtifactFilter( Arrays.asList( ""foo"" ) ) );",rr,repository
Lorg/apache/maven/model/building/DefaultModelBuilderFactoryTest;.testCompleteWiring()V|Ljava/lang/Exception;#conf,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-model-builder/src/test/java/org/apache/maven/model/building/DefaultModelBuilderFactoryTest.java;,VariableName,conf,"        assertNotNull( result );
        assertNotNull( result.getEffectiveModel() );
        assertEquals( ""activated"", result.getEffectiveModel().getProperties().get( ""profile.file"" ) );
        Xpp3Dom conf = (Xpp3Dom) result.getEffectiveModel().getBuild().getPlugins().get( 0 ).getConfiguration();
        assertEquals( ""1.5"", conf.getChild( ""source"" ).getValue() );
        assertEquals( ""  1.5  "", conf.getChild( ""target"" ).getValue() );",conf,configuration
Lorg/apache/maven/artifact/repository/ArtifactRepositoryPolicy;.checkOutOfDate(Ljava/util/Date;)Z#1#cal,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-artifact/src/main/java/org/apache/maven/artifact/repository/ArtifactRepositoryPolicy.java;,VariableName,cal,"else if ( UPDATE_POLICY_DAILY.equals( updatePolicy ) )
        {
            // Get local midnight boundary
            Calendar cal = Calendar.getInstance();

            cal.set( Calendar.HOUR_OF_DAY, 0 );
            cal.set( Calendar.MINUTE, 0 );
            cal.set( Calendar.SECOND, 0 );",cal,calendar
Lorg/apache/maven/project/ModelUtilsTest;.testShouldUseMainPluginDependencyVersionOverManagedDepVersion()V#mgtDep,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/test/java/org/apache/maven/project/ModelUtilsTest.java;,VariableName,mgtDep,"public void testShouldUseMainPluginDependencyVersionOverManagedDepVersion()
    {
        Plugin mgtPlugin = createPlugin( ""group"", ""artifact"", ""1"", Collections.EMPTY_MAP );
        Dependency mgtDep = createDependency( ""g"", ""a"", ""2"" );
        mgtPlugin.addDependency( mgtDep );

        Plugin plugin = createPlugin( ""group"", ""artifact"", ""1"", Collections.EMPTY_MAP );
        Dependency dep = createDependency( ""g"", ""a"", ""1"" );",dep,dependency
Ljava/lang/Integer;.MIN_VALUE)I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-builder-support/src/test/java/org/apache/maven/building/DefaultProblemTest.java;,VariableName,MIN_VALUE,"        // this case is not specified, might also return -1
        problem = new DefaultProblem( null, null, null, Integer.MIN_VALUE, -1, null );
        assertEquals( Integer.MIN_VALUE, problem.getLineNumber() );
    }",min,minimum
Lorg/apache/maven/model/interpolation/ModelInterpolator;.interpolateModel(Lorg/apache/maven/model/Model;Ljava/io/File;Lorg/apache/maven/model/building/ModelBuildingRequest;Lorg/apache/maven/model/building/ModelProblemCollector;)Lorg/apache/maven/model/Model;#projectDir#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-model-builder/src/main/java/org/apache/maven/model/interpolation/ModelInterpolator.java;,ParameterName,projectDir,"/**
     * Interpolates expressions in the specified model. Note that implementations are free to either interpolate the
     * provided model directly or to create a clone of the model and interpolate the clone. Callers should always use
     * the returned model and must not rely on the input model being updated.
     *
     * @param model The model to interpolate, must not be {@code null}.
     * @param projectDir The project directory, may be {@code null} if the model does not belong to a local project but
     *            to some artifact's metadata.
     * @param request The model building request that holds further settings, must not be {@code null}.
     * @param problems The container used to collect problems that were encountered, must not be {@code null}.
     * @return The interpolated model, never {@code null}.
     */
    Model interpolateModel( Model model, File projectDir, ModelBuildingRequest request,
                            ModelProblemCollector problems );",dir,directory
Lorg/apache/maven/project/ModelUtilsTest;.testShouldPreserveChildOrderingOfPluginsAfterParentMerge()V#result3Config,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/test/java/org/apache/maven/project/ModelUtilsTest.java;,VariableName,result3Config,"Plugin result3 = (Plugin) results.get( 2 );

        assertEquals( ""group2"", result3.getGroupId() );
        assertEquals( ""artifact2"", result3.getArtifactId() );

        Xpp3Dom result3Config = (Xpp3Dom) result3.getConfiguration();

        assertNotNull( result3Config );

        assertEquals( ""value"", result3Config.getChild( ""key"" ).getValue() );
        assertEquals( ""value2"", result3Config.getChild( ""key2"" ).getValue() );",config,configuration
Lorg/apache/maven/project/MavenProject;.getPluginManagement()Lorg/apache/maven/model/PluginManagement;#pluginMgmt,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/project/MavenProject.java;,VariableName,pluginMgmt,"    public PluginManagement getPluginManagement()
    {
        PluginManagement pluginMgmt = null;

        Build build = getModel().getBuild();
        if ( build != null )
        {",mgmt,management
Lorg/apache/maven/plugin/PluginParameterException;.buildDiagnosticMessage()Ljava/lang/String;#0#0#param,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/plugin/PluginParameterException.java;,VariableName,param,"        int idx = 0;
        for ( Iterator<Parameter> it = params.iterator(); it.hasNext(); idx++ )
        {
            Parameter param = it.next();

            messageBuffer.append( ""\n["" ).append( idx ).append( ""] "" );

            decomposeParameterIntoUserInstructions( mojo, param, messageBuffer );

            messageBuffer.append( '\n' );",param,parameter
Lorg/apache/maven/model/validation/DefaultModelValidator;.validateRawModel(Lorg/apache/maven/model/Model;Lorg/apache/maven/model/building/ModelBuildingRequest;Lorg/apache/maven/model/building/ModelProblemCollector;)V#0#0#mgmt,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java;,VariableName,mgmt,"            Build build = m.getBuild();
            if ( build != null )
            {
                validate20RawPlugins( problems, build.getPlugins(), ""build.plugins.plugin"", request );

                PluginManagement mgmt = build.getPluginManagement();
                if ( mgmt != null )
                {
                    validate20RawPlugins( problems, mgmt.getPlugins(), ""build.pluginManagement.plugins.plugin"",
                                          request );",mgmt,management
Lorg/apache/maven/repository/Proxy;.PROXY_HTTP)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-artifact/src/main/java/org/apache/maven/repository/Proxy.java;,FieldName,PROXY_HTTP,"public static final String PROXY_SOCKS5 = ""SOCKS_5"";

    public static final String PROXY_SOCKS4 = ""SOCKS4"";

    public static final String PROXY_HTTP = ""HTTP"";

    /**
     * Proxy server host
     */
    private String host;",http,hyper text transfer protocol
Lorg/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory;.simpleLocalRepoMgrFactory)Lorg/eclipse/aether/spi/localrepo/LocalRepositoryManagerFactory;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java;,FieldName,simpleLocalRepoMgrFactory,"    @Inject
    @Nullable
    @Named( ""simple"" )
    private LocalRepositoryManagerFactory simpleLocalRepoMgrFactory;",mgr,manager
Lorg/apache/maven/plugin/lifecycle/io/xpp3/LifecycleMappingsXpp3Reader;.getLongValue(Ljava/lang/String;Ljava/lang/String;Lorg/codehaus/plexus/util/xml/pull/XmlPullParser;Z)J|Lorg/codehaus/plexus/util/xml/pull/XmlPullParserException;#0#1#nfe,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-plugin-api/target/generated-sources/modello/org/apache/maven/plugin/lifecycle/io/xpp3/LifecycleMappingsXpp3Reader.java;,VariableName,nfe,"            try
            {
                return Byte.valueOf( s ).byteValue();
            }
            catch ( NumberFormatException nfe )
            {
                if ( strict )
                {
                    throw new XmlPullParserException( ""Unable to parse element '"" + attribute + ""', must be a byte"", parser, nfe );
                }",nfe,number format exception
Lorg/apache/maven/project/ExtensionDescriptorBuilderTest;.testEmptyDescriptor()V|Ljava/lang/Exception;#ed,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/test/java/org/apache/maven/project/ExtensionDescriptorBuilderTest.java;,VariableName,ed,"    public void testEmptyDescriptor()
        throws Exception
    {
        String xml = ""<extension></extension>"";

        ExtensionDescriptor ed = builder.build( toStream( xml ) );

        assertNotNull( ed );
        assertNotNull( ed.getExportedPackages() );
        assertTrue( ed.getExportedPackages().isEmpty() );",ed,extension descriptor
Lorg/apache/maven/cli/MavenCli;.logSummary(Lorg/apache/maven/exception/ExceptionSummary;Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;Ljava/lang/String;Z)V#msg,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-embedder/src/main/java/org/apache/maven/cli/MavenCli.java;,VariableName,msg,"                references.put( summary.getReference(), referenceKey );
            }
        }

        String msg = summary.getMessage();

        if ( StringUtils.isNotEmpty( referenceKey ) )
        {
            if ( msg.indexOf( '\n' ) < 0 )",msg,message
Lorg/apache/maven/project/inheritance/DefaultModelInheritanceAssembler;.assembleBuildInheritance(Lorg/apache/maven/model/Build;Lorg/apache/maven/model/Build;Z)V#dominantPM,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/project/inheritance/DefaultModelInheritanceAssembler.java;,VariableName,dominantPM,"// Plugin management :: aggregate
        PluginManagement dominantPM = childBuild.getPluginManagement();
        PluginManagement recessivePM = parentBuild.getPluginManagement();

        if ( ( dominantPM == null ) && ( recessivePM != null ) )",pm,plugin management
Ljava/io/IOException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/usability/plugin/ExpressionDocumenter.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/test/java/org/apache/maven/artifact/testutils/TestFileManager.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-repository-metadata/target/generated-sources/modello/org/apache/maven/artifact/repository/metadata/io/xpp3/MetadataXpp3Writer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/plugin/version/internal/DefaultPluginVersionResolver.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-embedder/src/test/java/org/apache/maven/cli/CLIManagerDocumentationTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/exception/DefaultExceptionHandler.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-slf4j-provider/target/generated-sources/slf4j-simple/org/slf4j/impl/SimpleLoggerConfiguration.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-model-builder/src/main/java/org/apache/maven/model/io/DefaultModelReader.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/repository/legacy/DefaultWagonManager.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/profiles/activation/FileProfileActivator.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/test/java/org/apache/maven/MavenLifecycleParticipantTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/toolchain/io/ToolchainsReader.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-plugin-api/src/main/java/org/apache/maven/plugin/descriptor/PluginDescriptor.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/project/MavenProject.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/artifact/repository/metadata/AbstractRepositoryMetadata.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/test/java/org/apache/maven/lifecycle/MojoExecutionXPathContainer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-embedder/src/main/java/org/apache/maven/cli/MavenCli.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-model-builder/src/main/java/org/apache/maven/model/io/DefaultModelWriter.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-settings-builder/src/main/java/org/apache/maven/settings/io/DefaultSettingsReader.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-embedder/target/generated-sources/modello/org/apache/maven/cli/internal/extension/model/io/xpp3/CoreExtensionsXpp3Writer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/MavenMetadata.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/artifact/repository/metadata/io/MetadataParseException.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/lifecycle/internal/builder/multithreaded/ThreadOutputMuxer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/test/java/org/apache/maven/settings/PomConstructionWithSettingsTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-settings-builder/src/main/java/org/apache/maven/settings/building/DefaultSettingsBuilder.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/toolchain/building/DefaultToolchainsBuilder.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/target/generated-sources/modello/org/apache/maven/toolchain/model/io/xpp3/MavenToolchainsXpp3Writer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-settings-builder/src/main/java/org/apache/maven/settings/io/SettingsParseException.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/project/DefaultProjectBuilder.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-builder-support/src/main/java/org/apache/maven/building/StringSource.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-plugin-api/target/generated-sources/modello/org/apache/maven/plugin/lifecycle/io/xpp3/LifecycleMappingsXpp3Writer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/toolchain/io/ToolchainsParseException.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/repository/LocalRepositoryNotAccessibleException.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/artifact/repository/metadata/io/DefaultMetadataReader.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelProcessor.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-builder-support/src/main/java/org/apache/maven/building/FileSource.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/test/java/org/apache/maven/project/ModelUtilsTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/repository/legacy/LegacyRepositorySystem.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/test/java/org/apache/maven/repository/TestRepositorySystem.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-settings/target/generated-sources/modello/org/apache/maven/settings/io/xpp3/SettingsXpp3Writer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-plugin-api/src/main/java/org/apache/maven/plugin/descriptor/PluginDescriptorBuilder.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-settings-builder/src/main/java/org/apache/maven/settings/io/SettingsWriter.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-model-builder/src/test/java/org/apache/maven/model/inheritance/DefaultInheritanceAssemblerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-model-builder/src/main/java/org/apache/maven/model/io/ModelParseException.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-model-builder/src/main/java/org/apache/maven/model/io/ModelWriter.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-plugin-api/src/test/java/org/apache/maven/plugin/lifecycle/LifecycleXpp3ReaderTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/project/ExtensionDescriptorBuilder.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/profiles/MavenProfilesBuilder.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/project/interpolation/RegexBasedModelInterpolator.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/extension/internal/CoreExtensionEntry.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/repository/legacy/DefaultUpdateCheckManager.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/target/generated-sources/modello/org/apache/maven/usability/plugin/io/xpp3/ParamdocXpp3Reader.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/test/java/org/apache/maven/exception/DefaultExceptionHandlerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/test/java/org/apache/maven/repository/TestRepositoryConnector.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-embedder/src/main/java/org/apache/maven/cli/logging/Slf4jConfigurationFactory.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-embedder/src/main/java/org/apache/maven/cli/CLIReportingUtils.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/artifact/repository/metadata/io/MetadataReader.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/settings/MavenSettingsBuilder.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/test/java/org/apache/maven/artifact/AbstractArtifactComponentTestCase.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/artifact/repository/metadata/DefaultRepositoryMetadataManager.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/test/java/org/apache/maven/toolchain/building/DefaultToolchainsBuilderTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/profiles/DefaultMavenProfilesBuilder.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-model/target/generated-sources/modello/org/apache/maven/model/io/xpp3/MavenXpp3Reader.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/project/artifact/ProjectArtifactMetadata.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-plugin-api/target/generated-sources/modello/org/apache/maven/plugin/lifecycle/io/xpp3/LifecycleMappingsXpp3Reader.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/project/interpolation/AbstractStringBasedModelInterpolator.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/plugin/prefix/internal/DefaultPluginPrefixResolver.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-embedder/target/generated-sources/modello/org/apache/maven/cli/internal/extension/model/io/xpp3/CoreExtensionsXpp3Reader.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/toolchain/io/DefaultToolchainsReader.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/target/generated-sources/modello/org/apache/maven/profiles/io/xpp3/ProfilesXpp3Writer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelBuilder.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-builder-support/src/main/java/org/apache/maven/building/Source.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-model-builder/src/main/java/org/apache/maven/model/superpom/DefaultSuperPomProvider.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/test/java/org/apache/maven/project/MavenProjectTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/target/generated-sources/modello/org/apache/maven/profiles/io/xpp3/ProfilesXpp3Reader.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/test/java/org/apache/maven/repository/legacy/DefaultWagonManagerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/plugin/internal/DefaultMavenPluginManager.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-settings-builder/src/main/java/org/apache/maven/settings/io/DefaultSettingsWriter.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-model-builder/src/main/java/org/apache/maven/model/io/ModelReader.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/settings/DefaultMavenSettingsBuilder.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/target/generated-sources/modello/org/apache/maven/usability/plugin/io/xpp3/ParamdocXpp3Writer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-plugin-api/src/test/java/org/apache/maven/plugin/descriptor/PluginDescriptorBuilderTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-settings/target/generated-sources/modello/org/apache/maven/settings/io/xpp3/SettingsXpp3Reader.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/rtinfo/internal/DefaultRuntimeInformation.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/test/java/org/apache/maven/configuration/DefaultBeanConfiguratorTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-model/target/generated-sources/modello/org/apache/maven/model/io/xpp3/MavenXpp3Writer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-settings-builder/src/main/java/org/apache/maven/settings/io/SettingsReader.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/lifecycle/internal/DefaultLifecycleExecutionPlanCalculator.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/DefaultVersionResolver.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-model/target/generated-sources/modello/org/apache/maven/model/io/xpp3/MavenXpp3ReaderEx.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-builder-support/src/main/java/org/apache/maven/building/UrlSource.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/target/generated-sources/modello/org/apache/maven/toolchain/model/io/xpp3/MavenToolchainsXpp3Reader.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-repository-metadata/target/generated-sources/modello/org/apache/maven/artifact/repository/metadata/io/xpp3/MetadataXpp3Reader.java;,ClassName,IOException,"    catch ( IOException e )
                {
                    throw new ExpressionDocumentationException(
                        ""Failed to read documentation for expression root: "" + root, e );
                }",io,input output
Lorg/apache/maven/repository/metadata/DefaultGraphConflictResolver;.resolveConflicts(Lorg/apache/maven/repository/metadata/MetadataGraph;Lorg/apache/maven/artifact/ArtifactScopeEnum;)Lorg/apache/maven/repository/metadata/MetadataGraph;|Lorg/apache/maven/repository/metadata/GraphConflictResolutionException;#0#0#0#0#0#newV,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/repository/metadata/DefaultGraphConflictResolver.java;,VariableName,newV,"                    ArtifactMetadata md = v.getMd();
                    ArtifactMetadata newMd =
                        new ArtifactMetadata( md.getGroupId(), md.getArtifactId(), edge.getVersion(), md.getType(),
                                              md.getScopeAsEnum(), md.getClassifier(), edge.getArtifactUri(),
                                              edge.getSource() == null ? """" : edge.getSource().getMd().toString(),
                                              edge.isResolved(), edge.getTarget() == null ? null
                                                              : edge.getTarget().getMd().getError() );
                    MetadataGraphVertex newV = res.addVertex( newMd );
                    MetadataGraphVertex sourceV = res.addVertex( edge.getSource().getMd() );

                    res.addEdge( sourceV, newV, edge );
                }",v,vertex
Lorg/apache/maven/plugin/descriptor/PluginDescriptorBuilderTest;.testBuildReader()V|Ljava/lang/Exception;#cr,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-plugin-api/src/test/java/org/apache/maven/plugin/descriptor/PluginDescriptorBuilderTest.java;,VariableName,cr,"        assertEquals( ""${jar.finalName}"", mp.getExpression() );
        assertEquals( ""${project.build.finalName}"", mp.getDefaultValue() );
        assertEquals( ""3.0.0"", mp.getSince() );

        ComponentRequirement cr = md.getRequirements().get( 0 );

        assertEquals( ""org.codehaus.plexus.archiver.Archiver"", cr.getRole() );
        assertEquals( ""jar"", cr.getRoleHint() );
        assertEquals( ""jarArchiver"", cr.getFieldName() );",cr,component requirement
Lorg/apache/maven/graph/DefaultGraphBuilder;.collectProjects(Ljava/util/List<Lorg/apache/maven/project/MavenProject;>;Ljava/util/List<Ljava/io/File;>;Lorg/apache/maven/execution/MavenExecutionRequest;)V|Lorg/apache/maven/project/ProjectBuildingException;#0#0#0#loc,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/graph/DefaultGraphBuilder.java;,VariableName,loc,"                for ( ModelProblem problem : result.getProblems() )
                {
                    String loc = ModelProblemUtils.formatLocation( problem, result.getProjectId() );
                    logger.warn( problem.getMessage() + ( StringUtils.isNotEmpty( loc ) ? "" @ "" + loc : """" ) );
                }

                problems = true;",loc,location
Lorg/apache/maven/toolchain/building/ToolchainsBuildingExceptionTest;.testUnknownPositionAndSource()V#e,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/test/java/org/apache/maven/toolchain/building/ToolchainsBuildingExceptionTest.java;,VariableName,e,"    public void testNoProblems()
    {
        ToolchainsBuildingException e = new ToolchainsBuildingException( Collections.<Problem>emptyList() );
        assertEquals( ""0 problems were encountered while building the effective toolchains"" + LS, e.getMessage() );
    }",e,exception
Lorg/apache/commons/jxpath/ri/compiler/NodeNameTest;.getNamespaceURI()Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/test/java/org/apache/maven/project/harness/Xpp3DomNodeIterator.java;,MethodName,getNamespaceURI,"            NodeNameTest nodeNameTest = (NodeNameTest) test;
            String namespaceURI = nodeNameTest.getNamespaceURI();
            boolean wildcard = nodeNameTest.isWildcard();
            String testName = nodeNameTest.getNodeName().getName();
            String testPrefix = nodeNameTest.getNodeName().getPrefix();",uri,uniform resource identifier
Lorg/apache/maven/artifact/repository/metadata/DefaultRepositoryMetadataManager;.fixTimestamp(Ljava/io/File;Lorg/apache/maven/artifact/repository/metadata/Metadata;Lorg/apache/maven/artifact/repository/metadata/Metadata;)V#0#versioningRef,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/artifact/repository/metadata/DefaultRepositoryMetadataManager.java;,VariableName,versioningRef,"        if ( metadata != null && reference != null )
        {
            Versioning versioning = metadata.getVersioning();
            Versioning versioningRef = reference.getVersioning();
            if ( versioning != null && versioningRef != null )
            {",ref,reference
Lorg/apache/maven/project/DefaultProjectDependenciesResolver;.process(Lorg/apache/maven/project/DefaultDependencyResolutionResult;Ljava/util/Collection<Lorg/eclipse/aether/resolution/ArtifactResult;>;)V#0#ar,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/project/DefaultProjectDependenciesResolver.java;,VariableName,ar,"    private void process( DefaultDependencyResolutionResult result, Collection<ArtifactResult> results )
    {
        for ( ArtifactResult ar : results )
        {
            DependencyNode node = ar.getRequest().getDependencyNode();
            if ( ar.isResolved() )
            {",ar,artifact
Lorg/apache/maven/model/validation/DefaultModelValidator;.validateEffectiveDependency(Lorg/apache/maven/model/building/ModelProblemCollector;Lorg/apache/maven/model/Dependency;ZLjava/lang/String;Lorg/apache/maven/model/building/ModelBuildingRequest;)V#0#0#sysFile,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java;,VariableName,sysFile,"      }
            else
            {
                File sysFile = new File( systemPath );
                if ( !sysFile.isAbsolute() )
                {
                    addViolation( problems, Severity.ERROR, Version.BASE, prefix + ""systemPath"", d.getManagementKey(),
                                  ""must specify an absolute path but is "" + systemPath, d );",sys,system
Lorg/apache/maven/profiles/ProfilesConversionUtils;.convertRepositoryPolicy(Lorg/apache/maven/profiles/RepositoryPolicy;)Lorg/apache/maven/model/RepositoryPolicy;#profileXmlRepo#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/profiles/ProfilesConversionUtils.java;,ParameterName,profileXmlRepo,"    private static Repository convertFromProfileXmlRepository( org.apache.maven.profiles.Repository profileXmlRepo )
    {
        Repository repo = new Repository();

        repo.setId( profileXmlRepo.getId() );
        repo.setLayout( profileXmlRepo.getLayout() );",repo,repository
Lorg/slf4j/impl/SimpleLogger;.formatAndLog(ILjava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V#tp,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-slf4j-provider/target/generated-sources/slf4j-simple/org/slf4j/impl/SimpleLogger.java;,VariableName,tp,"        if (!isLevelEnabled(level)) {
            return;
        }
        FormattingTuple tp = MessageFormatter.format(format, arg1, arg2);
        log(level, tp.getMessage(), tp.getThrowable());
    }",tp,tuple
Lorg/apache/maven/repository/legacy/resolver/DefaultLegacyArtifactCollector;.recurse(Lorg/apache/maven/artifact/resolver/ArtifactResolutionResult;Lorg/apache/maven/artifact/resolver/ResolutionNode;Ljava/util/Map<Ljava/lang/Object;Ljava/util/List<Lorg/apache/maven/artifact/resolver/ResolutionNode;>;>;Lorg/apache/maven/artifact/versioning/ManagedVersionMap;Lorg/apache/maven/artifact/resolver/ArtifactResolutionRequest;Lorg/apache/maven/artifact/metadata/ArtifactMetadataSource;Lorg/apache/maven/artifact/resolver/filter/ArtifactFilter;Ljava/util/List<Lorg/apache/maven/artifact/resolver/ResolutionListener;>;Ljava/util/List<Lorg/apache/maven/repository/legacy/resolver/conflict/ConflictResolver;>;)V|Lorg/apache/maven/artifact/resolver/ArtifactResolutionException;#1#0#0#0#0#0#0#0#0#0#aaf,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/repository/legacy/resolver/DefaultLegacyArtifactCollector.java;,VariableName,aaf,"{
                                        if ( null != artifact.getDependencyFilter() )
                                        {
                                            AndArtifactFilter aaf = new AndArtifactFilter();
                                            aaf.add( artifact.getDependencyFilter() );
                                            aaf.add( managedExclusionFilter );
                                            artifact.setDependencyFilter( aaf );",aaf,and artifact filter
Lorg/apache/maven/model/validation/DefaultModelValidator;.validate20RawDependencies(Lorg/apache/maven/model/building/ModelProblemCollector;Ljava/util/List<Lorg/apache/maven/model/Dependency;>;Ljava/lang/String;Lorg/apache/maven/model/building/ModelBuildingRequest;)V#0#0#0#sysPath,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java;,VariableName,sysPath,"                String sysPath = dependency.getSystemPath();
                if ( StringUtils.isNotEmpty( sysPath ) )
                {
                    if ( !hasExpression( sysPath ) )",sys,system
Lorg/apache/maven/profiles/activation/SystemPropertyProfileActivator;.isActive(Lorg/apache/maven/model/Profile;)Z|Lorg/apache/maven/profiles/activation/ProfileActivationException;#0#sysValue,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/profiles/activation/SystemPropertyProfileActivator.java;,VariableName,sysValue,"            reverseName = true;
                name = name.substring( 1 );
            }

            String sysValue = properties.getProperty( name );

            String propValue = property.getValue();
            if ( StringUtils.isNotEmpty( propValue ) )
            {",sys,system
Lorg/apache/maven/repository/internal/DefaultVersionResolver;.resolveVersion(Lorg/eclipse/aether/RepositorySystemSession;Lorg/eclipse/aether/resolution/VersionRequest;)Lorg/eclipse/aether/resolution/VersionResult;|Lorg/eclipse/aether/resolution/VersionResolutionException;#2#metadataReqs,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/DefaultVersionResolver.java;,VariableName,metadataReqs,"        else
        {
            List<MetadataRequest> metadataReqs = new ArrayList<>( request.getRepositories().size() );

            metadataReqs.add( new MetadataRequest( metadata, null, request.getRequestContext() ) );

            for ( RemoteRepository repository : request.getRepositories() )",reqs,request
Lorg/apache/maven/project/ModelUtilsTest;.testShouldNotMergePluginExecutionWhenPluginInheritedIsFalseAndTreatAsInheritanceIsTrue()V#pChild,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/test/java/org/apache/maven/project/ModelUtilsTest.java;,VariableName,pChild,"        pParent.addExecution( eParent );
        parent.addPlugin( pParent );

        PluginContainer child = new PluginContainer();
        Plugin pChild = createPlugin( gid, aid, ver, Collections.EMPTY_MAP );
        PluginExecution eChild = new PluginExecution();

        eChild.setId( ""child-specified"" );
        eChild.addGoal( ""child"" );",p,plugin
Lorg/apache/maven/artifact/versioning/ComparableVersion;.main([Ljava/lang/String;)V#0#0#c,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-artifact/src/main/java/org/apache/maven/artifact/versioning/ComparableVersion.java;,VariableName,c,"        for ( int i = 0; i < version.length(); i++ )
        {
            char c = version.charAt( i );

            if ( c == '.' )
            {
                if ( i == startIndex )",c,comparable
Lorg/apache/maven/model/io/xpp3/MavenXpp3Writer;.writeContributor(Lorg/apache/maven/model/Contributor;Ljava/lang/String;Lorg/codehaus/plexus/util/xml/pull/XmlSerializer;)V|Ljava/io/IOException;#0#iter,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-model/target/generated-sources/modello/org/apache/maven/model/io/xpp3/MavenXpp3Writer.java;,VariableName,iter,"        if ( ( build.getExtensions() != null ) && ( build.getExtensions().size() > 0 ) )
        {
            serializer.startTag( NAMESPACE, ""extensions"" );
            for ( Iterator iter = build.getExtensions().iterator(); iter.hasNext(); )
            {
                Extension o = (Extension) iter.next();
                writeExtension( o, ""extension"", serializer );",iter,iterator
Lorg/apache/maven/artifact/repository/metadata/Metadata;.merge(Lorg/apache/maven/artifact/repository/metadata/Metadata;)Z#1#1#s,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-repository-metadata/target/generated-sources/modello/org/apache/maven/artifact/repository/metadata/Metadata.java;,VariableName,s,"    changed = true;
                    v.setLatest( versioning.getLatest() );
                }

                Snapshot s = v.getSnapshot();
                Snapshot snapshot = versioning.getSnapshot();
                if ( snapshot != null )
                {",s,Snapshot
Lorg/apache/maven/repository/legacy/LegacyRepositorySystem;.getEffectiveRepositories(Ljava/util/List<Lorg/apache/maven/artifact/repository/ArtifactRepository;>;)Ljava/util/List<Lorg/apache/maven/artifact/repository/ArtifactRepository;>;#1#0#mirroredRepos,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/repository/legacy/LegacyRepositorySystem.java;,VariableName,mirroredRepos,"List<ArtifactRepository> effectiveRepositories = new ArrayList<>();

        for ( List<ArtifactRepository> aliasedRepos : reposByKey.values() )
        {
            List<ArtifactRepository> mirroredRepos = new ArrayList<>();

            List<ArtifactRepositoryPolicy> releasePolicies =
                new ArrayList<>( aliasedRepos.size() );",repos,repositories
Lorg/apache/maven/exception/DefaultExceptionHandlerTest;.testJdk7ipv6()V#connEx,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/test/java/org/apache/maven/exception/DefaultExceptionHandlerTest.java;,VariableName,connEx,"    public void testJdk7ipv6()
    {
        ConnectException connEx = new ConnectException( ""Connection refused: connect"" );
        IOException ioEx = new IOException( ""Unable to establish loopback connection"" );
        ioEx.initCause( connEx );
        MojoExecutionException mojoEx =
            new MojoExecutionException( ""Error executing Jetty: Unable to establish loopback connection"", ioEx );
",conn,connect
Lorg/apache/maven/artifact/resolver/filter/FilterHashEqualsTest;.testIncludesExcludesArtifactFilter()V#f3,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/test/java/org/apache/maven/artifact/resolver/filter/FilterHashEqualsTest.java;,VariableName,f3,"        assertTrue( f1.equals(f2) );
        assertTrue( f2.equals(f1) );
        assertTrue( f1.hashCode() == f2.hashCode() );

        IncludesArtifactFilter f3 = new IncludesArtifactFilter( Arrays.asList( ""d"", ""c"", ""e"" ) );
        assertTrue( f1.equals( f3 ) );
        assertTrue( f1.hashCode() == f3.hashCode() );",f,filter
Lorg/apache/maven/artifact/repository/LegacyLocalRepositoryManager;.overlay(Lorg/apache/maven/artifact/repository/ArtifactRepository;Lorg/eclipse/aether/RepositorySystemSession;Lorg/eclipse/aether/RepositorySystem;)Lorg/eclipse/aether/RepositorySystemSession;#0#lrm,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/artifact/repository/LegacyLocalRepositoryManager.java;,VariableName,lrm,"        if ( session != null )
        {
            LocalRepositoryManager lrm = session.getLocalRepositoryManager();
            if ( lrm != null && lrm.getRepository().getBasedir().equals( new File( repository.getBasedir() ) ) )
            {
                return session;",lrm,local repository manager
Lorg/apache/maven/project/inheritance/DefaultModelInheritanceAssembler;.assembleDependencyManagementInheritance(Lorg/apache/maven/model/Model;Lorg/apache/maven/model/Model;)V#parentDepMgmt,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/project/inheritance/DefaultModelInheritanceAssembler.java;,VariableName,parentDepMgmt,"private void assembleDependencyManagementInheritance( Model child, Model parent )
    {
        DependencyManagement parentDepMgmt = parent.getDependencyManagement();

        DependencyManagement childDepMgmt = child.getDependencyManagement();

        if ( parentDepMgmt != null )
        {",dep,Dependency
Lorg/apache/maven/project/MavenProject;.getCompileClasspathElements()Ljava/util/List<Ljava/lang/String;>;|Lorg/apache/maven/artifact/DependencyResolutionRequiredException;#d,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/project/MavenProject.java;,VariableName,d,"    public List<String> getCompileClasspathElements()
        throws DependencyResolutionRequiredException
    {
        List<String> list = new ArrayList<>( getArtifacts().size() + 1 );

        String d = getBuild().getOutputDirectory();
        if ( d != null )
        {
            list.add( d );",d,directory
Lorg/apache/maven/repository/metadata/MetadataGraph;.processTreeNodes(Lorg/apache/maven/repository/metadata/MetadataGraphVertex;Lorg/apache/maven/repository/metadata/MetadataTreeNode;II)V|Lorg/apache/maven/repository/metadata/MetadataResolutionException;#1#0#n,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/repository/metadata/MetadataGraph.java;,VariableName,n,"        for ( int i = 0; i < kids.length; i++ )
        {
            MetadataTreeNode n = kids[i];
            processTreeNodes( vertex, n, depth + 1, i );
        }
    }",n,node
Lorg/apache/maven/project/canonical/CanonicalProjectBuilderTest;.testProjectBuilder()V|Ljava/lang/Exception;#g0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/test/java/org/apache/maven/project/canonical/CanonicalProjectBuilderTest.java;,VariableName,g0,"        List<PluginExecution> executions = plugin.getExecutions();

        PluginExecution execution = executions.get( 0 );

        String g0 = execution.getGoals().get( 0 );

        assertEquals( ""plexus:runtime"", g0 );

        configuration = (Xpp3Dom) execution.getConfiguration();

        assertEquals( ""ContinuumPro"", configuration.getChild( ""plexusApplicationName"" ).getValue() );
",g,goal
Lorg/apache/maven/repository/internal/DefaultArtifactDescriptorReader;.getRelocation(Lorg/apache/maven/model/Model;)Lorg/apache/maven/model/Relocation;#distMgmt,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/DefaultArtifactDescriptorReader.java;,VariableName,distMgmt,"    private Relocation getRelocation( Model model )
    {
        Relocation relocation = null;
        DistributionManagement distMgmt = model.getDistributionManagement();
        if ( distMgmt != null )
        {
            relocation = distMgmt.getRelocation();",dist,distribution
Lorg/apache/maven/project/ModelUtilsTest;.testShouldMergePluginConfigurationSubItemsWithMergeAttributeSet()V|Lorg/codehaus/plexus/util/xml/pull/XmlPullParserException;|Ljava/io/IOException;#parentConfigStr,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/test/java/org/apache/maven/project/ModelUtilsTest.java;,VariableName,parentConfigStr,"    public void testShouldOverwritePluginConfigurationSubItemsByDefault()
        throws XmlPullParserException, IOException
    {
        String parentConfigStr = ""<configuration><items><item>one</item><item>two</item></items></configuration>"";
        Xpp3Dom parentConfig = Xpp3DomBuilder.build( new StringReader( parentConfigStr ) );

        Plugin parentPlugin = createPlugin( ""group"", ""artifact"", ""1"", null );
        parentPlugin.setConfiguration( parentConfig );",str,string
Lorg/apache/maven/artifact/resolver/AbstractArtifactResolutionException;.constructMessageBase(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List<Lorg/apache/maven/artifact/repository/ArtifactRepository;>;Ljava/util/List<Ljava/lang/String;>;)Ljava/lang/String;#sb,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-artifact/src/main/java/org/apache/maven/artifact/resolver/AbstractArtifactResolutionException.java;,VariableName,sb,"    protected static String constructArtifactPath( List<String> path,
                                                   String indentation )
    {
        StringBuilder sb = new StringBuilder();

        if ( path != null )
        {
            sb.append( LS );",sb,string builder
Lorg/apache/maven/plugin/logging/SystemStreamLog;.error(Ljava/lang/Throwable;)V#pWriter,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-plugin-api/src/main/java/org/apache/maven/plugin/logging/SystemStreamLog.java;,VariableName,pWriter,"public void error( CharSequence content, Throwable error )
    {
        StringWriter sWriter = new StringWriter();
        PrintWriter pWriter = new PrintWriter( sWriter );

        error.printStackTrace( pWriter );

        System.err.println( ""[error] "" + content.toString() + ""\n\n"" + sWriter.toString() );",p,print
Lorg/apache/maven/project/inheritance/t01/ProjectInheritanceTest;.testProjectInheritance()V|Ljava/lang/Exception;#p4,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/test/java/org/apache/maven/project/inheritance/t01/ProjectInheritanceTest.java;,VariableName,p4,"       // ----------------------------------------------------------------------
        // Check p4 value for org name
        // ----------------------------------------------------------------------

        MavenProject p4 = getProject( projectFile( ""maven.t01"", ""p4"" ) );

        assertEquals( ""p4-org"", p4.getOrganization().getName() );",p,project
Lorg/apache/maven/artifact/versioning/VersionRange;.intersection(Ljava/util/List<Lorg/apache/maven/artifact/versioning/Restriction;>;Ljava/util/List<Lorg/apache/maven/artifact/versioning/Restriction;>;)Ljava/util/List<Lorg/apache/maven/artifact/versioning/Restriction;>;#res2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-artifact/src/main/java/org/apache/maven/artifact/versioning/VersionRange.java;,VariableName,res2," Iterator<Restriction> i1 = r1.iterator();
        Iterator<Restriction> i2 = r2.iterator();
        Restriction res1 = i1.next();
        Restriction res2 = i2.next();

        boolean done = false;
        while ( !done )
        {",res,Restriction
Lorg/apache/maven/artifact/repository/ArtifactRepository;.getUrl()Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/repository/legacy/DefaultWagonManager.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/test/java/org/apache/maven/execution/DefaultMavenExecutionRequestPopulatorTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/repository/legacy/DefaultUpdateCheckManager.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/project/artifact/DefaultMavenMetadataCache.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/bridge/MavenRepositorySystem.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-artifact/src/main/java/org/apache/maven/artifact/resolver/AbstractArtifactResolutionException.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/repository/DelegatingLocalArtifactRepository.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/artifact/repository/metadata/DefaultRepositoryMetadataManager.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/RepositoryUtils.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-artifact/src/main/java/org/apache/maven/artifact/repository/ArtifactRepository.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/repository/DefaultMirrorSelector.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/repository/legacy/LegacyRepositorySystem.java;,MethodName,getUrl,"        else if ( repository.getProxy() != null )
        {
            wagon.connect( new Repository( repository.getId(), repository.getUrl() ), proxyInfo( repository ) );
        }
        else
        {
            wagon.connect( new Repository( repository.getId(), repository.getUrl() ) );
        }",url,uniform resource locator
Lorg/apache/maven/project/artifact/DefaultMavenMetadataCacheTest;.testCacheKey()V|Ljava/lang/Exception;#rr2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/test/java/org/apache/maven/project/artifact/DefaultMavenMetadataCacheTest.java;,VariableName,rr2,"        Artifact a2 = repositorySystem.createArtifact( ""testGroup"", ""testArtifact"", ""1.2.3"", ""jar"" );
        @SuppressWarnings( ""deprecation"" )
        ArtifactRepository lr2 = new DelegatingLocalArtifactRepository( repositorySystem.createDefaultLocalRepository() );
        ArtifactRepository rr2 = repositorySystem.createDefaultRemoteRepository();
        a2.setDependencyFilter( new ExcludesArtifactFilter( Arrays.asList( ""foo"" ) ) );

        // sanity checks
        assertNotSame( a1, a2 );",rr,repository
Lorg/apache/maven/plugin/descriptor/PluginDescriptor;.getMojo(Ljava/lang/String;)Lorg/apache/maven/plugin/descriptor/MojoDescriptor;#0#desc,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-plugin-api/src/main/java/org/apache/maven/plugin/descriptor/PluginDescriptor.java;,VariableName,desc,"        // TODO could we use a map? Maybe if the parent did that for components too, as this is too vulnerable to
        // changes above not being propagated to the map
        for ( MojoDescriptor desc : getMojos() )
        {
            if ( goal.equals( desc.getGoal() ) )
            {
                return desc;",desc,descriptor
Lorg/slf4j/impl/SimpleLoggerConfiguration;.dateTimeFormatStr)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-slf4j-provider/target/generated-sources/slf4j-simple/org/slf4j/impl/SimpleLoggerConfiguration.java;,FieldName,dateTimeFormatStr,"    private static final boolean SHOW_DATE_TIME_DEFAULT = false;
    boolean showDateTime = SHOW_DATE_TIME_DEFAULT;

    private static final String DATE_TIME_FORMAT_STR_DEFAULT = null;
    private static String dateTimeFormatStr = DATE_TIME_FORMAT_STR_DEFAULT;

    DateFormat dateFormatter = null;",str,string
Lorg/apache/maven/project/interpolation/AbstractStringBasedModelInterpolator;.interpolate(Lorg/apache/maven/model/Model;Ljava/io/File;Lorg/apache/maven/project/ProjectBuilderConfiguration;Z)Lorg/apache/maven/model/Model;|Lorg/apache/maven/project/interpolation/ModelInterpolationException;#config#0#2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/project/interpolation/AbstractStringBasedModelInterpolator.java;,ParameterName,config,"public Model interpolate( Model model,
                              File projectDir,
                              ProjectBuilderConfiguration config,
                              boolean debugEnabled )
        throws ModelInterpolationException
    {
        StringWriter sWriter = new StringWriter( 1024 );

        MavenXpp3Writer writer = new MavenXpp3Writer();",config,configuration
Lorg/apache/maven/artifact/transform/TransformationManagerTest;.testTransformationManager()V|Ljava/lang/Exception;#tms,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/test/java/org/apache/maven/artifact/transform/TransformationManagerTest.java;,VariableName,tms,"    public void testTransformationManager()
        throws Exception
    {
        ArtifactTransformationManager tm = lookup( ArtifactTransformationManager.class );

        List tms = tm.getArtifactTransformations();

        assertEquals( 3, tms.size() );

        assertTrue( ""We expected the release transformation and got "" + tms.get(0), tms.get(0) instanceof ReleaseArtifactTransformation );
",tms,transformations
Lorg/apache/maven/cli/CLIManagerDocumentationTest;.getOptionsAsHtml()Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-embedder/src/test/java/org/apache/maven/cli/CLIManagerDocumentationTest.java;,MethodName,getOptionsAsHtml,"    public String getOptionsAsHtml()
    {
        StringBuilder sb = new StringBuilder( 512 );
        boolean a = true;
        sb.append( ""<table border='1' class='zebra-striped'><tr class='a'><th><b>Options</b></th><th><b>Description</b></th></tr>"" );
        for ( Option option : new CLIManagerExtension().getOptions() )",html,hyper text markup language
Ljava/net/URI;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/configuration/BasedirBeanConfigurationPathTranslator.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/graph/DefaultGraphBuilder.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/test/java/org/apache/maven/repository/LegacyRepositorySystemTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/bridge/MavenRepositorySystem.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/test/java/org/apache/maven/project/AbstractMavenProjectTestCase.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/classrealm/DefaultClassRealmManager.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-plugin-api/src/main/java/org/apache/maven/plugin/descriptor/PluginDescriptor.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/project/interpolation/AbstractStringBasedModelInterpolator.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/test/java/org/apache/maven/project/PomConstructionTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-model-builder/src/main/java/org/apache/maven/model/building/FileModelSource.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-embedder/src/main/java/org/apache/maven/cli/MavenCli.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelBuilder.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/test/java/org/apache/maven/project/ProjectModelResolverTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-model-builder/src/main/java/org/apache/maven/model/building/ModelSource2.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/test/java/org/apache/maven/project/AbstractMavenProjectTestCase.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/project/DefaultProjectBuilder.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-model-builder/src/main/java/org/apache/maven/model/path/DefaultPathTranslator.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/project/path/DefaultPathTranslator.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/plugin/PluginParameterExpressionEvaluator.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/repository/legacy/LegacyRepositorySystem.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/test/java/org/apache/maven/repository/TestRepositorySystem.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-model-builder/src/main/java/org/apache/maven/model/interpolation/AbstractStringBasedModelInterpolator.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-builder-support/src/test/java/org/apache/maven/building/UrlSourceTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-embedder/src/main/java/org/apache/maven/cli/internal/BootstrapCoreExtensionManager.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/test/java/org/apache/maven/AbstractCoreMavenComponentTestCase.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-resolver-provider/src/test/java/org/apache/maven/repository/internal/AbstractRepositoryTestCase.java;,ClassName,URI,"            else
            {
                // an ordinary relative path, align with base dir
                result = new File( new File( basedir, path.getPath() ).toURI().normalize() ).getAbsoluteFile();
            }
        }

        return result;",uri,uniform resource identifier
Lorg/apache/maven/repository/legacy/resolver/conflict/FarthestConflictResolverTest;.testDepth()V#a1n,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/test/java/org/apache/maven/repository/legacy/resolver/conflict/FarthestConflictResolverTest.java;,VariableName,a1n,"    public void testDepth()
    {
        ResolutionNode a1n = createResolutionNode( a1);
        ResolutionNode b1n = createResolutionNode( b1);
        ResolutionNode a2n = createResolutionNode( a2,  b1n );

        assertResolveConflict( a2n, a1n, a2n );",n,node
Lorg/apache/maven/artifact/repository/metadata/Versioning;.setLastUpdatedTimestamp(Ljava/util/Date;)V#fmt,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-repository-metadata/target/generated-sources/modello/org/apache/maven/artifact/repository/metadata/Versioning.java;,VariableName,fmt,"    public void setLastUpdatedTimestamp( java.util.Date date )
    {
        java.util.TimeZone timezone = java.util.TimeZone.getTimeZone( ""UTC"" );
        java.text.DateFormat fmt = new java.text.SimpleDateFormat( ""yyyyMMddHHmmss"" );
        fmt.setTimeZone( timezone );
        setLastUpdated( fmt.format( date ) );
    }",fmt,format
Lorg/apache/maven/plugin/internal/DefaultMavenPluginManager;.toMavenArtifacts(Lorg/eclipse/aether/graph/DependencyNode;Lorg/eclipse/aether/util/graph/visitor/PreorderNodeListGenerator;)Ljava/util/List<Lorg/apache/maven/artifact/Artifact;>;#nlg#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/plugin/internal/DefaultMavenPluginManager.java;,ParameterName,nlg,"    private List<Artifact> toMavenArtifacts( DependencyNode root, PreorderNodeListGenerator nlg )
    {
        List<Artifact> artifacts = new ArrayList<>( nlg.getNodes().size() );
        RepositoryUtils.toArtifacts( artifacts, Collections.singleton( root ), Collections.<String>emptyList(), null );
        for ( Iterator<Artifact> it = artifacts.iterator(); it.hasNext(); )",nlg,node list generator
Lorg/apache/maven/execution/DefaultMavenExecutionRequestPopulatorTest;.testPluginRepositoryInjection()V|Ljava/lang/Exception;#p,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/test/java/org/apache/maven/execution/DefaultMavenExecutionRequestPopulatorTest.java;,VariableName,p,"        Repository r = new Repository();
        r.setId( ""test"" );
        r.setUrl( ""file:///test"" );

        Profile p = new Profile();
        p.setId( ""test"" );
        p.addPluginRepository( r );",p,profile
Lorg/apache/maven/cli/CLIManagerDocumentationTest;.testOptionsAsHtml()V|Ljava/io/IOException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-embedder/src/test/java/org/apache/maven/cli/CLIManagerDocumentationTest.java;,MethodName,testOptionsAsHtml,"    public void testOptionsAsHtml()
        throws IOException
    {
        File options = getTestFile( ""target/test-classes/options.html"" );
        FileUtils.fileWrite( options, ""UTF-8"", getOptionsAsHtml() );",html,hyper text markup language
Lorg/apache/maven/model/plugin/DefaultReportingConverter;.convert(Lorg/apache/maven/model/ReportPlugin;)Lorg/codehaus/plexus/util/xml/Xpp3Dom;#0#0#0#rs,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-model-builder/src/main/java/org/apache/maven/model/plugin/DefaultReportingConverter.java;,VariableName,rs,"            Xpp3Dom reportSets = new Xpp3Dom( ""reportSets"" );
            for ( ReportSet reportSet : plugin.getReportSets() )
            {
                Xpp3Dom rs = convert( reportSet );
                reportSets.addChild( rs );
            }
            dom.addChild( reportSets );",rs,report set
Lorg/apache/maven/repository/metadata/DefaultGraphConflictResolutionPolicy;.apply(Lorg/apache/maven/repository/metadata/MetadataGraphEdge;Lorg/apache/maven/repository/metadata/MetadataGraphEdge;)Lorg/apache/maven/repository/metadata/MetadataGraphEdge;#0#v1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/repository/metadata/DefaultGraphConflictResolutionPolicy.java;,VariableName,v1,"        if ( depth1 == depth2 )
        {
            ArtifactVersion v1 = new DefaultArtifactVersion( e1.getVersion() );
            ArtifactVersion v2 = new DefaultArtifactVersion( e2.getVersion() );

            if ( newerFirst )
            {",v,version
Lorg/apache/maven/building/UrlSourceTest;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-builder-support/src/test/java/org/apache/maven/building/UrlSourceTest.java;,ClassName,UrlSourceTest,"public class UrlSourceTest
{

    @Test
    public void testUrlSource()
    {
        try",url,uniform resource locator
Lorg/apache/maven/toolchain/DefaultToolchainTest;.testEquals()V|Ljava/lang/Exception;#0#0#0#tc2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/test/java/org/apache/maven/toolchain/DefaultToolchainTest.java;,VariableName,tc2,"            PersistedToolchains jdks = reader.read( jdksIS );
            PersistedToolchains jdksExtra = reader.read( jdksExtraIS );

            DefaultToolchain tc1 = new DefaultJavaToolChain( jdks.getToolchains().get( 0 ), null );
            DefaultToolchain tc2 = new DefaultJavaToolChain( jdksExtra.getToolchains().get( 0 ), null );

            assertTrue( tc1.equals( tc1 ) );
            assertFalse( tc1.equals( tc2 ) );
            assertFalse( tc2.equals( tc1 ) );",tc,tool chain
Lorg/apache/maven/model/inheritance/DefaultInheritanceAssembler$InheritanceModelMerger;.appendPath(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#parentUrl#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-model-builder/src/main/java/org/apache/maven/model/inheritance/DefaultInheritanceAssembler.java;,ParameterName,parentUrl,"        @Override
        protected String extrapolateChildUrl( String parentUrl, Map<Object, Object> context )
        {
            Object childDirectory = context.get( CHILD_DIRECTORY );
            Object childPathAdjustment = context.get( CHILD_PATH_ADJUSTMENT );",url,uniform resource locator
Lorg/apache/maven/project/inheritance/t01/ProjectInheritanceTest;.testProjectInheritance()V|Ljava/lang/Exception;#p3,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/test/java/org/apache/maven/project/inheritance/t01/ProjectInheritanceTest.java;,VariableName,p3,"        // ----------------------------------------------------------------------
        // Check p2 value for org name
        // ----------------------------------------------------------------------

        MavenProject p3 = getProject( projectFile( ""maven.t01"", ""p3"" ) );

        assertEquals( ""p3-org"", p3.getOrganization().getName() );",p,project
Lorg/apache/maven/project/interpolation/StringSearchModelInterpolator$InterpolateObjectAction;.traverseObjectWithParents(Ljava/lang/Class<*>;Ljava/lang/Object;)V|Lorg/apache/maven/project/interpolation/ModelInterpolationException;#cls#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/project/interpolation/StringSearchModelInterpolator.java;,ParameterName,cls,"        private void traverseObjectWithParents( Class<?> cls, Object target )
            throws ModelInterpolationException
        {
            if ( cls == null )",cls,class
Lorg/slf4j/impl/StaticMDCBinder;.getMDCAdapterClassStr()Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-slf4j-provider/target/generated-sources/slf4j-simple/org/slf4j/impl/StaticMDCBinder.java;,MethodName,getMDCAdapterClassStr,"    public String getMDCAdapterClassStr() {
        return NOPMDCAdapter.class.getName();
    }
}",str,string
Lorg/apache/maven/model/building/DefaultModelBuilder;.importDependencyManagement(Lorg/apache/maven/model/Model;Lorg/apache/maven/model/building/ModelBuildingRequest;Lorg/apache/maven/model/building/DefaultModelProblemCollector;Ljava/util/Collection<Ljava/lang/String;>;)V#0#0#importMgmt,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelBuilder.java;,VariableName,importMgmt,"                continue;
            }

            DependencyManagement importMgmt = getCache( request.getModelCache(), groupId, artifactId, version,
                                                        ModelCacheTag.IMPORT );

            if ( importMgmt == null )
            {
                if ( workspaceResolver == null && modelResolver == null )",mgmt,management
Lorg/apache/maven/model/merge/MavenModelMerger;.mergeBuildBase_Filters(Lorg/apache/maven/model/BuildBase;Lorg/apache/maven/model/BuildBase;ZLjava/util/Map<Ljava/lang/Object;Ljava/lang/Object;>;)V#0#tgt,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-model-builder/src/main/java/org/apache/maven/model/merge/MavenModelMerger.java;,VariableName,tgt,"        Organization src = source.getOrganization();
        if ( src != null )
        {
            Organization tgt = target.getOrganization();
            if ( tgt == null )
            {
                tgt = new Organization();",tgt,target
Lorg/apache/maven/eventspy/EventSpy;.init(Lorg/apache/maven/eventspy/EventSpy$Context;)V|Ljava/lang/Exception;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/eventspy/internal/EventSpyDispatcher.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/eventspy/EventSpy.java;,MethodName,init,"    public void init( EventSpy.Context context )
    {
        if ( eventSpies.isEmpty() )
        {
            return;",init,initializes
Lorg/apache/maven/project/inheritance/DefaultModelInheritanceAssembler;.assembleDistributionInheritance(Lorg/apache/maven/model/Model;Lorg/apache/maven/model/Model;Ljava/lang/String;Z)V#0#childDistMgmt,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/main/java/org/apache/maven/project/inheritance/DefaultModelInheritanceAssembler.java;,VariableName,childDistMgmt,"if ( parent.getDistributionManagement() != null )
        {
            DistributionManagement parentDistMgmt = parent.getDistributionManagement();

            DistributionManagement childDistMgmt = child.getDistributionManagement();

            if ( childDistMgmt == null )
            {
                childDistMgmt = new DistributionManagement();",dist,distribution
Lorg/apache/maven/configuration/internal/DefaultBeanConfigurator;.configureBean(Lorg/apache/maven/configuration/BeanConfigurationRequest;)V|Lorg/apache/maven/configuration/BeanConfigurationException;#plexusConfig,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/configuration/internal/DefaultBeanConfigurator.java;,VariableName,plexusConfig,"        if ( configuration == null )
        {
            return;
        }

        PlexusConfiguration plexusConfig;
        if ( configuration instanceof PlexusConfiguration )
        {
            plexusConfig = (PlexusConfiguration) configuration;",config,configuration
Lorg/apache/maven/cli/CleanArgument;.cleanArgs([Ljava/lang/String;)[Ljava/lang/String;#cleanedSz,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-embedder/src/main/java/org/apache/maven/cli/CleanArgument.java;,VariableName,cleanedSz,"        if ( currentArg != null )
        {
            cleaned.add( currentArg.toString() );
        }

        int cleanedSz = cleaned.size();

        String[] cleanArgs;

        if ( cleanedSz == 0 )",sz,size
Lorg/apache/maven/model/building/DefaultModelBuilder;.interpolateModel(Lorg/apache/maven/model/Model;Lorg/apache/maven/model/building/ModelBuildingRequest;Lorg/apache/maven/model/building/ModelProblemCollector;)Lorg/apache/maven/model/Model;#0#0#1#mpcr,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelBuilder.java;,VariableName,mpcr,"                String interpolated = ssi.interpolate( interpolatedModel.getParent().getVersion() );
                interpolatedModel.getParent().setVersion( interpolated );
            }
            catch ( Exception e )
            {
                ModelProblemCollectorRequest mpcr =
                    new ModelProblemCollectorRequest( Severity.ERROR,
                                                      Version.BASE ).setMessage( ""Failed to interpolate field: ""
                                                          + interpolatedModel.getParent().getVersion()
                                                          + "" on class: "" ).setException( e );
                problems.add( mpcr );
            }",mpcr,model problem collector request
Lorg/apache/maven/model/interpolation/AbstractModelInterpolatorTest;.testShouldInterpolateSourceDirectoryReferencedFromResourceDirectoryCorrectly()V|Ljava/lang/Exception;#resIt,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-model-builder/src/test/java/org/apache/maven/model/interpolation/AbstractModelInterpolatorTest.java;,VariableName,resIt,"        assertCollectorState( 0, 0, 2, collector );


        List<Resource> outResources = out.getBuild().getResources();
        Iterator<Resource> resIt = outResources.iterator();

        assertEquals( build.getSourceDirectory(), resIt.next().getDirectory() );
        assertEquals( build.getSourceDirectory(), resIt.next().getDirectory() );
        assertEquals( build.getSourceDirectory(), resIt.next().getDirectory() );",res,resource
Lorg/apache/maven/artifact/versioning/VersionRange;.intersection(Ljava/util/List<Lorg/apache/maven/artifact/versioning/Restriction;>;Ljava/util/List<Lorg/apache/maven/artifact/versioning/Restriction;>;)Ljava/util/List<Lorg/apache/maven/artifact/versioning/Restriction;>;#i2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-artifact/src/main/java/org/apache/maven/artifact/versioning/VersionRange.java;,VariableName,i2,"    private List<Restriction> intersection( List<Restriction> r1, List<Restriction> r2 )
    {
        List<Restriction> restrictions = new ArrayList<>( r1.size() + r2.size() );
        Iterator<Restriction> i1 = r1.iterator();
        Iterator<Restriction> i2 = r2.iterator();
        Restriction res1 = i1.next();
        Restriction res2 = i2.next();

        boolean done = false;",i,iterator
Lorg/apache/maven/model/interpolation/StringSearchModelInterpolatorTest;.testInterpolateObjectWithStringListField()V|Ljava/lang/Exception;#p,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-model-builder/src/test/java/org/apache/maven/model/interpolation/StringSearchModelInterpolatorTest.java;,VariableName,p,"public void testInterpolateStringArray()
        throws Exception
    {
        Model model = new Model();

        Properties p = new Properties();
        p.setProperty( ""key"", ""value"" );
        p.setProperty( ""key2"", ""value2"" );

        String[] values = { ""${key}"", ""${key2}"" };",p,Properties
Lorg/apache/maven/bridge/MavenRepositorySystem;.getProxy(Lorg/eclipse/aether/RepositorySystemSession;Lorg/apache/maven/artifact/repository/ArtifactRepository;)Lorg/apache/maven/repository/Proxy;#0#0#0#p,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/bridge/MavenRepositorySystem.java;,VariableName,p,"                org.eclipse.aether.repository.Proxy proxy = selector.getProxy( repo );
                if ( proxy != null )
                {
                    Proxy p = new Proxy();
                    p.setHost( proxy.getHost() );
                    p.setProtocol( proxy.getType() );
                    p.setPort( proxy.getPort() );",p,proxy
Lorg/apache/maven/project/harness/Xpp3DomNodeIterator;.testNode(Lorg/codehaus/plexus/util/xml/Xpp3Dom;)Z#0#namespaceURI,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/test/java/org/apache/maven/project/harness/Xpp3DomNodeIterator.java;,VariableName,namespaceURI,"            NodeNameTest nodeNameTest = (NodeNameTest) test;
            String namespaceURI = nodeNameTest.getNamespaceURI();
            boolean wildcard = nodeNameTest.isWildcard();
            String testName = nodeNameTest.getNodeName().getName();
            String testPrefix = nodeNameTest.getNodeName().getPrefix();",uri,uniform resource identifier
Lorg/apache/maven/artifact/repository/MavenArtifactRepository;.decode(Ljava/lang/String;)Ljava/lang/String;#0#0#hexStr,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/artifact/repository/MavenArtifactRepository.java;,VariableName,hexStr,"      {
                if ( pos + 2 < decoded.length() )
                {
                    String hexStr = decoded.substring( pos + 1, pos + 3 );
                    char ch = (char) Integer.parseInt( hexStr, 16 );
                    decoded = decoded.substring( 0, pos ) + ch + decoded.substring( pos + 3 );
                }",str,string
Lorg/apache/maven/artifact/resolver/DefaultArtifactResolverTest;.testMNG4738()V|Ljava/lang/Exception;#tg,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/test/java/org/apache/maven/artifact/resolver/DefaultArtifactResolverTest.java;,VariableName,tg,"        // we want to see all top-level thread groups
        ThreadGroup tg = Thread.currentThread().getThreadGroup();
        while ( tg.getParent() == null )
        {
            tg = tg.getParent();",tg,thread group
Lorg/apache/maven/repository/MirrorProcessorTest;.testExternalURL()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/test/java/org/apache/maven/repository/MirrorProcessorTest.java;,MethodName,testExternalURL,"    public void testExternalURL()
    {
        assertTrue( DefaultMirrorSelector.isExternalRepo( getRepo( ""foo"", ""http://somehost"" ) ) );
        assertTrue( DefaultMirrorSelector.isExternalRepo( getRepo( ""foo"", ""http://somehost:9090/somepath"" ) ) );
        assertTrue( DefaultMirrorSelector.isExternalRepo( getRepo( ""foo"", ""ftp://somehost"" ) ) );",url,uniform resource locator
Lorg/slf4j/impl/SimpleLoggerConfiguration;.computeOutputChoice(Ljava/lang/String;Z)Lorg/slf4j/impl/OutputChoice;#0#0#fos,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-slf4j-provider/target/generated-sources/slf4j-simple/org/slf4j/impl/SimpleLoggerConfiguration.java;,VariableName,fos,"        } else {
            try {
                FileOutputStream fos = new FileOutputStream(logFile);
                PrintStream printStream = new PrintStream(fos);
                return new OutputChoice(printStream);
            } catch (FileNotFoundException e) {",fos,File Output Stream
Lorg/apache/maven/model/building/DefaultModelBuilder;.setDependencyManagementInjector(Lorg/apache/maven/model/management/DependencyManagementInjector;)Lorg/apache/maven/model/building/DefaultModelBuilder;#depMgmtInjector#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelBuilder.java;,ParameterName,depMgmtInjector,"    public DefaultModelBuilder setDependencyManagementInjector( DependencyManagementInjector depMgmtInjector )
    {
        this.dependencyManagementInjector = depMgmtInjector;
        return this;
    }",mgmt,management
Lorg/slf4j/impl/StaticLoggerBinder;.LOGGER_FACTORY_CLASS_STR)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-slf4j-provider/src/main/java/org/slf4j/impl/StaticLoggerBinder.java;,FieldName,LOGGER_FACTORY_CLASS_STR,"    public static String REQUESTED_API_VERSION = ""1.7.25""; // !final

    private static final String LOGGER_FACTORY_CLASS_STR = MavenSimpleLoggerFactory.class.getName();

    /**
     * The unique instance of this class.
     */
    private static final StaticLoggerBinder SINGLETON = new StaticLoggerBinder();",str,string
Lorg/apache/maven/model/building/DefaultModelBuilder;.interpolateModel(Lorg/apache/maven/model/Model;Lorg/apache/maven/model/building/ModelBuildingRequest;Lorg/apache/maven/model/building/ModelProblemCollector;)Lorg/apache/maven/model/Model;#0#ssi,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelBuilder.java;,VariableName,ssi,"      if ( interpolatedModel.getParent() != null )
        {
            StringSearchInterpolator ssi = new StringSearchInterpolator();
            ssi.addValueSource( new MapBasedValueSource( request.getUserProperties() ) );

            ssi.addValueSource( new MapBasedValueSource( model.getProperties() ) );

            ssi.addValueSource( new MapBasedValueSource( request.getSystemProperties() ) );",ssi,string search interpolator
Lorg/apache/maven/project/inheritance/t01/ProjectInheritanceTest;.testProjectInheritance()V|Ljava/lang/Exception;#p2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-compat/src/test/java/org/apache/maven/project/inheritance/t01/ProjectInheritanceTest.java;,VariableName,p2,"        // ----------------------------------------------------------------------
        // Check p2 value for org name
        // ----------------------------------------------------------------------

        MavenProject p2 = getProject( projectFile( ""maven.t01"", ""p2"" ) );

        assertEquals( ""p2-org"", p2.getOrganization().getName() );",p,project
Lorg/apache/maven/project/ProjectSorterTest;.testShouldNotFailWhenManagedPluginDepReferencesCurrentProject()V|Lorg/codehaus/plexus/util/dag/CycleDetectedException;|Lorg/apache/maven/project/DuplicateProjectException;#pMgmt,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/test/java/org/apache/maven/project/ProjectSorterTest.java;,VariableName,pMgmt,"    public void testShouldNotFailWhenManagedPluginDepReferencesCurrentProject()
        throws CycleDetectedException, DuplicateProjectException
    {
        MavenProject project = createProject( ""group"", ""artifact"", ""1.0"" );

        Build build = project.getModel().getBuild();

        PluginManagement pMgmt = new PluginManagement();

        Plugin plugin = createPlugin( ""other.group"", ""other-artifact"", ""1.0"" );

        Dependency dep = createDependency( ""group"", ""artifact"", ""1.0"" );

        plugin.addDependency( dep );",mgmt,management
Lorg/apache/maven/toolchain/DefaultToolchain;.toString()Ljava/lang/String;#providesIter,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/toolchain/DefaultToolchain.java;,VariableName,providesIter,"        StringBuilder builder = new StringBuilder();
        builder.append( ""type:"" ).append( getType() );
        builder.append( '{' );

        Iterator<Map.Entry<String, RequirementMatcher>> providesIter = provides.entrySet().iterator();
        while ( providesIter.hasNext() )
        {
            Map.Entry<String, RequirementMatcher> provideEntry = providesIter.next();",iter,iterator
Lorg/apache/maven/repository/internal/DefaultVersionResolver;.merge(Lorg/eclipse/aether/artifact/Artifact;Ljava/util/Map<Ljava/lang/String;Lorg/apache/maven/repository/internal/DefaultVersionResolver$VersionInfo;>;Lorg/apache/maven/artifact/repository/metadata/Versioning;Lorg/eclipse/aether/repository/ArtifactRepository;)V#0#sv,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/DefaultVersionResolver.java;,VariableName,sv,"        for ( SnapshotVersion sv : versioning.getSnapshotVersions() )
        {
            if ( StringUtils.isNotEmpty( sv.getVersion() ) )
            {
                String key = getKey( sv.getClassifier(), sv.getExtension() );",sv,Snapshot Version
Lorg/apache/maven/artifact/versioning/DefaultArtifactVersionTest;.testHashCode()V#v2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-artifact/src/test/java/org/apache/maven/artifact/versioning/DefaultArtifactVersionTest.java;,VariableName,v2,"    public void testHashCode()
    {
        ArtifactVersion v1 = newArtifactVersion( ""1"" );
        ArtifactVersion v2 = newArtifactVersion( ""1.0"" );
        assertEquals( true, v1.equals( v2 ) );
        assertEquals( v1.hashCode(), v2.hashCode() );
    }",v,version
Lorg/apache/maven/lifecycle/internal/MojoDescriptorCreator;.getMojoDescriptor(Ljava/lang/String;Lorg/apache/maven/execution/MavenSession;Lorg/apache/maven/project/MavenProject;)Lorg/apache/maven/plugin/descriptor/MojoDescriptor;|Lorg/apache/maven/plugin/PluginNotFoundException;|Lorg/apache/maven/plugin/PluginResolutionException;|Lorg/apache/maven/plugin/PluginDescriptorParsingException;|Lorg/apache/maven/plugin/MojoNotFoundException;|Lorg/apache/maven/plugin/prefix/NoPluginFoundForPrefixException;|Lorg/apache/maven/plugin/InvalidPluginDescriptorException;|Lorg/apache/maven/plugin/version/PluginVersionResolutionException;#executionIdx,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/lifecycle/internal/MojoDescriptorCreator.java;,VariableName,executionIdx,"            plugin = findPluginForPrefix( prefix, session );
        }

        int executionIdx = goal.indexOf( '@' );
        if ( executionIdx > 0 )
        {
            goal = goal.substring( 0, executionIdx );",idx,index
Lorg/apache/maven/cli/CLIReportingUtils;.formatTimestamp(J)Ljava/lang/String;#sdf,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-embedder/src/main/java/org/apache/maven/cli/CLIReportingUtils.java;,VariableName,sdf,"    public static String formatTimestamp( long timestamp )
    {
        SimpleDateFormat sdf = new SimpleDateFormat( ""yyyy-MM-dd'T'HH:mm:ssXXX"" );
        return sdf.format( new Date( timestamp ) );
    }",sdf,simple date format
Lorg/apache/maven/repository/internal/DefaultVersionResolver$VersionInfo;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/DefaultVersionResolver.java;,ClassName,VersionInfo," private static class VersionInfo
    {

        String timestamp;

        String version;

        ArtifactRepository repository;",info,information
Lorg/apache/maven/plugin/descriptor/MojoDescriptor;.hashCode()I#pd,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-plugin-api/src/main/java/org/apache/maven/plugin/descriptor/MojoDescriptor.java;,VariableName,pd,"            if ( parameters != null )
            {
                for ( Parameter pd : parameters )
                {
                    parameterMap.put( pd.getName(), pd );
                }
            }",pd,plugin descriptor
Lorg/apache/maven/project/artifact/AttachedArtifact;.setDownloadUrl(Ljava/lang/String;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/project/artifact/AttachedArtifact.java;,MethodName,setDownloadUrl,"    public void setDownloadUrl( String downloadUrl )
    {
        throw new UnsupportedOperationException( ""Cannot change the download information for an attached artifact.""
            + "" It is derived from the main artifact."" );
    }",url,uniform resource locator
Lorg/apache/maven/model/interpolation/AbstractModelInterpolatorTest;.testShouldInterpolateUnprefixedBasedirExpression()V|Ljava/lang/Exception;#rDeps,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-model-builder/src/test/java/org/apache/maven/model/interpolation/AbstractModelInterpolatorTest.java;,VariableName,rDeps,"        Model result = interpolator.interpolateModel( model, basedir, createModelBuildingRequest( context ), collector );
        assertProblemFree(  collector );


        List<Dependency> rDeps = result.getDependencies();
        assertNotNull( rDeps );
        assertEquals( 1, rDeps.size() );",r,result
Lorg/apache/maven/plugin/descriptor/PluginDescriptorBuilder;.buildComponentDescriptor(Lorg/codehaus/plexus/configuration/PlexusConfiguration;Lorg/apache/maven/plugin/descriptor/PluginDescriptor;)Lorg/apache/maven/plugin/descriptor/MojoDescriptor;|Lorg/codehaus/plexus/configuration/PlexusConfigurationException;#c#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-plugin-api/src/main/java/org/apache/maven/plugin/descriptor/PluginDescriptorBuilder.java;,ParameterName,c,"public MojoDescriptor buildComponentDescriptor( PlexusConfiguration c, PluginDescriptor pluginDescriptor )
        throws PlexusConfigurationException
    {
        MojoDescriptor mojo = new MojoDescriptor();
        mojo.setPluginDescriptor( pluginDescriptor );

        mojo.setGoal( c.getChild( ""goal"" ).getValue() );",c,component
Lorg/apache/maven/repository/internal/RepositorySystemTest;.checkUtSimpleArtifactDependencies(Lorg/eclipse/aether/graph/Dependency;Lorg/eclipse/aether/graph/Dependency;)V#dep2#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-resolver-provider/src/test/java/org/apache/maven/repository/internal/RepositorySystemTest.java;,ParameterName,dep2," /**
     * check ut.simple:artifact:1.0 dependencies
     */
    private void checkUtSimpleArtifactDependencies( Dependency dep1, Dependency dep2 )
    {
        assertEquals( ""compile"", dep1.getScope() );
        assertFalse( dep1.isOptional() );
        assertEquals( 0, dep1.getExclusions().size() );",dep,dependency
Lorg/apache/maven/bridge/MavenRepositorySystem;.buildArtifactRepository(Lorg/apache/maven/model/Repository;)Lorg/apache/maven/artifact/repository/ArtifactRepository;|Lorg/apache/maven/artifact/InvalidRepositoryException;#repo#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/maven-3.5.2/maven-core/src/main/java/org/apache/maven/bridge/MavenRepositorySystem.java;,ParameterName,repo,"    public static ArtifactRepository buildArtifactRepository( org.apache.maven.settings.Repository repo )
        throws InvalidRepositoryException
    {
        return buildArtifactRepository( fromSettingsRepository( repo ) );
    }",repo,repository
Lorg/pdfsam/PdfsamApp;.lambda$3(Ljavafx/stage/Stage;Lorg/pdfsam/ui/dialog/ConfirmationDialog;)V#d#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/PdfsamApp.java;,VariableName,d,"    private void initDialogsOwner(Stage primaryStage) {
        injector.instancesOfType(ConfirmationDialog.class).stream().forEach(d -> d.setOwner(primaryStage));
        injector.instance(OpenWithDialog.class).setOwner(primaryStage);
    }",d,dialog
Lorg/pdfsam/ui/selection/multiple/SelectionChangedEventTest;.lambda$0(Lorg/pdfsam/ui/selection/multiple/SelectionChangedEvent;Lorg/pdfsam/ui/selection/multiple/move/MoveType;)V#m#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/selection/multiple/SelectionChangedEventTest.java;,VariableName,m,"    public void clearCantMove() {
        SelectionChangedEvent victim = clearSelectionEvent();
        stream(MoveType.values()).forEach(m -> assertFalse(victim.canMove(m)));
    }",m,move
Lorg/pdfsam/task/BulkRotateTaskTest;.lambda$3(Lorg/sejda/sambox/pdmodel/PDDocument;)V#d#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/test/java/org/pdfsam/task/BulkRotateTaskTest.java;,VariableName,d,"    public void testRotateSpecificPages() throws IOException {
        setUpRotateSpecificPages();
        testContext.directoryOutputTo(parameters);
        execute(parameters);
        testContext.assertTaskCompleted();
        testContext.assertCreator().assertPages(4).forEachPdfOutput(d -> assertEquals(90, d.getPage(2).getRotation()));
    }",d,directory
Lorg/pdfsam/ui/support/CircularObservableList;.addAll(ILjava/util/Collection<+TE;>;)Z#retVal,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/support/CircularObservableList.java;,VariableName,retVal,"public boolean addAll(int index, Collection<? extends E> c) {
        boolean retVal = false;
        try {
            beginChange();
            retVal = wrapped.addAll(index, c);
            nextAdd(index, index + c.size());",ret,return
Lorg/pdfsam/splitbybookmarks/BookmarksLevelComboBox;.lambda$1(Ljavafx/beans/Observable;)V#o#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-split-by-bookmarks/src/main/java/org/pdfsam/splitbybookmarks/BookmarksLevelComboBox.java;,VariableName,o," BookmarksLevelComboBox() {
        validationSupport.setValidator(Validators.alwaysFalse());
        setEditable(true);
        getSelectionModel().selectFirst();
        valueProperty().addListener((o, oldVal, newVal) -> validate());
        validationSupport.validationStateProperty().addListener(o -> {
            if (validationSupport.validationStateProperty().get() == ValidationState.INVALID) {
                getEditor().getStyleClass().addAll(Style.INVALID.css());",o,observable
Lorg/pdfsam/ui/selection/multiple/SelectionTable;.lambda$30(Lorg/pdfsam/ui/selection/multiple/SelectionTableRowData;)V#d#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/selection/multiple/SelectionTable.java;,VariableName,d,"    public void onClear(final ClearModuleEvent event) {
        getItems().forEach(d -> d.descriptor().releaseAll());
        getSelectionModel().clearSelection();
        getItems().clear();
    }",d,data
Lorg/pdfsam/TestUtils;.testEqualsAndHashCodes<T:Ljava/lang/Object;>(TT;TT;TT;TT;)V#eq2#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/test/java/org/pdfsam/TestUtils.java;,ParameterName,eq2,"* @param eq2
     *            equal instance
     * @param eq3
     *            equal instance
     * @param diff
     *            not equal instance
     */
    public static <T> void testEqualsAndHashCodes(T eq1, T eq2, T eq3, T diff) {
        // not instance of
        assertFalse(eq1.equals(NOT_INSTANCE_OF));",eq,equal
Lorg/pdfsam/context/UserContext;.isSavePwdInWorkspaceFile()Z,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/dashboard/preference/PreferenceConfig.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/main/java/org/pdfsam/context/UserContext.java;,MethodName,isSavePwdInWorkspaceFile,"public PreferenceCheckBox savePwdInWorkspace(UserContext userContext) {
        PreferenceCheckBox savePwdInWorkspace = new PreferenceCheckBox(BooleanUserPreference.SAVE_PWD_IN_WORKSPACE,
                DefaultI18nContext.getInstance().i18n(""Store passwords when saving a workspace file""),
                userContext.isSavePwdInWorkspaceFile(), userContext);
        savePwdInWorkspace.setId(""savePwdInWorkspace"");
        savePwdInWorkspace.setGraphic(helpIcon(DefaultI18nContext.getInstance().i18n(
                ""If an encrypted PDF document has been opened with a password, save the password in the workspace file"")));
        savePwdInWorkspace.getStyleClass().addAll(Style.WITH_HELP.css());",pwd,password
Lorg/pdfsam/ui/UIServiceConfig;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/main/java/org/pdfsam/Services.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/main/java/org/pdfsam/ui/UIServiceConfig.java;,ClassName,UIServiceConfig,"public class UIServiceConfig {

    @Provides
    RecentWorkspacesService recentWorkspaces() {
        return new PreferencesRecentWorkspacesService();
    }",config,configuration
Lorg/pdfsam/ui/banner/AppContextMenu;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/ui/banner/MenuButtonTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/banner/AppContextMenu.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/banner/MenuButton.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/ui/banner/MenuConfig.java;,ClassName,AppContextMenu,"/**
 * Context menu showing app functionalities. This is supposed to be activated by the menu button
 * 
 * @author Andrea Vacondio
 *
 */
class AppContextMenu extends ContextMenu {
    @Inject
    AppContextMenu(WorkspaceMenu workspace, ModulesMenu modulesMenu) {
        MenuItem exit = new MenuItem(DefaultI18nContext.getInstance().i18n(""E_xit""));
        exit.setOnAction(e -> Platform.exit());",app,application
Lorg/pdfsam/ui/io/PdfVersionConstrainedCheckBoxTest;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/io/PdfVersionConstrainedCheckBoxTest.java;,ClassName,PdfVersionConstrainedCheckBoxTest,"@Category(TestFX.class)
public class PdfVersionConstrainedCheckBoxTest extends GuiTest {

    private static final String MODULE = ""MODULE"";
    @Rule
    public ClearEventStudioRule clearStudio = new ClearEventStudioRule(MODULE);",pdf,portable document format
Lorg/pdfsam/ui/io/PdfVersionConstrainedCheckBoxTest$BasePdfVersionEventListener<Lorg/pdfsam/ui/io/RemovePdfVersionConstraintEvent;>;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/io/PdfVersionConstrainedCheckBoxTest.java;,ClassName,BasePdfVersionEventListener<RemovePdfVersionConstraintEvent>,"    private static class BasePdfVersionEventListener<T extends BasePdfVersionEvent> implements Listener<T> {
        private boolean hit = false;

        @Override
        public void onEvent(T event) {",pdf,portable document format
Lorg/pdfsam/ui/io/FileChoosers;.DIR_INSTANCE)Lorg/pdfsam/ui/io/RememberingLatestDirectoryChooserWrapper;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/io/FileChoosers.java;,FieldName,DIR_INSTANCE,"public final class FileChoosers {
    private static final RememberingLatestFileChooserWrapper FILE_INSTANCE = new RememberingLatestFileChooserWrapper();
    private static final RememberingLatestDirectoryChooserWrapper DIR_INSTANCE = new RememberingLatestDirectoryChooserWrapper();

    private FileChoosers() {",dir,directory
Lorg/pdfsam/ui/help/HelpUtils;.lambda$0(Ljavafx/scene/text/Text;Lorg/pdfsam/ui/help/HelpPopup;Ljavafx/scene/input/MouseEvent;)V#0#p,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/help/HelpUtils.java;,VariableName,p,"    private static Text helpIcon(HelpPopup popup) {
        Text icon = GlyphsDude.createIcon(MaterialDesignIcon.HELP_CIRCLE, ""1.1em"");
        icon.setOnMouseEntered(e -> {
            Point2D p = icon.localToScreen(icon.getLayoutBounds().getMaxX(), icon.getLayoutBounds().getMaxY());
            popup.show(icon, p.getX(), p.getY());
        });
        icon.setOnMouseExited(e -> popup.hide());",p,point
Lcom/fasterxml/jackson/jr/ob/JSON;.std)Lcom/fasterxml/jackson/jr/ob/JSON;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/main/java/org/pdfsam/ui/DefaultStageService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/main/java/org/pdfsam/premium/DefaultPremiumModulesService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/main/java/org/pdfsam/update/DefaultUpdateService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/test/java/org/pdfsam/ui/DefaultStageServiceTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/main/java/org/pdfsam/module/PreferencesUsageDataStore.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/main/java/org/pdfsam/news/DefaultNewsService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/main/java/org/pdfsam/ui/JsonWorkspaceService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/test/java/org/pdfsam/module/PreferencesUsageDataStoreTest.java;,VariableName,std,"    public void save(StageStatus status) {
        Preferences node = Preferences.userRoot().node(STAGE_PATH);
        try {
            node.put(STAGE_STATUS_KEY, JSON.std.asString(status));
            LOG.trace(""Stage status saved {}"", status);
        } catch (IOException e) {
            LOG.error(""Unable to increment modules usage statistics"", e);",std,standard
Lorg/pdfsam/context/DefaultUserContext;.prefs)Ljava/util/prefs/Preferences;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/main/java/org/pdfsam/context/DefaultUserContext.java;,FieldName,prefs,"    static final String PLAY_SOUNDS_PROP = ""org.pdfsam.default.play.sounds"";
    static final String FETCH_PREMIUM_MODULES_PROP = ""org.pdfsam.default.fetch.premium.modules"";
    static final String LOCALE_PROP = ""org.pdfsam.default.locale"";

    private Preferences prefs;

    public DefaultUserContext() {
        initNode();
    }",prefs,preferences
Lorg/pdfsam/configuration/StylesConfig;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/ui/dialog/OpenWithDialogControllerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/PdfsamConfig.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/ui/dialog/LenientExecutionConfirmationDialogTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/dialog/ConfirmationDialog.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/dialog/CreateOutputDirectoryConfirmationDialog.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/ui/dialog/CreateOutputDirectoryConfirmationDialogTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/ui/dialog/LenientTaskExecutionDialogControllerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/configuration/StylesConfig.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/dialog/OpenWithDialog.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/ui/info/InfoStageTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/info/InfoStage.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/PdfsamApp.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/dialog/OverwriteConfirmationDialog.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/ui/dialog/OpenWithDialogTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/dialog/LenientExecutionConfirmationDialog.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/ui/dialog/OverwriteDialogControllerUITest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/log/LogStage.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/ui/dialog/OverwriteConfirmationDialogTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/ui/dialog/OverwriteDialogControllerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/configuration/StylesConfigTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/ui/dialog/CreateOutputDirectoryDialogControllerTest.java;,ClassName,StylesConfig,"protected Parent getRootNode() {
        StylesConfig styles = mock(StylesConfig.class);
        List<Module> modulesMap = new ArrayList<>();
        modulesMap.add(module1);",config,configuration
Lorg/pdfsam/ui/io/PdfVersionFilter;.()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/io/PdfVersionFilter.java;,MethodName,PdfVersionFilter,"    private SortedSet<PdfVersion> filters = new TreeSet<>(Comparator.comparingDouble(v -> v.getVersion()));
    private ReadOnlyObjectWrapper<PdfVersion> required = new ReadOnlyObjectWrapper<>();

    PdfVersionFilter() {
        addFilter(PdfVersion.VERSION_1_0);
    }",pdf,portable document format
Lorg/pdfsam/ui/dialog/OverwriteDialogControllerUITest;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/ui/dialog/OverwriteDialogControllerUITest.java;,ClassName,OverwriteDialogControllerUITest,"public class OverwriteDialogControllerUITest extends GuiTest {
    @Rule
    public ClearEventStudioRule clearEventStudio = new ClearEventStudioRule();
    @Rule
    public TemporaryFolder folder = new TemporaryFolder();",ui,user interface
Ljavax/xml/xpath/XPathFactory;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/test/java/org/pdfsam/support/XmlUtilsTest.java;,ClassName,XPathFactory,"    public void nullSafeGetStringAttribute() throws XPathExpressionException {
        Node node = (Node) XPathFactory.newInstance().newXPath().evaluate(""/test"", doc, XPathConstants.NODE);
        assertEquals(""stringValue"", XmlUtils.nullSafeGetStringAttribute(node, ""stringAttr""));
        assertNull(XmlUtils.nullSafeGetStringAttribute(node, ""chuckNorris""));",x,extensible
Lorg/pdfsam/ui/io/AddPdfVersionConstraintEventTest;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/io/AddPdfVersionConstraintEventTest.java;,ClassName,AddPdfVersionConstraintEventTest,"public class AddPdfVersionConstraintEventTest {

    @Test(expected = IllegalArgumentException.class)
    public void nullArg() {
        new AddPdfVersionConstraintEvent(null);
    }",pdf,portable document format
Lorg/pdfsam/ui/commons/ValidableTextFieldTest;.invalidCssNotApplied()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/commons/ValidableTextFieldTest.java;,MethodName,invalidCssNotApplied,"    public void invalidCssNotApplied() {
        victim.setEnableInvalidStyle(false);
        click(victim);
        // focus lost
        push(KeyCode.TAB);",css,cascading style sheets
Lorg/pdfsam/update/DefaultUpdateService;.jsonSource)Ljava/lang/Object;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/main/java/org/pdfsam/update/DefaultUpdateService.java;,FieldName,jsonSource,"class DefaultUpdateService implements UpdateService {
    private static final Logger LOG = LoggerFactory.getLogger(DefaultUpdateService.class);
    private static final String CURRENT_VERSION_KEY = ""currentVersion"";

    private Object jsonSource;

    @Inject
    DefaultUpdateService(@Named(""updatesUrl"") Object jsonSource) {
        this.jsonSource = jsonSource;",json,javascript object notation
Lorg/pdfsam/task/PdfRotationInput;&Lorg/sejda/model/input/PdfSource<!Lorg/sejda/model/input/PdfSource;{0}*2292;>;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/main/java/org/pdfsam/task/PdfRotationInput.java;,ClassName,PdfSource<>,"    @Valid
    @NotNull
    public final PdfSource<?> source;
    @Valid
    @NotNull
    public final Rotation rotation;
    @Valid
    @NotEmpty
    private final Set<PagesSelection> pageSelection = new NullSafeSet<>();",pdf,portable document format
Lorg/pdfsam/support/RequireUtilsTest;.blankArg()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/test/java/org/pdfsam/support/RequireUtilsTest.java;,MethodName,blankArg,"    public void blankArg() {
        exception.expect(IllegalArgumentException.class);
        exception.expectMessage(""the message"");
        requireNotBlank("" "", ""the message"");",arg,argument
Lorg/pdfsam/task/TaskExecutionServiceConfig;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/main/java/org/pdfsam/Services.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/main/java/org/pdfsam/task/TaskExecutionServiceConfig.java;,ClassName,TaskExecutionServiceConfig,"    /**
     * Adds configurations to the injector to create all the instances necessary to have the services up and running
     */
    public static void initServices() {
        Injector.addConfig(new UpdateServiceConfig(), new UIServiceConfig(), new TaskExecutionServiceConfig(),
                new PdfServiceConfig(), new NewsServiceConfig(), new ModuleServiceConfig(), new PremiumServiceConfig());
    }",config,configuration
Lorg/pdfsam/PdfsamApp;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-community/src/main/java/org/pdfsam/community/App.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/PdfsamApp.java;,ClassName,PdfsamApp,"public class PdfsamApp extends Application {
    private static final Logger LOG = LoggerFactory.getLogger(PdfsamApp.class);

    private static StopWatch STOPWATCH = new StopWatch();
    private Stage primaryStage;",app,application
Lorg/pdfsam/module/StatefulPreferencesUsageService;.lambda$2(Lorg/pdfsam/module/ModuleUsage;)Lorg/pdfsam/module/Module;#u#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/main/java/org/pdfsam/module/StatefulPreferencesUsageService.java;,VariableName,u,"    public List<Module> getMostUsed() {
        List<ModuleUsage> used = dataStore.getUsages();
        used.sort((a, b) -> Long.compare(b.getTotalUsed(), a.getTotalUsed()));
        return used.stream().map(u -> modulesMap.get(u.getModuleId())).filter(m -> m != null).collect(toList());
    }",u,usage
Lorg/pdfsam/ui/selection/multiple/SelectionTableTest;.populate()Lorg/pdfsam/pdf/PdfDocumentDescriptor;|Ljava/lang/Exception;#ret,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/selection/multiple/SelectionTableTest.java;,VariableName,ret,"        File file3 = folder.newFile(""temp3.pdf"");
        File file4 = folder.newFile(""temp4.pdf"");
        PdfLoadRequestEvent loadEvent = new PdfLoadRequestEvent(MODULE);
        PdfDocumentDescriptor ret = PdfDocumentDescriptor.newDescriptorNoPassword(file);
        loadEvent.add(ret);
        loadEvent.add(PdfDocumentDescriptor.newDescriptorNoPassword(file2));
        loadEvent.add(PdfDocumentDescriptor.newDescriptorNoPassword(file3));",ret,request
Lorg/pdfsam/rotate/RotateSelectionPane;.lambda$0(Lorg/pdfsam/ui/selection/multiple/SelectionTableRowData;)Z#s#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-rotate/src/main/java/org/pdfsam/rotate/RotateSelectionPane.java;,VariableName,s,"    public void apply(RotateParametersBuilder builder, Consumer<String> onError) {
        try {
            table().getItems().stream().filter(s -> !Objects.equals(""0"", trim(s.pageSelection.get())))
                    .forEach(i -> builder.addInput(i.descriptor().toPdfFileSource(), i.toPageRangeSet()));
            if (!builder.hasInput()) {
                onError.accept(DefaultI18nContext.getInstance().i18n(""No PDF document has been selected""));
            }",s,selection
Lorg/pdfsam/pdf/PdfDocumentDescriptorTest;.toPdfSource()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/test/java/org/pdfsam/pdf/PdfDocumentDescriptorTest.java;,MethodName,toPdfSource,"    public void toPdfSource() {
        PdfFileSource source = victim.toPdfFileSource();
        assertEquals(file, source.getSource());
        assertEquals(""pwd"", source.getPassword());
    }",pdf,portable document format
Lorg/pdfsam/ui/dashboard/modules/ModulesDashboardTile;.lambda$1(Ljava/lang/String;)V#url#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/dashboard/modules/ModulesDashboardTile.java;,VariableName,url,"        super(module.descriptor().getName(), module.descriptor().getDescription(), module.graphic());
        this.id = module.id();
        setOnAction(e -> eventStudio().broadcast(activeteModule(id)));

        module.descriptor().getSupportURL().ifPresent(url -> {
            UrlButton helpButton = UrlButton.urlButton(null, url, null, ""pdfsam-toolbar-button"");
            helpButton.setGraphic(GlyphsDude.createIcon(MaterialDesignIcon.HELP_CIRCLE, ""1.4em""));
            toolButtons.getChildren().add(helpButton);",url,uniform resource locator
Lorg/pdfsam/splitbybookmarks/BookmarksLevelComboBoxTest;.invalidNoMaxBookmarksSet()V|Ljava/lang/Exception;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-split-by-bookmarks/src/test/java/org/pdfsam/splitbybookmarks/BookmarksLevelComboBoxTest.java;,MethodName,invalidNoMaxBookmarksSet,"    public void invalidNoMaxBookmarksSet() throws Exception {
        BookmarksLevelComboBox victim = find(""#victim"");
        assertEquals(ValidationState.NOT_VALIDATED, victim.getValidationState());
        click(""#victim"").type(""3"").push(KeyCode.ENTER);",max,maximum
Lorg/pdfsam/ui/selection/multiple/SelectionTable;.lambda$1(Ljava/lang/String;Ljavafx/collections/ListChangeListener$Change;)V#c#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/selection/multiple/SelectionTable.java;,VariableName,c,"    private void dragConsume(DragEvent e, Consumer<DragEvent> c) {
        if (e.getDragboard().hasFiles()) {
            c.accept(e);
        }
        e.consume();",c,change
Lorg/pdfsam/ui/dialog/OpenWithDialog;.lambda$1(Lorg/pdfsam/ui/InputPdfArgumentsLoadRequest;Lorg/pdfsam/module/Module;)V#m#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/dialog/OpenWithDialog.java;,VariableName,m,"        initStyle(StageStyle.UTILITY);
        setResizable(false);
        setTitle(DefaultI18nContext.getInstance().i18n(""Open with""));

        this.modules = modules.stream().sorted(comparing(m -> m.descriptor().getName())).collect(toList());

        messageTitle.getStyleClass().add(""-pdfsam-open-with-dialog-title"");

        BorderPane containerPane = new BorderPane();",m,module
Lorg/pdfsam/ui/selection/multiple/move/MoveType$2295;.lambda$0(Ljavafx/collections/ObservableList;Lorg/pdfsam/ui/selection/multiple/move/MultipleSelectionAndFocus;Ljava/lang/Integer;)V#i#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/selection/multiple/move/MoveType.java;,VariableName,i,"                MultipleSelectionAndFocus newSelection = new MultipleSelectionAndFocus(focused);
                Arrays.parallelSort(selected);
                if (isNotFirst(selected)) {
                    Arrays.stream(selected).forEach(i -> {
                        Collections.swap(items, i, i - 1);
                        newSelection.moveUp(i);
                    });",i,integer
Lorg/pdfsam/ui/dashboard/preference/PreferenceCheckBox;.lambda$0(Lorg/pdfsam/context/UserContext;Ljavafx/beans/value/ObservableValue;Ljava/lang/Boolean;Ljava/lang/Boolean;)V#ov#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/dashboard/preference/PreferenceCheckBox.java;,VariableName,ov,"        requireNotNull(userContext, ""UserContext cannot be null"");
        setSelected(selected);
        this.preference = preference;
        selectedProperty().addListener((ov, oldVal, newVal) -> {
            userContext.setBooleanPreference(PreferenceCheckBox.this.preference, newVal);
            LOG.trace(""Preference {} set to {}"", PreferenceCheckBox.this.preference, newVal);
        });",ov,observable value
Lorg/pdfsam/task/BulkRotateTaskTest;.lambda$5(Lorg/sejda/sambox/pdmodel/PDPage;)V#p#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/test/java/org/pdfsam/task/BulkRotateTaskTest.java;,VariableName,p,"        testContext.directoryOutputTo(parameters);
        execute(parameters);
        testContext.assertTaskCompleted();
        testContext.assertCreator().assertPages(4)
                .forEachPdfOutput(d -> d.getPages().forEach(p -> assertEquals(180, p.getRotation())));
    }",p,page
Lorg/pdfsam/PdfsamApp;.getOpenCmd(Ljava/lang/String;)Ljava/lang/String;|Ljava/io/IOException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/PdfsamApp.java;,MethodName,getOpenCmd,"    public static String getOpenCmd(String url) throws IOException {
        String os = System.getProperty(""os.name"").toLowerCase();
        if (os.indexOf(""mac"") >= 0) {
            return String.format(""%s %s"", ""open"", url);",cmd,command
Lorg/pdfsam/ui/io/BaseRememberingLatestChooser;.doSetInitialDir(Lorg/pdfsam/ui/io/SetLatestDirectoryEvent;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/io/BaseRememberingLatestChooser.java;,MethodName,doSetInitialDir,"    public void doSetInitialDir(SetLatestDirectoryEvent event) {
        setInitialDirectory(event.getLatest());
    }",dir,directory
Lorg/pdfsam/ui/io/BasePdfVersionEvent;.getPdfVersion()Lorg/sejda/model/pdf/PdfVersion;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/io/PdfVersionCombo.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/io/RemovePdfVersionConstraintEventTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/io/BasePdfVersionEventTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/io/PdfVersionConstrainedCheckBoxTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/io/BasePdfVersionEvent.java;,MethodName,getPdfVersion,"    public void onAddPdfVersionConstraint(final AddPdfVersionConstraintEvent event) {
        versionsFilter.addFilter(event.getPdfVersion());
    }",pdf,portable document format
Lorg/pdfsam/ui/dashboard/modules/ModulesDashboardTileTest2;.supportVideoClick()V#openUrlListener,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/ui/dashboard/modules/ModulesDashboardTileTest2.java;,VariableName,openUrlListener,"public void supportVideoClick() {
        // TODO understand why if put in the same class it fails
        Listener<OpenUrlRequest> openUrlListener = mock(Listener.class);
        eventStudio().add(OpenUrlRequest.class, openUrlListener);
        ArgumentCaptor<OpenUrlRequest> openUrlCaptor = ArgumentCaptor.forClass(OpenUrlRequest.class);
        click(FontAwesomeIcon.YOUTUBE_PLAY.toString());",url,uniform resource locator
Lorg/pdfsam/ui/dashboard/QuickbarDashboardButtonsPaneTest;.lambda$5(Ljavafx/scene/Node;)Lorg/pdfsam/ui/dashboard/DashboardButton;#n#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/ui/dashboard/QuickbarDashboardButtonsPaneTest.java;,VariableName,n,"    public void displayText() {
        victim.getChildren().stream().filter(n -> n instanceof DashboardButton).map(n -> (DashboardButton) n)
                .noneMatch(DashboardButton::isDisplayText);
        victim.setDisplayText(true);",n,node
Ljavafx/geometry/Point2D;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/selection/multiple/SelectionTable.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/selection/single/SingleSelectionPane.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/commons/ValidableTextField.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/help/HelpUtils.java;,ClassName,Point2D,"        if (scene != null) {
            Window owner = scene.getWindow();
            if (owner != null && owner.isShowing()) {
                Point2D nodeCoord = request.getRequestingNode().localToScene(request.getRequestingNode().getWidth() / 2,
                        request.getRequestingNode().getHeight() / 1.5);
                double anchorX = Math.round(owner.getX() + scene.getX() + nodeCoord.getX() + 2);
                double anchorY = Math.round(owner.getY() + scene.getY() + nodeCoord.getY() + 2);",d,display
Lorg/pdfsam/ui/dashboard/preference/PreferenceWorkspacePane;.(Lorg/pdfsam/ui/dashboard/preference/PreferenceBrowsableDirectoryField;Lorg/pdfsam/ui/dashboard/preference/PreferenceBrowsableFileField;Lorg/pdfsam/ui/dashboard/preference/PreferenceCheckBox;Lorg/pdfsam/ui/dashboard/preference/PreferenceCheckBox;)V#workigDirPane,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/dashboard/preference/PreferenceWorkspacePane.java;,VariableName,workigDirPane,"        workingDirectory.getTextField()
                .setPromptText(i18n.i18n(""Select a directory where documents will be saved and loaded by default""));
        workingDirectory.setBrowseWindowTitle(i18n.i18n(""Select a directory""));
        HBox workigDirPane = new HBox(workingDirectory,
                helpIcon(i18n.i18n(""Select a directory where documents will be saved and loaded by default"")));
        HBox.setHgrow(workingDirectory, Priority.ALWAYS);
        workigDirPane.getStyleClass().add(""with-help-hcontainer"");",dir,directory
Lorg/pdfsam/sound/PlaySoundController;.playSound(Ljava/lang/String;)V#soundURI#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/sound/PlaySoundController.java;,ParameterName,soundURI,"    public PlaySoundController(UserContext userContext, @Named(""okSound"") String okSoundURI,
            @Named(""errorSound"") String errorSoundURI) {
        requireNotBlank(okSoundURI, """");
        requireNotBlank(errorSoundURI, """");
        this.userContext = userContext;",uri,uniform resource identifier
Lorg/pdfsam/support/validation/PositiveIntRangeStringValidator;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/main/java/org/pdfsam/support/validation/PositiveIntRangeStringValidator.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/main/java/org/pdfsam/support/validation/Validators.java;,ClassName,PositiveIntRangeStringValidator,"/**
 * Validates that the input string is a valid positive integer in the given range
 * 
 * @author Andrea Vacondio
 * 
 */
class PositiveIntRangeStringValidator extends PositiveIntegerStringValidator {

    private int upper = Integer.MAX_VALUE;
    private int lower = Integer.MIN_VALUE;",int,integer
Lorg/pdfsam/ui/commons/ShowPdfDescriptorRequest;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/ui/info/SummaryTabTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/commons/ShowPdfDescriptorRequestTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/selection/multiple/SelectionTable.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/info/InfoStageController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/selection/single/SingleSelectionPane.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/commons/ShowPdfDescriptorRequest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/info/KeywordsTab.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/selection/multiple/SelectionTableTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/selection/single/SingleSelectionPaneTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/ui/info/InfoStageTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/info/SummaryTab.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/ui/info/KeywordsTabTest.java;,ClassName,ShowPdfDescriptorRequest,"        List<ChangeListener<? super String>> listeners = initListener(properties);
        PdfDocumentDescriptor descriptor = PdfDocumentDescriptor.newDescriptorNoPassword(file);
        fillDescriptor(descriptor);
        FXTestUtils.invokeAndWait(() -> victim.requestShow(new ShowPdfDescriptorRequest(descriptor)), 1);
        assertInfoIsDisplayed(listeners, descriptor);
    }",pdf,portable document format
Lorg/sejda/model/input/PdfMergeInput;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-merge/src/test/java/org/pdfsam/merge/MergeParametersBuilderTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-merge/src/main/java/org/pdfsam/merge/MergeParametersBuilder.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-merge/src/main/java/org/pdfsam/merge/MergeSelectionPane.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-merge/src/test/java/org/pdfsam/merge/MergeSelectionPaneTest.java;,ClassName,PdfMergeInput,"        victim.normalize(true);
        File file = folder.newFile(""my.pdf"");
        PdfFileSource source = PdfFileSource.newInstanceNoPassword(file);
        PdfMergeInput input = new PdfMergeInput(source);
        victim.addInput(input);
        victim.version(PdfVersion.VERSION_1_7);
        MergeParameters params = victim.build();",pdf,portable document format
Ljava/lang/Runtime;.maxMemory()J,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/dashboard/about/AboutDashboardPane.java;,MethodName,maxMemory,"        Label runtime = new Label(String.format(""%s %s"", System.getProperty(""java.runtime.name""),
                System.getProperty(""java.runtime.version"")));
        Label memory = new Label(DefaultI18nContext.getInstance().i18n(""Max memory {0}"",
                FileUtils.byteCountToDisplaySize(Runtime.getRuntime().maxMemory())));
        Button copyButton = new Button(DefaultI18nContext.getInstance().i18n(""Copy to clipboard""));
        GlyphsDude.setIcon(copyButton, FontAwesomeIcon.COPY);
        copyButton.getStyleClass().addAll(Style.BUTTON.css());",max,maximum
Lorg/pdfsam/ui/banner/NewsButton;.anim)Ljavafx/animation/Timeline;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/banner/NewsButton.java;,FieldName,anim,"class NewsButton extends BannerButton {

    static final String UP_TO_DATE_CSS_CLASS = ""news-not-up-to-date"";
    private Timeline anim;
    private Object action = ShowNewsPanelRequest.INSTANCE;

    NewsButton() {
        super(MaterialDesignIcon.NEWSPAPER);",anim,animations
Lorg/pdfsam/ui/info/InfoPane;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/info/InfoStage.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/info/InfoPane.java;,ClassName,InfoPane,"/**
 * Panel showing a pdf document information like author, creator etc.
 * 
 * @author Andrea Vacondio
 *
 */
class InfoPane extends TabPane {

    @Inject
    InfoPane(SummaryTab summary, KeywordsTab keywords) {
        setSide(Side.LEFT);
        getTabs().addAll(summary, keywords);",info,information
Lorg/pdfsam/ui/dialog/OpenWithDialogTest;.singleArg()V|Ljava/io/IOException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/ui/dialog/OpenWithDialogTest.java;,MethodName,singleArg,"    public void singleArg() throws IOException {
        Listener<ClearModuleEvent> clearListener = mock(Listener.class);
        eventStudio().add(ClearModuleEvent.class, clearListener, module.id());
        Listener<SetActiveModuleRequest> activeModuleListener = mock(Listener.class);",arg,argument
Lorg/pdfsam/ui/selection/multiple/LoadingColumnTest;.lambda$0(Lorg/pdfsam/pdf/PdfDescriptorLoadingStatus;)V#s#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/selection/multiple/LoadingColumnTest.java;,VariableName,s,"public void getTextValue() {
        Arrays.stream(PdfDescriptorLoadingStatus.values()).forEach(s -> {
            if (s.getIcon() != null) {
                assertEquals(s.getIcon().toString(), victim.getTextValue(s));",s,status
Lorg/pdfsam/ui/io/PdfVersionCombo;.lambda$0(Lorg/sejda/model/pdf/PdfVersion;)Z#v#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/io/PdfVersionCombo.java;,VariableName,v,"    public PdfVersionCombo(String ownerModule) {
        this.ownerModule = ownerModule;

        Arrays.stream(PdfVersion.values()).filter(v -> v.getVersion() > PdfVersion.VERSION_1_2.getVersion())
                .map(DefaultPdfVersionComboItem::new).forEach(unfilteredItems::add);

        versionsFilter.requiredProperty().addListener((observable, oldVal, newVal) -> {
            setFilteredItems(newVal);",v,version
Lorg/pdfsam/pdf/PdfDocumentDescriptorTest;.victimNoPwd)Lorg/pdfsam/pdf/PdfDocumentDescriptor;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/test/java/org/pdfsam/pdf/PdfDocumentDescriptorTest.java;,FieldName,victimNoPwd,"public class PdfDocumentDescriptorTest {

    private PdfDocumentDescriptor victim;
    private PdfDocumentDescriptor victimNoPwd;
    private File file;

    @Before
    public void setUp() {",pwd,password
Lorg/pdfsam/ui/banner/NewsButton;.onShowNewsPanel(Lorg/pdfsam/news/ShowNewsPanelRequest;)V#req#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/banner/NewsButton.java;,ParameterName,req,"    @EventListener
    public void onShowNewsPanel(ShowNewsPanelRequest req) {
        setUpToDate(true);
    }",req,request
Lorg/pdfsam/ui/support/CircularObservableList;.addAll(ILjava/util/Collection<+TE;>;)Z#retVal,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/support/CircularObservableList.java;,VariableName,retVal,"public boolean addAll(int index, Collection<? extends E> c) {
        boolean retVal = false;
        try {
            beginChange();
            retVal = wrapped.addAll(index, c);",val,value
Lorg/pdfsam/splitbysize/SplitOptionsPaneTest;.restoreState()V|Ljava/lang/Exception;#mega,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-split-by-size/src/test/java/org/pdfsam/splitbysize/SplitOptionsPaneTest.java;,VariableName,mega,"    public void restoreState() throws Exception {
        SplitOptionsPane victim = find("".pdfsam-container"");
        SizeUnitRadio kilo = find(""#unit"" + SizeUnit.KILOBYTE.symbol());
        SizeUnitRadio mega = find(""#unit"" + SizeUnit.MEGABYTE.symbol());
        Map<String, String> data = new HashMap<>();
        data.put(""size"", ""100"");
        data.put(SizeUnit.MEGABYTE.toString(), Boolean.TRUE.toString());",mega,megabyte
Lorg/pdfsam/ui/selection/multiple/SelectionTable;.lambda$44(Ljavafx/scene/control/TableRow;)Z#r#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/selection/multiple/SelectionTable.java;,VariableName,r,"                    if (db.hasContent(DND_TABLE_SELECTION_MIME_TYPE)) {
                        Optional<SelectionTableRowData> focus = ofNullable(getFocusModel().getFocusedItem());
                        Optional<SelectionTableRowData> toDrop = of(row).filter(r -> !r.isEmpty())
                                .map(TableRow::getIndex).map(getItems()::get);",r,row
Lorg/pdfsam/PdfsamApp;.openUrl(Lorg/pdfsam/ui/commons/OpenUrlRequest;)V#0#1#npe,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/PdfsamApp.java;,VariableName,npe,"        if (nonNull(services)) {
            try {
                services.showDocument(event.getUrl());
            } catch (NullPointerException npe) {
                // service delegate can be null but there's no way to check it first so we have to catch the npe
                LOG.info(""Unable to open url using HostServices, trying fallback"");
                try {",npe,null pointer exception
Lorg/pdfsam/module/ModuleDescriptorBuilder;.supportURL(Ljava/lang/String;)Lorg/pdfsam/module/ModuleDescriptorBuilder;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/test/java/org/pdfsam/test/DefaultPriorityTestModule.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-rotate/src/main/java/org/pdfsam/rotate/RotateModule.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-simple-split/src/main/java/org/pdfsam/split/SplitModule.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/test/java/org/pdfsam/module/ModuleDescriptorBuilderTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-alternate-mix/src/main/java/org/pdfsam/alternatemix/AlternateMixModule.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-extract/src/main/java/org/pdfsam/extract/ExtractModule.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-merge/src/main/java/org/pdfsam/merge/MergeModule.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/main/java/org/pdfsam/module/ModuleDescriptorBuilder.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-split-by-bookmarks/src/main/java/org/pdfsam/splitbybookmarks/SplitByBookmarksModule.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-split-by-size/src/main/java/org/pdfsam/splitbysize/SplitBySizeModule.java;,MethodName,supportURL,"    private ModuleDescriptor descriptor = builder().category(ModuleCategory.MERGE).description(""Test module"")
            .inputTypes(ModuleInputOutputType.SINGLE_PDF).name(""TestModule"").priority(ModulePriority.DEFAULT)
            .supportURL(""http://www.chucknorrisfacts.com/"").build();",url,uniform resource locator
Lorg/pdfsam/ui/selection/single/SingleSelectionPaneTest;.tmpFolder)Lorg/junit/rules/TemporaryFolder;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/selection/single/SingleSelectionPaneTest.java;,FieldName,tmpFolder,"    private static final String MODULE = ""MODULE"";
    @Rule
    public ClearEventStudioRule clearStudio = new ClearEventStudioRule(MODULE);
    @Rule
    public TemporaryFolder tmpFolder = new TemporaryFolder();

    @BeforeClass
    public static void setUp() {
        eventStudio().broadcast(new SetLocaleEvent(Locale.UK.toLanguageTag()));
    }",tmp,temporary
Lorg/pdfsam/support/LocaleKeyValueItemTest;.equalsAndHashCodes()V#diff,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/test/java/org/pdfsam/support/LocaleKeyValueItemTest.java;,VariableName,diff,"        LocaleKeyValueItem eq1 = new LocaleKeyValueItem(Locale.CANADA);
        LocaleKeyValueItem eq2 = new LocaleKeyValueItem(Locale.CANADA);
        LocaleKeyValueItem eq3 = new LocaleKeyValueItem(Locale.CANADA);
        LocaleKeyValueItem diff = new LocaleKeyValueItem(Locale.CHINA);
        TestUtils.testEqualsAndHashCodes(eq1, eq2, eq3, diff);
    }",diff,difference
Lorg/pdfsam/update/UpdateServiceConfig;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/main/java/org/pdfsam/Services.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/main/java/org/pdfsam/update/UpdateServiceConfig.java;,ClassName,UpdateServiceConfig,"public class UpdateServiceConfig {
    @Provides
    UpdateService news(DefaultUpdateService updates) {
        return updates;
    }",config,configuration
Lorg/pdfsam/ui/log/UpToInfoFilter;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/log/UpToInfoFilter.java;,ClassName,UpToInfoFilter,"/**
 * Logback filter to filter out WARN and above level logging events
 * 
 * @author Andrea Vacondio
 *
 */
public class UpToInfoFilter extends AbstractMatcherFilter<LoggingEvent> {

    @Override
    public FilterReply decide(LoggingEvent loggingEvent) {",info,information
Lorg/pdfsam/ui/io/PdfVersionCombo;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/io/PdfVersionCombo.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/io/PdfVersionComboTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/io/PdfDestinationPane.java;,ClassName,PdfVersionCombo,"/**
 * Combo box to let the user select the pdf version of the generated output documents
 * 
 * @author Andrea Vacondio
 * 
 */
class PdfVersionCombo extends ComboBox<PdfVersionComboItem> implements ModuleOwned, ResettableView {

    private String ownerModule = StringUtils.EMPTY;
    private ObservableList<PdfVersionComboItem> unfilteredItems = FXCollections.observableArrayList();
    private PdfVersionFilter versionsFilter = new PdfVersionFilter();",pdf,portable document format
Lorg/pdfsam/ui/info/SummaryTabTest;.lambda$4(Ljava/util/List;Ljavafx/scene/control/Labeled;)V#l#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/ui/info/SummaryTabTest.java;,VariableName,l,"    private List<ChangeListener<? super String>> initListener(Set<Node> properties) {
        List<ChangeListener<? super String>> listeners = new ArrayList<>();
        properties.stream().filter(n -> n instanceof Labeled).map(n -> (Labeled) n).forEach(l -> {
            ChangeListener<? super String> listener = mock(ChangeListener.class);
            listeners.add(listener);
            l.textProperty().addListener(listener);",l,labeled
Lorg/pdfsam/pdf/PdfLoadRequestEvent;.addAll(Ljava/util/Collection<Lorg/pdfsam/pdf/PdfDocumentDescriptor;>;)Z#c#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/main/java/org/pdfsam/pdf/PdfLoadRequestEvent.java;,ParameterName,c,"    public boolean addAll(Collection<PdfDocumentDescriptor> c) {
        return documents.addAll(c);
    }",c,collection
Lorg/pdfsam/support/params/MultiplePdfSourceMultipleOutputParametersBuilder<Lorg/sejda/model/parameter/ExtractPagesParameters;>;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-extract/src/main/java/org/pdfsam/extract/ExtractParametersBuilder.java;,ClassName,MultiplePdfSourceMultipleOutputParametersBuilder<ExtractPagesParameters>,"class ExtractParametersBuilder extends MultiplePdfSourceMultipleOutputParametersBuilder<ExtractPagesParameters> {

    private OptimizationPolicy optimizationPolicy = OptimizationPolicy.AUTO;
    private Set<PageRange> ranges;
    private boolean invertSelection = false;",pdf,portable document format
Lorg/pdfsam/ui/module/RunButtonTest;.cearEventStudio)Lorg/pdfsam/test/ClearEventStudioRule;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/module/RunButtonTest.java;,FieldName,cearEventStudio,"    public InitializeAndApplyJavaFxThreadRule fxThread = new InitializeAndApplyJavaFxThreadRule();
    @Rule
    public ClearEventStudioRule cearEventStudio = new ClearEventStudioRule();
    private RunButton victim;",cear,clear
Lorg/pdfsam/ui/workarea/QuickbarModuleButtonsPane;.lambda$0(Lorg/pdfsam/ui/workarea/ModuleButton;)V#b#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/workarea/QuickbarModuleButtonsPane.java;,VariableName,b,"    QuickbarModuleButtonsPane(QuickbarModuleButtonsProvider provider) {
        provider.buttons().forEach(b -> {
            b.displayTextProperty().bind(displayTextProperty());
            getChildren().add(b);
            this.buttons.add(b);",b,button
Lorg/sejda/model/pdf/PdfVersion;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/main/java/org/pdfsam/pdf/PdfDocumentDescriptor.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/io/PdfVersionComboTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/io/PdfDestinationPane.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/io/PdfDestinationPaneTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-simple-split/src/test/java/org/pdfsam/split/SplitByEveryRadioButtonTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/io/AddPdfVersionConstraintEvent.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-simple-split/src/main/java/org/pdfsam/split/SplitAfterRadioButton.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/io/RemovePdfVersionConstraintEvent.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-split-by-bookmarks/src/test/java/org/pdfsam/splitbybookmarks/SplitByOutlineLevelParametersBuilderTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/test/java/org/pdfsam/pdf/PdfDocumentDescriptorTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-split-by-size/src/test/java/org/pdfsam/splitbysize/SplitBySizeParametersBuilderTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/ui/info/SummaryTabTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-merge/src/test/java/org/pdfsam/merge/MergeParametersBuilderTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/selection/single/SingleSelectionPane.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/io/PdfVersionFilterTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-alternate-mix/src/test/java/org/pdfsam/alternatemix/AlternateMixParametersBuilderTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/io/RemovePdfVersionConstraintEventTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/main/java/org/pdfsam/support/params/AbstractPdfOutputParametersBuilder.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-extract/src/main/java/org/pdfsam/extract/ExtractParametersBuilder.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/test/java/org/pdfsam/pdf/DefaultSAMBoxLoaderTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/io/BasePdfVersionEvent.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-extract/src/test/java/org/pdfsam/extract/ExtractParametersBuilderTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-rotate/src/test/java/org/pdfsam/rotate/RotateParametersBuilderTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/io/PdfVersionFilter.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/test/java/org/pdfsam/task/BulkRotateTaskTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/main/java/org/pdfsam/task/BulkRotateTask.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-rotate/src/main/java/org/pdfsam/rotate/RotateParametersBuilder.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-simple-split/src/main/java/org/pdfsam/split/SplitByEveryRadioButton.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-split-by-bookmarks/src/main/java/org/pdfsam/splitbybookmarks/SplitByOutlineLevelParametersBuilder.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/main/java/org/pdfsam/pdf/DefaultSAMBoxLoader.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/io/ChangedSelectedPdfVersionEvent.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/io/PdfVersionCombo.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-merge/src/main/java/org/pdfsam/merge/MergeParametersBuilder.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-simple-split/src/test/java/org/pdfsam/split/SplitAfterPredefinedSetOfPagesRadioButtonTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/io/PdfVersionConstrainedCheckBox.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/io/BasePdfVersionEventTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-simple-split/src/test/java/org/pdfsam/split/SplitAfterRadioButtonTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/io/PdfVersionConstrainedCheckBoxTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-simple-split/src/main/java/org/pdfsam/split/SplitAfterPredefinedSetOfPagesRadioButton.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-split-by-size/src/main/java/org/pdfsam/splitbysize/SplitBySizeParametersBuilder.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-alternate-mix/src/main/java/org/pdfsam/alternatemix/AlternateMixParametersBuilder.java;,ClassName,PdfVersion,"    public String getVersionString() {
        return ofNullable(version).map(PdfVersion::getVersionString).orElse("""");
    }",pdf,portable document format
Ljava/time/format/DateTimeFormatter;.BASIC_ISO_DATE)Ljava/time/format/DateTimeFormatter;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/main/java/org/pdfsam/news/NewsData.java;,VariableName,BASIC_ISO_DATE,"    public void setDate(String dateString) {
        this.date = LocalDate.parse(dateString, DateTimeFormatter.BASIC_ISO_DATE);
    }",iso,International Organization for Standardization
Lorg/pdfsam/pdf/SAMBoxPdfLoadServiceTest;.initJavaFxThread)Lorg/pdfsam/test/InitializeJavaFxThreadRule;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/test/java/org/pdfsam/pdf/SAMBoxPdfLoadServiceTest.java;,FieldName,initJavaFxThread,"    private SAMBoxPdfLoadService victim = new SAMBoxPdfLoadService(Arrays.asList(new PdfLoader[] {
            new DefaultSAMBoxLoader(), new BookmarksLevelSAMBoxLoader() }));
    @Rule
    public TemporaryFolder folder = new TemporaryFolder();
    @Rule
    public InitializeJavaFxThreadRule initJavaFxThread = new InitializeJavaFxThreadRule();

    @AfterClass
    public static void afterClass() {
        eventStudio().clear();",init,initialize
Lorg/pdfsam/ui/selection/PasswordFieldPopupTest;.pwdSentOnButtonPressed()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/selection/PasswordFieldPopupTest.java;,MethodName,pwdSentOnButtonPressed,"    public void pwdSentOnButtonPressed() {
        click(""press"");
        Listener<PdfLoadRequestEvent> listener = mock(Listener.class);
        eventStudio().add(PdfLoadRequestEvent.class, listener);",pwd,password
Lorg/pdfsam/rotate/RotateOptionsPane;.lambda$2(Lorg/sejda/model/rotation/Rotation;)Lorg/pdfsam/support/KeyStringValueItem;#r#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-rotate/src/main/java/org/pdfsam/rotate/RotateOptionsPane.java;,VariableName,r,"    public void restoreStateFrom(Map<String, String> data) {
        Optional.ofNullable(data.get(""rotation"")).map(Rotation::valueOf).map(r -> keyEmptyValue(r))
                .ifPresent(r -> this.rotation.getSelectionModel().select(r));
        Optional.ofNullable(data.get(""rotationType"")).map(PredefinedSetOfPages::valueOf).map(r -> keyEmptyValue(r))
                .ifPresent(r -> this.rotationType.getSelectionModel().select(r));",r,rotation
Lorg/pdfsam/pdf/PdfDescriptorLoadingStatus;.canMoveTo(Lorg/pdfsam/pdf/PdfDescriptorLoadingStatus;)Z#dest#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/main/java/org/pdfsam/pdf/PdfDescriptorLoadingStatus.java;,ParameterName,dest,"    /**
     * @param dest
     * @return true if the {@link PdfDescriptorLoadingStatus} can move to the given destination status
     */
    public boolean canMoveTo(PdfDescriptorLoadingStatus dest) {
        return validNext.contains(dest);
    }",dest,destination
Lorg/pdfsam/ui/selection/multiple/SelectionTable;.lambda$42(Ljava/io/File;)Z#f#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/selection/multiple/SelectionTable.java;,VariableName,f,"        return (DragEvent e) -> {
            final PdfLoadRequestEvent loadEvent = new PdfLoadRequestEvent(getOwnerModule());
            getFilesFromDragboard(e.getDragboard()).filter(f -> FileType.PDF.matches(f.getName()))
                    .map(PdfDocumentDescriptor::newDescriptorNoPassword).forEach(loadEvent::add);
            if (!loadEvent.getDocuments().isEmpty()) {
                eventStudio().broadcast(loadEvent, getOwnerModule());",f,file
Lorg/pdfsam/ui/dashboard/preference/PreferenceIntTextField;.lambda$0(Lorg/pdfsam/context/UserContext;Lorg/pdfsam/context/IntUserPreference;Ljavafx/beans/value/ObservableValue;Lorg/pdfsam/ui/support/FXValidationSupport$ValidationState;Lorg/pdfsam/ui/support/FXValidationSupport$ValidationState;)V#oldVal#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/dashboard/preference/PreferenceIntTextField.java;,VariableName,oldVal,"        setValidator(validator);
        setEnableInvalidStyle(true);
        setOnEnterValidation(true);
        validProperty().addListener((o, oldVal, newVal) -> {
            if (newVal == ValidationState.VALID) {
                userContext.setIntegerPreference(preference, Integer.parseInt(getText()));
                LOG.trace(""Preference {} set to {}"", preference, getText());",val,value
Lorg/pdfsam/splitbybookmarks/SplitOptionsPaneTest;.applyRegexp()V|Ljava/lang/Exception;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-split-by-bookmarks/src/test/java/org/pdfsam/splitbybookmarks/SplitOptionsPaneTest.java;,MethodName,applyRegexp,"    public void applyRegexp() throws Exception {
        SplitOptionsPane victim = find("".pdfsam-container"");
        BookmarksLevelComboBox combo = find(""#bookmarksLevel"");
        combo.setValidBookmarkLevels(validLevels);",regexp,regular expression
Lorg/pdfsam/ui/dashboard/preference/PreferenceWorkspacePane;.(Lorg/pdfsam/ui/dashboard/preference/PreferenceBrowsableDirectoryField;Lorg/pdfsam/ui/dashboard/preference/PreferenceBrowsableFileField;Lorg/pdfsam/ui/dashboard/preference/PreferenceCheckBox;Lorg/pdfsam/ui/dashboard/preference/PreferenceCheckBox;)V#workspaceDirPane,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/dashboard/preference/PreferenceWorkspacePane.java;,VariableName,workspaceDirPane,"        workspace.getTextField().setPromptText(
                i18n.i18n(""Select a previously saved workspace that will be automatically loaded at startup""));
        workspace.setBrowseWindowTitle(i18n.i18n(""Select a workspace""));
        HBox workspaceDirPane = new HBox(workspace, helpIcon(
                i18n.i18n(""Select a previously saved workspace that will be automatically loaded at startup"")));
        HBox.setHgrow(workspace, Priority.ALWAYS);
        workspaceDirPane.getStyleClass().add(""with-help-hcontainer"");",dir,directory
Lorg/pdfsam/ui/io/BrowsableFileFieldUITest;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/io/BrowsableFileFieldUITest.java;,ClassName,BrowsableFileFieldUITest,"public class BrowsableFileFieldUITest extends GuiTest {
    @Rule
    public ClearEventStudioRule clearStudio = new ClearEventStudioRule();

    @Override
    protected Parent getRootNode() {",ui,user interface
Lorg/pdfsam/ui/dashboard/preference/PreferenceWorkspacePane;.(Lorg/pdfsam/ui/dashboard/preference/PreferenceBrowsableDirectoryField;Lorg/pdfsam/ui/dashboard/preference/PreferenceBrowsableFileField;Lorg/pdfsam/ui/dashboard/preference/PreferenceCheckBox;Lorg/pdfsam/ui/dashboard/preference/PreferenceCheckBox;)V#workigDirPane,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/dashboard/preference/PreferenceWorkspacePane.java;,VariableName,workigDirPane,"        workspace.getTextField().validate();
        getChildren().addAll(new Label(i18n.i18n(""Default working directory:"")), workigDirPane,
                new Label(i18n.i18n(""Load default workspace at startup:"")), workspaceDirPane, saveWorkspaceOnExit,
                savePwdInWorkspace);
        getStyleClass().addAll(Style.CONTAINER.css());
    }",workig,working
Lorg/pdfsam/merge/MergeParametersBuilder;.tocPolicy)Lorg/sejda/model/toc/ToCPolicy;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-merge/src/main/java/org/pdfsam/merge/MergeParametersBuilder.java;,FieldName,tocPolicy,"    private boolean footer;
    private boolean normalize;
    private AcroFormPolicy formsPolicy = AcroFormPolicy.MERGE;
    private ToCPolicy tocPolicy = ToCPolicy.NONE;
    private FileTaskOutput output;

    void addInput(PdfMergeInput input) {
        this.inputs.add(input);",toc,table of content
Lorg/pdfsam/support/filter/FileFilterTypeTest;.testCsv()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/test/java/org/pdfsam/support/filter/FileFilterTypeTest.java;,MethodName,testCsv,"    public void testCsv() {
        File file = mock(File.class);
        when(file.getAbsolutePath()).thenReturn(""/path/chuck.csv"");
        assertTrue(FileFilterType.CSV.accept(file));",csv,Comma Separated Values
Lorg/pdfsam/ui/io/BrowsablePdfOutputFieldTest;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/io/BrowsablePdfOutputFieldTest.java;,ClassName,BrowsablePdfOutputFieldTest,"public class BrowsablePdfOutputFieldTest {
    @Rule
    public TemporaryFolder folder = new TemporaryFolder();
    @Rule
    public InitializeAndApplyJavaFxThreadRule fxThread = new InitializeAndApplyJavaFxThreadRule();
    @Mock
    private SingleOutputTaskParametersBuilder<?> builder;",pdf,portable document format
Lorg/pdfsam/WindowStatusController;.PDFSAM_DISABLE_UI_RESTORE)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/WindowStatusControllerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/WindowStatusController.java;,FieldName,PDFSAM_DISABLE_UI_RESTORE,"    public void defaultOnDisableRestore() throws Exception {
        when(service.getLatestStatus()).thenReturn(new StageStatus(10, 10, 10, 10));
        System.setProperty(WindowStatusController.PDFSAM_DISABLE_UI_RESTORE, Boolean.TRUE.toString());
        FXTestUtils.invokeAndWait(() -> {
            victim.setStage(victimStage);",ui,user interface
Lorg/pdfsam/configuration/EnhancedClassloaderProviderTest;.emptySysProperty()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/configuration/EnhancedClassloaderProviderTest.java;,MethodName,emptySysProperty,"    public void emptySysProperty() {
        System.setProperty(EnhancedClassloaderProvider.PDFSAM_MODULES_DIRECTORY, """");
        ClassLoader classLoader = mock(ClassLoader.class);
        assertEquals(classLoader, EnhancedClassloaderProvider.classLoader(classLoader));
    }",sys,systems
Lorg/pdfsam/support/filter/FileFilterType;.isValid(Ljava/lang/String;)Z#0#1#ipe,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/main/java/org/pdfsam/support/filter/FileFilterType.java;,VariableName,ipe,"   public boolean isValid(String input) {
        try {
            return StringUtils.isNotBlank(input) && accept(Paths.get(input).toFile());
        } catch (InvalidPathException ipe) {
            return false;
        }",ipe,invalid path exception
Lorg/pdfsam/context/UserContext;.setIntegerPreference(Lorg/pdfsam/context/IntUserPreference;I)V#pref#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/main/java/org/pdfsam/context/UserContext.java;,ParameterName,pref,"    /**
     * Sets a {@link Boolean} preference.
     * 
     * @param pref
     * @param value
     */
    void setBooleanPreference(BooleanUserPreference pref, boolean value);",pref,preference
Lorg/pdfsam/community/PdfsamCommunityConfig;.updatesUrl(Lorg/pdfsam/Pdfsam;)Ljava/lang/Object;|Ljava/net/MalformedURLException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-community/src/main/java/org/pdfsam/community/PdfsamCommunityConfig.java;,MethodName,updatesUrl,"    @Provides
    @Named(""updatesUrl"")
    public Object updatesUrl(Pdfsam pdfsam) throws MalformedURLException {
        return new URL(String.format(""http://www.pdfsam.org/current-version?c=%s"",
                pdfsam.property(ConfigurableProperty.VERSION)));
    }",url,uniform resource locator
Lorg/pdfsam/ui/support/Style;.css()[Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/selection/PasswordFieldPopup.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-split-by-size/src/main/java/org/pdfsam/splitbysize/SplitOptionsPane.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-split-by-bookmarks/src/main/java/org/pdfsam/splitbybookmarks/SplitOptionsPane.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/dashboard/preference/CheckForUpdatesButton.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/commons/ClosePane.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/module/OpenButton.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/log/LogStage.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/module/RunButton.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/commons/ValidableTextFieldTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/dashboard/about/AboutDashboardPane.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-split-by-bookmarks/src/test/java/org/pdfsam/splitbybookmarks/BookmarksLevelComboBoxTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/dashboard/preference/PreferenceThumbnailsPane.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-rotate/src/main/java/org/pdfsam/rotate/RotateOptionsPane.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/dashboard/preference/PreferenceConfig.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/news/NewsPanel.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-simple-split/src/main/java/org/pdfsam/split/SplitOptionsPane.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/commons/ValidableTextField.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/prefix/PrefixPane.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/dashboard/preference/PreferenceBehaviorPane.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/io/PdfVersionConstrainedCheckBox.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/selection/multiple/SelectionTableToolbar.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/dashboard/preference/PreferenceAppearencePane.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/io/BrowsableDirectoryFieldUITest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/commons/HidingPane.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/notification/Notification.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/workarea/WorkArea.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/dialog/ConfirmationDialogContent.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/io/PdfDestinationPane.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/dialog/ConfirmationDialog.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/io/BrowsableField.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/dashboard/preference/ClearStatisticsButton.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/module/ModuleOwnedButton.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/dashboard/preference/PreferenceOutputPane.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/info/InfoStage.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/commons/RadioButtonDrivenTextFieldsPane.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/module/TaskFailedButton.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-extract/src/main/java/org/pdfsam/extract/ExtractOptionsPane.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-merge/src/main/java/org/pdfsam/merge/MergeOptionsPane.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/dashboard/preference/PreferenceWorkspacePane.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/io/BrowsableFileFieldUITest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-split-by-bookmarks/src/main/java/org/pdfsam/splitbybookmarks/BookmarksLevelComboBox.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/dashboard/Dashboard.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/support/Style.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/dialog/OpenWithDialog.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/io/DestinationPane.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/log/LogPane.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/commons/UrlButton.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/module/BaseTaskExecutionModule.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/dashboard/DashboardItemPane.java;,MethodName,css,"            passwordField.setPromptText(DefaultI18nContext.getInstance().i18n(""Enter the user password""));
            Button doneButton = GlyphsDude.createIconButton(FontAwesomeIcon.UNLOCK,
                    DefaultI18nContext.getInstance().i18n(""Unlock""));
            doneButton.getStyleClass().addAll(Style.BUTTON.css());
            doneButton.prefHeightProperty().bind(passwordField.heightProperty());
            doneButton.setMaxHeight(USE_PREF_SIZE);
            doneButton.setMinHeight(USE_PREF_SIZE);",css,cascading style sheets
Lorg/pdfsam/pdf/PdfDocumentDescriptor;.toPdfFileSource()Lorg/sejda/model/input/PdfFileSource;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/main/java/org/pdfsam/pdf/PdfDocumentDescriptor.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-merge/src/main/java/org/pdfsam/merge/MergeSelectionPane.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-rotate/src/main/java/org/pdfsam/rotate/RotateSelectionPane.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-extract/src/main/java/org/pdfsam/extract/ExtractSelectionPane.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-alternate-mix/src/main/java/org/pdfsam/alternatemix/AlternateMixSelectionPane.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/selection/single/TaskParametersBuilderSingleSelectionPane.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/test/java/org/pdfsam/pdf/PdfDocumentDescriptorTest.java;,MethodName,toPdfFileSource,"    public PdfFileSource toPdfFileSource() {
        return PdfFileSource.newInstanceWithPassword(file, password);
    }
",pdf,portable document format
Lorg/pdfsam/news/LatestNewsController;.lambda$2(Lorg/pdfsam/news/NewsData;)Z#n#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/main/java/org/pdfsam/news/LatestNewsController.java;,VariableName,n,"                currentLatest = news.get(0).getId();
                eventStudio().broadcast(new LatestNewsEvent(news, service.getLatestNewsSeen() >= currentLatest));
                news.stream().filter(n -> n.isImportant()).findFirst()
                        .filter(n -> service.getLatestImportantNewsSeen() < n.getId()).ifPresent(n -> {
                            service.setLatestImportantNewsSeen(n.getId());
                            eventStudio().broadcast(new NewImportantNewsEvent(n));",n,news
Lorg/pdfsam/ui/dashboard/preference/PreferenceWorkspacePane;.(Lorg/pdfsam/ui/dashboard/preference/PreferenceBrowsableDirectoryField;Lorg/pdfsam/ui/dashboard/preference/PreferenceBrowsableFileField;Lorg/pdfsam/ui/dashboard/preference/PreferenceCheckBox;Lorg/pdfsam/ui/dashboard/preference/PreferenceCheckBox;)V#savePwdInWorkspace#0#3,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/dashboard/preference/PreferenceWorkspacePane.java;,ParameterName,savePwdInWorkspace,"        workspace.getTextField().validate();
        getChildren().addAll(new Label(i18n.i18n(""Default working directory:"")), workigDirPane,
                new Label(i18n.i18n(""Load default workspace at startup:"")), workspaceDirPane, saveWorkspaceOnExit,
                savePwdInWorkspace);
        getStyleClass().addAll(Style.CONTAINER.css());",pwd,password
Lorg/pdfsam/premium/PremiumModule;.setUrl(Ljava/lang/String;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/main/java/org/pdfsam/premium/PremiumModule.java;,MethodName,setUrl,"    public void setUrl(String url) {
        this.url = url;
    }",url,uniform resource locator
Lorg/pdfsam/configuration/StylesConfigTest;.initFx)Lorg/pdfsam/test/InitializeAndApplyJavaFxThreadRule;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/configuration/StylesConfigTest.java;,FieldName,initFx,"    public InitializeAndApplyJavaFxThreadRule initFx = new InitializeAndApplyJavaFxThreadRule();

    @SuppressWarnings(""unused"")
    @Test(expected = IllegalArgumentException.class)
    public void nullArg() {",init,initialize
Lorg/pdfsam/module/TaskExecutionRequestEventTest;.testNullParams()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/test/java/org/pdfsam/module/TaskExecutionRequestEventTest.java;,MethodName,testNullParams,"    public void testNullParams() {
        new TaskExecutionRequestEvent(""id"", null);
    }",params,parameters
Lorg/pdfsam/pdf/SAMBoxPdfLoadServiceTest;.encWithPwd()V|Ljava/io/IOException;|Ljava/lang/InterruptedException;|Ljava/util/concurrent/TimeoutException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/test/java/org/pdfsam/pdf/SAMBoxPdfLoadServiceTest.java;,MethodName,encWithPwd,"    public void encWithPwd() throws IOException, InterruptedException, TimeoutException {
        File testFile = folder.newFile(""PDFsamTest.pdf"");
        FileUtils.copyInputStreamToFile(getClass().getResourceAsStream(""/enc_test_pdfsam.pdf""), testFile);
        PdfDocumentDescriptor descriptor = PdfDocumentDescriptor.newDescriptor(testFile, ""test"");",pwd,password
Lorg/pdfsam/support/filter/FileFilterTypeTest;.testPdf()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/test/java/org/pdfsam/support/filter/FileFilterTypeTest.java;,MethodName,testPdf,"    public void testPdf() {
        File file = mock(File.class);
        when(file.getAbsolutePath()).thenReturn(""/path/chuck.pdf"");
        assertTrue(FileFilterType.PDF.accept(file));",pdf,portable document format
Lorg/pdfsam/ui/commons/UrlButton;.styledUrlButton(Ljava/lang/String;Ljava/lang/String;Lde/jensd/fx/glyphs/GlyphIcons;)Lorg/pdfsam/ui/commons/UrlButton;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/commons/UrlButtonTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/commons/UrlButton.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/dashboard/about/AboutDashboardPane.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/notification/NotificationsController.java;,MethodName,styledUrlButton,"    protected Parent getRootNode() {
        return UrlButton.styledUrlButton(""Chuck"", URL, null);
    }",url,uniform resource locator
Lorg/pdfsam/ui/workarea/QuickbarModuleButtonsProviderTest;.lowPrio)Lorg/pdfsam/test/LowPriorityTestModule;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/ui/workarea/QuickbarModuleButtonsProviderTest.java;,FieldName,lowPrio,"    public InitializeAndApplyJavaFxThreadRule javaFxThread = new InitializeAndApplyJavaFxThreadRule();

    private LowPriorityTestModule lowPrio = new LowPriorityTestModule();
    private DefaultPriorityTestModule defaultPrio = new DefaultPriorityTestModule();
    private HighPriorityTestModule highPrio = new HighPriorityTestModule();
    private List<Module> modules = Arrays.asList(defaultPrio, highPrio, lowPrio);",prio,priority
Ljavafx/geometry/Bounds;.getMaxY()D,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/help/HelpUtils.java;,MethodName,getMaxY,"    private static Text helpIcon(HelpPopup popup) {
        Text icon = GlyphsDude.createIcon(MaterialDesignIcon.HELP_CIRCLE, ""1.1em"");
        icon.setOnMouseEntered(e -> {
            Point2D p = icon.localToScreen(icon.getLayoutBounds().getMaxX(), icon.getLayoutBounds().getMaxY());
            popup.show(icon, p.getX(), p.getY());
        });",max,maximum
Lorg/pdfsam/split/SplitOptionsPane;.setMaxPages(Ljava/lang/Integer;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-simple-split/src/main/java/org/pdfsam/split/SplitModule.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-simple-split/src/main/java/org/pdfsam/split/SplitOptionsPane.java;,MethodName,setMaxPages,"        this.selectionPane = new TaskParametersBuilderSingleSelectionPane(id());
        this.selectionPane.setPromptText(
                DefaultI18nContext.getInstance().i18n(""Select or drag and drop the PDF you want to split""));
        this.selectionPane.addOnLoaded(d -> splitOptions.setMaxPages(d.pages().getValue()));
        initModuleSettingsPanel(settingPanel());
    }",max,maximum
Lorg/pdfsam/ui/dialog/CreateOutputDirectoryConfirmationDialogTest;.cancelOnEsc()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/ui/dialog/CreateOutputDirectoryConfirmationDialogTest.java;,MethodName,cancelOnEsc,"    // TODO focus issue on Linux
    public void cancelOnEsc() {
        this.confirm = true;
        click(""show"");
        type(KeyCode.ESCAPE);",esc,escape
Lorg/sejda/model/exception/TaskIOException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/ui/notification/NotificationsControllerTest.java;,ClassName,TaskIOException,"    public void onAccessDenied() {
        TaskExecutionFailedEvent event = new TaskExecutionFailedEvent(
                new TaskIOException(new AccessDeniedException(""the file"")), null);
        victim.onTaskFailed(event);
        verify(container).addNotification(anyString(), any());
    }",io,input output
Ljava/lang/Integer;.MIN_VALUE)I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/dialog/OverwriteDialogController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/selection/multiple/SelectionTable.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/main/java/org/pdfsam/support/validation/PositiveIntRangeStringValidator.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/main/java/org/pdfsam/module/ClearUsageController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/dialog/LenientTaskExecutionDialogController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/ContentPane.java;,VariableName,MIN_VALUE,"    @EventListener(priority = Integer.MIN_VALUE)
    public void request(TaskExecutionRequestEvent event) {
        AbstractParameters params = event.getParameters();
        try {",min,minimum
Lorg/pdfsam/support/validation/RegexValidatorTest;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/test/java/org/pdfsam/support/validation/RegexValidatorTest.java;,ClassName,RegexValidatorTest,"public class RegexValidatorTest {
    private Validator<String> victim = Validators.regexMatching(""^([0-9]+,?)+$"");

    @Test
    public void testNegative() {
        Assert.assertFalse(victim.isValid(""dsdsa""));",regex,regular expression
Lorg/sejda/sambox/pdmodel/PDDocumentInformation;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/test/java/org/pdfsam/pdf/DefaultSAMBoxLoaderTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/main/java/org/pdfsam/pdf/DefaultSAMBoxLoader.java;,ClassName,PDDocumentInformation," public void setUp() {
        document = mock(PDDocument.class);
        descriptor = PdfDocumentDescriptor.newDescriptorNoPassword(mock(File.class));
        info = mock(PDDocumentInformation.class);
        when(document.getDocumentInformation()).thenReturn(info);
        when(document.getVersion()).thenReturn(""1.4"");
        when(document.getNumberOfPages()).thenReturn(2);",pd,portable doument
Lorg/pdfsam/ui/io/PdfVersionComboTest;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/io/PdfVersionComboTest.java;,ClassName,PdfVersionComboTest,"public class PdfVersionComboTest {

    private static final String MODULE = ""MODULE"";
    @Rule
    public ClearEventStudioRule clearStudio = new ClearEventStudioRule(MODULE);
    @Rule
    public InitializeAndApplyJavaFxThreadRule fxThread = new InitializeAndApplyJavaFxThreadRule();",pdf,portable document format
Lorg/pdfsam/ui/dialog/OpenWithDialog;.lambda$2(Ljavafx/scene/control/Button;Ljavafx/scene/Node;)V#g#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/dialog/OpenWithDialog.java;,VariableName,g,"            if (m.descriptor().hasInputType(event.requiredInputTyle())) {
                Button current = new Button(m.descriptor().getName());
                current.getStyleClass().addAll(Style.FOOTER_BUTTON.css());

                Optional.ofNullable(m.graphic()).ifPresent(g -> {
                    g.setScaleX(0.7);
                    g.setScaleY(0.7);
                    current.setGraphic(g);",g,graphic
Lorg/pdfsam/ui/log/LogListViewTest;.maxNumberOfLogRowsChanged()V|Ljava/lang/InterruptedException;|Ljava/util/concurrent/TimeoutException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/ui/log/LogListViewTest.java;,MethodName,maxNumberOfLogRowsChanged,"public void maxNumberOfLogRowsChanged() throws InterruptedException, TimeoutException {
        when(userContext.getNumberOfLogRows()).thenReturn(5);
        LogListView victim = new LogListView(userContext);
        victim.onEvent(new LogMessage(""testMessage"", LogLevel.WARN));",max,maximum
Lorg/pdfsam/splitbybookmarks/BookmarksLevelComboBoxTest;.lambda$2(Ljava/lang/String;)V#s#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-split-by-bookmarks/src/test/java/org/pdfsam/splitbybookmarks/BookmarksLevelComboBoxTest.java;,VariableName,s,"        assertEquals(ValidationState.NOT_VALIDATED, victim.getValidationState());
        click(""#victim"").type(""Chuck"").push(KeyCode.ENTER);
        assertEquals(ValidationState.INVALID, victim.getValidationState());
        Arrays.stream(Style.INVALID.css()).forEach((s) -> exists(""."" + s));
    }",s,string
Lorg/pdfsam/ui/io/RemovePdfVersionConstraintEvent;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/io/PdfVersionCombo.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/io/PdfVersionComboTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/io/PdfVersionConstrainedCheckBox.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/io/RemovePdfVersionConstraintEventTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/io/PdfVersionConstrainedCheckBoxTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/io/RemovePdfVersionConstraintEvent.java;,ClassName,RemovePdfVersionConstraintEvent,"    public void onRemovePdfVersionConstraint(final RemovePdfVersionConstraintEvent event) {
        versionsFilter.removeFilter(event.getPdfVersion());
    }
",pdf,portable document format
Lorg/pdfsam/ui/selection/multiple/TooltippedTextFieldTableCell;.lambda$2(Ljavafx/beans/value/ObservableValue;Ljava/lang/Boolean;Ljava/lang/Boolean;)V#obs#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/selection/multiple/TooltippedTextFieldTableCell.java;,VariableName,obs,"       textField.setOnAction(evt -> {
            commitEdit(this.converter.fromString(textField.getText()));
        });
        textField.focusedProperty().addListener((obs, wasFocused, isNowFocused) -> {
            if (!isNowFocused) {
                commitEdit(this.converter.fromString(textField.getText()));
            }
        });",obs,Observable
Lorg/pdfsam/module/PreferencesUsageDataStore;.getUsages()Ljava/util/List<Lorg/pdfsam/module/ModuleUsage;>;#0#0#0#json,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/main/java/org/pdfsam/module/PreferencesUsageDataStore.java;,VariableName,json,"    public void incrementUsageFor(String moduleId) {
        Preferences node = Preferences.userRoot().node(USAGE_PATH).node(moduleId);
        String json = node.get(MODULE_USAGE_KEY, """");
        try {
            if (isNotBlank(json)) {
                node.put(MODULE_USAGE_KEY, JSON.std.asString(JSON.std.beanFrom(ModuleUsage.class, json).inc()));
            } else {",json,javascript object notation
Lorg/pdfsam/module/ModuleDescriptor;.lambda$0([Lorg/pdfsam/module/ModuleInputOutputType;)Z#t#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/main/java/org/pdfsam/module/ModuleDescriptor.java;,VariableName,t,"        this.priority = priority;
        this.supportURL = supportURL;
        this.inputTypes = ofNullable(inputTypes).filter(t -> t.length > 0).map(Arrays::asList)
                .orElseGet(() -> Arrays.asList(ModuleInputOutputType.OTHER));
    }",t,type
Ljavafx/scene/shape/SVGPath;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/quickbar/ExpandButton.java;,ClassName,SVGPath,"class ExpandButton extends HBox {
    private ToggleButton toggle = new ToggleButton();
    private SVGPath expand = new SVGPath();
    private SVGPath collapse = new SVGPath();

    public ExpandButton() {
        getStyleClass().add(""quickbar-expand-button"");",svg,scalable vector graphics
Ljava/io/IOException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/test/java/org/pdfsam/TestCycles.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/test/java/org/pdfsam/support/io/ObjectCollectionWriterTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-community/src/main/java/org/pdfsam/community/PdfsamCommunityConfig.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/io/PdfDestinationPaneTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/dialog/CreateOutputDirectoryDialogController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/ui/dialog/LenientTaskExecutionDialogControllerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/test/java/org/pdfsam/ui/DefaultStageServiceTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/test/java/org/pdfsam/pdf/SAMBoxPdfLoadServiceTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-community/src/main/java/org/pdfsam/community/PdfsamCommunity.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/io/BrowsablePdfOutputFieldTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-split-by-bookmarks/src/test/java/org/pdfsam/splitbybookmarks/SplitByOutlineLevelParametersBuilderTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/commons/SetDestinationRequestTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/PdfsamApp.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/InputPdfArgumentsControllerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-split-by-size/src/test/java/org/pdfsam/splitbysize/SplitBySizeParametersBuilderTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/io/BrowsablePdfInputFieldTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-merge/src/test/java/org/pdfsam/merge/MergeParametersBuilderTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/ui/dialog/OpenWithDialogTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/ui/dialog/OverwriteDialogControllerUITest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/test/java/org/pdfsam/support/XmlUtilsTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/configuration/JarSignatureFilterTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-alternate-mix/src/test/java/org/pdfsam/alternatemix/AlternateMixParametersBuilderTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/main/java/org/pdfsam/module/PreferencesUsageDataStore.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/io/BrowsableOutputDirectoryFieldTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/test/java/org/pdfsam/ui/JsonWorkspaceServiceTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/ui/dialog/CreateOutputDirectoryDialogControllerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/main/java/org/pdfsam/ui/DefaultStageService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/test/java/org/pdfsam/support/validation/FileValidatorTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/ui/dialog/OpenWithDialogControllerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/test/java/org/pdfsam/pdf/BookmarksLevelSAMBoxLoaderTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/main/java/org/pdfsam/premium/DefaultPremiumModulesService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-extract/src/test/java/org/pdfsam/extract/ExtractParametersBuilderTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-rotate/src/test/java/org/pdfsam/rotate/RotateParametersBuilderTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/OpenFileController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/io/BrowsableDirectoryFieldTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/test/java/org/pdfsam/task/BulkRotateTaskTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/test/java/org/pdfsam/support/validation/DirectoryValidatorTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/configuration/EnhancedClassloaderProvider.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/test/java/org/pdfsam/ui/PreferencesRecentWorkspacesServiceTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/io/BrowsableFileFieldTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/test/java/org/pdfsam/module/PreferencesUsageDataStoreTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/test/java/org/pdfsam/support/validation/FileTypeValidatorTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-community/src/test/java/org/pdfsam/community/PdfsamCommunityTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/main/java/org/pdfsam/update/DefaultUpdateService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/main/java/org/pdfsam/news/DefaultNewsService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/configuration/EnhancedClassloaderProviderTest.java;,ClassName,IOException,"    public void setUp() throws IOException {
        jdepend.addDirectory(""target/classes"");
        packages = jdepend.analyze();
    }",io,input output
Lorg/pdfsam/ui/io/PdfVersionFilterTest;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/io/PdfVersionFilterTest.java;,ClassName,PdfVersionFilterTest,"public class PdfVersionFilterTest {

    @Test
    public void add() {
        PdfVersionFilter victim = new PdfVersionFilter();
        victim.addFilter(PdfVersion.VERSION_1_4);",pdf,portable document format
Lorg/pdfsam/splitbysize/SplitOptionsPane;.lambda$0(Lorg/pdfsam/splitbysize/SizeUnitRadio;)V#r#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-split-by-size/src/main/java/org/pdfsam/splitbysize/SplitOptionsPane.java;,VariableName,r,"      getStyleClass().addAll(Style.CONTAINER.css());
        getStyleClass().addAll(Style.HCONTAINER.css());
        getChildren().addAll(new Label(DefaultI18nContext.getInstance().i18n(""Split at this size:"")), this.field);
        Arrays.stream(SizeUnit.values()).map(SizeUnitRadio::new).forEach(r -> {
            r.setToggleGroup(group);
            getChildren().add(r);
        });",r,radio
Lorg/pdfsam/ui/commons/UrlButtonTest;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/commons/UrlButtonTest.java;,ClassName,UrlButtonTest,"public class UrlButtonTest extends GuiTest {

    @Rule
    public ClearEventStudioRule clearStudio = new ClearEventStudioRule();
    private static final String URL = ""http://www.example.com"";",url,uniform resource locator
Lorg/pdfsam/ui/dashboard/preference/PreferencePaneTest;.INIT_FX)Lorg/pdfsam/test/InitializeAndApplyJavaFxThreadRule;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/ui/dashboard/preference/PreferencePaneTest.java;,FieldName,INIT_FX,"public class PreferencePaneTest {

    @ClassRule
    public static ClearEventStudioRule STUDIO_RULE = new ClearEventStudioRule();
    @ClassRule
    public static InitializeAndApplyJavaFxThreadRule INIT_FX = new InitializeAndApplyJavaFxThreadRule();
    private Injector injector;

    @BeforeClass
    public static void setUpClass() {",init,initialize
Lorg/pdfsam/ui/UIServiceConfig;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/main/java/org/pdfsam/Services.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/main/java/org/pdfsam/ui/UIServiceConfig.java;,ClassName,UIServiceConfig,"public class UIServiceConfig {

    @Provides
    RecentWorkspacesService recentWorkspaces() {
        return new PreferencesRecentWorkspacesService();
    }",ui,user interface
Lorg/pdfsam/ui/selection/multiple/SelectionTable;.lambda$37(Ljavafx/scene/control/TableRow;Ljavafx/scene/input/MouseEvent;)V#0#0#cc,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/selection/multiple/SelectionTable.java;,VariableName,cc,"                    if (!row.isEmpty() && !selection.isEmpty()) {
                        Dragboard db = row.startDragAndDrop(TransferMode.MOVE);
                        db.setDragView(row.snapshot(null, null));
                        ClipboardContent cc = new ClipboardContent();
                        cc.put(DND_TABLE_SELECTION_MIME_TYPE, selection);
                        db.setContent(cc);
                        e.consume();",cc,clipboard content
Lorg/pdfsam/support/params/ConversionUtils;.parsePageNumber(Ljava/lang/String;)I|Lorg/sejda/conversion/exception/ConversionException;#0#1#nfe,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/main/java/org/pdfsam/support/params/ConversionUtils.java;,VariableName,nfe,"    private static int parsePageNumber(String value) throws ConversionException {
        try {
            return Integer.parseInt(value.trim());
        } catch (NumberFormatException nfe) {
            throw new ConversionException(DefaultI18nContext.getInstance().i18n(""Invalid number: {0}."", value));
        }",nfe,number format exception
Lorg/pdfsam/ui/io/PdfVersionCombo;.lambda$2(Lorg/sejda/model/pdf/PdfVersion;Lorg/pdfsam/ui/io/PdfVersionCombo$PdfVersionComboItem;)Z#t#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/io/PdfVersionCombo.java;,VariableName,t,"    private void setFilteredItems(PdfVersion required) {
        if (nonNull(required)) {
            PdfVersionComboItem selected = getSelectionModel().getSelectedItem();
            setItems(unfilteredItems.filtered(t -> t.isHigherOrEqual(required)));
            int selecedIndex = getItems().indexOf(selected);
            if (selecedIndex != -1) {
                getSelectionModel().select(selecedIndex);",t,item
Lorg/pdfsam/ui/io/PdfVersionCombo$PdfVersionComboItem;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/io/PdfVersionCombo.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/io/PdfVersionComboTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/io/PdfDestinationPane.java;,ClassName,PdfVersionComboItem,"    /**
     * Item for a {@link PdfVersionCombo}
     * 
     * @author Andrea Vacondio
     *
     */
    public static interface PdfVersionComboItem {
        public PdfVersion getVersion();

        public boolean isHigherOrEqual(PdfVersion version);
    }",pdf,portable document format
Lorg/pdfsam/UncaughtExceptionLogger;.uncaughtException(Ljava/lang/Thread;Ljava/lang/Throwable;)V#t#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/UncaughtExceptionLogger.java;,ParameterName,t,"    private static final Logger LOG = LoggerFactory.getLogger(UncaughtExceptionLogger.class);

    @Override
    public void uncaughtException(Thread t, Throwable e) {
        LOG.error(""Unexpected error"", e);
    }",t,thread
Lorg/pdfsam/ui/io/BrowsableFileField;.dragConsume(Ljavafx/scene/input/DragEvent;Ljava/util/function/Consumer<Ljavafx/scene/input/DragEvent;>;)V#c#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/io/BrowsableFileField.java;,ParameterName,c,"    private void dragConsume(DragEvent e, Consumer<DragEvent> c) {
        if (e.getDragboard().hasFiles()) {
            c.accept(e);
        }
        e.consume();
    }",c,consumer
Lorg/pdfsam/ui/selection/PasswordFieldPopupTest;.pwdSentOnEnterKey()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/selection/PasswordFieldPopupTest.java;,MethodName,pwdSentOnEnterKey,"    public void pwdSentOnEnterKey() {
        click(""press"");
        Listener<PdfLoadRequestEvent> listener = mock(Listener.class);
        eventStudio().add(PdfLoadRequestEvent.class, listener);",pwd,password
Lorg/sejda/sambox/input/PDFParser;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/test/java/org/pdfsam/pdf/BookmarksLevelSAMBoxLoaderTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/main/java/org/pdfsam/pdf/SAMBoxPdfLoadService.java;,ClassName,PDFParser,"    public void setUp() throws IOException {
        descriptor = mock(PdfDocumentDescriptor.class);
        document = PDFParser
                .parse(SeekableSources.inMemorySeekableSourceFrom(getClass().getResourceAsStream(""/test_outline.pdf"")));
    }",pdf,portable document format
Lorg/pdfsam/ui/commons/UrlButton;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/commons/UrlButtonTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/commons/UrlButton.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/dashboard/modules/ModulesDashboardTile.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/dashboard/about/AboutDashboardPane.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/notification/NotificationsController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/news/News.java;,ClassName,UrlButton,"/**
 * Button opening the default browser to the configured url when pressed
 * 
 * @author Andrea Vacondio
 * 
 */
public class UrlButton extends Button {

    private UrlButton(String text) {
        super(text);
    }",url,uniform resource locator
Lorg/pdfsam/ui/io/BrowsableOutputDirectoryFieldTest;.validUTFSpecialChars()V|Ljava/io/IOException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/io/BrowsableOutputDirectoryFieldTest.java;,MethodName,validUTFSpecialChars,"    public void validUTFSpecialChars() throws IOException {
        BrowsableOutputDirectoryField victim = new BrowsableOutputDirectoryField();
        File value = folder.newFolder(""??????_test"");
        victim.getTextField().setText(value.getAbsolutePath());",utf,unicode transformation format
Lorg/pdfsam/module/ModuleInputOutputType;.SINGLE_PDF)Lorg/pdfsam/module/ModuleInputOutputType;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/test/java/org/pdfsam/test/DefaultPriorityTestModule.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-rotate/src/main/java/org/pdfsam/rotate/RotateModule.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-simple-split/src/main/java/org/pdfsam/split/SplitModule.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-alternate-mix/src/main/java/org/pdfsam/alternatemix/AlternateMixModule.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/test/java/org/pdfsam/ui/InputPdfArgumentsLoadRequestTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-extract/src/main/java/org/pdfsam/extract/ExtractModule.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/main/java/org/pdfsam/ui/InputPdfArgumentsLoadRequest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-merge/src/main/java/org/pdfsam/merge/MergeModule.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-split-by-bookmarks/src/main/java/org/pdfsam/splitbybookmarks/SplitByBookmarksModule.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-split-by-size/src/main/java/org/pdfsam/splitbysize/SplitBySizeModule.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/module/OpenButtonTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/module/FooterTest.java;,VariableName,SINGLE_PDF,"public class DefaultPriorityTestModule implements Module {
    public static final String ID = ""test.module"";

    private ModuleDescriptor descriptor = builder().category(ModuleCategory.MERGE).description(""Test module"")
            .inputTypes(ModuleInputOutputType.SINGLE_PDF).name(""TestModule"").priority(ModulePriority.DEFAULT)
            .supportURL(""http://www.chucknorrisfacts.com/"").build();",pdf,portable document format
Lorg/pdfsam/support/filter/FileFilterTypeTest;.testHtml()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/test/java/org/pdfsam/support/filter/FileFilterTypeTest.java;,MethodName,testHtml,"    public void testHtml() {
        File file = mock(File.class);
        when(file.getAbsolutePath()).thenReturn(""/path/chuck.html"");
        assertTrue(FileFilterType.HTML.accept(file));",html,hyper text markup language
Lorg/pdfsam/ui/info/SummaryTabTest;.assertInfoIsDisplayed(Ljava/util/List<Ljavafx/beans/value/ChangeListener<-Ljava/lang/String;>;>;Lorg/pdfsam/pdf/PdfDocumentDescriptor;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/ui/info/SummaryTabTest.java;,MethodName,assertInfoIsDisplayed,"    private void assertInfoIsDisplayed(List<ChangeListener<? super String>> listeners, PdfDocumentDescriptor descriptor) {
        File file = descriptor.getFile();
        List<String> values = Arrays.asList(""test.producer"", file.getAbsolutePath(), descriptor.getVersionString(),
                ""2"", ""test.creationDate"", ""test.title"", ""test.author"", ""test.creator"", ""test.subject"",
                FileUtils.byteCountToDisplaySize(file.length()), FORMATTER.format(file.lastModified()));
        ",info,information
Lorg/pdfsam/support/filter/FileFilterTypeTest;.testXml()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/test/java/org/pdfsam/support/filter/FileFilterTypeTest.java;,MethodName,testXml,"    public void testXml() {
        File file = mock(File.class);
        when(file.getAbsolutePath()).thenReturn(""/path/chuck.xml"");
        assertTrue(FileFilterType.XML.accept(file));",xml,extensible markup language
Lorg/pdfsam/ui/JsonWorkspaceService;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/main/java/org/pdfsam/ui/UIServiceConfig.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/test/java/org/pdfsam/ui/JsonWorkspaceServiceTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/main/java/org/pdfsam/ui/JsonWorkspaceService.java;,ClassName,JsonWorkspaceService,"    WorkspaceService workspaces() {
        return new JsonWorkspaceService();
    }",json,javascript object notation
Lorg/pdfsam/support/XmlUtilsTest;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/test/java/org/pdfsam/support/XmlUtilsTest.java;,ClassName,XmlUtilsTest,"public class XmlUtilsTest {
    private Document doc;

    @Before
    public void setUp() throws SAXException, IOException, ParserConfigurationException {
        DocumentBuilderFactory domFactory = DocumentBuilderFactory.newInstance();
        domFactory.setNamespaceAware(true);",xml,extensible markup language
Lorg/pdfsam/ui/selection/multiple/SelectionTable;.lambda$24(Ljavafx/scene/control/TableView;)Ljavafx/scene/control/TableRow;#tv#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/selection/multiple/SelectionTable.java;,VariableName,tv,"        if (canMove) {
            setRowFactory(tv -> {
                TableRow<SelectionTableRowData> row = new TableRow<>();
                row.setOnDragDetected(e -> {
                    ArrayList<Integer> selection = new ArrayList<>(getSelectionModel().getSelectedIndices());
                    if (!row.isEmpty() && !selection.isEmpty()) {",tv,table view
Lorg/pdfsam/split/SplitModule;.lambda$1(Ljava/util/function/Consumer;Lorg/pdfsam/support/params/SinglePdfSourceMultipleOutputParametersBuilder;)V#b#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-simple-split/src/main/java/org/pdfsam/split/SplitModule.java;,VariableName,b,"    protected Builder<? extends AbstractSplitByPageParameters> getBuilder(Consumer<String> onError) {
        Optional<SinglePdfSourceMultipleOutputParametersBuilder<? extends AbstractSplitByPageParameters>> builder = Optional
                .ofNullable(splitOptions.getBuilder(onError));
        builder.ifPresent(b -> {
            selectionPane.apply(b, onError);
            destinationDirectoryField.apply(b, onError);
            destinationPane.apply(b, onError);",b,builder
Lorg/pdfsam/ui/log/LogStage;.lambda$1(Ljavafx/scene/input/KeyEvent;)V#k#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/log/LogStage.java;,VariableName,k,"        containerPane.setBottom(new ClosePane((a) -> eventStudio().broadcast(HideStageRequest.INSTANCE, ""LogStage"")));
        Scene scene = new Scene(containerPane);
        scene.getStylesheets().addAll(styles.styles());
        scene.setOnKeyReleased(k -> {
            if (this.isShowing() && new KeyCodeCombination(KeyCode.ESCAPE).match(k)) {
                eventStudio().broadcast(HideStageRequest.INSTANCE, ""LogStage"");
            }
        });",k,key
Lorg/pdfsam/ui/io/BrowsableDirectoryFieldUITest;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/io/BrowsableDirectoryFieldUITest.java;,ClassName,BrowsableDirectoryFieldUITest,"public class BrowsableDirectoryFieldUITest extends GuiTest {
    @Rule
    public TemporaryFolder folder = new TemporaryFolder();
    @Rule
    public ClearEventStudioRule clearStudio = new ClearEventStudioRule();",ui,user interface
Lorg/pdfsam/ui/info/SummaryTabTest;.lambda$5(Ljava/util/List;Ljavafx/beans/value/ChangeListener;)V#l#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/ui/info/SummaryTabTest.java;,VariableName,l,"        List<String> values = Arrays.asList(""test.producer"", file.getAbsolutePath(), descriptor.getVersionString(),
                ""2"", ""test.creationDate"", ""test.title"", ""test.author"", ""test.creator"", ""test.subject"",
                FileUtils.byteCountToDisplaySize(file.length()), FORMATTER.format(file.lastModified()));
        listeners.forEach(l -> verify(l, timeout(2000).times(1)).changed(any(ObservableValue.class), anyString(),
                argThat(isIn(values))));
    }",l,listener
Lorg/pdfsam/ui/banner/NewsButton;.UP_TO_DATE_CSS_CLASS)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/ui/banner/NewsButtonTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/banner/NewsButton.java;,FieldName,UP_TO_DATE_CSS_CLASS,"    public void setUpToDate() {
        NewsButton victim = find("".button"");
        assertFalse(victim.getStyleClass().contains(NewsButton.UP_TO_DATE_CSS_CLASS));
        victim.setUpToDate(false);
        assertTrue(victim.getStyleClass().contains(NewsButton.UP_TO_DATE_CSS_CLASS));",css,cascading style sheets
Lorg/pdfsam/ui/selection/multiple/SelectionTable;.lambda$0(Lorg/pdfsam/ui/selection/multiple/TableColumnProvider;)V#c#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/selection/multiple/SelectionTable.java;,VariableName,c,"        setEditable(true);
        getSelectionModel().setSelectionMode(SelectionMode.MULTIPLE);
        getColumns().add(new IndexColumn());
        Arrays.stream(columns).forEach(c -> getColumns().add(c.getTableColumn()));
        setColumnResizePolicy(CONSTRAINED_RESIZE_POLICY);
        getStyleClass().add(""selection-table"");
        initDragAndDrop(canMove);",c,column
Lorg/pdfsam/TestUtils;.testEqualsAndHashCodes<T:Ljava/lang/Object;>(TT;TT;TT;TT;)V#eq1#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/test/java/org/pdfsam/TestUtils.java;,ParameterName,eq1,"     * @param <T>
     * @param eq1
     *            equal instance
     * @param eq2
     *            equal instance
     * @param eq3
     *            equal instance
     * @param diff
     *            not equal instance
     */
    public static <T> void testEqualsAndHashCodes(T eq1, T eq2, T eq3, T diff) {
        // not instance of
        assertFalse(eq1.equals(NOT_INSTANCE_OF));",eq,equal
Lorg/pdfsam/support/io/FileType;.HTML)Lorg/pdfsam/support/io/FileType;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/test/java/org/pdfsam/support/validation/FileTypeValidatorTest.java;,VariableName,HTML,"    public void existingHtml() throws IOException {
        Validator<String> victim = Validators.existingFileType(FileType.HTML);
        Path test = Files.createTempFile(""tmp"", "".htm"");
        Assert.assertTrue(victim.isValid(test.toAbsolutePath().toString()));
        Files.delete(test);",html,hyper text markup language
Lorg/pdfsam/ui/commons/RadioButtonDrivenTextFieldsPaneTest;.lambda$3(Ljavafx/scene/control/TextField;)Z#f#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/commons/RadioButtonDrivenTextFieldsPaneTest.java;,VariableName,f,"        RadioButton radio = find(""RADIO"");
        TextField field = find("".FIELD"");
        click(radio);
        type(""Chuck"");
        verifyThat(field, (f) -> ""Chuck"".equals(f.getText()));
    }",f,field
Lorg/pdfsam/ui/info/SummaryTab;.setPdfProperties()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/info/SummaryTab.java;,MethodName,setPdfProperties,"    private void setPdfProperties() {
        version.setText(current.getVersionString());
        pages.setText(Integer.toString(current.pages().getValue()));
        created.setText(current.getInformation(""FormattedCreationDate""));",pdf,portable document format
Lorg/pdfsam/ui/workarea/QuickbarModuleButtonsProviderTest;.defaultPrio)Lorg/pdfsam/test/DefaultPriorityTestModule;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/ui/workarea/QuickbarModuleButtonsProviderTest.java;,FieldName,defaultPrio,"    public InitializeAndApplyJavaFxThreadRule javaFxThread = new InitializeAndApplyJavaFxThreadRule();

    private LowPriorityTestModule lowPrio = new LowPriorityTestModule();
    private DefaultPriorityTestModule defaultPrio = new DefaultPriorityTestModule();
    private HighPriorityTestModule highPrio = new HighPriorityTestModule();
    private List<Module> modules = Arrays.asList(defaultPrio, highPrio, lowPrio);
    private UsageService service;",prio,priority
Ljava/lang/System;.currentTimeMillis()J,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/selection/multiple/LongColumnTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/main/java/org/pdfsam/module/ModuleUsage.java;,MethodName,currentTimeMillis,"    public void lastModified() {
        assertThat(LongColumn.LAST_MODIFIED.getTextValue(System.currentTimeMillis()), any(String.class));
    }",millis,millisecond
Lorg/pdfsam/ui/info/BaseInfoTab;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/info/SummaryTab.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/info/BaseInfoTab.java;,ClassName,BaseInfoTab,"class BaseInfoTab extends Tab {
    private GridPane grid = new GridPane();

    BaseInfoTab() {
        setClosable(false);
        grid.getStyleClass().add(""info-props"");",info,information
Lorg/pdfsam/ui/commons/ClosePane;.lambda$0(Ljavafx/event/ActionEvent;)V#e#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/commons/ClosePane.java;,VariableName,e,"public class ClosePane extends HBox {

    private final EventHandler<ActionEvent> defaultHandler = e -> this.getScene().getWindow().hide();

    public ClosePane() {
        this(null);
    }",e,event
Lorg/pdfsam/ui/dashboard/preference/PreferenceIntTextField;.lambda$0(Lorg/pdfsam/context/UserContext;Lorg/pdfsam/context/IntUserPreference;Ljavafx/beans/value/ObservableValue;Lorg/pdfsam/ui/support/FXValidationSupport$ValidationState;Lorg/pdfsam/ui/support/FXValidationSupport$ValidationState;)V#newVal#0#2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/dashboard/preference/PreferenceIntTextField.java;,VariableName,newVal,"        setValidator(validator);
        setEnableInvalidStyle(true);
        setOnEnterValidation(true);
        validProperty().addListener((o, oldVal, newVal) -> {
            if (newVal == ValidationState.VALID) {
                userContext.setIntegerPreference(preference, Integer.parseInt(getText()));
                LOG.trace(""Preference {} set to {}"", preference, getText());
            }",val,validation
Ljava/net/URI;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/test/java/org/pdfsam/premium/DefaultPremiumModulesServiceTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/test/java/org/pdfsam/news/DefaultNewsServiceTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/configuration/EnhancedClassloaderProvider.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/ui/banner/BannerPaneTest.java;,ClassName,URI,"    public void testGetLatestNews() throws Exception {
        File file = folder.newFile();
        FileUtils.copyInputStreamToFile(getClass().getResourceAsStream(""/test_premium_modules.json""), file);
        when(pdfsam.property(ConfigurableProperty.PREMIUM_MODULES_URL)).thenReturn(file.toURI().toString());
        List<PremiumModule> modules = victim.getPremiumModules();
        assertEquals(1, modules.size());",uri,uniform resource identifier
Ljavafx/util/Duration;.millis(D)Ljavafx/util/Duration;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/notification/NotificationsContainer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/commons/Animations.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/notification/Notification.java;,MethodName,millis,"    private void fadeIn(Notification toAdd, EventHandler<ActionEvent> onFinished) {
        FadeTransition transition = new FadeTransition(Duration.millis(300), toAdd);
        transition.setFromValue(0);
        transition.setToValue(1);
        if (onFinished != null) {",millis,millisecond
Lorg/pdfsam/ui/InputPdfArgumentsLoadRequest;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/InputPdfArgumentsControllerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/ui/dialog/OpenWithDialogControllerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/ui/dialog/OpenWithDialogTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/test/java/org/pdfsam/ui/InputPdfArgumentsLoadRequestTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/dialog/OpenWithDialog.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/main/java/org/pdfsam/ui/InputPdfArgumentsLoadRequest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/InputPdfArgumentsController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/dialog/OpenWithDialogController.java;,ClassName,InputPdfArgumentsLoadRequest,"public class InputPdfArgumentsControllerTest {
    @Rule
    public ClearEventStudioRule eventStudioRule = new ClearEventStudioRule();
    @Rule
    public TemporaryFolder folder = new TemporaryFolder();

    private Listener<InputPdfArgumentsLoadRequest> listener;",pdf,portable document format
Lorg/pdfsam/support/filter/FileFilterTypeTest;.testTxt()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/test/java/org/pdfsam/support/filter/FileFilterTypeTest.java;,MethodName,testTxt,"    public void testTxt() {
        File file = mock(File.class);
        when(file.getAbsolutePath()).thenReturn(""/path/chuck.txt"");
        assertTrue(FileFilterType.TXT.accept(file));",txt,text
Lorg/pdfsam/splitbybookmarks/SplitOptionsPaneTest;.saveStateEmptyRegexp()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-split-by-bookmarks/src/test/java/org/pdfsam/splitbybookmarks/SplitOptionsPaneTest.java;,MethodName,saveStateEmptyRegexp,"    public void saveStateEmptyRegexp() {
        SplitOptionsPane victim = find("".pdfsam-container"");
        Map<String, String> data = new HashMap<>();
        victim.saveStateTo(data);",regexp,regular expression
Lorg/pdfsam/i18n/DefaultI18nContext;.i18n(Ljava/lang/String;)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-i18n/src/main/java/org/pdfsam/i18n/DefaultI18nContext.java;,MethodName,i18n,"    public String i18n(String input) {
        return i18n.tr(input);
    }",i,internationalization
Lorg/pdfsam/support/filter/FileFilterTypeTest;.testDirs()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/test/java/org/pdfsam/support/filter/FileFilterTypeTest.java;,MethodName,testDirs,"    public void testDirs() {
        File file = mock(File.class);
        when(file.isDirectory()).thenReturn(Boolean.TRUE);
        assertTrue(FileFilterType.DIRECTORIES.accept(file));",dirs,directories
Lorg/pdfsam/support/XmlUtilsTest;.setUp()V|Lorg/xml/sax/SAXException;|Ljava/io/IOException;|Ljavax/xml/parsers/ParserConfigurationException;#domFactory,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/test/java/org/pdfsam/support/XmlUtilsTest.java;,VariableName,domFactory,"    public void setUp() throws SAXException, IOException, ParserConfigurationException {
        DocumentBuilderFactory domFactory = DocumentBuilderFactory.newInstance();
        domFactory.setNamespaceAware(true);
        DocumentBuilder builder = domFactory.newDocumentBuilder();
        doc = builder.parse(getClass().getClassLoader().getResourceAsStream(""test.xml""));",dom,document
Lorg/pdfsam/ui/dashboard/preference/PreferenceConfig;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/dashboard/preference/PreferenceConfig.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/ui/dashboard/preference/PreferencePaneTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/PdfsamApp.java;,ClassName,PreferenceConfig,"public class PreferenceConfig {

    @Provides
    @Named(""localeCombo"")
    public PreferenceComboBox<LocaleKeyValueItem> localeCombo(UserContext userContext) {
        return new PreferenceComboBox<>(StringUserPreference.LOCALE, userContext);
    }",config,configuration
Lorg/pdfsam/ui/workarea/QuickbarModuleButtonsPane;.onSetCurrentModuleRequest(Lorg/pdfsam/ui/commons/SetActiveModuleRequest;)V#r#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/workarea/QuickbarModuleButtonsPane.java;,ParameterName,r,"    public void onSetCurrentModuleRequest(SetActiveModuleRequest r) {
        r.getActiveModuleId().ifPresent(id -> buttons.forEach(b -> b.setSelected(b.moduleId().equals(id))));
    }
",r,request
Lorg/pdfsam/configuration/JarSignatureFilter;.test(Ljava/nio/file/Path;)Z#p#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/configuration/JarSignatureFilter.java;,ParameterName,p,"    public boolean test(Path p) {
        return p != null && p.toString().toLowerCase().endsWith("".jar"");
    }
",p,path
Ljava/util/concurrent/CompletableFuture<>;.runAsync(Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture<Ljava/lang/Void;>;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/main/java/org/pdfsam/ui/WorkspaceController.java;,MethodName,runAsync,"    public void saveWorkspace(SaveWorkspaceEvent event) {
        LOG.debug(DefaultI18nContext.getInstance().i18n(""Requesting modules state""));
        CompletableFuture<Void> future = CompletableFuture
                .allOf(modules.stream()
                        .map(m -> CompletableFuture.runAsync(() -> eventStudio().broadcast(event, m.id())))
                        .toArray(CompletableFuture[]::new))
                .thenRun(() -> service.saveWorkspace(event.getData(), event.workspace())).whenComplete((r, e) -> {
                    if (nonNull(e)) {",async,asynchrony
Lorg/pdfsam/pdf/SAMBoxPdfLoadServiceTest;.invalidPdf()V|Ljava/io/IOException;|Ljava/lang/InterruptedException;|Ljava/util/concurrent/TimeoutException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/test/java/org/pdfsam/pdf/SAMBoxPdfLoadServiceTest.java;,MethodName,invalidPdf,"    public void invalidPdf() throws IOException, InterruptedException, TimeoutException {
        File testFile = folder.newFile(""PDFsamTest.pdf"");
        FileUtils.copyInputStreamToFile(getClass().getResourceAsStream(""/im_empty.pdf""), testFile);
        PdfDocumentDescriptor descriptor = PdfDocumentDescriptor.newDescriptorNoPassword(testFile);",pdf,portable document format
Lorg/pdfsam/splitbysize/SplitOptionsPane;.lambda$4(Ljavafx/scene/control/Toggle;)Lorg/pdfsam/splitbysize/SizeUnitRadio;#t#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-split-by-size/src/main/java/org/pdfsam/splitbysize/SplitOptionsPane.java;,VariableName,t,"        Arrays.stream(SizeUnit.values()).map(SizeUnitRadio::new).forEach(r -> {
            r.setToggleGroup(group);
            getChildren().add(r);
        });
        group.getToggles().stream().findFirst().ifPresent(t -> t.setSelected(true));
    }",t,toggle
Lorg/pdfsam/task/BulkRotateTask;.execute(Lorg/pdfsam/task/BulkRotateParameters;)V|Lorg/sejda/model/exception/TaskException;#0#0#0#tmpFile,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/main/java/org/pdfsam/task/BulkRotateTask.java;,VariableName,tmpFile,"                documentHandler = input.source.open(documentLoader);
                documentHandler.getPermissions().ensurePermission(PdfAccessPermission.ASSEMBLE);
                documentHandler.setCreatorOnPDDocument();

                File tmpFile = createTemporaryBuffer(parameters.getOutput());
                LOG.debug(""Created output on temporary buffer {}"", tmpFile);

                PdfRotator rotator = new PdfRotator(documentHandler.getUnderlyingPDDocument());
                for (Integer page : input.getPages(documentHandler.getNumberOfPages())) {",tmp,temporary
Lorg/pdfsam/ui/selection/multiple/TooltippedTextFieldTableCell;.lambda$1(Ljavafx/event/ActionEvent;)V#evt#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/selection/multiple/TooltippedTextFieldTableCell.java;,VariableName,evt,"     setGraphic(textField);
        setContentDisplay(ContentDisplay.TEXT_ONLY);

        textField.setOnAction(evt -> {
            commitEdit(this.converter.fromString(textField.getText()));
        });
        textField.focusedProperty().addListener((obs, wasFocused, isNowFocused) -> {",evt,event
Ljavafx/geometry/Pos;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-rotate/src/main/java/org/pdfsam/rotate/RotateModule.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-simple-split/src/main/java/org/pdfsam/split/SplitModule.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-extract/src/main/java/org/pdfsam/extract/ExtractModule.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/dialog/OpenWithDialog.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/news/NewsPanel.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/news/News.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-split-by-bookmarks/src/main/java/org/pdfsam/splitbybookmarks/SplitByBookmarksModule.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/quickbar/BaseQuickbarButton.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/info/BaseInfoTab.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/PdfsamApp.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/commons/ClosePane.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-alternate-mix/src/main/java/org/pdfsam/alternatemix/AlternateMixModule.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/notification/NotificationsController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-merge/src/main/java/org/pdfsam/merge/MergeModule.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-split-by-size/src/main/java/org/pdfsam/splitbysize/SplitBySizeModule.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/commons/HidingPane.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/notification/Notification.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/module/Footer.java;,ClassName,Pos,"    private VBox settingPanel() {
        VBox pane = new VBox();
        pane.setAlignment(Pos.TOP_CENTER);
        VBox.setVgrow(selectionPane, Priority.ALWAYS);

        TitledPane prefixTitled = Views.titledPane(DefaultI18nContext.getInstance().i18n(""File names settings""),
                prefix);",pos,position
Lorg/pdfsam/splitbysize/SplitOptionsPane;.lambda$3(Ljava/util/Map;Lorg/pdfsam/splitbysize/SizeUnitRadio;)V#s#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-split-by-size/src/main/java/org/pdfsam/splitbysize/SplitOptionsPane.java;,VariableName,s,"    public void restoreStateFrom(Map<String, String> data) {
        field.setText(Optional.ofNullable(data.get(""size"")).orElse(EMPTY));
        group.getToggles().stream().map(t -> {
            return (SizeUnitRadio) t;
        }).forEach(s -> s.restoreStateFrom(data));
    }",s,size
Lorg/pdfsam/TestUtils;.testEqualsAndHashCodes<T:Ljava/lang/Object;>(TT;TT;TT;TT;)V#eq3#0#2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/test/java/org/pdfsam/TestUtils.java;,ParameterName,eq3,"* @param eq1
     *            equal instance
     * @param eq2
     *            equal instance
     * @param eq3
     *            equal instance
     * @param diff
     *            not equal instance
     */
    public static <T> void testEqualsAndHashCodes(T eq1, T eq2, T eq3, T diff) {
        // not instance of
        assertFalse(eq1.equals(NOT_INSTANCE_OF));",eq,equal
Lorg/pdfsam/support/params/SinglePdfSourceTaskParametersBuilder<Lorg/pdfsam/support/params/SinglePdfSourceMultipleOutputParametersBuilder;:TP;>;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/main/java/org/pdfsam/support/params/SinglePdfSourceMultipleOutputParametersBuilder.java;,ClassName,SinglePdfSourceTaskParametersBuilder<P>,"/**
 * Abstract builder for {@link SinglePdfSourceMultipleOutputParameters}.
 * 
 * @author Andrea Vacondio
 * @param <P>
 *            type of the parameters the builder builds
 */
public abstract class SinglePdfSourceMultipleOutputParametersBuilder<P extends MultiplePdfSourceMultipleOutputParameters>
        extends AbstractPdfOutputParametersBuilder<P>
        implements SinglePdfSourceTaskParametersBuilder<P>, MultipleOutputTaskParametersBuilder<P> {",pdf,portable document format
Lorg/pdfsam/module/ModuleUsage;.inc()Lorg/pdfsam/module/ModuleUsage;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/test/java/org/pdfsam/module/StatefulPreferencesUsageServiceTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/test/java/org/pdfsam/module/ModuleUsageTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/main/java/org/pdfsam/module/PreferencesUsageDataStore.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/main/java/org/pdfsam/module/ModuleUsage.java;,MethodName,inc,"    public void getMostUsed() {
        List<ModuleUsage> usages = Arrays.asList(
                new ModuleUsage[] { fistUsage(""IDontExist""), fistUsage(""module1""), fistUsage(""module2"").inc() });
        when(injector.instance(PreferencesUsageDataStore.class).getUsages()).thenReturn(usages);
        List<Module> mostUsed = injector.instance(StatefulPreferencesUsageService.class).getMostUsed();
        assertEquals(2, mostUsed.size());",inc,increment
Lorg/pdfsam/ui/prefix/PrefixPane;.()V#ctx,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/prefix/PrefixPane.java;,VariableName,ctx,"    public PrefixPane() {
        getStyleClass().addAll(Style.CONTAINER.css());
        getStyleClass().addAll(Style.HCONTAINER.css());
        I18nContext ctx = DefaultI18nContext.getInstance();
        getChildren().addAll(new Label(DefaultI18nContext.getInstance().i18n(""Generated PDF documents name prefix:"")),
                field,
                        helpIcon(new TextFlow(
                                new Text(ctx.i18n(""Prefix for the output files name."") + System.lineSeparator()),
                                new Text(ctx.i18n(""Some special keywords are replaced with runtime values."")
                                        + System.lineSeparator()),
                        new Text(ctx.i18n(""Right click to add these keywords."")))));",ctx,context
Lorg/pdfsam/ui/dashboard/preference/PreferenceConfig;.lambda$0(Ljavafx/beans/value/ObservableValue;Lorg/pdfsam/ui/support/FXValidationSupport$ValidationState;Lorg/pdfsam/ui/support/FXValidationSupport$ValidationState;)V#newVal#0#2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/dashboard/preference/PreferenceConfig.java;,VariableName,newVal,"        logRowsNumber.setText(Integer.toString(userContext.getNumberOfLogRows()));
        logRowsNumber.setErrorMessage(
                DefaultI18nContext.getInstance().i18n(""Maximum number of rows mast be a positive number""));
        logRowsNumber.setId(""logViewRowsNumber"");
        logRowsNumber.validProperty().addListener((o, oldVal, newVal) -> {
            if (newVal == ValidationState.VALID) {
                eventStudio().broadcast(new MaxLogRowsChangedEvent());
            }
        });",val,value
Lorg/pdfsam/ui/dialog/OverwriteDialogControllerUITest;.cancelOnNotEmptyDir()V|Ljava/io/IOException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/ui/dialog/OverwriteDialogControllerUITest.java;,MethodName,cancelOnNotEmptyDir,"    public void cancelOnNotEmptyDir() throws IOException {
        SimpleSplitParameters parameters = new SimpleSplitParameters(PredefinedSetOfPages.ALL_PAGES);
        parameters.setExistingOutputPolicy(ExistingOutputPolicy.FAIL);
        folder.newFile();",dir,directory
Lorg/pdfsam/ui/io/BasePdfVersionEventTest;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/io/BasePdfVersionEventTest.java;,ClassName,BasePdfVersionEventTest,"public class BasePdfVersionEventTest {

    @Test
    public void nullArg() {
        BasePdfVersionEvent victim = new BasePdfVersionEvent(null);
        assertFalse(victim.hasPdfVersion());",pdf,portable document format
Lorg/pdfsam/premium/PremiumServiceConfig;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/main/java/org/pdfsam/premium/PremiumServiceConfig.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/main/java/org/pdfsam/Services.java;,ClassName,PremiumServiceConfig,"public class PremiumServiceConfig {
    @Provides
    PremiumModulesService news(DefaultPremiumModulesService service) {
        return service;
    }
}",config,configuration
Lorg/pdfsam/ui/io/PdfVersionConstrainedCheckBox;.(Lorg/sejda/model/pdf/PdfVersion;Ljava/lang/String;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/io/PdfVersionConstrainedCheckBox.java;,MethodName,PdfVersionConstrainedCheckBox,"/**
 * A checkbox that, when ticked, informs other component that a constraint on the output pdf document version has to be enforced.
 * 
 * @author Andrea Vacondio
 * 
 */
class PdfVersionConstrainedCheckBox extends CheckBox implements ModuleOwned {
    private PdfVersion constraint;
    private String ownerModule = StringUtils.EMPTY;",pdf,portable document format
Lorg/pdfsam/support/RequireUtils;.requireNotBlank(Ljava/lang/String;Ljava/lang/String;)V#arg#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/main/java/org/pdfsam/support/RequireUtils.java;,ParameterName,arg,"    /**
     * throws an {@link IllegalArgumentException} if the input argument is null
     * 
     * @param arg
     * @param errorMessage
     */
    public static void requireNotNull(Object arg, String errorMessage) {
        require(arg != null, errorMessage);
    }",arg,argument
Lorg/pdfsam/ui/dialog/LenientExecutionConfirmationDialogTest;.lambda$0(Lorg/pdfsam/ui/dialog/LenientExecutionConfirmationDialog;Ljavafx/event/ActionEvent;)V#a#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/ui/dialog/LenientExecutionConfirmationDialogTest.java;,VariableName,a,"        StylesConfig styles = mock(StylesConfig.class);
        LenientExecutionConfirmationDialog victim = new LenientExecutionConfirmationDialog(styles);
        Button button = new Button(""show"");
        button.setOnAction(a -> confirm = victim.response());
        return button;
    }",a,action
Lorg/pdfsam/premium/PremiumModule;.setProduct(Ljava/lang/String;)V#0#1#e,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-core/src/main/java/org/pdfsam/premium/PremiumModule.java;,VariableName,e,"    public void setProduct(String product) {
        try {
            this.product = PremiumProduct.valueOf(product.toUpperCase());
        } catch (IllegalArgumentException e) {
            this.product = PremiumProduct.OTHER;
        }
    }",e,exception
Lorg/pdfsam/ui/io/PdfVersionCombo$DefaultPdfVersionComboItem;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/io/PdfVersionCombo.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/io/PdfDestinationPane.java;,ClassName,DefaultPdfVersionComboItem,"/**
     * Default implementations for items to be used as a model for the {@link PdfVersionCombo}
     * 
     * @author Andrea Vacondio
     * 
     */
    static class DefaultPdfVersionComboItem implements PdfVersionComboItem {

        private PdfVersion version;

        public DefaultPdfVersionComboItem(PdfVersion version) {
            requireNotNull(version, ""PDF version cannot be null"");",pdf,portable document format
Lorg/pdfsam/merge/MergeParametersBuilderTest;.build()V|Ljava/io/IOException;#params,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-merge/src/test/java/org/pdfsam/merge/MergeParametersBuilderTest.java;,VariableName,params,"        PdfMergeInput input = new PdfMergeInput(source);
        victim.addInput(input);
        victim.version(PdfVersion.VERSION_1_7);
        MergeParameters params = victim.build();
        assertTrue(params.isCompress());
        assertEquals(ExistingOutputPolicy.OVERWRITE, params.getExistingOutputPolicy());
        assertEquals(PdfVersion.VERSION_1_7, params.getVersion());",params,parameters
Lorg/pdfsam/pdf/SAMBoxPdfLoadService;.lambda$2(Lorg/pdfsam/pdf/PdfLoader;)V#l#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/main/java/org/pdfsam/pdf/SAMBoxPdfLoadService.java;,VariableName,l,"    public SAMBoxPdfLoadService(List<PdfLoader<PDDocument>> loaders) {
        loaders.forEach(l -> consumers.put(l.key(), l));
    }",l,loader
Lorg/pdfsam/ui/workarea/QuickbarModuleButtonsProviderTest;.highPrio)Lorg/pdfsam/test/HighPriorityTestModule;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/ui/workarea/QuickbarModuleButtonsProviderTest.java;,FieldName,highPrio,"    public InitializeAndApplyJavaFxThreadRule javaFxThread = new InitializeAndApplyJavaFxThreadRule();

    private LowPriorityTestModule lowPrio = new LowPriorityTestModule();
    private DefaultPriorityTestModule defaultPrio = new DefaultPriorityTestModule();
    private HighPriorityTestModule highPrio = new HighPriorityTestModule();
    private List<Module> modules = Arrays.asList(defaultPrio, highPrio, lowPrio);
    private UsageService service;
    private QuickbarModuleButtonsProvider victim;",prio,priority
Lorg/pdfsam/task/TaskExecutionControllerTest;.onEventTaskEventBroadcaster()V#params,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/test/java/org/pdfsam/task/TaskExecutionControllerTest.java;,VariableName,params,"    public void request() {
        String moduleId = ""module"";
        AbstractParameters params = mock(AbstractParameters.class);
        victim.request(new TaskExecutionRequestEvent(moduleId, params));
        verify(usageService).incrementUsageFor(moduleId);
        verify(executionService, timeout(1000).times(1)).execute(params);",params,parameters
Lorg/pdfsam/ui/dashboard/preference/PreferenceCheckBox;.lambda$0(Lorg/pdfsam/context/UserContext;Ljavafx/beans/value/ObservableValue;Ljava/lang/Boolean;Ljava/lang/Boolean;)V#newVal#0#2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/main/java/org/pdfsam/ui/dashboard/preference/PreferenceCheckBox.java;,VariableName,newVal,"        requireNotNull(userContext, ""UserContext cannot be null"");
        setSelected(selected);
        this.preference = preference;
        selectedProperty().addListener((ov, oldVal, newVal) -> {
            userContext.setBooleanPreference(PreferenceCheckBox.this.preference, newVal);
            LOG.trace(""Preference {} set to {}"", PreferenceCheckBox.this.preference, newVal);
        });",val,value
Lorg/pdfsam/ui/module/OpenButtonTest;.openDirectoryClick()V|Ljava/lang/Exception;#dir,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/module/OpenButtonTest.java;,VariableName,dir,"    public void openDirectoryClick() throws Exception {
        File dir = temp.newFolder();
        DirectoryTaskOutput output = new DirectoryTaskOutput(dir);
        TestListener listener = new TestListener(dir);",dir,directory
Lorg/pdfsam/ui/io/PdfDestinationPane;.lambda$1(Ljavafx/scene/control/CheckBox;)V#c#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/io/PdfDestinationPane.java;,VariableName,c,"        super.resetView();
        version.resetView();
        compress.setSelected(true);
        discardBookmarks.ifPresent(c -> c.setSelected(false));
    }",c,check
Lorg/pdfsam/ui/selection/single/SingleSelectionPaneTest;.lambda$5(Ljavafx/scene/control/MenuItem;)V#i#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/test/java/org/pdfsam/ui/selection/single/SingleSelectionPaneTest.java;,VariableName,i,"    public void disableMenuOnInvalid() throws Exception {
        typePathAndValidate(""/this/doesnt/exists"");
        ValidableTextField victim = find("".validable-container-field"");
        victim.getContextMenu().getItems().parallelStream().filter(i -> !(i instanceof SeparatorMenuItem))
                .filter(i -> !i.getText().equals(DefaultI18nContext.getInstance().i18n(""Remove"")))
                .forEach(i -> assertTrue(i.getText(), i.isDisable()));
    }",i,item
Lorg/pdfsam/ui/selection/single/SingleSelectionPane;.initContextMenu()V#infoItem,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-fx/src/main/java/org/pdfsam/ui/selection/single/SingleSelectionPane.java;,VariableName,infoItem,"    private void initContextMenu() {
        MenuItem infoItem = createMenuItem(DefaultI18nContext.getInstance().i18n(""Document properties""),
                MaterialDesignIcon.INFORMATION_OUTLINE);
        infoItem.setAccelerator(new KeyCodeCombination(KeyCode.P, KeyCombination.ALT_DOWN));
        infoItem.setOnAction(
                e -> Platform.runLater(() -> eventStudio().broadcast(new ShowPdfDescriptorRequest(descriptor))));
",info,information
Lorg/pdfsam/splitbybookmarks/SplitByBookmarksModule;.lambda$0(Lorg/pdfsam/pdf/PdfDocumentDescriptor;)V#d#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-split-by-bookmarks/src/main/java/org/pdfsam/splitbybookmarks/SplitByBookmarksModule.java;,VariableName,d,"        this.destinationPane = destinationPane;
        this.selectionPane = new TaskParametersBuilderSingleSelectionPane(id());
        this.selectionPane.setPromptText(
                DefaultI18nContext.getInstance().i18n(""Select or drag and drop the PDF you want to split""));
        this.selectionPane.addOnLoaded(d -> splitOptions.setValidBookmarkLevels(d.getValidBookmarksLevels()));
        initModuleSettingsPanel(settingPanel());
    }",d,descriptor
Lorg/pdfsam/task/BulkRotateTaskTest;.lambda$2(Lorg/sejda/sambox/pdmodel/PDDocument;)V#d#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-service/src/test/java/org/pdfsam/task/BulkRotateTaskTest.java;,VariableName,d,"        testContext.directoryOutputTo(parameters);
        execute(parameters);
        testContext.assertTaskCompleted();
        testContext.assertCreator().assertPages(4)
                .forEachPdfOutput(d -> d.getPages().forEach(p -> assertEquals(180, p.getRotation())));
    }",d,document
Lorg/pdfsam/ui/info/InfoStageTest;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pdfsam/pdfsam-gui/src/test/java/org/pdfsam/ui/info/InfoStageTest.java;,ClassName,InfoStageTest,"public class InfoStageTest extends GuiTest {
    @Rule
    public ClearEventStudioRule clearStudio = new ClearEventStudioRule();
    private Injector injector;",info,information
Lnet/sourceforge/pmd/ant/Formatter;.addConfiguredParam(LParameter;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/ant/Formatter.java;,MethodName,addConfiguredParam,"    public void addConfiguredParam(Parameter parameter) {
 this.parameters.add(parameter);
    }",param,parameter
Lnet/sourceforge/pmd/ant/PMDTask;.setAuxClasspathRef(LReference;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/ant/PMDTask.java;,MethodName,setAuxClasspathRef," public void setAuxClasspathRef(Reference r) {
  createAuxClasspath().setRefid(r);
 }",ref,reference
Lnet/sourceforge/pmd/ant/PMDTask;.setAuxClasspathRef(LReference;)V#r#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/ant/PMDTask.java;,ParameterName,r," public void setAuxClasspathRef(Reference r) {
  createAuxClasspath().setRefid(r);
 }",r,reference
Lnet/sourceforge/pmd/ant/RuleSetWrapper;.addText(Ljava/lang/String;)V#t#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/ant/RuleSetWrapper.java;,ParameterName,t,"    public final void addText(String t) {
        this.file = t;
    }",t,text
Lnet/sourceforge/pmd/benchmark/Benchmarker;.main([Ljava/lang/String;)V|Lnet/sourceforge/pmd/RuleSetNotFoundException;|Ljava/io/IOException;|Lnet/sourceforge/pmd/PMDException;#srcDir,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/benchmark/Benchmarker.java;,VariableName,srcDir,"        if (languageVersion == null) {
         languageVersion = language.getDefaultVersion();
        }

        String srcDir = findOptionalStringValue(args, ""--source-directory"", ""/usr/local/java/src/java/lang/"");
        List<DataSource> dataSources = FileUtil.collectFiles(srcDir, new LanguageFilenameFilter(language));

        boolean debug = findBooleanSwitch(args, ""--debug"");
        boolean parseOnly = findBooleanSwitch(args, ""--parse-only"");",src,source
Lnet/sourceforge/pmd/cli/PMDCommandLineInterface;.PROG_NAME)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cli/PMDCommandLineInterface.java;,FieldName,PROG_NAME,"public class PMDCommandLineInterface {

 public static final String PROG_NAME = ""pmd"";

 public static final String NO_EXIT_AFTER_RUN = ""net.sourceforge.pmd.cli.noExit"";
 public static final String STATUS_CODE_PROPERTY = ""net.sourceforge.pmd.cli.status"";

 public static final int ERROR_STATUS = 1;",prog,program
Lnet/sourceforge/pmd/cli/PMDParameters;.setUri(Ljava/lang/String;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cli/PMDParameters.java;,MethodName,setUri,"    /**
     * @param uri the uri specifying the source directory.
     */
    public void setUri(String uri) {
        this.uri = uri;
    }",uri,unicode resource identifier
Lnet/sourceforge/pmd/cli/PMDParameters;.setUri(Ljava/lang/String;)V#uri#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cli/PMDParameters.java;,ParameterName,uri,"    /**
     * @param uri the uri specifying the source directory.
     */
    public void setUri(String uri) {
        this.uri = uri;
    }",uri,unicode resource identifier
Lnet/sourceforge/pmd/cli/PMDParameters;.transformParametersIntoConfiguration(Lnet/sourceforge/pmd/cli/PMDParameters;)Lnet/sourceforge/pmd/PMDConfiguration;#params#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cli/PMDParameters.java;,ParameterName,params,"    public static PMDConfiguration transformParametersIntoConfiguration(PMDParameters params) {
        if (null == params.getSourceDir() && null == params.getUri()) {
            throw new IllegalArgumentException(
                    ""Please provide either source root directory (-dir or -d) or database URI (-uri or -u) parameter"");
        }",params,parameters
Lnet/sourceforge/pmd/cpd/AbstractTokenizer;.ignorableStmt)Ljava/util/List<Ljava/lang/String;>;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cpd/AbstractTokenizer.java;,FieldName,ignorableStmt," protected List<String> stringToken;      // List<String>, should be set by sub classes
 protected List<String> ignorableCharacter;  // List<String>, should be set by sub classes
            // FIXME:Maybe an array of 'char' would be better for performance ?
 protected List<String> ignorableStmt;   // List<String>, should be set by sub classes
 protected char oneLineCommentChar = '#'; // Most script languages ( shell, ruby, python,...) use this symbol for comment line

 private List<String> code;
 private int lineNumber = 0;",stmt,statement
Lnet/sourceforge/pmd/cpd/AbstractTokenizer;.getCommentToken(Ljava/lang/StringBuilder;I)I#loc#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cpd/AbstractTokenizer.java;,ParameterName,loc,"    private int getTokenFromLine(StringBuilder token, int loc) {
        for (int j = loc; j < currentLine.length(); j++) {
            char tok = currentLine.charAt(j);
            if (!Character.isWhitespace(tok) && !ignoreCharacter(tok)) {",loc,location
Lnet/sourceforge/pmd/cpd/CPD;.add(Lnet/sourceforge/pmd/util/database/DBURI;)V|Ljava/io/IOException;#0#1#sqlException,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cpd/CPD.java;,VariableName,sqlException,"          add(sourceCode);
        }
      }
      catch (Exception sqlException)
      {
        LOGGER.log(Level.SEVERE, ""Problem with Input URI"", sqlException);
        throw new RuntimeException(""Problem with DBURI: ""+dburi , sqlException ) ; 
      }",sql,structured query language
Recovered#typeBindingLTokenMgrError;0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cpd/CPD.java;,ClassName,TokenMgrError,"        TokenEntry.State savedTokenEntry = new TokenEntry.State(tokens.getTokens());
        try {
            addAndThrowLexicalError(sourceCode);
        } catch (TokenMgrError e) {
            System.err.println(""Skipping "" + e.getMessage());
            tokens.getTokens().clear();
            tokens.getTokens().addAll(savedTokenEntry.restore());
        }",mgr,mgr
Lnet/sourceforge/pmd/cpd/CPD;.addAllInDirectory(Ljava/lang/String;)V|Ljava/io/IOException;#dir#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cpd/CPD.java;,ParameterName,dir,"    public void addAllInDirectory(String dir) throws IOException {
        addDirectory(dir, false);
    }",dir,directory
Lnet/sourceforge/pmd/cpd/CPDCommandLineInterface;.progName)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cpd/CPDCommandLineInterface.java;,FieldName,progName," private static final int DUPLICATE_CODE_FOUND = 4;

 public static final String NO_EXIT_AFTER_RUN = ""net.sourceforge.pmd.cli.noExit"";
 public static final String STATUS_CODE_PROPERTY = ""net.sourceforge.pmd.cli.status"";

 private static final String progName = ""cpd"";

 public static void setStatusCodeOrExit(int status) {
  if (isExitAfterRunSet())
   System.exit(status);",prog,program
Lnet/sourceforge/pmd/cpd/CPDTask;.createLanguage()Lnet/sourceforge/pmd/cpd/Language;#p,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cpd/CPDTask.java;,VariableName,p,"    private Language createLanguage() {
        Properties p = new Properties();
        if (ignoreLiterals) {
            p.setProperty(Tokenizer.IGNORE_LITERALS, ""true"");
        }",p,properties
Lnet/sourceforge/pmd/cpd/CPDTask;.CSV_FORMAT)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cpd/CPDTask.java;,FieldName,CSV_FORMAT,"public class CPDTask extends Task {

    private static final String TEXT_FORMAT = ""text"";
    private static final String XML_FORMAT = ""xml"";
    private static final String CSV_FORMAT = ""csv"";

    private String format = TEXT_FORMAT;
    private String language = ""java"";
    private int minimumTokenCount;",csv,comma separated values
Lnet/sourceforge/pmd/cpd/CSVRenderer;.(C)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cpd/CSVRenderer.java;,MethodName,CSVRenderer," public CSVRenderer(char separatorChar) {
  separator = separatorChar;
 }
 ",csv,comma separated values
Lnet/sourceforge/pmd/cpd/GUI;.createTimer()Ljavax/swing/Timer;#t,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cpd/GUI.java;,VariableName,t,"            cpd.addAllInDirectory(dirPath);
                }
            }
            Timer t = createTimer();
            t.start();
            cpd.go();
            t.stop();",t,timer
Lnet/sourceforge/pmd/cpd/GUI;.copyMatchListSelectionsToClipboard()V#ss,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cpd/GUI.java;,VariableName,ss,"       sb.append(resultsTable.getValueAt(selectionIndices[r], c));
      }
     }

     StringSelection ss = new StringSelection(sb.toString());
        Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
    }
",ss,string selection
Lnet/sourceforge/pmd/cpd/GUI$SaveListener;.actionPerformed(Ljava/awt/event/ActionEvent;)V#0#pw,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cpd/GUI.java;,VariableName,pw,"            if (!f.canWrite()) {
                PrintWriter pw = null;
                try {
                    pw = new PrintWriter(new FileOutputStream(f));
                    pw.write(renderer.render(matches.iterator()));",pw,print writer
Lnet/sourceforge/pmd/cpd/GUI;.setLabelFor(Lnet/sourceforge/pmd/cpd/Match;)Ljava/lang/String;#1#separatorPos,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cpd/GUI.java;,VariableName,separatorPos,"     if (sourceIDs.size() == 1) {
      String sourceId = sourceIDs.iterator().next();
      int separatorPos = sourceId.lastIndexOf(File.separatorChar);
      label = ""..."" + sourceId.substring(separatorPos);
      } else {
          label = ""("" + sourceIDs.size() + "" separate files)"";",pos,position
Lnet/sourceforge/pmd/cpd/GUI$25207;.removeTableModelListener(Ljavax/swing/event/TableModelListener;)V#l#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cpd/GUI.java;,ParameterName,l,public void removeTableModelListener(TableModelListener l) { },l,listener
Lnet/sourceforge/pmd/cpd/GUI;.()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cpd/GUI.java;,MethodName,GUI,"    public static void main(String[] args) {
     //this should prevent the disk not found popup
        // System.setSecurityManager(null);
        new GUI();
    }",gui,graphical user interface
Lnet/sourceforge/pmd/cpd/GUI$SaveListener;.actionPerformed(Ljava/awt/event/ActionEvent;)V#evt#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cpd/GUI.java;,ParameterName,evt,"        public void actionPerformed(ActionEvent evt) {
            JFileChooser fcSave = new JFileChooser();
            int ret = fcSave.showSaveDialog(GUI.this.frame);
            File f = fcSave.getSelectedFile();",evt,event
Lnet/sourceforge/pmd/cpd/GUI;.go()V#0#0#config,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cpd/GUI.java;,VariableName,config,"    private boolean isLegalPath(String path, LanguageConfig config) {
     String[] extensions = config.extensions();
     for (int i=0; i<extensions.length; i++) {
      if (path.endsWith(extensions[i]) && extensions[i].length() > 0) {",config,configuration
Lnet/sourceforge/pmd/cpd/GUI;.setListDataFrom(Ljava/util/Iterator;)V#colModel,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cpd/GUI.java;,VariableName,colModel,"    private void setListDataFrom(Iterator iter) {

     resultsTable.setModel(tableModelFrom(matches));

     TableColumnModel colModel = resultsTable.getColumnModel();
     TableColumn column;
     int width;",col,column
Lnet/sourceforge/pmd/cpd/TokenEntry;.getTokenSrcID()Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cpd/MatchAlgorithm.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cpd/TokenEntry.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cpd/CSVRenderer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cpd/SimpleRenderer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cpd/XMLRenderer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cpd/VSRenderer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cpd/GUI.java;,MethodName,getTokenSrcID,"                match.setLineCount(tokens.getLineCount(mark, match));
                int start = mark.getBeginLine();
                int end = start + match.getLineCount() - 1;
                SourceCode sourceCode = source.get(mark.getTokenSrcID());
                match.setSourceCodeSlice(sourceCode.getSlice(start, end));
            }
        }
        cpdListener.phaseUpdate(CPDListener.DONE);",src,source
Lnet/sourceforge/pmd/cpd/TokenEntry;.EOF)Lnet/sourceforge/pmd/cpd/TokenEntry;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cpd/MatchAlgorithm.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cpd/TokenEntry.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cpd/Tokens.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cpd/MatchCollector.java;,FieldName,EOF," Map<TokenEntry, Object> markGroups = new HashMap<TokenEntry, Object>(tokens.size());
        for (int i = code.size() - 1; i >= 0; i--) {
            TokenEntry token = code.get(i);
            if (token != TokenEntry.EOF) {
                int last = tokenAt(min, token).getIdentifier();
                lastHash = MOD * lastHash + token.getIdentifier() - lastMod * last;
                token.setHashCode(lastHash);",eof,end of file
Lnet/sourceforge/pmd/cpd/TokenEntry;.(Ljava/lang/String;Ljava/lang/String;I)V#tokenSrcID#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cpd/TokenEntry.java;,ParameterName,tokenSrcID,"public TokenEntry(String image, String tokenSrcID, int beginLine) {
        Integer i = TOKENS.get().get(image);
        if (i == null) {
            i = TOKENS.get().size() + 1;",src,source
Lnet/sourceforge/pmd/cpd/TokenEntry;.getEOF()Lnet/sourceforge/pmd/cpd/TokenEntry;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cpd/TokenEntry.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cpd/AbstractTokenizer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cpd/AnyTokenizer.java;,MethodName,getEOF,"    public static TokenEntry getEOF() {
        tokenCount.get().getAndIncrement();
        return EOF;
    }",eof,end of file
Ljava/lang/Integer;.intValue()I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cpd/TokenEntry.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/SummaryHTMLRenderer.java;,MethodName,intValue,"        for (Map.Entry<String, Integer> e : TOKENS.get().entrySet()) {
            if (e.getValue().intValue() == identifier) {
                return e.getKey();
            }
        }",int,integer
Lnet/sourceforge/pmd/cpd/Tokens;.getLineCount(Lnet/sourceforge/pmd/cpd/TokenEntry;Lnet/sourceforge/pmd/cpd/Match;)I#endTok,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cpd/Tokens.java;,VariableName,endTok,"    public int getLineCount(TokenEntry mark, Match match) {
        TokenEntry endTok = get(mark.getIndex() + match.getTokenCount() - 1);
        if (endTok == TokenEntry.EOF) {
            endTok = get(mark.getIndex() + match.getTokenCount() - 2);
        }",tok,token
Lnet/sourceforge/pmd/cpd/XMLRenderer;.xmlDocToString(Lorg/w3c/dom/Document;)Ljava/lang/String;#0#0#tf,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cpd/XMLRenderer.java;,VariableName,tf," private String xmlDocToString(Document doc) {
        try {
         TransformerFactory tf = TransformerFactory.newInstance();
         Transformer transformer = tf.newTransformer();
         transformer.setOutputProperty(OutputKeys.METHOD, ""xml"");
         transformer.setOutputProperty(OutputKeys.ENCODING, encoding);",tf,transformer factory
Lnet/sourceforge/pmd/dcd/asm/PrintVisitor;.printlnIndent(Ljava/lang/String;)V#s#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/dcd/asm/PrintVisitor.java;,ParameterName,s," public void printlnIndent(String s) {
  println(this.level + 1, s);
 }",s,string
Lnet/sourceforge/pmd/dcd/asm/TypeSignatureVisitor;.init()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/dcd/asm/TypeSignatureVisitor.java;,MethodName,init,"    public void init() {
 typeType = FIELD_TYPE;
 type = null;
 arrayDimensions = 0;",init,initialize
Lnet/sourceforge/pmd/dcd/graph/ClassNodeComparator;.compare(Ljava/lang/Object;Ljava/lang/Object;)I#obj1#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/dcd/graph/ClassNodeComparator.java;,ParameterName,obj1," public int compare(Object obj1, Object obj2) {
  if (obj1 instanceof String && obj2 instanceof String) {
   return ((String)obj1).compareTo((String)obj2);
  } else if (obj1 instanceof String) {",obj,object
Lnet/sourceforge/pmd/dcd/graph/UsageGraphBuilder$MyMethodVisitor;.visitVarInsn(II)V#var#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/dcd/graph/UsageGraphBuilder.java;,ParameterName,var,"  public void visitIincInsn(int var, int increment) {
   if (TRACE) {
    println(""visitIincInsn:"");
    printlnIndent(""var: "" + var);",var,variable
Lnet/sourceforge/pmd/dcd/graph/UsageGraphBuilder$MyMethodVisitor;.visitVarInsn(II)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/dcd/graph/UsageGraphBuilder.java;,MethodName,visitVarInsn,"  public void visitVarInsn(int opcode, int var) {
   if (TRACE) {
    println(""visitVarInsn:"");
    printlnIndent(""opcode: "" + opcode);",var,variable
Lnet/sourceforge/pmd/dcd/graph/UsageGraphBuilder$MyClassVisitor;.printlnIndent(Ljava/lang/String;)V#s#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/dcd/graph/UsageGraphBuilder.java;,ParameterName,s," class MyClassVisitor extends ClassVisitor {
     private final PrintVisitor p;
     protected void println(String s) {
         p.println(s);
     }",s,signature
Lnet/sourceforge/pmd/dcd/graph/UsageGraphBuilder$MyMethodVisitor;.visitVarInsn(II)V#opcode#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/dcd/graph/UsageGraphBuilder.java;,ParameterName,opcode,"  public void visitFieldInsn(int opcode, String owner, String name, String desc) {
   if (TRACE) {
    println(""visitFieldInsn:"");
    printlnIndent(""opcode: "" + opcode);",opcode,operational code
Lnet/sourceforge/pmd/dcd/graph/UsageGraphBuilder$MyClassVisitor;.visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)LMethodVisitor;#desc#0#2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/dcd/graph/UsageGraphBuilder.java;,ParameterName,desc,"  public void visitFieldInsn(int opcode, String owner, String name, String desc) {
   if (TRACE) {
    println(""visitFieldInsn:"");
    printlnIndent(""opcode: "" + opcode);
    printlnIndent(""owner: "" + owner);",desc,descriptor
Lnet/sourceforge/pmd/lang/ast/AbstractNode;.getAsDocument()Lorg/w3c/dom/Document;#0#1#pce,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/ast/AbstractNode.java;,VariableName,pce,"     Document document = db.newDocument();
     appendElement(document);
     return document;
 } catch (ParserConfigurationException pce) {
     throw new RuntimeException(pce);
 }",pce,parser configuration exception
Lnet/sourceforge/pmd/lang/ast/AbstractNode;.jjtGetNumChildren()I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/ast/AbstractNode.java;,MethodName,jjtGetNumChildren,"    public int jjtGetNumChildren() {
     return children == null ? 0 : children.length;
    }",num,number
Lnet/sourceforge/pmd/lang/ast/AbstractNode;.appendElement(Lorg/w3c/dom/Node;)V#1#iter,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/ast/AbstractNode.java;,VariableName,iter," String elementName = docNav.getElementName(this);
 Element element = ownerDocument.createElement(elementName);
 parentNode.appendChild(element);
 for (Iterator<Attribute> iter = docNav.getAttributeAxisIterator(this); iter.hasNext();) {
     Attribute attr = iter.next();
     element.setAttribute(attr.getName(), attr.getStringValue());
 }",iter,iterator
Lnet/sourceforge/pmd/lang/ast/AbstractNode;.getAsDocument()Lorg/w3c/dom/Document;#0#0#dbf,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/ast/AbstractNode.java;,VariableName,dbf,"    public Document getAsDocument() {
 try {
     DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
     DocumentBuilder db = dbf.newDocumentBuilder();
     Document document = db.newDocument();
     appendElement(document);",dbf,document builder factory
Lnet/sourceforge/pmd/lang/ast/xpath/Attribute;.getStringValue()Ljava/lang/String;#v,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/ast/xpath/Attribute.java;,VariableName,v," if (stringValue != null) {
     return stringValue;
 }
 Object v = this.value;
 if (this.value == null) {
     v = getValue();
 }",v,variable access
Lnet/sourceforge/pmd/lang/ast/xpath/Attribute;.getStringValue()Ljava/lang/String;#v,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/ast/xpath/Attribute.java;,VariableName,v,"if (this.value == null) {
     v = getValue();
 }
 if (v == null) {
     stringValue = """";
 } else {
     stringValue = String.valueOf(v);",v,value
Lnet/sourceforge/pmd/lang/ast/xpath/Attribute;.EMPTY_OBJ_ARRAY)[Ljava/lang/Object;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/ast/xpath/Attribute.java;,FieldName,EMPTY_OBJ_ARRAY,"public class Attribute {

    private static final Object[] EMPTY_OBJ_ARRAY = new Object[0];
    private Node parent;
    private String name;
    private Method method;",obj,object
Lnet/sourceforge/pmd/lang/ast/xpath/AttributeAxisIterator;.currObj)Lnet/sourceforge/pmd/lang/ast/xpath/Attribute;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/ast/xpath/AttributeAxisIterator.java;,FieldName,currObj,"            return n;
        }
    }

    private Attribute currObj;
    private MethodWrapper[] methodWrappers;
    private int position;
    private Node node;",obj,object
Lnet/sourceforge/pmd/lang/ast/xpath/AttributeAxisIterator$MethodWrapper;.(Ljava/lang/reflect/Method;)V#m#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/ast/xpath/AttributeAxisIterator.java;,ParameterName,m,"    private static class MethodWrapper {
        public Method method;
        public String name;

        public MethodWrapper(Method m) {
            this.method = m;
            this.name = truncateMethodName(m.getName());
        }",m,method
Lnet/sourceforge/pmd/lang/ast/xpath/DocumentNavigator$5229;.getNextNode(Lnet/sourceforge/pmd/lang/ast/Node;)Lnet/sourceforge/pmd/lang/ast/Node;#0#n,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/ast/xpath/DocumentNavigator.java;,VariableName,n," if (node == null) {
      return null;
  } else {
      Node n = getFirstChild(node);
      if (n == null) {
   n = getNextSibling(node);
      }",n,node
Lnet/sourceforge/pmd/lang/ast/xpath/NodeIterator;.getPreviousSibling(Lnet/sourceforge/pmd/lang/ast/Node;)Lnet/sourceforge/pmd/lang/ast/Node;#0#prevPosition,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/ast/xpath/NodeIterator.java;,VariableName,prevPosition,"    protected Node getPreviousSibling(Node contextNode) {
        Node parentNode = contextNode.jjtGetParent();
        if (parentNode != null) {
            int prevPosition = getPositionFromParent(contextNode) - 1;
            if (prevPosition >= 0) {
                return parentNode.jjtGetChild(prevPosition);
            }",prev,previous
Lnet/sourceforge/pmd/lang/ast/xpath/saxon/AbstractNodeInfo;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/ast/xpath/saxon/DocumentNode.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/ast/xpath/saxon/AbstractNodeInfo.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/ast/xpath/saxon/ElementNode.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/ast/xpath/saxon/AttributeNode.java;,ClassName,AbstractNodeInfo,"public class AbstractNodeInfo implements VirtualNode, SiblingCountingNode {
    /**
     * {@inheritDoc}
     */
    public String getSystemId() {
 throw createUnsupportedOperationException(""Source.getSystemId()"");
    }",info,information
[LNodeInfo;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/ast/xpath/saxon/ElementNode.java;,ClassName,NodeInfo[],"/**
 * A Saxon OM Element type node for an AST Node.
 */
public class ElementNode extends AbstractNodeInfo {

    protected final DocumentNode document;
    protected final ElementNode parent;
    protected final Node node;",info,information
Lnet/sourceforge/pmd/lang/ast/xpath/saxon/ElementNode;.(Lnet/sourceforge/pmd/lang/ast/xpath/saxon/DocumentNode;Lnet/sourceforge/pmd/lang/ast/xpath/saxon/IdGenerator;Lnet/sourceforge/pmd/lang/ast/xpath/saxon/ElementNode;Lnet/sourceforge/pmd/lang/ast/Node;I)V#0#i,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/ast/xpath/saxon/ElementNode.java;,VariableName,i," if (node.jjtGetNumChildren() > 0) {
     this.children = new NodeInfo[node.jjtGetNumChildren()];
     for (int i = 0; i < children.length; i++) {
  children[i] = new ElementNode(document, idGenerator, this, node.jjtGetChild(i), i);
     }
 } else {",i,index
Lnet/sourceforge/pmd/lang/dfa/AbstractDataFlowNode;.toString()Ljava/lang/String;#newTmp,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/dfa/AbstractDataFlowNode.java;,VariableName,newTmp,"    public String toString() {
 String res = ""DataFlowNode: line "" + this.getLine() + "", "";
 String tmp = type.toString();
 String newTmp = """";
 for (char c : tmp.toCharArray()) {
     if (c != '{' && c != '}' && c != ' ') {
  newTmp += c;",tmp,temporary
Lnet/sourceforge/pmd/lang/dfa/AbstractDataFlowNode;.toString()Ljava/lang/String;#1#0#newTmpInt,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/dfa/AbstractDataFlowNode.java;,VariableName,newTmpInt,"  newTmp += c;
     }
 }
 for (StringTokenizer st = new StringTokenizer(newTmp, "",""); st.hasMoreTokens();) {
     int newTmpInt = Integer.parseInt(st.nextToken());
     res += ""("" + stringFromType(newTmpInt) + "")"";
 }",tmp,temporary
Lnet/sourceforge/pmd/lang/dfa/AbstractDataFlowNode;.toString()Ljava/lang/String;#1#0#newTmpInt,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/dfa/AbstractDataFlowNode.java;,VariableName,newTmpInt,"  newTmp += c;
     }
 }
 for (StringTokenizer st = new StringTokenizer(newTmp, "",""); st.hasMoreTokens();) {
     int newTmpInt = Integer.parseInt(st.nextToken());
     res += ""("" + stringFromType(newTmpInt) + "")"";
 }",int,integer
Lnet/sourceforge/pmd/lang/dfa/Linker;.computeWhile(II)V#wStart,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/dfa/Linker.java;,VariableName,wStart,"    private void computeWhile(int first, int last) {
        LOGGER.entering(CLASS_NAME,""computeWhile with first and last of"" 
                        + first + "","" + last
                        );
 DataFlowNode wStart = this.braceStack.get(first).getDataFlowNode();
 DataFlowNode wEnd = this.braceStack.get(last).getDataFlowNode();

 DataFlowNode end = wEnd.getFlow().get(wEnd.getIndex() + 1);",w,while
Lnet/sourceforge/pmd/lang/dfa/Linker;.computeWhile(II)V#wEnd,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/dfa/Linker.java;,VariableName,wEnd,"private void computeWhile(int first, int last) {
        LOGGER.entering(CLASS_NAME,""computeWhile with first and last of"" 
                        + first + "","" + last
                        );
 DataFlowNode wStart = this.braceStack.get(first).getDataFlowNode();
 DataFlowNode wEnd = this.braceStack.get(last).getDataFlowNode();

 DataFlowNode end = wEnd.getFlow().get(wEnd.getIndex() + 1);

 if (wStart.getIndex() != wEnd.getIndex()) {
     end.reverseParentPathsTo(wStart);",w,while
Lnet/sourceforge/pmd/lang/dfa/Linker;.computeFor(II)V#fSt,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/dfa/Linker.java;,VariableName,fSt,"private void computeFor(int firstIndex, int lastIndex) {
        LOGGER.entering(CLASS_NAME,""computeFor"");
 DataFlowNode fExpr = null;
 DataFlowNode fUpdate = null;
 DataFlowNode fSt = null;
 DataFlowNode fEnd = null;
 boolean isUpdate = false;",st,start
Lnet/sourceforge/pmd/lang/dfa/Linker;.computeDo(II)V#doSt,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/dfa/Linker.java;,VariableName,doSt,"private void computeDo(int first, int last) {
        LOGGER.entering(CLASS_NAME,""computeDo"");
 DataFlowNode doSt = this.braceStack.get(first).getDataFlowNode();
 DataFlowNode doExpr = this.braceStack.get(last).getDataFlowNode();
 DataFlowNode doFirst = doSt.getFlow().get(doSt.getIndex() + 1);
 if (doFirst.getIndex() != doExpr.getIndex()) {",st,stack
Lnet/sourceforge/pmd/lang/dfa/Linker;.computePaths()V|Lnet/sourceforge/pmd/lang/dfa/LinkerException;|Lnet/sourceforge/pmd/lang/dfa/SequenceException;#sc,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/dfa/Linker.java;,VariableName,sc,"// Returns true if there are more sequences, computes the first and
 // the last index of the sequence.
        LOGGER.fine(""SequenceChecking continueBreakReturnStack elements"");
 SequenceChecker sc = new SequenceChecker(braceStack);
 while (!sc.run()) {
  if (LOGGER.isLoggable(Level.FINE)) {
          LOGGER.fine(""After sc.run - starting Sequence checking loop with firstIndex="" + sc.getFirstIndex() 
                      + "", lastIndex "" + sc.getLastIndex() 
                      +"" with this StackList ""+dump(""braceStack"",braceStack)
                     );",sc,second
Lnet/sourceforge/pmd/lang/dfa/Linker;.computeSwitch(II)V#sStart,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/dfa/Linker.java;,VariableName,sStart,"private void computeSwitch(int firstIndex, int lastIndex) {
        LOGGER.entering(CLASS_NAME,""computeSwitch"" );

 int diff = lastIndex - firstIndex;
 boolean defaultStatement = false;

 DataFlowNode sStart = this.braceStack.get(firstIndex).getDataFlowNode();
 DataFlowNode sEnd = this.braceStack.get(lastIndex).getDataFlowNode();
 DataFlowNode end = sEnd.getChildren().get(0);",s,stack
Lnet/sourceforge/pmd/lang/dfa/Linker;.computeSwitch(II)V#diff,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/dfa/Linker.java;,VariableName,diff,"private void computeSwitch(int firstIndex, int lastIndex) {
        LOGGER.entering(CLASS_NAME,""computeSwitch"" );

 int diff = lastIndex - firstIndex;
 boolean defaultStatement = false;

 DataFlowNode sStart = this.braceStack.get(firstIndex).getDataFlowNode();
 DataFlowNode sEnd = this.braceStack.get(lastIndex).getDataFlowNode();
 DataFlowNode end = sEnd.getChildren().get(0);",diff,difference
Lnet/sourceforge/pmd/lang/dfa/pathfinder/DAAPathFinder;.countLoops()I#0#0#0#tNode,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/dfa/pathfinder/DAAPathFinder.java;,VariableName,tNode,"            // for some unknown reasons the parent of treeNode might be null, see bug 1597987
            int childCount = treeNode.getParent().getChildCount();
            for (int i = 0; i < childCount; i++) {
                DefaultMutableTreeNode tNode = (DefaultMutableTreeNode) treeNode.getParent().getChildAt(i);
                PathElement e = (PathElement) tNode.getUserObject();
                if (e != null && !e.isPseudoPathElement()) {
                    counter++;",t,tree
Lnet/sourceforge/pmd/lang/dfa/pathfinder/DAAPathFinder;.MAX_PATHS)I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/dfa/pathfinder/DAAPathFinder.java;,FieldName,MAX_PATHS,"public class DAAPathFinder {
    private static final int MAX_PATHS = 5000;

    private DataFlowNode rootNode;
    private Executable shim;
    private CurrentPath currentPath = new CurrentPath();",max,maximum
Lnet/sourceforge/pmd/lang/dfa/report/ReportHTMLPrintVisitor;.renderViolation(Lnet/sourceforge/pmd/lang/dfa/report/ViolationNode;)V#vnode#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/dfa/report/ReportHTMLPrintVisitor.java;,ParameterName,vnode,"private void renderViolation(ViolationNode vnode) {

  vnode.getParent().addNumberOfViolation(1);
  RuleViolation vio = vnode.getRuleViolation();
  classBuf.append(""<tr>"" +
          "" <td>"" + vio.getMethodName() + ""</td>"" +
          "" <td>"" + this.displayRuleViolation(vio) + ""</td>"" +
          ""</tr>"");",vnode,violation node
Lnet/sourceforge/pmd/lang/dfa/report/ReportHTMLPrintVisitor;.renderViolation(Lnet/sourceforge/pmd/lang/dfa/report/ViolationNode;)V#vio,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/dfa/report/ReportHTMLPrintVisitor.java;,VariableName,vio,"private void renderViolation(ViolationNode vnode) {

  vnode.getParent().addNumberOfViolation(1);
  RuleViolation vio = vnode.getRuleViolation();
  classBuf.append(""<tr>"" +
          "" <td>"" + vio.getMethodName() + ""</td>"" +
          "" <td>"" + this.displayRuleViolation(vio) + ""</td>"" +
          ""</tr>"");
 }",vio,violation
Lnet/sourceforge/pmd/lang/dfa/report/ReportHTMLPrintVisitor;.baseDir)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/dfa/report/ReportHTMLPrintVisitor.java;,FieldName,baseDir," private StringBuilder packageBuf = new StringBuilder();
    @SuppressWarnings(""PMD.AvoidStringBufferField"")
    private StringBuilder classBuf = new StringBuilder();
    private int length;
    private String baseDir;

    private static final String FILE_SEPARATOR = System.getProperty(""file.separator"");

    public ReportHTMLPrintVisitor(String baseDir) {
        this.baseDir = baseDir;",dir,directory
Lnet/sourceforge/pmd/lang/dfa/report/ReportTree;.addRuleViolation(Lnet/sourceforge/pmd/RuleViolation;)V#tmp,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/dfa/report/ReportTree.java;,VariableName,tmp,"  /*
   * Filters duplicated rule violations. Like the comparator in
   * RuleViolation if he already exists.
   */
  ViolationNode tmp = new ViolationNode(violation);
  if (!equalsNodeInLevel(level, tmp)) {
   level.add(tmp);
  }
 }",tmp,temporary
Lnet/sourceforge/pmd/lang/dfa/report/ReportTree;.isStringInLevel(Ljava/lang/String;)Z#str#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/dfa/report/ReportTree.java;,ParameterName,str,"/**
  * Checks if the packageName or the className is a child of the current
  * (this.level) node. If it's true, the current node changes to the child
  * node.
  */
 private boolean isStringInLevel(String str) {

  for (int i = 0; i < level.getChildCount(); i++) {
   final AbstractReportNode child = level.getChildAt(i);
   final String tmp;",str,string
Lnet/sourceforge/pmd/lang/dfa/report/ReportTree$TreeIterator;.iterNode)Lnet/sourceforge/pmd/lang/dfa/report/AbstractReportNode;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/dfa/report/ReportTree.java;,FieldName,iterNode,"private PackageNode rootNode = new PackageNode("""");
 private AbstractReportNode level;

 private class TreeIterator implements Iterator<RuleViolation> {

  private AbstractReportNode iterNode = rootNode;
  private boolean hasNextFlag;

  public void remove() {
   throw new UnsupportedOperationException();",iter,iterator
Lnet/sourceforge/pmd/lang/dfa/SequenceChecker;#0#doSt,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/dfa/SequenceChecker.java;,VariableName,doSt," Status forUpdate = new Status(NodeType.FOR_UPDATE);
 Status forSt = new Status(NodeType.FOR_BEFORE_FIRST_STATEMENT);
 Status forEnd = new Status(NodeType.FOR_END, true);

 Status doSt = new Status(NodeType.DO_BEFORE_FIRST_STATEMENT);
 Status doExpr = new Status(NodeType.DO_EXPR, true);

 Status labelNode = new Status(NodeType.LABEL_STATEMENT);
 Status labelEnd = new Status(NodeType.LABEL_LAST_STATEMENT, true);",st,status
Lnet/sourceforge/pmd/lang/dfa/VariableAccess;.(ILjava/lang/String;)V#varName#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/dfa/VariableAccess.java;,ParameterName,varName," public static final int UNDEFINITION = 2;

    private int accessType;
    private String variableName;

    public VariableAccess(int accessType, String varName) {
        this.accessType = accessType;
        int dotPos = varName.indexOf('.');
        variableName = dotPos < 0 ? 
         varName :
         varName.substring(0, dotPos);",var,variable
Lnet/sourceforge/pmd/lang/rule/AbstractRule;.externalInfoUrl)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/rule/AbstractRule.java;,FieldName,externalInfoUrl,"private String message;
 private String description;
 private List<String> examples = new ArrayList<String>();
 private String externalInfoUrl;
 private RulePriority priority = RulePriority.LOW;
 private boolean usesDFA;
 private boolean usesTypeResolution;",url,unicode resource locator
Lnet/sourceforge/pmd/lang/rule/AbstractRule;.externalInfoUrl)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/rule/AbstractRule.java;,FieldName,externalInfoUrl,"private String message;
 private String description;
 private List<String> examples = new ArrayList<String>();
 private String externalInfoUrl;
 private RulePriority priority = RulePriority.LOW;
 private boolean usesDFA;
 private boolean usesTypeResolution;",info,information
Lnet/sourceforge/pmd/lang/rule/properties/AbstractEnumeratedProperty;.selectionsIn([Ljava/lang/String;[IZ)Ljava/lang/Object;#maxIdx,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/rule/properties/AbstractEnumeratedProperty.java;,VariableName,maxIdx," private static Object selectionsIn(String[] items, int[] selectionIndices, boolean isMulti) {
        String[] selections = new String[selectionIndices.length];
        final int maxIdx = items.length - 1;
        for (int i = 0; i < selections.length; i++) {
            if (i < 0 || i > maxIdx) {
                throw new IllegalArgumentException(""Invalid item index: "" + i);",idx,index
Lnet/sourceforge/pmd/lang/rule/properties/AbstractMultiPackagedProperty;.(Ljava/lang/String;Ljava/lang/String;TT;[Ljava/lang/String;F)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/rule/properties/AbstractMultiPackagedProperty.java;,MethodName,AbstractMultiPackagedProperty,"    /**
     * Constructor for AbstractMultiPackagedProperty.
     * @param theName String
     * @param theDescription String
     * @param theDefault T
     * @param theLegalPackageNames String[]
     * @param theUIOrder float
     */
    protected AbstractMultiPackagedProperty(String theName,  String theDescription, T theDefault, String[] theLegalPackageNames, float theUIOrder) {
        super(theName, theDescription, theDefault, theLegalPackageNames, theUIOrder);
    }",multi,multiple
Lnet/sourceforge/pmd/lang/rule/properties/AbstractProperty;.multiValueDelimiter()C,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/rule/properties/AbstractProperty.java;,MethodName,multiValueDelimiter," public char multiValueDelimiter() {
  return DELIMITER;
 }",multi,multiple
Lnet/sourceforge/pmd/lang/rule/properties/AbstractProperty;.checkNotEmpty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#argId#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/rule/properties/AbstractProperty.java;,ParameterName,argId," /**
  * @param arg String
  * @param argId String
  * @return String
  * @throws IllegalArgumentException
  */
 private static String checkNotEmpty(String arg, String argId) {

  if (StringUtil.isEmpty(arg)) {
   throw new IllegalArgumentException(""Property attribute '"" + argId + ""' cannot be null or blank"");
  }",arg,argument
Lnet/sourceforge/pmd/lang/rule/properties/AbstractScalarProperty;.(Ljava/lang/String;Ljava/lang/String;TT;F)V#theUIOrder#0#3,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/rule/properties/AbstractScalarProperty.java;,ParameterName,theUIOrder," /**
  * Constructor for AbstractScalarProperty.
  * @param theName String
  * @param theDescription String
  * @param theDefault Object
  * @param theUIOrder float
  */
 protected AbstractScalarProperty(String theName, String theDescription, T theDefault, float theUIOrder) {
  super(theName, theDescription, theDefault, theUIOrder);
 }",ui,user interface
Lnet/sourceforge/pmd/lang/rule/properties/DoubleMultiProperty;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/rule/properties/DoubleMultiProperty.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/rule/properties/factories/PropertyDescriptorUtil.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/rule/properties/PropertyDescriptorFactory.java;,ClassName,DoubleMultiProperty,"/**
 * Defines a property type that supports multiple double-type property values within an upper and lower boundary.
 * 
 * @author Brian Remedios
 */
public class DoubleMultiProperty extends AbstractMultiNumericProperty<Double[]> {
 
 public static final PropertyDescriptorFactory FACTORY = new BasicPropertyDescriptorFactory<DoubleMultiProperty>(Double[].class, numberFieldTypesByKey) {

  public DoubleMultiProperty createWith(Map<String, String> valuesById) {
   final String[] minMax = minMaxFrom(valuesById);",multi,multiple
Lnet/sourceforge/pmd/lang/rule/properties/AbstractEnumeratedProperty<Lnet/sourceforge/pmd/lang/rule/properties/EnumeratedProperty;:TE;Ljava/lang/Object;>;.nonLegalValueMsgFor(Ljava/lang/Object;)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/rule/properties/EnumeratedProperty.java;,MethodName,nonLegalValueMsgFor," public String errorFor(Object value) {
  return labelsByChoice.containsKey(value) ?
   null : nonLegalValueMsgFor(value);
 }",msg,message
Lnet/sourceforge/pmd/lang/rule/properties/factories/PropertyDescriptorUtil;#0#temp,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/rule/properties/factories/PropertyDescriptorUtil.java;,VariableName,temp,"    private static final Map<String, PropertyDescriptorFactory> descriptorFactoriesByType;
    static {
     Map<String, PropertyDescriptorFactory> temp = new HashMap<String, PropertyDescriptorFactory>(18);
     
     temp.put(""Boolean"",  BooleanProperty.FACTORY);
     
     temp.put(""String"",   StringProperty.FACTORY);
     temp.put(""String[]"",  StringMultiProperty.FACTORY);",temp,temporary
Lnet/sourceforge/pmd/lang/rule/properties/factories/PropertyDescriptorUtil$1850;.compare(Lnet/sourceforge/pmd/PropertyDescriptor<*>;Lnet/sourceforge/pmd/PropertyDescriptor<*>;)I#pd2#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/rule/properties/factories/PropertyDescriptorUtil.java;,ParameterName,pd2," public static final Comparator<PropertyDescriptor<?>> ComparatorByOrder = new Comparator<PropertyDescriptor<?>>() {
  public int compare(PropertyDescriptor<?> pd1, PropertyDescriptor<?> pd2) {
   return  pd2.uiOrder() > pd1.uiOrder() ? -1 : 1;
  }
 };",pd,property descriptor
Lnet/sourceforge/pmd/lang/rule/properties/LongMultiProperty$604;.createWith(Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)Lnet/sourceforge/pmd/lang/rule/properties/LongMultiProperty;#minMax,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/rule/properties/LongMultiProperty.java;,VariableName,minMax,"public static final PropertyDescriptorFactory FACTORY = new BasicPropertyDescriptorFactory<LongMultiProperty>(Long[].class, numberFieldTypesByKey) {

  public LongMultiProperty createWith(Map<String, String> valuesById) {
   final String[] minMax = minMaxFrom(valuesById);
   Long[] defaultValues = longsIn(defaultValueIn(valuesById));
   return new LongMultiProperty(
     nameIn(valuesById),
     descriptionIn(valuesById),
     Long.parseLong(minMax[0]),
     Long.parseLong(minMax[1]),
     defaultValues,
     0f
     );",min,minimum
Lnet/sourceforge/pmd/lang/rule/properties/LongMultiProperty$604;.createWith(Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)Lnet/sourceforge/pmd/lang/rule/properties/LongMultiProperty;#minMax,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/rule/properties/LongMultiProperty.java;,VariableName,minMax,"public static final PropertyDescriptorFactory FACTORY = new BasicPropertyDescriptorFactory<LongMultiProperty>(Long[].class, numberFieldTypesByKey) {

  public LongMultiProperty createWith(Map<String, String> valuesById) {
   final String[] minMax = minMaxFrom(valuesById);
   Long[] defaultValues = longsIn(defaultValueIn(valuesById));
   return new LongMultiProperty(
     nameIn(valuesById),
     descriptionIn(valuesById),
     Long.parseLong(minMax[0]),
     Long.parseLong(minMax[1]),
     defaultValues,
     0f
     );",max,maximum
Lnet/sourceforge/pmd/lang/rule/properties/LongProperty;.(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;F)V#defaultStr#0#4,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/rule/properties/LongProperty.java;,ParameterName,defaultStr,"/**
     * Constructor for LongProperty that limits itself to a single value within the specified limits. 
     * Converts string arguments into the Long values.
     * 
     * @param theName String
     * @param theDescription String
     * @param minStr String
     * @param maxStr String
     * @param defaultStr String
     * @param theUIOrder float
     * @throws IllegalArgumentException
     */
    public LongProperty(String theName, String theDescription, String minStr, String maxStr, String defaultStr, float theUIOrder) {
        this(theName, theDescription, longFrom(minStr), longFrom(maxStr), longFrom(defaultStr), theUIOrder);       
    }",str,string
Lnet/sourceforge/pmd/lang/rule/properties/LongProperty;.(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;F)V#minStr#0#2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/rule/properties/LongProperty.java;,ParameterName,minStr," /**
     * Constructor for LongProperty that limits itself to a single value within the specified limits. 
     * Converts string arguments into the Long values.
     * 
     * @param theName String
     * @param theDescription String
     * @param minStr String
     * @param maxStr String
     * @param defaultStr String
     * @param theUIOrder float
     * @throws IllegalArgumentException
     */
    public LongProperty(String theName, String theDescription, String minStr, String maxStr, String defaultStr, float theUIOrder) {
        this(theName, theDescription, longFrom(minStr), longFrom(maxStr), longFrom(defaultStr), theUIOrder);       
    }",str,string
Lnet/sourceforge/pmd/lang/rule/properties/LongProperty;.(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;F)V#minStr#0#2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/rule/properties/LongProperty.java;,ParameterName,minStr," /**
     * Constructor for LongProperty that limits itself to a single value within the specified limits. 
     * Converts string arguments into the Long values.
     * 
     * @param theName String
     * @param theDescription String
     * @param minStr String
     * @param maxStr String
     * @param defaultStr String
     * @param theUIOrder float
     * @throws IllegalArgumentException
     */
    public LongProperty(String theName, String theDescription, String minStr, String maxStr, String defaultStr, float theUIOrder) {
        this(theName, theDescription, longFrom(minStr), longFrom(maxStr), longFrom(defaultStr), theUIOrder);       
    }",min,minimum
Lnet/sourceforge/pmd/lang/rule/properties/MethodMultiProperty;.methodsFrom(Ljava/lang/String;)[Ljava/lang/reflect/Method;#methodsStr#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/rule/properties/MethodMultiProperty.java;,ParameterName,methodsStr,"    /**
     * @param methodsStr String
     * @return Method[]
     */
    public static Method[] methodsFrom(String methodsStr) {      
    
        String[] values = StringUtil.substringsOf(methodsStr, DELIMITER);
    
        Method[] methods = new Method[values.length];
        for (int i = 0; i < methods.length; i++) {",str,string
Lnet/sourceforge/pmd/lang/rule/properties/MethodProperty;.asStringOn(Ljava/lang/reflect/Method;Ljava/lang/StringBuilder;)V#sb#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/rule/properties/MethodProperty.java;,ParameterName,sb,"/**
     * @param type Class<?>
     * @param sb StringBuilder
     */
    private static void serializedTypeIdOn(Class<?> type, StringBuilder sb) {

        Class<?> arrayType = type.getComponentType();
        if (arrayType == null) {
            sb.append(shortestNameFor(type));",sb,string builder
Lnet/sourceforge/pmd/lang/rule/properties/PropertyDescriptorFactory;.checkMinMax(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/rule/properties/PropertyDescriptorFactory.java;,MethodName,checkMinMax," private static void checkMinMax(String name, String type, String min, String max) {
  if (StringUtil.isEmpty(min)) {
   throw new IllegalArgumentException(""Min must be provided to create PropertyDescriptor for "" + name + "" of type "" + type + ""."");
  }",max,maximum
Lnet/sourceforge/pmd/lang/rule/properties/PropertyDescriptorFactory;.createRawPropertyDescriptor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lnet/sourceforge/pmd/PropertyDescriptor<*>;#6#delim,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/rule/properties/PropertyDescriptorFactory.java;,VariableName,delim," } else if (""Character[]"".equals(type)) {
   checkDelimiter(name, type, delimiter);
   char delim = delimiter.charAt(0);
   CharacterMultiProperty property = new CharacterMultiProperty(name, description, null, 0.0f, delim);
   return new CharacterMultiProperty(name, description, property.valueFrom(value), 0.0f, delim);
  } else if (""Double"".equals(type)) {",delim,delimiter
Lnet/sourceforge/pmd/PropertyDescriptor<Lnet/sourceforge/pmd/lang/rule/properties/PropertyDescriptorWrapper;:TT;>;.uiOrder()F,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/rule/properties/PropertyDescriptorWrapper.java;,MethodName,uiOrder,"    public float uiOrder() {
 return propertyDescriptor.uiOrder();
    }\",ui,user interface
Lnet/sourceforge/pmd/lang/rule/properties/StringMultiProperty;.(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V#otherParams#0#3,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/rule/properties/StringMultiProperty.java;,ParameterName,otherParams," /**
     * Constructor for CharacterProperty that accepts additional params from a map.
     * 
  * @param theName
  * @param theDescription
  * @param theDefaults
  * @param otherParams
  */
 public StringMultiProperty(String theName, String theDescription, String theDefaults, Map<String, String> otherParams) {
     this(theName, theDescription, StringUtil.substringsOf(theDefaults, delimiterIn(otherParams)), 0.0f, delimiterIn(otherParams));
 }",params,parameters
Lnet/sourceforge/pmd/util/ClassUtil;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/rule/properties/TypeProperty.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/TypeMap.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/ClassUtil.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/rule/properties/MethodProperty.java;,ClassName,ClassUtil,"/**
 * Various class-related utility methods intended for mapping common java.lang types to their short 
 * short forms allowing end users to enter these names in UIs without the package prefixes.
 *
 * @author Brian Remedios
 */
public final class ClassUtil {

    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];

    private ClassUtil() {
    };
",util,utility
Lnet/sourceforge/pmd/lang/rule/RuleReference;.isSame([Ljava/lang/Object;[Ljava/lang/Object;)Z#a2#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/rule/RuleReference.java;,ParameterName,a2," @SuppressWarnings(""PMD.UnusedNullCheckInEquals"") //TODO: fix UnusedNullCheckInEquals rule for Arrays
 private static boolean isSame(Object[] a1, Object[] a2) {
  return a1 == a2 || (a1 != null && a2 != null && Arrays.equals(a1, a2));
 }",a,arrays
Lnet/sourceforge/pmd/lang/rule/stat/StatisticalRuleHelper;.getStdDev()D,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/rule/stat/StatisticalRuleHelper.java;,MethodName,getStdDev,"    private double getStdDev() {
        if (dataPoints.size() < 2) {
            return Double.NaN;
        }",std,standard
Ljava/lang/Math;.sqrt(D)D,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/rule/stat/StatisticalRuleHelper.java;,MethodName,sqrt,"            scoreMinusMean = point.getScore() - mean;
            deltaSq += scoreMinusMean * scoreMinusMean;
        }

        return Math.sqrt(deltaSq / (dataPoints.size() - 1));
    }",sqrt,square root
Lnet/sourceforge/pmd/lang/rule/xpath/JaxenXPathRuleQuery;.createXPath(Ljava/lang/String;LNavigator;)LBaseXPath;|LJaxenException;#0#vc,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/rule/xpath/JaxenXPathRuleQuery.java;,VariableName,vc,"    private BaseXPath createXPath(String xpathQueryString, Navigator navigator) throws JaxenException {

     BaseXPath xpath = new BaseXPath(xpathQueryString, navigator);
     if (properties.size() > 1) {
      SimpleVariableContext vc = new SimpleVariableContext();
      for (Entry<PropertyDescriptor<?>, Object> e : properties.entrySet()) {
       String propName = e.getKey().name();
       if (!""xpath"".equals(propName)) {",vc,variable context
Lnet/sourceforge/pmd/lang/rule/xpath/SaxonXPathRuleQuery;.xpathVariables)Ljava/util/List<LXPathVariable;>;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/rule/xpath/SaxonXPathRuleQuery.java;,FieldName,xpathVariables,"public class SaxonXPathRuleQuery extends AbstractXPathRuleQuery {

    // Mapping from Node name to applicable XPath queries
    private XPathExpression xpathExpression;
    private List<XPathVariable> xpathVariables;",xpath,xml path language
Lnet/sourceforge/pmd/lang/rule/xpath/SaxonXPathRuleQuery;.initializeXPathExpression()V#0#0#xpathEvaluator,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/rule/xpath/SaxonXPathRuleQuery.java;,VariableName,xpathEvaluator,"if (xpathExpression != null) {
            return;
        }
        try {
            XPathEvaluator xpathEvaluator = new XPathEvaluator();
            XPathStaticContext xpathStaticContext = xpathEvaluator.getStaticContext();

            // Enable XPath 1.0 compatibility
            if (XPATH_1_0_COMPATIBILITY.equals(version)) {",xpath,xml path language
Lnet/sourceforge/pmd/lang/rule/xpath/XPathRuleQuery;.setXPath(Ljava/lang/String;)V#xpath#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/rule/xpath/XPathRuleQuery.java;,ParameterName,xpath,"    /**
     * Set the XPath query string to be used.
     * @param xpath The XPath query string.
     */
    void setXPath(String xpath);",xpath,xml path language
Lnet/sourceforge/pmd/lang/rule/xpath/XPathRuleQuery;.XPATH_2_0)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/rule/xpath/XPathRuleQuery.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/rule/xpath/SaxonXPathRuleQuery.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/rule/XPathRule.java;,FieldName,XPATH_2_0,"  /**
     * XPath 2.0 version.
     */
    String XPATH_2_0 = ""2.0"";",xpath,xml path language
Lnet/sourceforge/pmd/PMD;.run([Ljava/lang/String;)I#args#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/PMD.java;,ParameterName,args,"    /**
     * Entry to invoke PMD as command line tool
     * 
     * @param args command line arguments
     */
    public static void main(String[] args) {
        PMDCommandLineInterface.run(args);
    }",args,arguments
Ljava/sql/SQLException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/PMD.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/database/DBMSMetadata.java;,ClassName,SQLException,"          try {
                    dataSources.add(new ReaderDataSource(dbmsMetadata.getSourceCode(sourceObject), falseFilePath));
                } catch (SQLException ex) {
                    LOG.log(Level.WARNING, ""Cannot get SourceCode for "" + falseFilePath + ""  - skipping ..."", ex);
                }
            }",sql,structured query language
Lnet/sourceforge/pmd/PMDException;.serialVersionUID)J,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/PMDException.java;,FieldName,serialVersionUID,"public class PMDException extends Exception {
    private static final long serialVersionUID = 6938647389367956874L;

    private int severity;",uid,user identifier
Lnet/sourceforge/pmd/processor/MultiThreadProcessor;.processReports(Ljava/util/List<Lnet/sourceforge/pmd/renderers/Renderer;>;Ljava/util/List<Ljava/util/concurrent/Future<Lnet/sourceforge/pmd/Report;>;>;)V|Ljava/lang/Error;#0#0#2#t,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/processor/MultiThreadProcessor.java;,VariableName,t,"Thread.currentThread().interrupt();
    future.cancel(true);
   } catch (ExecutionException ee) {
    Throwable t = ee.getCause();
    if (t instanceof RuntimeException) {
     throw (RuntimeException) t;
    } else if (t instanceof Error) {",t,thread
Lnet/sourceforge/pmd/processor/MultiThreadProcessor;.processReports(Ljava/util/List<Lnet/sourceforge/pmd/renderers/Renderer;>;Ljava/util/List<Ljava/util/concurrent/Future<Lnet/sourceforge/pmd/Report;>;>;)V|Ljava/lang/Error;#0#0#2#ee,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/processor/MultiThreadProcessor.java;,VariableName,ee,"} catch (InterruptedException ie) {
    Thread.currentThread().interrupt();
    future.cancel(true);
   } catch (ExecutionException ee) {
    Throwable t = ee.getCause();
    if (t instanceof RuntimeException) {
     throw (RuntimeException) t;",ee,execution exception
Lnet/sourceforge/pmd/processor/PmdRunnable;.call()Lnet/sourceforge/pmd/Report;#rs,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/processor/PmdRunnable.java;,VariableName,rs,"public Report call() {
  PmdThread thread = (PmdThread) Thread.currentThread();

  RuleContext ctx = thread.getRuleContext();
  RuleSets rs = thread.getRuleSets(configuration.getRuleSets());

  Report report = setupReport(rs, ctx, fileName);
  
  if (LOG.isLoggable(Level.FINE)) {
   LOG.fine(""Processing "" + ctx.getSourceCodeFilename());",rs,rule set
Lnet/sourceforge/pmd/processor/PmdRunnable$PmdThread;.getRuleSets(Ljava/lang/String;)Lnet/sourceforge/pmd/RuleSets;#rsList#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/processor/PmdRunnable.java;,ParameterName,rsList,"try {
   InputStream stream = new BufferedInputStream(
     dataSource.getInputStream());
   ctx.setLanguageVersion(null);
   this.getSourceCodeProcessor().processSourceCode(stream, rs, ctx);
  } catch (PMDException pmde) {
   LOG.log(Level.FINE, ""Error while processing file: ""+fileName, pmde.getCause());
   addError(report, pmde, fileName);",rs,rule set
Lnet/sourceforge/pmd/processor/PmdThreadFactory;.(Lnet/sourceforge/pmd/RuleSetFactory;Lnet/sourceforge/pmd/RuleContext;)V#ctx#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/processor/PmdThreadFactory.java;,ParameterName,ctx," public PmdThreadFactory(RuleSetFactory ruleSetFactory, RuleContext ctx) {
   this.ruleSetFactory = ruleSetFactory;
   this.ctx = ctx;
  }",ctx,context
Lnet/sourceforge/pmd/renderers/ColumnDescriptor$Accessor;.get(ITT;Ljava/lang/String;)Ljava/lang/String;#idx#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/ColumnDescriptor.java;,ParameterName,idx," public final String id;
 public final String title;
 public final Accessor<T> accessor;

    public interface Accessor<T extends Object> { String get(int idx, T violation, String lineSeparator); }

 public ColumnDescriptor(String theId, String theTitle, Accessor<T> theAccessor) {
  id = theId;
  title = theTitle;",idx,index
Lnet/sourceforge/pmd/renderers/CSVRenderer;.activeColumns()Ljava/util/List<Lnet/sourceforge/pmd/renderers/ColumnDescriptor<Lnet/sourceforge/pmd/RuleViolation;>;>;#0#desc,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/CSVRenderer.java;,VariableName,desc,"     separator = theSeparator;
     cr = theCR;

     for (ColumnDescriptor<RuleViolation> desc : columns) {
      definePropertyDescriptor(booleanPropertyFor(desc.id, desc.title));
      }
    }",desc,descriptor
Lnet/sourceforge/pmd/renderers/CSVWriter;.writeData(Ljava/io/Writer;Ljava/util/Iterator<TT;>;)V|Ljava/io/IOException;#lastColumnIdx,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/CSVWriter.java;,VariableName,lastColumnIdx,"int count = 1;

     StringBuilder buf = new StringBuilder(300);

  T rv;
  final int lastColumnIdx = columns.size()-1;

  while (items.hasNext()) {
      buf.setLength(0);
      rv = items.next();",idx,index
Lnet/sourceforge/pmd/renderers/CSVWriter;.(Ljava/util/List<Lnet/sourceforge/pmd/renderers/ColumnDescriptor<TT;>;>;Ljava/lang/String;Ljava/lang/String;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/CSVWriter.java;,MethodName,CSVWriter,"    public CSVWriter(List<ColumnDescriptor<T>> theColumns, String theSeparator, String theLineSeparator) {
     columns = theColumns;
     separator = theSeparator;
     lineSeparator = theLineSeparator;
    }",csv,comma separated values
Lnet/sourceforge/pmd/renderers/HTMLRenderer;.glomSuppressions(Ljava/io/Writer;Ljava/util/List<Lnet/sourceforge/pmd/Report$SuppressedViolation;>;)V|Ljava/io/IOException;#0#sv,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/HTMLRenderer.java;,VariableName,sv,"StringBuilder buf = new StringBuilder(500);
  boolean colorize = true;
  for (Report.SuppressedViolation sv : suppressed) {
   buf.setLength(0);
   buf.append(""<tr"");
   if (colorize) {
       buf.append("" bgcolor=\""lightgrey\"""");
   }",sv,supressed violation
Ljava/io/IOException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/HTMLRenderer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/ant/PMDTask.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/IDEAJRenderer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cpd/FileReporter.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/designer/Designer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/FileIterable.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/datasource/ZipDataSource.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/YAHTMLRenderer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/dcd/graph/UsageGraphBuilder.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/datasource/DataSource.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/processor/AbstractPMDProcessor.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/IOUtil.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/ant/Formatter.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/datasource/ReaderDataSource.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/SummaryHTMLRenderer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/datasource/FileDataSource.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/processor/PmdRunnable.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cpd/CPD.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/AbstractAccumulatingRenderer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cpd/CPDCommandLineInterface.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/benchmark/Benchmarker.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/FileUtil.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/VBHTMLRenderer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/CSVRenderer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/TextColorRenderer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/database/DBURI.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/database/ResourceLoader.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/PMDConfiguration.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/PMD.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/XMLRenderer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cpd/CPDTask.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cpd/GUI.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/processor/MonoThreadProcessor.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/CSVWriter.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/AbstractIncrementingRenderer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/Renderer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/AbstractRenderer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cpd/Tokenizer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cli/PMDParameters.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/TextPadRenderer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/RuleSetFactory.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/database/DBType.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/EmacsRenderer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/ClasspathClassLoader.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/TextRenderer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/dfa/report/ReportHTMLPrintVisitor.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/XSLTRenderer.java;,ClassName,IOException," /**
     * Write the body of the main body of the HTML content.
     *
     * @param writer
     * @param report
     * @throws IOException
     */
    public void renderBody(Writer writer, Report report) throws IOException {
  linkPrefix = getProperty(LINK_PREFIX);
  linePrefix = getProperty(LINE_PREFIX);",io,input output
Lnet/sourceforge/pmd/renderers/SummaryHTMLRenderer;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/SummaryHTMLRenderer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/RendererFactory.java;,ClassName,SummaryHTMLRenderer,"/**
 * Renderer to a summarized HTML format.
 */
public class SummaryHTMLRenderer extends AbstractAccumulatingRenderer {

    public static final String NAME = ""summaryhtml"";

    public SummaryHTMLRenderer() {
 super(NAME, ""Summary HTML format."");",html,hypertext markup language
Lnet/sourceforge/pmd/renderers/TextColorRenderer;.getLine(Ljava/lang/String;I)Ljava/lang/String;#0#0#0#0#txt,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/TextColorRenderer.java;,VariableName,txt,"  try {
      br = new BufferedReader(getReader(sourceFile));
      for (int i = 0; line > i; i++) {
       String txt = br.readLine();
    code = txt == null ? """" : txt.trim();
       }
  } catch (IOException ioErr) {",txt,text
Lnet/sourceforge/pmd/renderers/TextColorRenderer;.pwd)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/TextColorRenderer.java;,FieldName,pwd,"/**
     * Directory from where java was invoked.
     */
    private String pwd;

    private String yellowBold = """";
    private String whiteBold = """";
    private String redBold = """";",pwd,password
Lnet/sourceforge/pmd/PMD;.EOL)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/TextColorRenderer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/HTMLRenderer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/PMD.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/XMLRenderer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/IDEAJRenderer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/benchmark/TextReport.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/designer/Designer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cli/PMDCommandLineInterface.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cpd/SourceCode.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cpd/VSRenderer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/YAHTMLRenderer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cpd/Match.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cpd/CSVRenderer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/SummaryHTMLRenderer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cpd/SimpleRenderer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/TextPadRenderer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/VBHTMLRenderer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/CSVRenderer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/designer/CreateXMLRulePanel.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/TextRenderer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/dfa/report/ReportHTMLPrintVisitor.java;,FieldName,EOL,"public void end() throws IOException {
 StringBuffer buf = new StringBuffer(500);
 buf.append(PMD.EOL);
 initializeColorsIfSupported();
 String lastFile = null;
 int numberOfErrors = 0;
 int numberOfWarnings = 0;",eol,end of list
Lnet/sourceforge/pmd/Report$ProcessingError;.getMsg()Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/TextColorRenderer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/HTMLRenderer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/XMLRenderer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/Report.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/TextRenderer.java;,MethodName,getMsg,"  buf.append(this.redBold + ""*"" + this.colorReset + "" file: "" + this.whiteBold
   + this.getRelativePath(lastFile) + this.colorReset + PMD.EOL);
     }
     buf.append(this.green + ""    err:  "" + this.cyan + error.getMsg() + this.colorReset + PMD.EOL + PMD.EOL);
     writer.write(buf.toString());
 }",msg,message
Lnet/sourceforge/pmd/renderers/TextRenderer;.renderFileViolations(Ljava/util/Iterator<Lnet/sourceforge/pmd/RuleViolation;>;)V|Ljava/io/IOException;#0#rv,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/TextRenderer.java;,VariableName,rv,"  while (violations.hasNext()) {
      buf.setLength(0);
      RuleViolation rv = violations.next();
      buf.append(rv.getFilename());
      buf.append(':').append(Integer.toString(rv.getBeginLine()));
      buf.append("":\t"").append(rv.getDescription()).append(PMD.EOL);",rv,rule violation
Lnet/sourceforge/pmd/renderers/XMLRenderer;.()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/XMLRenderer.java;,MethodName,XMLRenderer,"   public static final String NAME = ""xml"";

    public static final StringProperty ENCODING = new StringProperty(""encoding"", ""XML encoding format, defaults to UTF-8."", ""UTF-8"", 0);

    public XMLRenderer() {
  super(NAME, ""XML format."");
  definePropertyDescriptor(ENCODING);
    }",xml,extensible markup language
Lnet/sourceforge/pmd/renderers/XSLTRenderer;.xsltFilename)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/XSLTRenderer.java;,FieldName,xsltFilename,"private Transformer transformer;
    private String xsltFilename = ""/pmd-nicerhtml.xsl"";
    private Writer outputWriter;",xslt,extensible stylesheet language transformation
Lnet/sourceforge/pmd/renderers/XSLTRenderer;.XSLT_FILENAME)Lnet/sourceforge/pmd/lang/rule/properties/StringProperty;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/XSLTRenderer.java;,FieldName,XSLT_FILENAME,"public class XSLTRenderer extends XMLRenderer {

    public static final String NAME = ""xslt"";

    public static final StringProperty XSLT_FILENAME = new StringProperty(""xsltFilename"", ""The XSLT file name."", null, 0);

    private Transformer transformer;
    private String xsltFilename = ""/pmd-nicerhtml.xsl"";
    private Writer outputWriter;",xslt,extensible stylesheet language transformation
Lnet/sourceforge/pmd/renderers/XSLTRenderer;.start()V|Ljava/io/IOException;#xslt,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/XSLTRenderer.java;,VariableName,xslt,"setWriter(w);
 // If don't find the xsl no need to bother doing the all report,
 // so we check this here...
 InputStream xslt = null;
 File file = new File(this.xsltFilename);
 if (file.exists() && file.canRead()) {
     xslt = new FileInputStream(file);",xslt,extensible stylesheet language transformation
Lnet/sourceforge/pmd/renderers/XSLTRenderer;.end()V|Ljava/io/IOException;#0#w,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/XSLTRenderer.java;,VariableName,w1,"// We keep the inital writer to put the final html output
 this.outputWriter = getWriter();
 // We use a new one to store the XML...
 Writer w = new StringWriter();
 setWriter(w);
 // If don't find the xsl no need to bother doing the all report,
 // so we check this here...",w,writer
Lnet/sourceforge/pmd/renderers/XSLTRenderer;.start()V|Ljava/io/IOException;#w,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/XSLTRenderer.java;,VariableName,w,"// We keep the inital writer to put the final html output
 this.outputWriter = getWriter();
 // We use a new one to store the XML...
 Writer w = new StringWriter();
 setWriter(w);
 // If don't find the xsl no need to bother doing the all report,
 // so we check this here...",w,writer
Lnet/sourceforge/pmd/lang/dfa/report/ReportHTMLPrintVisitor;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/YAHTMLRenderer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/dfa/report/ReportHTMLPrintVisitor.java;,ClassName,ReportHTMLPrintVisitor,"public class ReportHTMLPrintVisitor extends ReportVisitor {

    @SuppressWarnings(""PMD.AvoidStringBufferField"")
    private StringBuilder packageBuf = new StringBuilder();
    @SuppressWarnings(""PMD.AvoidStringBufferField"")
    private StringBuilder classBuf = new StringBuilder();
    private int length;
    private String baseDir;",html,hypertext markup language
Lnet/sourceforge/pmd/Report;.merge(Lnet/sourceforge/pmd/Report;)V#v,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/Report.java;,VariableName,v,"while (m.hasNext()) {
            addMetric(m.next());
        }
        Iterator<RuleViolation> v = r.iterator();
        while (v.hasNext()) {
            RuleViolation violation = v.next();
            int index = Collections.binarySearch(violations, violation, RuleViolationComparator.INSTANCE);",v,violation
Lnet/sourceforge/pmd/Report;.merge(Lnet/sourceforge/pmd/Report;)V#m,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/Report.java;,VariableName,m,"while (i.hasNext()) {
            addError(i.next());
        }
        Iterator<Metric> m = r.metrics();
        while (m.hasNext()) {
            addMetric(m.next());
        }",m,metric
Lnet/sourceforge/pmd/util/DateTimeUtil;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/Report.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/DateTimeUtil.java;,ClassName,DateTimeUtil,"public class DateTimeUtil {

 private DateTimeUtil() {}
 
 /**
  * 
  * @param milliseconds
  * @return String
  */",util,utility
Lnet/sourceforge/pmd/RuleSet;.apply(Ljava/util/List<+Lnet/sourceforge/pmd/lang/ast/Node;>;Lnet/sourceforge/pmd/RuleContext;)V#0#0#1#td,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/RuleSet.java;,VariableName,td," Benchmarker.mark(Benchmark.Rule, rule.getName(), end - start, 1);
                    start = end;
                }
            } catch (ThreadDeath td) {
                throw td;
            } catch (Throwable t) {
                if (ctx.isIgnoreExceptions()) {",td,thread death
Lnet/sourceforge/pmd/RuleSet;.applies(Ljava/io/File;)Z#0#regexFilter,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/RuleSet.java;,VariableName,regexFilter,"public boolean applies(File file) {
        // Initialize filter based on patterns
        if (filter == null) {
            Filter<String> regexFilter = Filters.buildRegexFilterIncludeOverExclude(includePatterns, excludePatterns);
            filter = Filters.toNormalizedFileFilter(regexFilter);
        }
",regex,regular expression
Lnet/sourceforge/pmd/RuleSet;.usesTypeResolution(Lnet/sourceforge/pmd/lang/Language;)Z#0#r,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/RuleSet.java;,VariableName,r,"        boolean replaced = false;
        for (Iterator<Rule> it = rules.iterator(); it.hasNext();) {
            Rule r = it.next();
            if (r.getName().equals(rule.getName()) && r.getLanguage() == rule.getLanguage()) {
                it.remove();
                replaced = true;",r,rule
Lnet/sourceforge/pmd/RuleSetFactory;.parseRuleSetNode(Lnet/sourceforge/pmd/RuleSetReferenceId;Ljava/io/InputStream;)Lnet/sourceforge/pmd/RuleSet;#0#7#se,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/RuleSetFactory.java;,VariableName,se,"} catch (RuleSetNotFoundException rsnfe) {
   return classNotFoundProblem(rsnfe);
  } catch (IOException ioe) {
   return classNotFoundProblem(ioe);
  } catch (SAXException se) {
   return classNotFoundProblem(se);
  }",se,sax exception
Lnet/sourceforge/pmd/RuleSetFactory;.parseRuleSetNode(Lnet/sourceforge/pmd/RuleSetReferenceId;Ljava/io/InputStream;)Lnet/sourceforge/pmd/RuleSet;#0#5#rsnfe,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/RuleSetFactory.java;,VariableName,rsnfe," return classNotFoundProblem(iae);
  } catch (ParserConfigurationException pce) {
   return classNotFoundProblem(pce);
  } catch (RuleSetNotFoundException rsnfe) {
   return classNotFoundProblem(rsnfe);
  } catch (IOException ioe) {",rsnfe,rule set not found exception
Lnet/sourceforge/pmd/RuleSetFactory;.parseRuleNode(Lnet/sourceforge/pmd/RuleSetReferenceId;Lnet/sourceforge/pmd/RuleSet;Lorg/w3c/dom/Node;)V|Ljava/lang/ClassNotFoundException;|Ljava/lang/InstantiationException;|Ljava/lang/IllegalAccessException;|Lnet/sourceforge/pmd/RuleSetNotFoundException;#ref,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/RuleSetFactory.java;,VariableName,ref,"private void parseRuleNode(RuleSetReferenceId ruleSetReferenceId, RuleSet ruleSet, Node ruleNode)
 throws ClassNotFoundException, InstantiationException, IllegalAccessException, RuleSetNotFoundException {
  Element ruleElement = (Element) ruleNode;
  String ref = ruleElement.getAttribute(""ref"");
  if (ref.endsWith(""xml"")) {
   parseRuleSetReferenceNode(ruleSetReferenceId, ruleSet, ruleElement, ref);",ref,refernece
Lnet/sourceforge/pmd/RuleSetFactory;.parsePropertyNodeBR(Lnet/sourceforge/pmd/Rule;Lorg/w3c/dom/Node;)V#pdFactory,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/RuleSetFactory.java;,VariableName,pdFactory,"   }
   return;
  }

  net.sourceforge.pmd.PropertyDescriptorFactory pdFactory = PropertyDescriptorUtil.factoryFor(typeId);
  if (pdFactory == null) {
   throw new RuntimeException(""No property descriptor factory for type: "" + typeId);
  }",pd,property descriptor
Lnet/sourceforge/pmd/RuleSetWriter;.write(Lnet/sourceforge/pmd/RuleSet;)V#0#0#0#1#iae,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/RuleSetWriter.java;,VariableName,iae,"      TransformerFactory transformerFactory = TransformerFactory.newInstance();
      try {
       transformerFactory.setAttribute(""indent-number"", 3);
       } catch (IllegalArgumentException iae) {
        //ignore it, specific to one parser
       }
      Transformer transformer = transformerFactory.newTransformer();",iae,illegal argument exception
Lnet/sourceforge/pmd/RuleViolationComparator;.compare(Ljava/lang/String;Ljava/lang/String;)I#s1#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/RuleViolationComparator.java;,ParameterName,s1,"private static int compare(final String s1, final String s2) {
 // Treat null as larger
 if (s1 == null) {
     return 1;",s,string
Lnet/sourceforge/pmd/RuleViolationComparator;.compare(Lnet/sourceforge/pmd/RuleViolation;Lnet/sourceforge/pmd/RuleViolation;)I#r2#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/RuleViolationComparator.java;,ParameterName,r2,"public int compare(final RuleViolation r1, final RuleViolation r2) {
 int cmp = r1.getFilename().compareTo(r2.getFilename());
 if (cmp == 0) {
     cmp = r1.getBeginLine() - r2.getBeginLine();",r,rule
Lnet/sourceforge/pmd/SourceCodeProcessor;.processSourceCode(Ljava/io/InputStream;Lnet/sourceforge/pmd/RuleSets;Lnet/sourceforge/pmd/RuleContext;)V|Lnet/sourceforge/pmd/PMDException;#0#1#uee,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/SourceCodeProcessor.java;,VariableName,uee,"    public void processSourceCode(InputStream sourceCode, RuleSets ruleSets, RuleContext ctx) throws PMDException {
  try {
      processSourceCode(new InputStreamReader(sourceCode, configuration.getSourceEncoding()), ruleSets, ctx);
  } catch (UnsupportedEncodingException uee) {
      throw new PMDException(""Unsupported encoding exception: "" + uee.getMessage());
  }
    }",uee,unsupported encoding exception
Lnet/sourceforge/pmd/SourceCodeProcessor;.processSourceCode(Ljava/io/Reader;Lnet/sourceforge/pmd/RuleSets;Lnet/sourceforge/pmd/RuleContext;)V|Lnet/sourceforge/pmd/PMDException;#0#1#pe,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/SourceCodeProcessor.java;,VariableName,pe,"try {
   processSource(sourceCode, ruleSets,ctx);

  } catch (ParseException pe) {
      throw new PMDException(""Error while parsing "" + ctx.getSourceCodeFilename(), pe);
  } catch (Exception e) {",pe,parse exception
Lnet/sourceforge/pmd/stat/DataPoint;.()V#rand,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/stat/DataPoint.java;,VariableName,rand,"    /**
     * Constructor for DataPoint.
     */
    public DataPoint() {
        super();
        // Random number is so that the TreeSet doesn't
        // whack things with the same score.
        Random rand = new Random();
        random = rand.nextInt(11061973);
    }",rand,rand
Lnet/sourceforge/pmd/util/ClasspathClassLoader;.createURLFromPath(Ljava/lang/String;)Ljava/net/URL;|Ljava/net/MalformedURLException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/ClasspathClassLoader.java;,MethodName,createURLFromPath,"    private static URL createURLFromPath(String path) throws MalformedURLException {
        File file = new File(path);
        return file.getAbsoluteFile().toURI().toURL();
    }",url,unicode resource locator
Lnet/sourceforge/pmd/util/ClasspathClassLoader;.addFileURLs(Ljava/util/List<Ljava/net/URL;>;Ljava/net/URL;)V|Ljava/io/IOException;#fileURL#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/ClasspathClassLoader.java;,ParameterName,fileURL,"    private static void addFileURLs(List<URL> urls, URL fileURL) throws IOException {
        BufferedReader in = null;
        try {
            in = new BufferedReader(new InputStreamReader(fileURL.openStream()));
            String line;",url,unicode resource locator
Ljava/net/URI;.toURL()Ljava/net/URL;|Ljava/net/MalformedURLException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/ClasspathClassLoader.java;,MethodName,toURL,"    private static URL createURLFromPath(String path) throws MalformedURLException {
        File file = new File(path);
        return file.getAbsoluteFile().toURI().toURL();
    }",url,unicode resource locator
Ljava/net/MalformedURLException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/ClasspathClassLoader.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/database/DBMSMetadata.java;,ClassName,MalformedURLException,"    private static void addClasspathURLs(final List<URL> urls, final String classpath) throws MalformedURLException {
        StringTokenizer toker = new StringTokenizer(classpath, File.pathSeparator);
        while (toker.hasMoreTokens()) {
            String token = toker.nextToken();",url,unicode resource locator
Lnet/sourceforge/pmd/util/ClassUtil;.withoutPackageName(Ljava/lang/String;)Ljava/lang/String;#dotPos,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/ClassUtil.java;,VariableName,dotPos,"/**
     * Returns the abbreviated name of the type, without the package name
     *
     * @param fullTypeName
     * @return String
     */

    public static String withoutPackageName(String fullTypeName) {
        int dotPos = fullTypeName.lastIndexOf('.');
        return dotPos > 0 ? fullTypeName.substring(dotPos + 1) : fullTypeName;
    }
",pos,position
Lnet/sourceforge/pmd/util/ClassUtil;.methodFor(Ljava/lang/Class<*>;Ljava/lang/String;[Ljava/lang/Class<*>;)Ljava/lang/reflect/Method;#paramTypes#0#2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/ClassUtil.java;,ParameterName,paramTypes,"/**
     * Attempts to return the specified method from the class provided but will
     * walk up its superclasses until it finds a match. Returns null if it
     * doesn't.
     *
     * @param clasz   Class
     * @param methodName String
     * @param paramTypes Class[]
     * @return Method
     */
    public static Method methodFor(Class<?> clasz, String methodName, Class<?>[] paramTypes) {
        Method method = null;
        Class<?> current = clasz;
        while (current != Object.class) {",param,parameter
Lnet/sourceforge/pmd/util/CollectionUtil;.()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/CollectionUtil.java;,MethodName,CollectionUtil," public static final TypeMap COLLECTION_CLASSES_BY_NAMES = new TypeMap(new Class[] { java.util.ArrayList.class,
     java.util.LinkedList.class, java.util.Vector.class, java.util.HashMap.class, java.util.LinkedHashMap.class,
     java.util.TreeMap.class, java.util.TreeSet.class, java.util.HashSet.class, java.util.LinkedHashSet.class,
     java.util.Hashtable.class});

    private CollectionUtil() {
    };
",util,utility
Lnet/sourceforge/pmd/util/database/DBMSMetadata;.(Lnet/sourceforge/pmd/util/database/DBURI;)V|Ljava/sql/SQLException;|Ljava/lang/ClassNotFoundException;#dbURI#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/database/DBMSMetadata.java;,ParameterName,dbURI,"  /**
   * Define database connection and source code to retrieve with explicit database username and password.
   * 
   * @param user Database username 
   * @param password Database password 
   * @param dbURI {@link  DBURI } containing JDBC connection plus parameters to specify source code.
   * @throws SQLException on failing to create JDBC connection
   * @throws MalformedURLException on attempting to connect with malformed JDBC URL
   * @throws ClassNotFoundException on failing to locate the JDBC driver class.
   */
  public DBMSMetadata(String user, String password, DBURI dbURI) throws SQLException, MalformedURLException, ClassNotFoundException
  { 
    this.dburi = dbURI;

    this.returnSourceCodeObjectsStatement = dbURI.getDbType().getProperties().getProperty(GET_SOURCE_OBJECTS_STATEMENT) ; 

    this.returnSourceCodeStatement = dbURI.getDbType().getProperties().getProperty(GET_SOURCE_CODE_STATEMENT) ; 
",uri,unicode resource identifier
Lnet/sourceforge/pmd/util/database/DBMSMetadata;.(Ljava/lang/String;Ljava/lang/String;Lnet/sourceforge/pmd/util/database/DBURI;)V|Ljava/sql/SQLException;|Ljava/net/MalformedURLException;|Ljava/lang/ClassNotFoundException;#dbURI#0#2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/database/DBMSMetadata.java;,ParameterName,dbURI,"/**
   * Define database connection and source code to retrieve with database properties.
   * 
   * @param properties database settings such as database username, password 
   * @param dbURI {@link  DBURI } containing JDBC connection plus parameters to specify source code.
   * @throws SQLException on failing to create JDBC connection
   * @throws MalformedURLException on attempting to connect with malformed JDBC URL
   * @throws ClassNotFoundException on failing to locate the JDBC driver class.
   */
  public DBMSMetadata(Properties properties, DBURI dbURI) throws SQLException, MalformedURLException, ClassNotFoundException
  { 
    this.dburi = dbURI;
    this.returnSourceCodeObjectsStatement = dbURI.getDbType().getProperties().getProperty(GET_SOURCE_OBJECTS_STATEMENT) ; 
    this.returnSourceCodeStatement = dbURI.getDbType().getProperties().getProperty(GET_SOURCE_CODE_STATEMENT) ; ",uri,unicode resource identifier
Lnet/sourceforge/pmd/util/database/DBMSMetadata;.getSourceObjectList(Ljava/util/List<Ljava/lang/String;>;Ljava/util/List<Ljava/lang/String;>;Ljava/util/List<Ljava/lang/String;>;Ljava/util/List<Ljava/lang/String;>;)Ljava/util/List<Lnet/sourceforge/pmd/util/database/SourceObject;>;#4#1#sqle,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/database/DBMSMetadata.java;,VariableName,sqle,"   LOGGER.finer(String.format(""Identfied=%d sourceObjects"", sourceObjectsList.size()));

      return sourceObjectsList ;
    }
    catch (SQLException sqle)
    {
      throw new RuntimeException (""Problem collecting list of source code objects"",sqle);
    }
  }
}",sqle,SQL exception
Lnet/sourceforge/pmd/util/database/DBURI;.getUri()Ljava/net/URI;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/database/DBURI.java;,MethodName,getUri,"  public URI getUri() {
    return uri;
  }",uri,unicode resource identifier
Lnet/sourceforge/pmd/util/database/DBURI;.setFields()V|Ljava/net/URISyntaxException;|Ljava/io/IOException;#0#jdbcURI,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/database/DBURI.java;,VariableName,jdbcURI,"private void setFields() throws URISyntaxException, IOException {
    if (url.startsWith(""jdbc:""))
    {
      //java.net.URI is intended for ""normal"" URLs
      URI jdbcURI = new URI(getURL().substring(5)) ; 

      LOGGER.log(Level.FINE, ""setFields - substr(jdbcURL,5):{0}"", getURL().substring(5)) ; 
      dump(""substr(jdbcURL,5)"", jdbcURI);",jdbc,java database connectivity
Ljava/lang/Throwable;.initCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/database/DBURI.java;,MethodName,initCause,"    } catch (URISyntaxException ex) {
      URISyntaxException uriException = new URISyntaxException(string, ""Problem generating DBURI."");
      uriException.initCause(ex);
      throw uriException;
    } catch (IOException e) {
        throw new RuntimeException(e);",init,initialize
Ljava/lang/Integer;.parseInt(Ljava/lang/String;)I|Ljava/lang/NumberFormatException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/database/DBURI.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/rule/properties/IntegerMultiProperty.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cli/PMDParameters.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/RuleSetFactory.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/database/DBType.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/dfa/AbstractDataFlowNode.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/lang/rule/properties/factories/BasicPropertyDescriptorFactory.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cpd/GUI.java;,MethodName,parseInt,"    String returnType = dbType.getProperties().getProperty(""returnType"") ;
      if (null != returnType) 
      {
        sourceCodeType = Integer.parseInt(returnType);
      }

      LOGGER.finer(""DBType populating lists "") ;
      //Populate the lists ",int,integer
Lnet/sourceforge/pmd/util/datasource/FileDataSource;.trimAnyPathSep(Ljava/lang/String;)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/datasource/FileDataSource.java;,MethodName,trimAnyPathSep,"    private String trimAnyPathSep(String name) {

     return name.startsWith(FILE_SEPARATOR) ?
            name.substring(1) :
            name;
    }",sep,separator
Lnet/sourceforge/pmd/util/designer/CodeEditorTextPane;.getPosition([Ljava/lang/String;II)I#0#0#tok,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/designer/CodeEditorTextPane.java;,VariableName,tok,"private int getPosition(String[] lines, int line, int column) {
        int pos = 0;
        for (int count = 0; count < lines.length;) {
            String tok = lines[count++];
            if (count == line) {
                int linePos = 0;
                int i;",tok,token
Lnet/sourceforge/pmd/util/designer/Designer;.createMenuBar()Ljavax/swing/JMenuBar;#copyXMLItem,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/designer/Designer.java;,VariableName,copyXMLItem,"languageVersionMenuItems[getDefaultLanguageVersionSelectionIndex()].setSelected(true);
  menuBar.add(menu);

  JMenu actionsMenu = new JMenu(""Actions"");
  JMenuItem copyXMLItem = new JMenuItem(""Copy xml to clipboard"");
  copyXMLItem.addActionListener(new ActionListener() {
   public void actionPerformed(ActionEvent e) {
    copyXmlToClipboard();",xml,extensible markup language
Lnet/sourceforge/pmd/util/designer/Designer;.getXmlString(Lnet/sourceforge/pmd/lang/ast/Node;)Ljava/lang/String;|Ljavax/xml/transform/TransformerException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/designer/Designer.java;,MethodName,getXmlString,"/**
  * Returns an unformatted xml string (without the declaration)
  *
  * @throws TransformerException if the XML cannot be converted to a string
  */
 private static String getXmlString(Node node) throws TransformerException {
  StringWriter writer = new StringWriter();

  Source source = new DOMSource(node.getAsDocument());
  Result result = new StreamResult(writer);",xml,extensible markup language
Lnet/sourceforge/pmd/util/designer/Designer;.getXmlTreeCode(Lnet/sourceforge/pmd/lang/ast/Node;)Ljava/lang/String;#xml,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/designer/Designer.java;,VariableName,xml,"    static final String getXmlTreeCode(Node cu) {
        String xml = null;
        if (cu != null) {
            try {
                xml = getXmlString(cu);",xml,extensible markup language
Lnet/sourceforge/pmd/util/designer/Designer$ShowListener;.actionPerformed(Ljava/awt/event/ActionEvent;)V#tn,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/designer/Designer.java;,VariableName,tn,"  public void actionPerformed(ActionEvent ae) {
   TreeNode tn;
   try {
    Node lastCompilationUnit = getCompilationUnit();
    tn = new ASTTreeNode(lastCompilationUnit);
   } catch (ParseException pe) {
    tn = new ExceptionNode(pe);
   }",tn,tree node
Lnet/sourceforge/pmd/util/designer/Designer$ASTTreeNode;.(Lnet/sourceforge/pmd/util/designer/Designer;Lnet/sourceforge/pmd/lang/ast/Node;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/designer/Designer.java;,MethodName,ASTTreeNode,"private Node node;
  private ASTTreeNode parent;
  private ASTTreeNode[] kids;

  public ASTTreeNode(Node theNode) {
   node = theNode;

   Node parent = node.jjtGetParent();
   if (parent != null) {",ast,abstract syntax tree
[Lnet/sourceforge/pmd/util/designer/Designer$ASTTreeNode;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/designer/Designer.java;,ClassName,ASTTreeNode[],"// Tree node that wraps the AST node for the tree widget and
 // any possible children they may have.
 private class ASTTreeNode implements TreeNode {

  private Node node;
  private ASTTreeNode parent;
  private ASTTreeNode[] kids;",ast,abstract syntax tree
Lnet/sourceforge/pmd/util/designer/Designer$ASTSelectionListener;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/designer/Designer.java;,ClassName,ASTSelectionListener,"
 private class ASTSelectionListener implements ListSelectionListener {
  public void valueChanged(ListSelectionEvent e) {
   ListSelectionModel lsm = (ListSelectionModel) e.getSource();
   if (!lsm.isSelectionEmpty()) {",ast,abstract syntax tree
Lnet/sourceforge/pmd/util/designer/Designer$ShowListener;.actionPerformed(Ljava/awt/event/ActionEvent;)V#ae#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/designer/Designer.java;,ParameterName,ae,"private class ShowListener implements ActionListener {
  public void actionPerformed(ActionEvent ae) {
   TreeNode tn;
   try {
    Node lastCompilationUnit = getCompilationUnit();",ae,action event
Ljavax/xml/transform/dom/DOMSource;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/designer/Designer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/RuleSetWriter.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/cpd/XMLRenderer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/renderers/XSLTRenderer.java;,ClassName,DOMSource,"private static String getXmlString(Node node) throws TransformerException {
  StringWriter writer = new StringWriter();

  Source source = new DOMSource(node.getAsDocument());
  Result result = new StreamResult(writer);
  TransformerFactory transformerFactory = TransformerFactory.newInstance();
  Transformer xformer = transformerFactory.newTransformer();",dom,document object model
Lnet/sourceforge/pmd/util/designer/DFAPanel$DFACanvas;.addAccessLabel(Ljava/lang/StringBuffer;Lnet/sourceforge/pmd/lang/dfa/VariableAccess;)V#va#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/designer/DFAPanel.java;,ParameterName,va,"private int x = 150;
 private int y = 50;
 private LineGetter lines;

 private void addAccessLabel(StringBuffer sb, VariableAccess va) {

     if (va.isDefinition()) {
  sb.append(""d("");
     } else if (va.isReference()) {",va,variables
Lnet/sourceforge/pmd/util/designer/DFAPanel$DFACanvas;.paintComponent(Ljava/awt/Graphics;)V#g#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/designer/DFAPanel.java;,ParameterName,g," public void paintComponent(Graphics g) {
     super.paintComponent(g);

     if (node == null) {
  return;
     }",g,graphics
Lnet/sourceforge/pmd/util/FileUtil;.collect(Ljava/util/List<Lnet/sourceforge/pmd/util/datasource/DataSource;>;Ljava/lang/String;Ljava/io/FilenameFilter;)Ljava/util/List<Lnet/sourceforge/pmd/util/datasource/DataSource;>;#0#0#1#ze,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/FileUtil.java;,VariableName,ze,"  if (filenameFilter.accept(null, zipEntry.getName())) {
       dataSources.add(new ZipDataSource(zipFile, zipEntry));
   }
      }
  } catch (IOException ze) {
      throw new RuntimeException(""Archive file "" + file.getName() + "" can't be opened"");
  }
     } else {",ze,zip entry
Lnet/sourceforge/pmd/util/FileUtil;.()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/FileUtil.java;,MethodName,FileUtil,"**
 * This is a utility class for working with Files.
 */
public final class FileUtil {

    private FileUtil() {}

    /**
     * Helper method to get a filename without its extension
     * @param fileName String
     * @return String",util,utility
Lnet/sourceforge/pmd/util/FileUtil;.findPatternInFile(Ljava/io/File;Ljava/lang/String;)Z#regexp,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/FileUtil.java;,VariableName,regexp,"    /**
     * Handy method to find a certain pattern into a file. While this method lives in the FileUtils, it was
     * designed with with unit test in mind (to check result redirected into a file)
     *
     * @param file
     * @param pattern
     * @return
     */
    public static boolean findPatternInFile( final File file, final String pattern ) {

     Pattern regexp = Pattern.compile(pattern);
     Matcher matcher = regexp.matcher("""");

     FileIterable it = new FileIterable(file);
     for ( String line : it ){",regexp,regular expression
Lnet/sourceforge/pmd/util/filter/AndFilter;.filter(TT;)Z#obj#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/filter/AndFilter.java;,ParameterName,obj," public AndFilter(Filter<T>... filters) {
  super(filters);
 }

 public boolean filter(T obj) {
  boolean match = true;
  for (Filter<T> filter : filters) {
   if (!filter.filter(obj)) {",obj,object
Lnet/sourceforge/pmd/util/filter/Filters;.buildRegexFilterExcludeOverInclude(Ljava/util/List<Ljava/lang/String;>;Ljava/util/List<Ljava/lang/String;>;)Lnet/sourceforge/pmd/util/filter/Filter<Ljava/lang/String;>;#1#excludeRegex,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/filter/Filters.java;,VariableName,excludeRegex,"  OrFilter<String> excludeFilter = new OrFilter<String>();
  if (excludeRegexes != null) {
   for (String excludeRegex : excludeRegexes) {
    excludeFilter.addFilter(new RegexStringFilter(excludeRegex));
   }
  }",regex,regular expression
Lnet/sourceforge/pmd/util/filter/Filters;.buildRegexFilterExcludeOverInclude(Ljava/util/List<Ljava/lang/String;>;Ljava/util/List<Ljava/lang/String;>;)Lnet/sourceforge/pmd/util/filter/Filter<Ljava/lang/String;>;#0#includeRegex,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/filter/Filters.java;,VariableName,includeRegex," OrFilter<String> excludeFilter = new OrFilter<String>();
  if (excludeRegexes != null) {
   for (String excludeRegex : excludeRegexes) {
    excludeFilter.addFilter(new RegexStringFilter(excludeRegex));
   }
  }",regex,regular expression
Lnet/sourceforge/pmd/util/filter/Filters;.buildRegexFilterIncludeOverExclude(Ljava/util/List<Ljava/lang/String;>;Ljava/util/List<Ljava/lang/String;>;)Lnet/sourceforge/pmd/util/filter/Filter<Ljava/lang/String;>;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/filter/Filters.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/RuleSet.java;,MethodName,buildRegexFilterIncludeOverExclude,"  * @param includeRegexes The include regular expressions.  May be <code>null</code>.
  * @param excludeRegexes The exclude regular expressions.  May be <code>null</code>.
  * @return A String Filter.
  */
 public static Filter<String> buildRegexFilterIncludeOverExclude(List<String> includeRegexes,
   List<String> excludeRegexes) {
  OrFilter<String> includeFilter = new OrFilter<String>();
  if (includeRegexes != null) {",regex,regular expression
Lnet/sourceforge/pmd/util/filter/RegexStringFilter;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/filter/RegexStringFilter.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/filter/Filters.java;,ClassName,RegexStringFilter,"public class RegexStringFilter implements Filter<String> {
    /**
     * Matches regular expressions begin with an optional {@code ^}, then
     * {@code .*}, then a literal path, with an optional file extension, and
     * finally an optional {@code $} at the end. The {@code .} in the extension
     * may or may not be preceded by a {@code \} escape. The literal path
     * portion is determine by the absence of any of the following characters:
     * <code>\ [ ( . * ? + | { $</code>
     * 
     * There are two capturing groups in the expression. The first is for the
     * literal path. The second is for the file extension, without the escaping.
     * The concatenation of these two captures creates the {@link String} which
     * can be used with {@link String#endsWith(String)}.
     * 
     * For ease of reference, the non-Java escaped form of this pattern is:
     * <code>\^?\.\*([^\\\[\(\.\*\?\+\|\{\$]+)(?:\\?(\.\w+))?\$?</code>
     */",regex,regular expression
Lnet/sourceforge/pmd/util/StringUtil;.()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/StringUtil.java;,MethodName,StringUtil,"public static final String[] EMPTY_STRINGS = new String[0];
    private static final boolean SUPPORTS_UTF8 = System.getProperty(""net.sourceforge.pmd.supportUTF8"", ""no"").equals(""yes"");

    private StringUtil() {}",util,utility
Lnet/sourceforge/pmd/util/StringUtil;.SUPPORTS_UTF8)Z,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/StringUtil.java;,FieldName,SUPPORTS_UTF8,"public final class StringUtil {

 public static final String[] EMPTY_STRINGS = new String[0];
    private static final boolean SUPPORTS_UTF8 = System.getProperty(""net.sourceforge.pmd.supportUTF8"", ""no"").equals(""yes"");

    private StringUtil() {}",utf,unicode transformation format
Lnet/sourceforge/pmd/util/StringUtil;.appendXmlEscaped(Ljava/lang/StringBuilder;Ljava/lang/String;Z)V#supportUTF8#0#2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/StringUtil.java;,ParameterName,supportUTF8," * @param buf
     * @param src
     * @param supportUTF8 override the default setting, whether special characters should be replaced
     * with entities (<code>false</code>) or should be included as is (<code>true</code>).
     * @see #appendXmlEscaped(StringBuilder, String)
     *
     * TODO - unify the method above with the one below
     *
     * public to support unit testing - make this package private, once the unit test classes are in the same package.
  */
    public static void appendXmlEscaped(StringBuilder buf, String src, boolean supportUTF8) {
        char c;
        for (int i = 0; i < src.length(); i++) {
            c = src.charAt(i);",utf,unicode transformation format
Lnet/sourceforge/pmd/util/StringUtil;.lpad(Ljava/lang/String;I)Ljava/lang/String;#res,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/StringUtil.java;,VariableName,res,"/**
     * Left pads a string.
     * @param s The String to pad
     * @param length The desired minimum length of the resulting padded String
     * @return The resulting left padded String
     */
    public static String lpad(String s, int length) {
         String res = s;
         if (length - s.length() > 0) {
             char [] arr = new char[length - s.length()];
             java.util.Arrays.fill(arr, ' ');",res,resulting
Lnet/sourceforge/pmd/util/StringUtil;.substringsOf(Ljava/lang/String;C)[Ljava/lang/String;#1#pos,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/StringUtil.java;,VariableName,pos,"  int i = 0;
  int offset = 0;

  while (offset <= length) {
   int pos = source.indexOf(delimiter, offset);
   if (pos < 0) {
       pos = length;
   }",pos,position
Lnet/sourceforge/pmd/util/StringUtil;.escapeWhitespace(Ljava/lang/Object;)Ljava/lang/String;#o#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/StringUtil.java;,ParameterName,o," /**
     * Replace some whitespace characters so they are visually apparent.
     * 
     * @param o
     * @return String
     */
 public static String escapeWhitespace(Object o) {
  
  if (o == null) {
   return null;
  }",o,object
Ljava/lang/Integer;.toHexString(I)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/StringUtil.java;,MethodName,toHexString,"       c = src.charAt(i);
            if (c > '~') {// 126
                if (!supportUTF8) {
                    buf.append(""&#x"").append(Integer.toHexString(c)).append(';');
                } else {
                    buf.append(c);
                }",hex,hexadecimal
Lnet/sourceforge/pmd/util/viewer/gui/MainFrame;.actionPerformed(Ljava/awt/event/ActionEvent;)V#t0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/viewer/gui/MainFrame.java;,VariableName,t0,"public void actionPerformed(ActionEvent e) {
        String command = e.getActionCommand();
        long t0;
        long t1;
        if (ActionCommands.COMPILE_ACTION.equals(command)) {
            try {",t,time
Lnet/sourceforge/pmd/util/viewer/gui/MainFrame;.actionPerformed(Ljava/awt/event/ActionEvent;)V#t1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/viewer/gui/MainFrame.java;,VariableName,t1,"public void actionPerformed(ActionEvent e) {
        String command = e.getActionCommand();
        long t0;
        long t1;
        if (ActionCommands.COMPILE_ACTION.equals(command)) {
            try {",t,time
Lnet/sourceforge/pmd/util/viewer/gui/MainFrame;.statusLbl)Ljavax/swing/JLabel;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/viewer/gui/MainFrame.java;,FieldName,statusLbl,"private SourceCodePanel sourcePanel;
    private XPathPanel xPathPanel;
    private JButton evalBtn;
    private JLabel statusLbl;
    private JRadioButtonMenuItem jdk13MenuItem;
    private JRadioButtonMenuItem jdk14MenuItem;
    private JRadioButtonMenuItem jdk15MenuItem; //NOPMD",lbl,label
Lnet/sourceforge/pmd/util/viewer/gui/MainFrame;.jdk13MenuItem)Ljavax/swing/JRadioButtonMenuItem;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/viewer/gui/MainFrame.java;,FieldName,jdk13MenuItem,"private XPathPanel xPathPanel;
    private JButton evalBtn;
    private JLabel statusLbl;
    private JRadioButtonMenuItem jdk13MenuItem;
    private JRadioButtonMenuItem jdk14MenuItem;
    private JRadioButtonMenuItem jdk15MenuItem; //NOPMD
    private JRadioButtonMenuItem jdk16MenuItem;",jdk,java development kit
Lnet/sourceforge/pmd/util/viewer/gui/menu/AttributesSubMenu;.init()V#i,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/viewer/gui/menu/AttributesSubMenu.java;,VariableName,i,"    private void init() {
        AttributeAxisIterator i = new AttributeAxisIterator(node);
        while (i.hasNext()) {
            Attribute attribute = i.next();
            add(new XPathFragmentAddingItem(attribute.getName() + "" = "" + attribute.getValue(), model,
                    AttributeToolkit.constructPredicate(attribute)));",i,iterator
Lnet/sourceforge/pmd/util/viewer/gui/menu/SimpleNodeSubMenu;.init()V#0#temp,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/viewer/gui/menu/SimpleNodeSubMenu.java;,VariableName,temp,"    private void init() {
        StringBuffer buf = new StringBuffer(200);
        for (Node temp = node; temp != null; temp = temp.jjtGetParent()) {
            buf.insert(0, ""/"" + temp.toString());
        }
        add(new XPathFragmentAddingItem(NLS.nls(""AST.MENU.NODE.ADD_ABSOLUTE_PATH""), model, buf.toString()));
        add(new XPathFragmentAddingItem(NLS.nls(""AST.MENU.NODE.ADD_ALLDESCENDANTS""), model,
                ""//"" + node.toString()));",temp,temporary
Lnet/sourceforge/pmd/util/viewer/gui/ParseExceptionHandler;.exc)Ljava/lang/Exception;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/viewer/gui/ParseExceptionHandler.java;,FieldName,exc,"public class ParseExceptionHandler extends JDialog implements ActionListener {
    private Exception exc;
    private JButton okBtn;

    /**
     * creates the dialog
     *
     * @param parent dialog's parent
     * @param exc    exception to be handled
     */",exc,exception
Lnet/sourceforge/pmd/util/viewer/model/ASTModel;.(Lnet/sourceforge/pmd/lang/ast/Node;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/pmd/src/net/sourceforge/pmd/util/viewer/model/ASTModel.java;,MethodName,ASTModel,"/**
     * creates the tree model
     *
     * @param root tree's root
     */
    public ASTModel(Node root) {
        this.root = root;
    }",ast,abstract syntax tree
Lnet/sf/portecle/crypto/X509Ext;.getLogotypeStringValue([B)Ljava/lang/String;|Ljava/io/IOException;#0#0#0#ltInfo,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509Ext.java;,VariableName,ltInfo,"case 1:
     sb.append(""<ul><li>"");
     sb.append(RB.getString(""IssuerLogo""));
     DERTaggedObject ltInfo = (DERTaggedObject) derTag.getObject();
     switch (ltInfo.getTagNo())
     {",info,information
Lnet/sf/portecle/FileChooserFactory$PortecleFileView;.getIcon(Ljava/io/File;)Ljavax/swing/Icon;#f#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/FileChooserFactory.java;,ParameterName,f,"public Icon getIcon(File f)
  {
   // The f.isDirectory() check is superfluous here, but it reportedly avoids some odd
   // delays on Windows (sf.net#3129497).
   if (f.isDirectory() || !f.isFile())
   {
    return super.getIcon(f);
   }",f,file
Lnet/sf/portecle/crypto/X509Ext;.getMicrosoftCertificateTemplateV2StringValue([B)Ljava/lang/String;|Ljava/io/IOException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509Ext.java;,MethodName,getMicrosoftCertificateTemplateV2StringValue,"* @param bValue The octet string value
  * @return Extension value as a string
  * @throws IOException If an I/O problem occurs
  */
 private String getMicrosoftCertificateTemplateV2StringValue(byte[] bValue)
     throws IOException
 {
  ASN1Sequence seq = (ASN1Sequence) ASN1Primitive.fromByteArray(bValue);
  StringBuilder sb = new StringBuilder();",v,value
Lnet/sf/portecle/gui/JMenuRecentFiles;.getRecentFiles()[Ljava/io/File;#arrList,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/gui/JMenuRecentFiles.java;,VariableName,arrList,"/**
  * Get the set of recent files currently maintained by the menu in order.
  *
  * @return The recent files
  */
 public File[] getRecentFiles()
 {
  ArrayList<File> arrList = new ArrayList<>();

  for (JMenuItemRecentFile rf : m_jmirf)
  {
   if (rf == null)",arr,array
Lnet/sf/portecle/crypto/X509Ext;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/ExtensionsTableModel.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509Ext.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DViewExtensions.java;,ClassName,X509Ext,"/**
 * Holds the information of an X.509 extension and provides the ability to get the extension's name and value as a
 * string.
 */
public class X509Ext
{
 /** Logger */
 private static final Logger LOG = Logger.getLogger(X509Ext.class.getCanonicalName());",ext,extension
Lnet/sf/portecle/crypto/X509Ext;.getCertificatePoliciesStringValue([B)Ljava/lang/String;|Ljava/io/IOException;#0#0#pQuals,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509Ext.java;,VariableName,pQuals,"sb.append(RB.getString(""PolicyIdentifier""));
   sb.append("": "");
   sb.append(MessageFormat.format(getRes(piId, ""UnrecognisedPolicyIdentifier""), piId));

   ASN1Sequence pQuals;
   if ((pQuals = pi.getPolicyQualifiers()) != null)
   {
    sb.append(""<ul>"");",p,policy
Lnet/sf/portecle/DKeyStoreReport;.copyPressed(Z)V#bXml#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DKeyStoreReport.java;,ParameterName,bXml,"/**
  * Copy the keystore report to the clipboard.
  *
  * @param bXml Copy as XML?
  */
 private void copyPressed(boolean bXml)
 {
  try
  {
   // Get report...
   String sKeyStoreReport;
",xml,extensible markup language
Lnet/sf/portecle/crypto/X509CertUtil;.establishTrust(Ljava/util/List<Ljava/security/cert/X509Certificate;>;Ljava/security/cert/X509Certificate;)[Ljava/security/cert/X509Certificate;|Lnet/sf/portecle/crypto/CryptoException;#vCompCerts#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509CertUtil.java;,ParameterName,vCompCerts,"* @return The trust chain, or null if trust could not be established
  * @param cert The certificate
  * @param vCompCerts The comparison set of certificates
  * @throws CryptoException If there is a problem establishing trust
  */
 private static X509Certificate[] establishTrust(List<X509Certificate> vCompCerts, X509Certificate cert)
     throws CryptoException
 {
  // For each comparison certificate...
  for (X509Certificate compCert : vCompCerts)",v,version
Lnet/sf/portecle/gui/LastDir;.m_fLastDir)Ljava/io/File;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/gui/LastDir.java;,FieldName,m_fLastDir,"/**
 * Simple class intended to store the last accessed directory for a file centric GUI application.
 */
public class LastDir
{
 /** Last directory. */
 private File m_fLastDir;

 /**
  * Construct an empty LastDir object.
  */",dir,directory
Lnet/sf/portecle/FPortecle$KeyStoreTable$FileTransferHander;.importData(Ljavax/swing/JComponent;Ljava/awt/datatransfer/Transferable;)Z#comp#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/FPortecle.java;,ParameterName,comp,"public boolean importData(JComponent comp, Transferable t)
   {
    if (file != null)
    {
     // Will refactor this later, taken from openKeystore();
     // Does the current keystore contain unsaved changes?",comp,component
Ljavax/swing/event/HyperlinkEvent;.getURL()Ljava/net/URL;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/gui/help/FHelp.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DViewExtensions.java;,MethodName,getURL,"try
    {
     if (evt.getEventType() == HyperlinkEvent.EventType.ACTIVATED)
     {
      jepTopic.setPage(evt.getURL());
      m_history.visit(evt.getURL());
     }
    }
    catch (IOException ex)",url,uniform resource locator
Lnet/sf/portecle/DKeyStoreReport;.getKeyStoreReportXml()Ljava/lang/String;|Lnet/sf/portecle/crypto/CryptoException;|Ljavax/xml/parsers/ParserConfigurationException;|Ljavax/xml/transform/TransformerException;#xml,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DKeyStoreReport.java;,VariableName,xml," private String getKeyStoreReportXml()
     throws CryptoException, ParserConfigurationException, TransformerException
 {
  StringWriter xml = new StringWriter();
  Transformer tr = TF_FACTORY.newTransformer();
  tr.setOutputProperties(TF_PROPS);
  tr.transform(new DOMSource(generateDocument()), new StreamResult(xml));",xml,extensible markup language
Lnet/sf/portecle/DKeyStoreReport;.getKeyStoreReport()Ljava/lang/String;|Lnet/sf/portecle/crypto/CryptoException;#0#0#0#2#0#0#sValidTo,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DKeyStoreReport.java;,VariableName,sValidTo," // Valid Until
      Date dValidTo = x509Cert.getNotAfter();
      String sValidTo =
          DateFormat.getDateTimeInstance(DateFormat.MEDIUM, DateFormat.MEDIUM).format(dValidTo);
      sbReport.append(
          MessageFormat.format(RB.getString(""DKeyStoreReport.report.validuntil""), sValidTo));
      sbReport.append(""\n"");",s,string
Lnet/sf/portecle/crypto/X509Ext;.getCertificatePoliciesStringValue([B)Ljava/lang/String;|Ljava/io/IOException;#pSeq,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509Ext.java;,VariableName,pSeq,"private String getCertificatePoliciesStringValue(byte[] bValue)
     throws IOException
 {
  ASN1Sequence pSeq = (ASN1Sequence) ASN1Primitive.fromByteArray(bValue);
  StringBuilder sb = new StringBuilder();

  for (int i = 0, len = pSeq.size(); i < len; i++)
  {",seq,sequence
Lnet/sf/portecle/crypto/X509Ext;.getMicrosoftCertificateTemplateV2StringValue([B)Ljava/lang/String;|Ljava/io/IOException;#seq,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509Ext.java;,VariableName,seq,"private String getMicrosoftCertificateTemplateV2StringValue(byte[] bValue)
     throws IOException
 {
  ASN1Sequence seq = (ASN1Sequence) ASN1Primitive.fromByteArray(bValue);
  StringBuilder sb = new StringBuilder();

  sb.append(RB.getString(""MsftCertTemplateId""));
  sb.append("": "");",seq,sequence
Lnet/sf/portecle/FPortecle;.changeKeyStoreType(Lnet/sf/portecle/crypto/KeyStoreType;)Z#0#0#1#oldExts,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/FPortecle.java;,VariableName,oldExts,"m_keyStoreWrap.setKeyStore(newKeyStore);
   File oldFile = m_keyStoreWrap.getKeyStoreFile();
   if (oldFile != null)
   {
    Set<String> oldExts = m_keyStoreWrap.getKeyStoreType().getFilenameExtensions();
    Set<String> newExts = keyStoreType.getFilenameExtensions();
    if (oldExts.isEmpty() || newExts.isEmpty())",exts,extensions
Lnet/sf/portecle/gui/JMenuItemRecentFile;.m_iPosition)I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/gui/JMenuItemRecentFile.java;,FieldName,m_iPosition,"/**
  * Menu's position in its recent file list (maintained by JMenuRecentFiles)
  */
 private int m_iPosition;",m,menu
Lnet/sf/portecle/DGenerateCertificate;.populateSigAlgs(Lnet/sf/portecle/crypto/KeyPairType;Ljavax/swing/JComboBox<Lnet/sf/portecle/crypto/SignatureType;>;)V#0#st,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DGenerateCertificate.java;,VariableName,st,"private static void populateSigAlgs(KeyPairType type, JComboBox<SignatureType> combo)
 {
  combo.removeAllItems();
  for (SignatureType st : SignatureType.valuesFor(type))
  {
   combo.addItem(st);
  }",st,signature type
Lnet/sf/portecle/FPortecle;.REQ_BC_VERSION)Ljava/lang/Double;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/FPortecle.java;,FieldName,REQ_BC_VERSION,"/** Application preferences */
 private static final Preferences PREFS = Preferences.userNodeForPackage(FPortecle.class);

 /** Minimum required BC version */
 private static final Double REQ_BC_VERSION = 1.56;

 /** Enable experimental features? */
 private static final boolean EXPERIMENTAL = Boolean.getBoolean(""portecle.experimental"");",req,required
Lnet/sf/portecle/crypto/X509Ext;.getMicrosoftPreviousCACertificateHashStringValue([B)Ljava/lang/String;|Ljava/io/IOException;#derOctetStr,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509Ext.java;,VariableName,derOctetStr,"private String getMicrosoftPreviousCACertificateHashStringValue(byte[] bValue)
     throws IOException
 {
  DEROctetString derOctetStr = (DEROctetString) ASN1Primitive.fromByteArray(bValue);
  byte[] bKeyIdent = derOctetStr.getOctets();

  return convertToHexString(bKeyIdent);
 }",str,string
Lnet/sf/portecle/StringUtil;.toHex(Ljava/lang/Object;ILjava/lang/String;)Ljava/lang/StringBuilder;#bigInt,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/StringUtil.java;,VariableName,bigInt,"if (groupSize < 0)
  {
   throw new IllegalArgumentException(""Group size must be >= 0"");
  }
  BigInteger bigInt;
  if (obj instanceof BigInteger)
  {
   bigInt = (BigInteger) obj;
  }",int,integer
Lnet/sf/portecle/FPortecle;.PREFS)Ljava/util/prefs/Preferences;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/FPortecle.java;,FieldName,PREFS,"/** Logger */
 public static final Logger LOG = Logger.getLogger(FPortecle.class.getName(), RB_BASENAME);

 /** Application preferences */
 private static final Preferences PREFS = Preferences.userNodeForPackage(FPortecle.class);

 /** Minimum required BC version */
 private static final Double REQ_BC_VERSION = 1.56;",prefs,preferences
Lnet/sf/portecle/crypto/X509Ext;.getKeyUsageStringValue([B)Ljava/lang/String;|Ljava/io/IOException;#val,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509Ext.java;,VariableName,val,"private String getNetscapeCertificateTypeStringValue(byte[] bValue)
     throws IOException
 {
  int val = new NetscapeCertType((DERBitString) ASN1Primitive.fromByteArray(bValue)).intValue();
  StringBuilder strBuff = new StringBuilder();
  for (int type : NETSCAPE_CERT_TYPES)
  {",val,value
Ljavax/swing/UIManager;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DOptions.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/FPortecle.java;,ClassName,UIManager,"  // Current Look and Feel
  LookAndFeel currentLookAndFeel = UIManager.getLookAndFeel();

  for (UIManager.LookAndFeelInfo lookFeelInfo : UIManager.getInstalledLookAndFeels())
  {",ui,user interface
Lnet/sf/portecle/FileChooserFactory;.CSR_FILE_DESC)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/FileChooserFactory.java;,FieldName,CSR_FILE_DESC,"/** Description for PKCS #10 CSR files */
 private static final String CSR_FILE_DESC =
     MessageFormat.format(RB.getString(""FileChooseFactory.CsrFiles""), toWildcards(CSR_EXTS));",desc,description
Lnet/sf/portecle/gui/jar/JarInfoTableModel;.load([Ljava/util/jar/JarFile;)V|Ljava/io/IOException;#0#0#col,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/gui/jar/JarInfoTableModel.java;,VariableName,col,"{
     sImplementationVendor = sValue;
    }
   }

   int col = 0;

   // Populate the file column
   m_data[iCnt][col++] = file.getName();",col,column
Lnet/sf/portecle/gui/LastDir;.updateLastDir(Ljava/io/File;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/gui/LastDir.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/FPortecle.java;,MethodName,updateLastDir,"/**
  * Update the LastDir object based on the supplied file. If the file exists and is a directory it is used, if it
  * exists and is a regular file then its parent is used.
  *
  * @param file Used to set last directory
  */
 public void updateLastDir(File file)
 {
  if (file != null && file.exists())
  {
   m_fLastDir = file.isDirectory() ? file : file.getParentFile();
  }",dir,directory
Lnet/sf/portecle/FPortecle;.examineCertSSL(Ljava/net/InetSocketAddress;)Z#ss,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/FPortecle.java;,VariableName,ss,"// Get the certificates received from the connection
  X509Certificate[] certs = null;
  String protocol = null;
  String cipherSuite = null;
  SSLSocket ss = null;
  Socket socket = null;
",ss,ssl socket
Lnet/sf/portecle/gui/FileExtFilter;.accept(Ljava/io/File;)Z#sFileExt,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/gui/FileExtFilter.java;,VariableName,sFileExt,"if (file.isDirectory())
  {
   return true;
  }

  String sFileExt = getExtension(file);

  if (sFileExt == null)
  {
   return false;
  }",ext,extension
Lnet/sf/portecle/DGenerateCertificate;.populateSigAlgs(Lnet/sf/portecle/crypto/KeyPairType;Ljavax/swing/JComboBox<Lnet/sf/portecle/crypto/SignatureType;>;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DGenerateCertificate.java;,MethodName,populateSigAlgs,"/**
  * Populate the signature algorithm combo box with the signature algorithms applicable to the key pair algorithm.
  * Also set a sane default selected item, and disable the combo box if it has less than 2 items.
  *
  * @param type key pair type
  * @param combo the combo box to populate
  */
 private static void populateSigAlgs(KeyPairType type, JComboBox<SignatureType> combo)
 {
  combo.removeAllItems();",algs,algorithms
Lnet/sf/portecle/crypto/X509Ext;.getNovellQualityAttr(Lorg/bouncycastle/asn1/ASN1Sequence;)Ljava/lang/CharSequence;#ksqv,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509Ext.java;,VariableName,ksqv,"  BigInteger ksqv = ((ASN1Integer) seq.getObjectAt(3)).getValue();
  String ksq = getRes(""NovellKeyStorageQuality."" + ksqv, ""UnrecognisedNovellKeyStorageQuality"");
  res.append(""<li>"").append(RB.getString(""NovellKeyStorageQuality""));",ksqv,key storage quality value
Lnet/sf/portecle/KeyStoreTableModel;.load(Ljava/security/KeyStore;)V|Ljava/security/KeyStoreException;#0#en,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/KeyStoreTableModel.java;,VariableName,en,"// Iterate through the aliases, retrieving the keystore entries and populating the table model
  int iCnt = 0;
  for (Enumeration<String> en = keyStore.aliases(); en.hasMoreElements();)
  {
   String sAlias = en.nextElement();

   // Populate the type column - it is set with an integer but a custom cell renderer will cause a
   // suitable icon to be displayed",en,enumeration
Lnet/sf/portecle/crypto/X509Ext;.getExtendedKeyUsageStringValue([B)Ljava/lang/String;#eku,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509Ext.java;,VariableName,eku,"private String getExtendedKeyUsageStringValue(byte[] bValue)
 {
  StringBuilder strBuff = new StringBuilder();

  ExtendedKeyUsage eku = ExtendedKeyUsage.getInstance(bValue);
  KeyPurposeId[] usages = eku.getUsages();

  for (KeyPurposeId usage : usages)
  {",eku,extended key usage
Lnet/sf/portecle/DImportKeyPair;.populateList()V|Lnet/sf/portecle/crypto/CryptoException;#0#0#vKeyPairAliases,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DImportKeyPair.java;,VariableName,vKeyPairAliases,"{
  try
  {
   Vector<String> vKeyPairAliases = new Vector<>();

   // For each entry in the keystore...
   for (Enumeration<String> aliases = m_pkcs12.aliases(); aliases.hasMoreElements();)
   {
    // Get alias...
    String sAlias = aliases.nextElement();",v,vector
Lnet/sf/portecle/FPortecle;.exportPrivKeyCertChainPKCS12(Ljava/lang/String;)Z,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/FPortecle.java;,MethodName,exportPrivKeyCertChainPKCS12,"/**
  * Export the private key and certificates of the keystore entry to a PKCS #12 keystore file.
  *
  * @param sEntryAlias Entry alias
  * @return True if the export is successful, false otherwise
  */
 private boolean exportPrivKeyCertChainPKCS12(String sEntryAlias)
 {
  KeyStore keyStore = m_keyStoreWrap.getKeyStore();

  // Get the entry's password (we may already know it from the wrapper)
  char[] cPassword = m_keyStoreWrap.getEntryPassword(sEntryAlias);",cert,certificate
Lnet/sf/portecle/gui/DocumentMaxLengthFilter;.insertString(Ljavax/swing/text/DocumentFilter$FilterBypass;ILjava/lang/String;Ljavax/swing/text/AttributeSet;)V|Ljavax/swing/text/BadLocationException;#strLen,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/gui/DocumentMaxLengthFilter.java;,VariableName,strLen,"public void insertString(FilterBypass fb, int offset, String string, AttributeSet attr)
     throws BadLocationException
 {
  int strLen;
  if (string == null || (strLen = string.length()) == 0)
  {
   // Always allow empty inserts
   super.insertString(fb, offset, string, attr);",len,length
Lnet/sf/portecle/gui/about/DSystemInformation;.initComponents()V#jtfJvmTotalMemory,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/gui/about/DSystemInformation.java;,VariableName,jtfJvmTotalMemory,"GridBagConstraints gbc_jlJvmTotalMemory = (GridBagConstraints) gbcLabel.clone();
  gbc_jlJvmTotalMemory.gridy = 6;
  jpSystemInformation.add(jlJvmTotalMemory, gbc_jlJvmTotalMemory);

  JTextField jtfJvmTotalMemory =
      new JTextField(MessageFormat.format(RB.getString(""DSystemInformation.jtfJvmTotalMemory.text""),
          Math.round((double) runtime.totalMemory() / 1024)), VALUE_WIDTH);",jvm,java virtual machine
Lnet/sf/portecle/gui/jar/DJarInfo;.getClassPathJars()[Ljava/util/jar/JarFile;|Ljava/io/IOException;#strTok,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/gui/jar/DJarInfo.java;,VariableName,strTok,"// Split class path into it's components using the path separator
  String sClassPath = System.getProperty(""java.class.path"");
  String sPathSeparator = System.getProperty(""path.separator"");

  StringTokenizer strTok = new StringTokenizer(sClassPath, sPathSeparator);

  // Store each JAR found on class path
  while (strTok.hasMoreTokens())",tok,tokenizer
Lnet/sf/portecle/FPortecle;.RB_BASENAME)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/FPortecle.java;,FieldName,RB_BASENAME,"public class FPortecle
    extends JFrame
    implements StatusBar
{
 /** Resource bundle base name */
 private static final String RB_BASENAME = FPortecle.class.getPackage().getName() + ""/resources"";
",rb,resource bundle
Lnet/sf/portecle/crypto/X509Ext;.getLogotypeStringValue([B)Ljava/lang/String;|Ljava/io/IOException;#0#0#0#0#0#1#0#sUri,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509Ext.java;,VariableName,sUri,"ASN1Sequence ltURI = (ASN1Sequence) ltDetails.getObjectAt(2);
        for (int j = 0, jlen = ltURI.size(); j < jlen; j++)
        {
         String sUri = ((ASN1String) ltURI.getObjectAt(j)).getString();
         String eUri = escapeHtml(sUri);
         sb.append(""<li>URI: "");
         sb.append(getLink(sUri, eUri, LinkClass.BROWSER));",uri,uniform resource identifier
Lnet/sf/portecle/FPortecle;.saveAppPrefs()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/FPortecle.java;,MethodName,saveAppPrefs,"// Yes - save selections to be picked up by application preferences,
   lookFeelClassName = newLookFeelClassName;
   m_bLookFeelDecorationOptions = bLookFeelDecoration;
   saveAppPrefs();

   JFrame.setDefaultLookAndFeelDecorated(bLookFeelDecoration);
   JDialog.setDefaultLookAndFeelDecorated(bLookFeelDecoration);",prefs,preferences
Lnet/sf/portecle/crypto/ProviderUtil;.getPkcs11Providers()Ljava/util/Collection<Ljava/security/Provider;>;#p11s,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/ProviderUtil.java;,VariableName,p11s,"/**
  * Get the PKCS #11 <code>Provider</code>s available on the system.
  *
  * @return the (possibly empty) collection of available PKCS #11 <code>Provider</code>s, sorted by name
  */
 public static Collection<Provider> getPkcs11Providers()
 {
  TreeMap<String, Provider> p11s = new TreeMap<>();
  for (Provider prov : Security.getProviders())
  {",p,provider
Lnet/sf/portecle/FileChooserFactory;.KEYPAIR_FILE_DESC)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/FileChooserFactory.java;,FieldName,KEYPAIR_FILE_DESC," /** Description for PEM files */
 private static final String PEM_FILE_DESC =
     MessageFormat.format(RB.getString(""FileChooseFactory.PEMFiles""), toWildcards(new String[] { PEM_EXT }));

 /** Description for files containing key pairs */
 private static final String KEYPAIR_FILE_DESC;",desc,description
Lnet/sf/portecle/gui/LastDir;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/gui/LastDir.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/FPortecle.java;,ClassName,LastDir,"/**
 * Simple class intended to store the last accessed directory for a file centric GUI application.
 */
public class LastDir
{
 /** Last directory. */
 private File m_fLastDir;",dir,directory
Lnet/sf/portecle/KeyStoreWrapper;.m_mPasswords)Ljava/util/HashMap<Ljava/lang/String;[C>;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/KeyStoreWrapper.java;,FieldName,m_mPasswords," /** The keystore's password */
 private char[] m_cPassword;

 /** Keystore entry passwords */
 private final HashMap<String, char[]> m_mPasswords = new HashMap<>();

 /** File the keystore was loaded from/saved to */
 private File m_fKeyStore;",m,map
Lnet/sf/portecle/FPortecle;.saveAppPrefs()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/FPortecle.java;,MethodName,saveAppPrefs,"/**
  * Save the application preferences.
  */
 private void saveAppPrefs()
 {
  try
  {
   // The size of the keystore table panel - determines the size of the main frame
   PREFS.putInt(RB.getString(""AppPrefs.TableWidth""), m_jpKeyStoreTable.getWidth());",app,application
Lnet/sf/portecle/crypto/X509Ext;.getPolicyMappingsStringValue([B)Ljava/lang/String;|Ljava/io/IOException;#0#0#pmLen,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509Ext.java;,VariableName,pmLen,"// Get each policy mapping
  for (int i = 0, len = policyMappings.size(); i < len; i++)
  {
   ASN1Sequence policyMapping = (ASN1Sequence) policyMappings.getObjectAt(i);
   int pmLen = policyMapping.size();

   strBuff.append(""<li>"");
   strBuff.append(MessageFormat.format(RB.getString(""PolicyMapping""), i + 1));",pm,policy mapping
Lnet/sf/portecle/gui/LastDir;.getLastDir()Ljava/io/File;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/gui/LastDir.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/FPortecle.java;,MethodName,getLastDir,"/**
  * Get the last updated directory.
  *
  * @return Last directory if the last update still exists, false otherwise
  */
 public File getLastDir()
 {
  if (m_fLastDir != null && m_fLastDir.exists())
  {
   return new File(m_fLastDir.toString());",dir,directory
Lnet/sf/portecle/DViewCSR;.populateDialog()V|Lnet/sf/portecle/crypto/CryptoException;#sigAlgName,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DViewCSR.java;,VariableName,sigAlgName,"  // Signature Algorithm
  String sigAlgName = SignatureType.toString(m_req.getSignatureAlgorithm().getAlgorithm().toString());
  m_jtfSignatureAlgorithm.setText(sigAlgName);
  m_jtfSignatureAlgorithm.setCaretPosition(0);

  // TODO: attributes, requested extensions",alg,algorithm
Lnet/sf/portecle/FPortecle;.generateCsrSelectedEntry()Z#0#0#privKey,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/FPortecle.java;,VariableName,privKey,"// Replace the certificate chain
   Key privKey = keyStore.getKey(sAlias, cPassword);
   keyStore.deleteEntry(sAlias);
   keyStore.setKeyEntry(sAlias, privKey, cPassword, newCertChain);",priv,private
Lnet/sf/portecle/crypto/X509Ext;.getNetscapeExtensionURLValue([BLnet/sf/portecle/crypto/X509Ext$LinkClass;)Ljava/lang/String;|Ljava/io/IOException;#sUrl,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509Ext.java;,VariableName,sUrl,"  * @return Extension value as a string
  * @throws IOException If an I/O problem occurs
  */
 private String getNetscapeExtensionURLValue(byte[] bValue, LinkClass linkClass)
     throws IOException
 {
  String sUrl = ASN1Primitive.fromByteArray(bValue).toString();
  return getLink(sUrl, escapeHtml(sUrl), linkClass).toString();
 }",url,uniform resource locator
Ljava/net/URLEncoder;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509Ext.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/gui/DesktopUtil.java;,ClassName,URLEncoder,"case GeneralName.rfc822Name:
    String sRfc822 = generalName.getName().toString();
    String urlEnc = URLEncoder.encode(sRfc822, StandardCharsets.UTF_8.name());
    strBuff.append(RB.getString(""GeneralName."" + tagNo));
    strBuff.append("": "");
    strBuff.append(getLink(""mailto:"" + urlEnc, escapeHtml(sRfc822), null));",url,uniform resource locator
Lnet/sf/portecle/crypto/X509Ext;.getInformationAccessStringValue([B)Ljava/lang/String;|Ljava/io/IOException;#0#0#accOid,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509Ext.java;,VariableName,accOid,"  if (sb.length() != 0)
   {
    sb.append(""<br>"");
   }

   String accOid = accDesc.getAccessMethod().toString();
   String accMeth = getRes(accOid, ""UnrecognisedAccessMethod"");

   LinkClass linkClass = LinkClass.BROWSER;
   if (accOid.equals(AccessDescription.id_ad_ocsp.getId()))",acc,access
Lnet/sf/portecle/DExport;.initComponents()V|Lnet/sf/portecle/crypto/CryptoException;#formatBG,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DExport.java;,VariableName,formatBG," m_jrbPkiPath = new JRadioButton(RB.getString(""DExport.m_jrbPkiPath.text""));
  m_jrbPKCS12 = new JRadioButton(RB.getString(""DExport.m_jrbPKCS12.text""));
  m_jrbPKCS12.setEnabled(false);

  ButtonGroup formatBG = new ButtonGroup();
  formatBG.add(m_jrbDEREncoded);
  formatBG.add(m_jrbPemEncoded);
  formatBG.add(m_jrbPKCS7);",bg,button group
Lnet/sf/portecle/crypto/X509Ext;.getRes(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509Ext.java;,MethodName,getRes,"/**
  * Gets a resource string, with fall back.
  *
  * @param key the key
  * @param fallback the fall back key
  * @return a resource string
  */
 private static String getRes(String key, String fallback)
 {
  try
  {
   return RB.getString(key);
  }",res,resource
Lnet/sf/portecle/crypto/X509Ext;.getHexClearDump([BI)Ljava/lang/String;#sbClr,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509Ext.java;,VariableName,sbClr,"// Buffer for clear text
  StringBuilder sbClr = new StringBuilder(iLen);

  // Populate buffers for hex and clear text",clr,clear
Lnet/sf/portecle/crypto/KeyPairUtil;.getKeyLength(Ljava/security/PublicKey;)I#pubKey#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/KeyPairUtil.java;,ParameterName,pubKey,"/**
  * Get the key size of a public key.
  *
  * @param pubKey The public key
  * @return The key size, {@link #UNKNOWN_KEY_SIZE} if not known
  */
 public static int getKeyLength(PublicKey pubKey)
 {
  if (pubKey instanceof RSAKey)
  {
   return ((RSAKey) pubKey).getModulus().bitLength();",pub,public
Lnet/sf/portecle/DViewCSR;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DViewCSR.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/FPortecle.java;,ClassName,DViewCSR,"/**
 * Modal dialog to display the details of a certification request.
 */
class DViewCSR
    extends PortecleJDialog
{
 /** Version text field */
 private JTextField m_jtfVersion;",d,dialog
Lnet/sf/portecle/crypto/X509Ext;.stringify(Ljava/lang/Object;)Ljava/lang/String;#0#tagObj,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509Ext.java;,VariableName,tagObj," else if (obj instanceof ASN1TaggedObject)
  {
   ASN1TaggedObject tagObj = (ASN1TaggedObject) obj;
   // Note: ""["", _not_ '[' ...
   return ""["" + tagObj.getTagNo() + ""] "" + stringify(tagObj.getObject());
  }",obj,object
Lnet/sf/portecle/gui/DocumentMaxLengthFilter;.replace(Ljavax/swing/text/DocumentFilter$FilterBypass;IILjava/lang/String;Ljavax/swing/text/AttributeSet;)V|Ljavax/swing/text/BadLocationException;#textLen,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/gui/DocumentMaxLengthFilter.java;,VariableName,textLen,"public void replace(FilterBypass fb, int offset, int length, String text, AttributeSet attrs)
     throws BadLocationException
 {
  int textLen;
  if (text == null || (textLen = text.length()) == 0)
  {
   // Always allow removal
   super.replace(fb, offset, length, text, attrs);
   return;",len,length
Lnet/sf/portecle/gui/error/DThrowable;.initComponents()V#0#msg,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/gui/error/DThrowable.java;,VariableName,msg,"  boolean maybePolicyProblem = false;
  Throwable t = m_throwable;
  while (!maybePolicyProblem && t != null)
  {
   String msg = t.getMessage();
   if (msg != null)
   {
    msg = msg.toLowerCase(Locale.US);",msg,message
Lnet/sf/portecle/crypto/SignatureType;#1#kpMap,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/SignatureType.java;,VariableName,kpMap," private static final Map<KeyPairType, Collection<SignatureType>> KEYPAIR_MAP;

 static
 {
  HashMap<KeyPairType, Collection<SignatureType>> kpMap = new HashMap<>();

  kpMap.put(KeyPairType.DSA, Collections.unmodifiableSet(
      EnumSet.of(SHA1withDSA, SHA224withDSA, SHA256withDSA, SHA384withDSA, SHA512withDSA)));",kp,key pair
Lnet/sf/portecle/DKeyStoreReport;.generateDocument()Lorg/w3c/dom/Document;|Lnet/sf/portecle/crypto/CryptoException;|Ljavax/xml/parsers/ParserConfigurationException;#0#0#0#2#0#0#sKeyAlg,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DKeyStoreReport.java;,VariableName,sKeyAlg,"// Public Key (algorithm and key size)
      int iKeySize = KeyPairUtil.getKeyLength(x509Cert.getPublicKey());
      String sKeyAlg = x509Cert.getPublicKey().getAlgorithm();
      String fmtKey = (iKeySize == KeyPairUtil.UNKNOWN_KEY_SIZE)
          ? ""DKeyStoreReport.report.pubkeynosize"" : ""DKeyStoreReport.report.pubkey"";
      sbReport.append(MessageFormat.format(RB.getString(fmtKey), sKeyAlg, iKeySize));
      sbReport.append(""\n"");",alg,algorithm
Lnet/sf/portecle/crypto/X509CertUtil;.orderX509CertChain([Ljava/security/cert/X509Certificate;)[Ljava/security/cert/X509Certificate;#tmpCerts,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509CertUtil.java;,VariableName,tmpCerts,"public static X509Certificate[] orderX509CertChain(X509Certificate[] certs)
 {
  int iOrdered = 0;
  X509Certificate[] tmpCerts = certs.clone();
  X509Certificate[] orderedCerts = new X509Certificate[certs.length];

  X509Certificate issuerCert = null;",certs,certificate
Lnet/sf/portecle/gui/LastDir;.()V#currentDir,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/gui/LastDir.java;,VariableName,currentDir,"/**
  * Construct an empty LastDir object.
  */
 public LastDir()
 {
  // Default last directory to current directory if it exists
  String currentDir = System.getProperty(""user.dir"");
  if (currentDir != null)
  {
   m_fLastDir = new File(currentDir);",dir,directory
Lnet/sf/portecle/FileChooserFactory;.KEYSTORE_EXT)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/FileChooserFactory.java;,FieldName,KEYSTORE_EXT,"/**
 * Simple factory that returns JFileChooser objects for the requested security file types. Basically just supplies a
 * JFileChooser object with the file filter box completed appropriately.
 */
/* package private */class FileChooserFactory
{
 /** File extension for keystore files */
 private static final String KEYSTORE_EXT = ""ks"";",ext,extension
Lnet/sf/portecle/gui/about/DSystemInformation;.initComponents()V#sysProps,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/gui/about/DSystemInformation.java;,VariableName,sysProps,"private void initComponents()
 {
  getContentPane().setLayout(new BorderLayout());

  // Get the Java system properties
  Properties sysProps = java.lang.System.getProperties();

  // Get the runtime (to access free/total memory values)
  Runtime runtime = Runtime.getRuntime();",sys,system
Lnet/sf/portecle/gui/about/DSystemProperties;.initComponents()V#0#0#1#w,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/gui/about/DSystemProperties.java;,VariableName,w,"TableColumn column = jtSystemProperties.getColumnModel().getColumn(iCnt);

   if (iCnt == 0)
   {
    int w = 210;
    column.setPreferredWidth(w); // Property Name
    tWidth += w;",w,width
Ljavax/swing/JTable;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/gui/about/DSystemProperties.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/ExtensionsTableHeadRend.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/FPortecle.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/RevokedCertsTableCellRend.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/gui/about/SystemPropertiesTableCellRend.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/gui/jar/JarInfoTableCellRend.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/KeyStoreTableHeadRend.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/gui/jar/DJarInfo.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/gui/about/SystemPropertiesTableHeadRend.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DViewCRL.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/KeyStoreTableCellRend.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/ExtensionsTableCellRend.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/RevokedCertsTableHeadRend.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/gui/jar/JarInfoTableHeadRend.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DViewExtensions.java;,ClassName,JTable,"// Create the table using the appropriate table model
  SystemPropertiesTableModel spModel = new SystemPropertiesTableModel();
  spModel.load();

  JTable jtSystemProperties = new JTable(spModel);

  jtSystemProperties.setRowMargin(0);
  jtSystemProperties.getColumnModel().setColumnMargin(0);",j,jar
Lnet/sf/portecle/gui/DocumentMaxLengthFilter;.replace(Ljavax/swing/text/DocumentFilter$FilterBypass;IILjava/lang/String;Ljavax/swing/text/AttributeSet;)V|Ljavax/swing/text/BadLocationException;#numAdded,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/gui/DocumentMaxLengthFilter.java;,VariableName,numAdded,"int numAdded = textLen - length;
  if (fb.getDocument().getLength() + numAdded > maxLength)
  {
   Toolkit.getDefaultToolkit().beep();
   return;
  }",num,number
Lnet/sf/portecle/DViewCertificate;.populateDialog()V|Lnet/sf/portecle/crypto/CryptoException;#critExts,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DViewCertificate.java;,VariableName,critExts,"m_jtfSHA1Fingerprint.setText(DigestUtil.getMessageDigest(bCert, DigestType.SHA1));
  m_jtfSHA1Fingerprint.setCaretPosition(0);

  // Enable/disable extensions button
  Set<String> critExts = cert.getCriticalExtensionOIDs();
  Set<String> nonCritExts = cert.getNonCriticalExtensionOIDs();

  if ((critExts != null && !critExts.isEmpty()) || (nonCritExts != null && !nonCritExts.isEmpty()))
  {",exts,extensions
Lnet/sf/portecle/crypto/X509CertUtil;.loadCertificates(Ljava/net/URL;Ljava/lang/String;)[Ljava/security/cert/X509Certificate;|Lnet/sf/portecle/crypto/CryptoException;#0#0#0#0#0#0#cf,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509CertUtil.java;,VariableName,cf,"private static byte[] getCertsEncoded(X509Certificate[] certs, String encoding, String errkey)
     throws CryptoException
 {
  try
  {
   CertificateFactory cf = CertificateFactory.getInstance(X509_CERT_TYPE);
   return cf.generateCertPath(Arrays.asList(certs)).getEncoded(encoding);
  }
  catch (CertificateException ex)",cf,certificate factory
Ljava/nio/charset/StandardCharsets;.UTF_8)Ljava/nio/charset/Charset;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509Ext.java;,VariableName,UTF_8,"case GeneralName.rfc822Name:
    String sRfc822 = generalName.getName().toString();
    String urlEnc = URLEncoder.encode(sRfc822, StandardCharsets.UTF_8.name());
    strBuff.append(RB.getString(""GeneralName."" + tagNo));
    strBuff.append("": "");
    strBuff.append(getLink(""mailto:"" + urlEnc, escapeHtml(sRfc822), null));",utf,unicode transformation format
Lnet/sf/portecle/DKeyStoreReport;.generateDocument()Lorg/w3c/dom/Document;|Lnet/sf/portecle/crypto/CryptoException;|Ljavax/xml/parsers/ParserConfigurationException;#0#0#xmlDoc,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DKeyStoreReport.java;,VariableName,xmlDoc,"// Create a new document object
   DocumentBuilderFactory docBuilderFactory = DocumentBuilderFactory.newInstance();
   DocumentBuilder docBuilder = docBuilderFactory.newDocumentBuilder();
   Document xmlDoc = docBuilder.newDocument();

   // General keystore information
   KeyStoreType ksType = KeyStoreType.valueOfType(m_keystore.getType());
   String sProvider = m_keystore.getProvider().getName();",xml,extensible markup language
Lnet/sf/portecle/FPortecle;.main([Ljava/lang/String;)V#0#0#bcVer,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/FPortecle.java;,VariableName,bcVer,"// Check BC version
   Double bcVer = bcProv.getVersion();
   if (REQ_BC_VERSION.compareTo(bcVer) > 0)
   {
    JOptionPane.showMessageDialog(new JFrame(),
        MessageFormat.format(RB.getString(""FPortecle.NoBcVersion.message""), REQ_BC_VERSION, bcVer),
        RB.getString(""FPortecle.Title""), JOptionPane.WARNING_MESSAGE);",ver,version
Lnet/sf/portecle/FPortecle;.initComponents()V#iXPos,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/FPortecle.java;,VariableName,iXPos,"// Set application position according to application preferences unless the relevant preferences are
  // not present or are invalid
  int iXPos = PREFS.getInt(RB.getString(""AppPrefs.XPos""), 0);
  int iYPos = PREFS.getInt(RB.getString(""AppPrefs.YPos""), 0);

  if (iXPos <= 0 || iYPos <= 0)
  {
   // Center the frame in the center of the desktop
   setLocationRelativeTo(null);",pos,position
Lnet/sf/portecle/DKeyStoreReport;.TF_FACTORY)Ljavax/xml/transform/TransformerFactory;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DKeyStoreReport.java;,FieldName,TF_FACTORY,"class DKeyStoreReport
    extends PortecleJDialog
{
 /** Transformer factory for XML output */
 private static final TransformerFactory TF_FACTORY = TransformerFactory.newInstance();

 static
 {
  try
  {
   // XSLTC in J2SE 5 (why oh why doesn't it grok the ""normal""
   // transformer properties... :()",tf,transformer
Lnet/sf/portecle/crypto/X509Ext;.getGeneralNameString(Lorg/bouncycastle/asn1/x509/GeneralName;Lnet/sf/portecle/crypto/X509Ext$LinkClass;)Ljava/lang/String;|Ljava/io/IOException;#0#urlEnc,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509Ext.java;,VariableName,urlEnc,"  case GeneralName.rfc822Name:
    String sRfc822 = generalName.getName().toString();
    String urlEnc = URLEncoder.encode(sRfc822, StandardCharsets.UTF_8.name());
    strBuff.append(RB.getString(""GeneralName."" + tagNo));
    strBuff.append("": "");
    strBuff.append(getLink(""mailto:"" + urlEnc, escapeHtml(sRfc822), null));",url,uniform resource locator
Lnet/sf/portecle/gui/crypto/DViewPEM;.savePressed()V#0#1#0#fw,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/gui/crypto/DViewPEM.java;,VariableName,fw,"try (FileWriter fw = new FileWriter(fExportFile))
   {
    fw.write(m_pem);
   }
   catch (FileNotFoundException ex)",fw,file writer
Lnet/sf/portecle/crypto/X509Ext;.getBasicConstraintsStringValue([B)Ljava/lang/String;#bc,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509Ext.java;,VariableName,bc,"private String getBasicConstraintsStringValue(byte[] bValue)
 {
  BasicConstraints bc = BasicConstraints.getInstance(bValue);
  StringBuilder strBuff = new StringBuilder();

  strBuff.append(RB.getString(bc.isCA() ? ""SubjectIsCa"" : ""SubjectIsNotCa""));
  strBuff.append(""<br><br>"");",bc,basic constraints
Lnet/sf/portecle/crypto/X509Ext;.getInformationAccessStringValue([B)Ljava/lang/String;|Ljava/io/IOException;#accDescs,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509Ext.java;,VariableName,accDescs,"AuthorityInformationAccess access = AuthorityInformationAccess.getInstance(bValue);

  StringBuilder sb = new StringBuilder();

  AccessDescription[] accDescs = access.getAccessDescriptions();
  for (AccessDescription accDesc : accDescs)
  {
   if (sb.length() != 0)
   {
    sb.append(""<br>"");
   }",descs,descriptions
Ljava/net/MalformedURLException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/NetUtil.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/FPortecle.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DViewExtensions.java;,ClassName,MalformedURLException," * @throws ClassCastException if obj is not a supported object
  * @throws MalformedURLException if converting obj to a URL fails
  */
 /* default */static URL toURL(Object obj)
     throws MalformedURLException
 {
  if (obj instanceof File)",url,uniform resource locator
Lnet/sf/portecle/DViewExtensions;.initComponents()V#criticalCol,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DViewExtensions.java;,VariableName,criticalCol,"  // Make the first column small and not resizable (it holds an icon to represent the criticality of an
  // extension)
  TableColumn criticalCol = m_jtExtensions.getColumnModel().getColumn(0);
  criticalCol.setResizable(false);
  criticalCol.setMinWidth(20);
  criticalCol.setMaxWidth(20);",col,column
Lnet/sf/portecle/gui/DocumentMaxLengthFilter;.insertString(Ljavax/swing/text/DocumentFilter$FilterBypass;ILjava/lang/String;Ljavax/swing/text/AttributeSet;)V|Ljavax/swing/text/BadLocationException;#fb#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/gui/DocumentMaxLengthFilter.java;,ParameterName,fb,"public void insertString(FilterBypass fb, int offset, String string, AttributeSet attr)
     throws BadLocationException
 {
  int strLen;
  if (string == null || (strLen = string.length()) == 0)",fb,filter bypass
Lnet/sf/portecle/FPortecle;.exportPrivKeyCertChainPKCS12(Ljava/lang/String;)Z,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/FPortecle.java;,MethodName,exportPrivKeyCertChainPKCS12,"/**
  * Export the private key and certificates of the keystore entry to a PKCS #12 keystore file.
  *
  * @param sEntryAlias Entry alias
  * @return True if the export is successful, false otherwise
  */
 private boolean exportPrivKeyCertChainPKCS12(String sEntryAlias)",priv,private
Lnet/sf/portecle/gui/DesktopUtil;.browse(Ljava/awt/Component;Ljava/net/URI;)V#uri#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/gui/DesktopUtil.java;,ParameterName,uri,"/**
  * Open URI in system default browser.
  *
  * @param parentComponent
  * @param uri URI to open
  * @see Desktop#browse(URI)
  */
 public static void browse(Component parentComponent, URI uri)
 {
  if (DESKTOP != null)",uri,uniform resource identifier
Lorg/bouncycastle/asn1/x509/SubjectPublicKeyInfo;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509CertUtil.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DViewCSR.java;,ClassName,SubjectPublicKeyInfo,"m_jtfSubject.setText(subject.toString());
  m_jtfSubject.setCaretPosition(0);

  m_basename = NameUtil.getCommonName(subject);

  // Public Key (algorithm and keysize)
  SubjectPublicKeyInfo keyInfo = m_req.getSubjectPublicKeyInfo();

  AsymmetricKeyParameter keyParams;
  try
  {",info,information
Lnet/sf/portecle/DExport;.initComponents()V|Lnet/sf/portecle/crypto/CryptoException;#typeBG,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DExport.java;,VariableName,typeBG,"  ButtonGroup typeBG = new ButtonGroup();
  typeBG.add(m_jrbHeadCertOnly);
  typeBG.add(m_jrbCertChain);
  typeBG.add(m_jrbPrivKeyCertChain);",bg,button group
Lnet/sf/portecle/crypto/X509CertUtil;.loadCertificates(Ljava/net/URL;Ljava/util/Collection<Ljava/lang/Exception;>;)[Ljava/security/cert/X509Certificate;|Ljava/io/IOException;#downloadedUrl,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509CertUtil.java;,VariableName,downloadedUrl,"/**
  * Load one or more certificates from the specified URL, trying a built in list of certification encodings.
  *
  * @param url The URL to load certificates from
  * @param exceptions Collection where exceptions occurred will be added
  * @return The certificates
  * @throws IOException if an error accessing the URL occurs
  */
 public static X509Certificate[] loadCertificates(URL url, Collection<Exception> exceptions)
     throws IOException
 {
  URL downloadedUrl = NetUtil.download(url);

  X509Certificate[] certs = null;",url,uniform resource locator
Lnet/sf/portecle/crypto/X509Ext;.getLogotypeStringValue([B)Ljava/lang/String;|Ljava/io/IOException;#0#0#0#0#0#1#0#eUri,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509Ext.java;,VariableName,eUri," for (int j = 0, jlen = ltURI.size(); j < jlen; j++)
        {
         String sUri = ((ASN1String) ltURI.getObjectAt(j)).getString();
         String eUri = escapeHtml(sUri);
         sb.append(""<li>URI: "");
         sb.append(getLink(sUri, eUri, LinkClass.BROWSER));
         sb.append(""<br>"");",uri,uniform resource identifier
Ljava/lang/Math;.min(II)I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/gui/JMenuRecentFiles.java;,MethodName,min," /**
  * Construct a JMenuRecentFiles.
  *
  * @param sTitle Title of menu
  * @param iLength Length of recent files list to maintain
  * @param iIndex Index in menu to show recent file menu items
  */
 public JMenuRecentFiles(String sTitle, int iLength, int iIndex)
 {
  super(sTitle);

  m_jmirf = new JMenuItemRecentFile[Math.min(iLength, MAX_LENGTH)];
  m_iIndex = iIndex;
 }",min,minimum
Lnet/sf/portecle/crypto/KeyStoreUtil;.loadEntries(Lorg/bouncycastle/openssl/PEMParser;Lorg/bouncycastle/openssl/PasswordFinder;)Ljava/security/KeyStore;|Ljava/security/cert/CertificateException;|Lnet/sf/portecle/crypto/CryptoException;|Ljava/io/IOException;#2#0#keyPairCert,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/KeyStoreUtil.java;,VariableName,keyPairCert,"  // Add key pairs
  for (KeyPair keyPair : keyPairs)
  {
   Certificate keyPairCert = null;
   for (Iterator<Certificate> it = certs.iterator(); it.hasNext();)
   {
    Certificate cert = it.next();",cert,certificate
Lnet/sf/portecle/crypto/X509Ext;.escapeHtml(Ljava/lang/Object;)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509Ext.java;,MethodName,escapeHtml," /**
  * Get extension value for any Netscape certificate extension URL value.
  *
  * @param bValue The octet string value
  * @param linkClass link class
  * @return Extension value as a string
  * @throws IOException If an I/O problem occurs
  */
 private String getNetscapeExtensionURLValue(byte[] bValue, LinkClass linkClass)
     throws IOException
 {
  String sUrl = ASN1Primitive.fromByteArray(bValue).toString();
  return getLink(sUrl, escapeHtml(sUrl), linkClass).toString();
 }",html,hyper text markup language
Lnet/sf/portecle/crypto/X509Ext;.getInformationAccessStringValue([B)Ljava/lang/String;|Ljava/io/IOException;#0#accDesc,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509Ext.java;,VariableName,accDesc,"AuthorityInformationAccess access = AuthorityInformationAccess.getInstance(bValue);

  StringBuilder sb = new StringBuilder();

  AccessDescription[] accDescs = access.getAccessDescriptions();
  for (AccessDescription accDesc : accDescs)
  {
   if (sb.length() != 0)
   {
    sb.append(""<br>"");
   }",desc,description
Lnet/sf/portecle/FPortecle;.main([Ljava/lang/String;)V#0#0#bcProv,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/FPortecle.java;,VariableName,bcProv,"// Make Metal theme use non-bold fonts (see javax.swing.plaf.metal.MetalLookAndFeel javadoc)
  UIManager.put(""swing.boldMetal"", Boolean.FALSE);

  try
  {
   Provider bcProv = Security.getProvider(""BC"");

   if (bcProv == null)
   {
    // Instantiate the Bouncy Castle provider",prov,provider
Lnet/sf/portecle/DViewCertificate;.populateDialog()V|Lnet/sf/portecle/crypto/CryptoException;#nonCritExts,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DViewCertificate.java;,VariableName,nonCritExts,"m_jtfSHA1Fingerprint.setText(DigestUtil.getMessageDigest(bCert, DigestType.SHA1));
  m_jtfSHA1Fingerprint.setCaretPosition(0);

  // Enable/disable extensions button
  Set<String> critExts = cert.getCriticalExtensionOIDs();
  Set<String> nonCritExts = cert.getNonCriticalExtensionOIDs();

  if ((critExts != null && !critExts.isEmpty()) || (nonCritExts != null && !nonCritExts.isEmpty()))
  {",exts,extensions
Lnet/sf/portecle/DViewCertificate;.m_iSelCert)I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DViewCertificate.java;,FieldName,m_iSelCert,"/** Stores certificate(s) to display */
 private final X509Certificate[] m_certs;

 /** The currently selected certificate */
 private int m_iSelCert;

 /** SSL/TLS connection protocol */
 private final String m_connectionProtocol;",sel,selected
Lnet/sf/portecle/FPortecle$KeyStoreTable$FileTransferHander;.importData(Ljavax/swing/JComponent;Ljava/awt/datatransfer/Transferable;)Z#t#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/FPortecle.java;,ParameterName,t," try
    {
     Class<?> provClass = Class.forName(prov[1]);
     Security.addProvider((Provider) provClass.newInstance());
    }
    catch (Throwable t)
    {
     // TODO: should maybe notify in some cases?
     // E.g. Throwable, but not Exception?
    }",t,transferable
Lnet/sf/portecle/DGenerateCertificate;.validateValidity(Ljava/lang/String;)I#sValidity#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DGenerateCertificate.java;,ParameterName,sValidity,"/**
  * Validate the Validity value supplied as a string and convert it to an integer.
  *
  * @param sValidity The Validity value
  * @return The Validity value or BAD_VALIDITY if it is not valid
  */
 private int validateValidity(String sValidity)
 {
  sValidity = sValidity.trim();
  int iValidity;",s,string
Lnet/sf/portecle/gui/DocumentMaxLengthFilter;.maxLength)I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/gui/DocumentMaxLengthFilter.java;,FieldName,maxLength,"public class DocumentMaxLengthFilter
    extends DocumentFilter
{
 /** Maximum accepted value length */
 private final int maxLength;
",max,maximum
Lnet/sf/portecle/DKeyStoreReport;.getKeyStoreReportXml()Ljava/lang/String;|Lnet/sf/portecle/crypto/CryptoException;|Ljavax/xml/parsers/ParserConfigurationException;|Ljavax/xml/transform/TransformerException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DKeyStoreReport.java;,MethodName,getKeyStoreReportXml,"/**
  * Get the KeyStoreReport as XML.
  *
  * @return Keystore report in XML
  * @throws CryptoException A crypto related problem was encountered generating the keystore report
  * @throws ParserConfigurationException There was a serious problem creating the XML report
  * @throws TransformerException There was a serious problem creating the XML report
  */
 private String getKeyStoreReportXml()
     throws CryptoException, ParserConfigurationException, TransformerException
 {",xml,extensible markup language
Lnet/sf/portecle/FPortecle;.saveKeyStoreAs()Z#0#fSaveFile,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/FPortecle.java;,VariableName,fSaveFile,"  assert m_keyStoreWrap != null;
  assert m_keyStoreWrap.getKeyStore() != null;

  // File to save to
  File fSaveFile = m_keyStoreWrap.getKeyStoreFile();

  // Not saved before - use Save As
  if (fSaveFile == null)
  {",f,file
Lnet/sf/portecle/crypto/X509Ext;.getSmimeCapabilitiesStringValue([B)Ljava/lang/String;|Ljava/io/IOException;#0#0#params,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509Ext.java;,VariableName,params," sb.append(""<br>"");
   }
   sb.append(""<ul><li>"");
   sb.append(MessageFormat.format(sCap, sCapId));

   ASN1Encodable params;
   if ((params = cap.getParameters()) != null)
   {
    sb.append(""<ul><li>"");
    sb.append(sParams);",params,parameters
Lnet/sf/portecle/crypto/X509CertUtil;.establishTrust(Ljava/util/List<Ljava/security/cert/X509Certificate;>;Ljava/security/cert/X509Certificate;)[Ljava/security/cert/X509Certificate;|Lnet/sf/portecle/crypto/CryptoException;#vCompCerts#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509CertUtil.java;,ParameterName,vCompCerts," * @return The trust chain, or null if trust could not be established
  * @param cert The certificate
  * @param vCompCerts The comparison set of certificates
  * @throws CryptoException If there is a problem establishing trust
  */
 private static X509Certificate[] establishTrust(List<X509Certificate> vCompCerts, X509Certificate cert)
     throws CryptoException
 {",comp,comparison
Lnet/sf/portecle/FPortecle;.importTrustedCert()Z,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/FPortecle.java;,MethodName,importTrustedCert,"/**
  * Let the user import a trusted certificate.
  *
  * @return True if the import is successful, false otherwise
  */
 private boolean importTrustedCert()
 {
  assert m_keyStoreWrap != null;
  assert m_keyStoreWrap.getKeyStore() != null;",cert,certificate
Lnet/sf/portecle/FPortecle;.initTable()V#aliasCol,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/FPortecle.java;,VariableName,aliasCol," // Set alias columns width according to the relevant application property unless the property is not
  // present or is invalid.
  int iAliasWidth = PREFS.getInt(RB.getString(""AppPrefs.AliasWidth""), 0);

  TableColumn aliasCol = m_jtKeyStore.getColumnModel().getColumn(1);
  aliasCol.setMinWidth(20);
  aliasCol.setMaxWidth(10000);",col,column
Lnet/sf/portecle/FPortecle;.examineCertSSL(Ljava/net/InetSocketAddress;)Z#0#0#0#tm,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/FPortecle.java;,VariableName,tm,"// @@@TODO: cache all this?
    SSLContext sc = SSLContext.getInstance(""SSL"");
    X509TrustManager[] tm = { new X509TrustManager()
    {
     @Override
     public void checkClientTrusted(X509Certificate[] chain, String authType)
     {",tm,trust manager
Lnet/sf/portecle/DViewCSR;.initComponents()V|Lnet/sf/portecle/crypto/CryptoException;#gbcTf,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DViewCSR.java;,VariableName,gbcTf,"gbcLbl.gridheight = 1;
  gbcLbl.insets = new Insets(5, 5, 5, 5);
  gbcLbl.anchor = GridBagConstraints.EAST;

  GridBagConstraints gbcTf = new GridBagConstraints();
  gbcTf.gridx = 1;
  gbcTf.gridwidth = 1;
  gbcTf.gridheight = 1;",gbc,grid bag constraints
Lnet/sf/portecle/DKeyStoreReport;.getKeyStoreReport()Ljava/lang/String;|Lnet/sf/portecle/crypto/CryptoException;#0#0#0#0#dCreation,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DKeyStoreReport.java;,VariableName,dCreation,"// Creation date

    if (ksType.isEntryCreationDateUseful())
    {
     Date dCreation = m_keystore.getCreationDate(sAlias);

     // Include time zone
     String sCreation =
         DateFormat.getDateTimeInstance(DateFormat.MEDIUM, DateFormat.LONG).format(dCreation);
     sbReport.append(MessageFormat.format(RB.getString(""DKeyStoreReport.report.creation""), sCreation));
     sbReport.append(""\n"");",d,date
Lnet/sf/portecle/NetUtil;.toURL(Ljava/lang/Object;)Ljava/net/URL;|Ljava/net/MalformedURLException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/NetUtil.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DViewCRL.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DViewCertificate.java;,MethodName,toURL,"/**
  * Creates a URL pointing to a URL, URI or a File object.
  *
  * @param obj Object to create a URI to
  * @return URL
  * @throws ClassCastException if obj is not a supported object
  * @throws MalformedURLException if converting obj to a URL fails
  */
 /* default */static URL toURL(Object obj)
     throws MalformedURLException
 {
  if (obj instanceof File)",url,uniform resource locator
Lnet/sf/portecle/gui/crypto/DProviderInfo;.createProviderNodes()Ljavax/swing/tree/DefaultMutableTreeNode;#0#0#0#0#sValue,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/gui/crypto/DProviderInfo.java;,VariableName,sValue,"  // ...add property child nodes to it. Use a TreeSet for sorting the properties.
   for (Object o : new TreeSet<>(provider.keySet()))
   {
    String sKey = String.valueOf(o);
    String sValue = provider.getProperty(sKey);
    providerPropertiesNode.add(new DefaultMutableTreeNode(
        MessageFormat.format(RB.getString(""DProviderInfo.ProviderProperty""), sKey, sValue)));
   }
  }",s,string
Lnet/sf/portecle/crypto/X509Ext;.stringify(Ljava/lang/Object;)Ljava/lang/String;#2#hex,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509Ext.java;,VariableName,hex,"else
  {
   String hex = null;
   try
   {
    Method method = obj.getClass().getMethod(""getOctets"", (Class[]) null);
    hex = convertToHexString(method.invoke(obj, (Object[]) null));
   }",hex,hexadecimal
Lnet/sf/portecle/crypto/X509Ext;.getGeneralNameString(Lorg/bouncycastle/asn1/x509/GeneralName;Lnet/sf/portecle/crypto/X509Ext$LinkClass;)Ljava/lang/String;|Ljava/io/IOException;#0#bIpAddress,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509Ext.java;,VariableName,bIpAddress,"case GeneralName.iPAddress:
    ASN1OctetString ipAddress = (ASN1OctetString) generalName.getName();

    byte[] bIpAddress = ipAddress.getOctets();

    // Output the IP Address components one at a time separated by dots
    StringBuilder sbIpAddress = new StringBuilder();",ip,internet protocol
Lnet/sf/portecle/crypto/X509Ext;.getCertificatePoliciesStringValue([B)Ljava/lang/String;|Ljava/io/IOException;#0#0#pQuals,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509Ext.java;,VariableName,pQuals,"sb.append(RB.getString(""PolicyIdentifier""));
   sb.append("": "");
   sb.append(MessageFormat.format(getRes(piId, ""UnrecognisedPolicyIdentifier""), piId));

   ASN1Sequence pQuals;
   if ((pQuals = pi.getPolicyQualifiers()) != null)
   {
    sb.append(""<ul>"");",quals,qualifiers
Lnet/sf/portecle/NetUtil;.openPostStream(Ljava/net/URL;[BLjava/lang/String;)Ljava/io/InputStream;|Ljava/io/IOException;#conn,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/NetUtil.java;,VariableName,conn," * @param url The URL
  * @return Input stream to the URL connection
  * @throws IOException If an I/O error occurs
  */
 public static InputStream openGetStream(URL url)
     throws IOException
 {
  URLConnection conn = url.openConnection();

  conn.setConnectTimeout(CONNECT_TIMEOUT);
  conn.setReadTimeout(READ_TIMEOUT);",conn,commection
Lnet/sf/portecle/FileChooserFactory;.PKIPATH_FILE_DESC)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/FileChooserFactory.java;,FieldName,PKIPATH_FILE_DESC," /** Description for PkiPath certificate files */
 private static final String PKIPATH_FILE_DESC =
     MessageFormat.format(RB.getString(""FileChooseFactory.PkiPathFiles""), toWildcards(PKIPATH_EXTS));
",desc,description
Lorg/bouncycastle/asn1/misc/NetscapeCertType;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509Ext.java;,ClassName,NetscapeCertType," /** Netscape certificate types */
 private static final int[] NETSCAPE_CERT_TYPES = { NetscapeCertType.sslClient, NetscapeCertType.sslServer,
     NetscapeCertType.smime, NetscapeCertType.objectSigning, NetscapeCertType.reserved, NetscapeCertType.sslCA,
     NetscapeCertType.smimeCA, NetscapeCertType.objectSigningCA };
",cert,certificate
Ljava/io/IOException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/gui/SingleFileDropHelper.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/gui/help/FHelp.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/gui/jar/JarInfoTableModel.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509CertUtil.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/KeyStoreUtil.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/gui/jar/DJarInfo.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DViewCSR.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509Ext.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/NetUtil.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DKeyStoreReport.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/gui/crypto/DViewPEM.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/FPortecle.java;,ClassName,IOException," }
  catch (IOException e)
  {
   // Ignore this because getTransferable thinks we're going to use this object for something, we
   // really just want to check and show the user as soon as possible that the file (most likely a
   // directory) is not handled.
  }",io,input output
Lnet/sf/portecle/DViewExtensions$6685;.hyperlinkUpdate(Ljavax/swing/event/HyperlinkEvent;)V#0#2#0#1#1#e,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DViewExtensions.java;,VariableName,e,"  try
         {
          url = new URL(href.toString());
         }
         catch (MalformedURLException e)
         {
          DThrowable.showAndWait(DViewExtensions.this, null, e);
         }
        }",e,exception
Lnet/sf/portecle/DKeyStoreReport;.getKeyStoreReport()Ljava/lang/String;|Lnet/sf/portecle/crypto/CryptoException;#0#0#sbReport,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DKeyStoreReport.java;,VariableName,sbReport,"private String getKeyStoreReport()
     throws CryptoException
 {
  try
  {
   // Buffer to hold report
   StringBuilder sbReport = new StringBuilder(2000);",sb,string builder
Lnet/sf/portecle/crypto/X509Ext;.getGeneralNameString(Lorg/bouncycastle/asn1/x509/GeneralName;Lnet/sf/portecle/crypto/X509Ext$LinkClass;)Ljava/lang/String;|Ljava/io/IOException;#0#sbIpAddress,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509Ext.java;,VariableName,sbIpAddress,"ASN1OctetString ipAddress = (ASN1OctetString) generalName.getName();

    byte[] bIpAddress = ipAddress.getOctets();

    // Output the IP Address components one at a time separated by dots
    StringBuilder sbIpAddress = new StringBuilder();

    for (int iCnt = 0, bl = bIpAddress.length; iCnt < bl; iCnt++)
    {
     // Convert from (possibly negative) byte to positive int",ip,internet protocol
Lnet/sf/portecle/gui/about/DSystemProperties;.initComponents()V#tWidth,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/gui/about/DSystemProperties.java;,VariableName,tWidth,"tSystemProperties.getTableHeader().setReorderingAllowed(false);
  jtSystemProperties.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

  // Add custom renderers for the table cells and headers
  int tWidth = 30; // arbitrary # of pixels for vertical scroll bar
  for (int iCnt = 0; iCnt < jtSystemProperties.getColumnCount(); iCnt++)
  {
   TableColumn column = jtSystemProperties.getColumnModel().getColumn(iCnt);",t,table
Lnet/sf/portecle/crypto/X509CertUtil;.generatePKCS10CSR(Ljava/security/cert/X509Certificate;Ljava/security/PrivateKey;)Lorg/bouncycastle/pkcs/PKCS10CertificationRequest;|Lnet/sf/portecle/crypto/CryptoException;#0#0#prov,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509CertUtil.java;,VariableName,prov," try (PEMParser pr = new PEMParser(new InputStreamReader(NetUtil.openGetStream(url))))
  {
   PKCS10CertificationRequest csr = (PKCS10CertificationRequest) pr.readObject();
   ContentVerifierProvider prov = new JcaContentVerifierProviderBuilder().build(csr.getSubjectPublicKeyInfo());

   if (!csr.isSignatureValid(prov))
   {
    throw new CryptoException(RB.getString(""NoVerifyCsr.exception.message""));
   }",prov,provider
Lnet/sf/portecle/crypto/X509Ext;.getCertificatePoliciesStringValue([B)Ljava/lang/String;|Ljava/io/IOException;#0#0#0#0#1#0#0#0#nr,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509Ext.java;,VariableName,nr,"else if (de instanceof ASN1Sequence)
       {
        // noticeRef
        ASN1Sequence nr = (ASN1Sequence) de;
        String orgstr = stringify(nr.getObjectAt(0));
        ASN1Sequence nrs = (ASN1Sequence) nr.getObjectAt(1);",nr,notice reference
Lnet/sf/portecle/DKeyStoreReport;.getKeyStoreReportXml()Ljava/lang/String;|Lnet/sf/portecle/crypto/CryptoException;|Ljavax/xml/parsers/ParserConfigurationException;|Ljavax/xml/transform/TransformerException;#tr,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DKeyStoreReport.java;,VariableName,tr,"private String getKeyStoreReportXml()
     throws CryptoException, ParserConfigurationException, TransformerException
 {
  StringWriter xml = new StringWriter();
  Transformer tr = TF_FACTORY.newTransformer();
  tr.setOutputProperties(TF_PROPS);
  tr.transform(new DOMSource(generateDocument()), new StreamResult(xml));
  return xml.toString();",tr,Transformer
Lnet/sf/portecle/crypto/X509Ext;.getGeneralNameString(Lorg/bouncycastle/asn1/x509/GeneralName;Lnet/sf/portecle/crypto/X509Ext$LinkClass;)Ljava/lang/String;|Ljava/io/IOException;#0#urlEnc,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509Ext.java;,VariableName,urlEnc," case GeneralName.rfc822Name:
    String sRfc822 = generalName.getName().toString();
    String urlEnc = URLEncoder.encode(sRfc822, StandardCharsets.UTF_8.name());
    strBuff.append(RB.getString(""GeneralName."" + tagNo));
    strBuff.append("": "");
    strBuff.append(getLink(""mailto:"" + urlEnc, escapeHtml(sRfc822), null));",enc,encoder
Lnet/sf/portecle/FPortecle;.showOptions()V#fTmp,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/FPortecle.java;,VariableName,fTmp,"SwingHelper.showAndWait(dOptions);

  // Store/apply the chosen options:

  // CA certificates file
  File fTmp = dOptions.getCaCertsFile();

  if (!fTmp.equals(m_fCaCertsFile))
  {
   // CA certificates file changed - any stored CA certificates keystore is now invalid
   m_caCertsKeyStore = null;",tmp,temporary
Lnet/sf/portecle/crypto/X509Ext;.getPolicyConstraintsStringValue([B)Ljava/lang/String;|Ljava/io/IOException;#strBuff,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509Ext.java;,VariableName,strBuff,"try
  {
   // Divide dump into 16 byte lines
   StringBuilder strBuff = new StringBuilder();
   strBuff.append(""<pre>"");

   bais = new ByteArrayInputStream(bValue);",str,string
Lnet/sf/portecle/gui/crypto/DViewPEM;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DViewCSR.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/gui/crypto/DViewPEM.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DViewCertificate.java;,ClassName,DViewPEM," chooser.setDialogTitle(RB.getString(""DViewCSR.Save.Title""));
  chooser.setMultiSelectionEnabled(false);
  try
  {
   DViewPEM dViewCertPem = new DViewPEM(this, RB.getString(""DViewCSR.PemEncoding.Title""), m_req, chooser);
   dViewCertPem.setLocationRelativeTo(this);
   SwingHelper.showAndWait(dViewCertPem);
  }",d,dialog
Lnet/sf/portecle/DOptions$4636;.actionPerformed(Ljava/awt/event/ActionEvent;)V#evt#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DOptions.java;,ParameterName,evt," jbBrowseCaCertsFile.addActionListener(new ActionListener()
  {
   @Override
   public void actionPerformed(ActionEvent evt)
   {
    browsePressed();
   }
  });
  jpCaCertsFile.add(jbBrowseCaCertsFile);",evt,event
Lnet/sf/portecle/DKeyStoreReport;.generateDocument()Lorg/w3c/dom/Document;|Lnet/sf/portecle/crypto/CryptoException;|Ljavax/xml/parsers/ParserConfigurationException;#0#0#sProvider,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DKeyStoreReport.java;,VariableName,sProvider,"// General keystore information
   KeyStoreType ksType = KeyStoreType.valueOfType(m_keystore.getType());
   String sProvider = m_keystore.getProvider().getName();

   Element keystoreElement = xmlDoc.createElement(""keystore"");
   keystoreElement.setAttribute(""type"", ksType.getTypeName());
   keystoreElement.setAttribute(""provider"", sProvider);",s,string
Lnet/sf/portecle/FPortecle;.examineCertSSL(Ljava/net/InetSocketAddress;)Z#0#0#sess,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/FPortecle.java;,VariableName,sess," socket.setSoTimeout(timeOut);
   socket.connect(ia, timeOut);
   ss = (SSLSocket) sf.createSocket(socket, ia.getHostString(), ia.getPort(), false);

   SSLSession sess = ss.getSession();
   // TODO: fails with GNU Classpath: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=29692
   certs = (X509Certificate[]) sess.getPeerCertificates();
   protocol = sess.getProtocol();
   cipherSuite = sess.getCipherSuite();",sess,session
Lnet/sf/portecle/crypto/X509Ext;.getAuthorityKeyIdentifierStringValue([B)Ljava/lang/String;|Ljava/io/IOException;#aki,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509Ext.java;,VariableName,aki,"private String getAuthorityKeyIdentifierStringValue(byte[] bValue)
     throws IOException
 {
  AuthorityKeyIdentifier aki = AuthorityKeyIdentifier.getInstance(bValue);

  StringBuilder strBuff = new StringBuilder();

  byte[] keyIdentifier = aki.getKeyIdentifier();
  if (keyIdentifier != null)",aki,authority key identifier
Lnet/sf/portecle/DKeyStoreReport;.createReportNodes()Ljavax/swing/tree/DefaultMutableTreeNode;|Lnet/sf/portecle/crypto/CryptoException;#0#0#0#2#0#0#sKeyAlg,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DKeyStoreReport.java;,VariableName,sKeyAlg," // Public Key (algorithm and key size)
      int iKeySize = KeyPairUtil.getKeyLength(x509Cert.getPublicKey());
      String sKeyAlg = x509Cert.getPublicKey().getAlgorithm();
      if (iKeySize != KeyPairUtil.UNKNOWN_KEY_SIZE)
      {
       sKeyAlg = MessageFormat.format(RB.getString(""DKeyStoreReport.KeyAlg""), sKeyAlg, iKeySize);
      }",s,size
Lnet/sf/portecle/crypto/X509CertUtil;.loadCertificates(Ljava/net/URL;Ljava/lang/String;)[Ljava/security/cert/X509Certificate;|Lnet/sf/portecle/crypto/CryptoException;#0#0#0#0#0#pr,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509CertUtil.java;,VariableName,pr,"public static PKCS10CertificationRequest loadCSR(URL url)
     throws CryptoException, IOException
 {
  // TODO: handle DER encoded requests too?
  try (PEMParser pr = new PEMParser(new InputStreamReader(NetUtil.openGetStream(url))))
  {
   PKCS10CertificationRequest csr = (PKCS10CertificationRequest) pr.readObject();
   ContentVerifierProvider prov = new JcaContentVerifierProviderBuilder().build(csr.getSubjectPublicKeyInfo());

   if (!csr.isSignatureValid(prov))",pr,parser
Lnet/sf/portecle/gui/crypto/DProviderInfo;.createProviderNodes()Ljavax/swing/tree/DefaultMutableTreeNode;#0#0#0#o,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/gui/crypto/DProviderInfo.java;,VariableName,o,"// ...add property child nodes to it. Use a TreeSet for sorting the properties.
   for (Object o : new TreeSet<>(provider.keySet()))
   {
    String sKey = String.valueOf(o);
    String sValue = provider.getProperty(sKey);
    providerPropertiesNode.add(new DefaultMutableTreeNode(",o,object
Lnet/sf/portecle/FileChooserFactory;.CSR_EXTS)[Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/FileChooserFactory.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/FPortecle.java;,FieldName,CSR_EXTS,"/** File extensions for certificate files */
 /* package private */static final String[] CERT_EXTS =
     { X509_EXTS[0], X509_EXTS[1], X509_EXTS[2], PEM_EXT, PKCS7_EXTS[0], PKCS7_EXTS[1], PKIPATH_EXTS[0] };

 /** File extensions for certificate request files */
 /* package private */static final String[] CSR_EXTS = { ""csr"", ""p10"", PEM_EXT };

 /** File extensions for certificate revocation list files */
 /* package private */static final String[] CRL_EXTS = { ""crl"" };",exts,extension
Lnet/sf/portecle/FileChooserFactory;.CRL_FILE_DESC)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/FileChooserFactory.java;,FieldName,CRL_FILE_DESC," /** Description for CRL files */
 private static final String CRL_FILE_DESC =
     MessageFormat.format(RB.getString(""FileChooseFactory.CrlFiles""), toWildcards(CRL_EXTS));

 /** Description for certificate files */
 private static final String CERT_FILE_DESC =
     MessageFormat.format(RB.getString(""FileChooseFactory.CertificateFiles""), toWildcards(CERT_EXTS));
",desc,description
Lnet/sf/portecle/DViewCSR;.(Ljava/awt/Window;Ljava/lang/String;Lorg/bouncycastle/pkcs/PKCS10CertificationRequest;)V|Lnet/sf/portecle/crypto/CryptoException;#req#0#2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DViewCSR.java;,ParameterName,req," /**
  * Creates new DViewCSR dialog.
  *
  * @param parent Parent window
  * @param sTitle The dialog title
  * @param req Certification request to display
  * @throws CryptoException A problem was encountered getting the certification request details
  */
 public DViewCSR(Window parent, String sTitle, PKCS10CertificationRequest req)
     throws CryptoException
 {",req,request
Lnet/sf/portecle/crypto/KeyStoreUtil;.loadEntries(Lorg/bouncycastle/openssl/PEMParser;Lorg/bouncycastle/openssl/PasswordFinder;)Ljava/security/KeyStore;|Ljava/security/cert/CertificateException;|Lnet/sf/portecle/crypto/CryptoException;|Ljava/io/IOException;#2#0#1#prot,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/KeyStoreUtil.java;,VariableName,prot,"    KeyStore.PrivateKeyEntry entry =
        new KeyStore.PrivateKeyEntry(keyPair.getPrivate(), new Certificate[] { keyPairCert });
    KeyStore.PasswordProtection prot = new KeyStore.PasswordProtection(DUMMY_PASSWORD);

    try
    {
     alias = findUnusedAlias(keyStore, alias);
     keyStore.setEntry(alias, entry, prot);",prot,protection
Ljavax/swing/text/html/HTML;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DViewExtensions.java;,ClassName,HTML,"  if (url == null)
       {
        // Can happen e.g. for ldap:// URLs
        Object href = attrs.getAttribute(HTML.Attribute.HREF);
        if (href instanceof CharSequence)
        {
         try",html,hyper text markup language
Lnet/sf/portecle/NetUtil;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509CertUtil.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/NetUtil.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DViewCRL.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DViewCertificate.java;,ClassName,NetUtil,"public final class NetUtil
{
 /** Logger */
 private static final Logger LOG = Logger.getLogger(NetUtil.class.getCanonicalName());",util,unility
Lnet/sf/portecle/gui/about/DSystemProperties;.initComponents()V#spModel,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/gui/about/DSystemProperties.java;,VariableName,spModel," // System Properties table

  // Create the table using the appropriate table model
  SystemPropertiesTableModel spModel = new SystemPropertiesTableModel();
  spModel.load();

  JTable jtSystemProperties = new JTable(spModel);",sp,system properties
Lnet/sf/portecle/gui/error/DThrowableDetail;.copyPressed()V#0#ste,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/gui/error/DThrowableDetail.java;,VariableName,ste," // Create a node for each throwable in cause chain and add
   // as a child to the top node
   DefaultMutableTreeNode throwableNode = new DefaultMutableTreeNode(throwable);
   topNode.add(throwableNode);

   for (StackTraceElement ste : throwable.getStackTrace())
   {
    // Create a node for each stack trace entry and add it
    // to the throwable node
    throwableNode.add(new DefaultMutableTreeNode(ste));
   }",ste,stack trace element
Lnet/sf/portecle/StringUtil;.toHex(Ljava/lang/Object;ILjava/lang/String;)Ljava/lang/StringBuilder;#0#len,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/StringUtil.java;,VariableName,len," // Left-pad if asked and necessary

  if (groupSize != 0)
  {
   int len = groupSize - (sb.length() % groupSize);
   if (len != groupSize)
   {
    for (int i = 0; i < len; i++)",len,length
Lnet/sf/portecle/FPortecle;.m_lastDir)Lnet/sf/portecle/gui/LastDir;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/FPortecle.java;,FieldName,m_lastDir," /** Default CA certificates keystore file */
 /* package private */static final File DEFAULT_CA_CERTS_FILE = new File(System.getProperty(""java.home""),
     ""lib"" + File.separator + ""security"" + File.separator + FileChooserFactory.CACERTS_FILENAME);

 /** The last directory accessed by the application */
 private final LastDir m_lastDir = new LastDir();

 /** Use CA certificates keystore file? */
 private boolean m_bUseCaCerts;",dir,directory
Lnet/sf/portecle/crypto/X509Ext;.getHexClearDump([BI)Ljava/lang/String;#sbHex,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509Ext.java;,VariableName,sbHex,"private String getHexClearDump(byte[] bytes, int iLen)
 {
  // Buffer for hex
  StringBuilder sbHex;
  if (iLen == bytes.length)
  {
   sbHex = StringUtil.toHex(bytes, 2, "" "");
  }",sb,string builder
Lnet/sf/portecle/FPortecle;.showJarInfo()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/FPortecle.java;,MethodName,showJarInfo,"/**
  * Display JAR Information dialog.
  */
 private void showJarInfo()
 {
  try
  {
   DJarInfo dJarInfo = new DJarInfo(this);
   dJarInfo.setLocationRelativeTo(this);",info,information
Lnet/sf/portecle/crypto/KeyStoreUtil;.getKeyStoreImpl(Lnet/sf/portecle/crypto/KeyStoreType;)Ljava/security/KeyStore;|Ljava/security/KeyStoreException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/KeyStoreUtil.java;,MethodName,getKeyStoreImpl,"/**
  * Gets the preferred (by us) KeyStore instance for the given keystore type.
  *
  * @param keyStoreType The keystore type
  * @return The keystore
  * @throws KeyStoreException No implementation found
  */
 private static KeyStore getKeyStoreImpl(KeyStoreType keyStoreType)
     throws KeyStoreException
 {",impl,implementation
Lnet/sf/portecle/gui/jar/DJarInfo;.getClassPathJars()[Ljava/util/jar/JarFile;|Ljava/io/IOException;#strTok,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/gui/jar/DJarInfo.java;,VariableName,strTok," // Split class path into it's components using the path separator
  String sClassPath = System.getProperty(""java.class.path"");
  String sPathSeparator = System.getProperty(""path.separator"");

  StringTokenizer strTok = new StringTokenizer(sClassPath, sPathSeparator);

  // Store each JAR found on class path
  while (strTok.hasMoreTokens())
  {",str,string
Lnet/sf/portecle/crypto/KeyPairUtil;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/KeyPairUtil.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DGeneratingKeyPair.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DViewCSR.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DKeyStoreReport.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DImportKeyPair.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DViewCertificate.java;,ClassName,KeyPairUtil,"/**
 * Provides utility methods for the generation of keys.
 */
public final class KeyPairUtil
{
 /** Logger */
 private static final Logger LOG = Logger.getLogger(KeyPairUtil.class.getName());",util,utility
Lnet/sf/portecle/FPortecle;.setDefaultStatusBarText()V#0#sProv,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/FPortecle.java;,VariableName,sProv," String sType = KeyStoreType.valueOfType(ksLoaded.getType()).toString();
   String sProv = ksLoaded.getProvider().getName();

   if (iSize == 1)
   {
    setStatusBarText(MessageFormat.format(RB.getString(""FPortecle.entry.statusbar""), sType, sProv));
   }",prov,provider
Lnet/sf/portecle/crypto/KeyStoreUtil;.saveKeyStore(Ljava/security/KeyStore;Ljava/io/File;[C)Ljava/security/KeyStore;|Lnet/sf/portecle/crypto/CryptoException;|Ljava/io/IOException;#0#0#fos,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/KeyStoreUtil.java;,VariableName,fos," public static KeyStore saveKeyStore(KeyStore keyStore, File fKeyStoreFile, char[] cPassword)
     throws CryptoException, IOException
 {
  try (FileOutputStream fos = new FileOutputStream(fKeyStoreFile))
  {
   keyStore.store(fos, cPassword);
  }",fos,file output stream
Lnet/sf/portecle/crypto/X509Ext;.getNovellQualityAttr(Lorg/bouncycastle/asn1/ASN1Sequence;)Ljava/lang/CharSequence;#ksq,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509Ext.java;,VariableName,ksq,"
  BigInteger ksqv = ((ASN1Integer) seq.getObjectAt(3)).getValue();
  String ksq = getRes(""NovellKeyStorageQuality."" + ksqv, ""UnrecognisedNovellKeyStorageQuality"");
  res.append(""<li>"").append(RB.getString(""NovellKeyStorageQuality""));
  res.append("": "").append(MessageFormat.format(ksq, ksqv));
  res.append(""</li>"");",ksq,key storage quality
Ljava/security/cert/X509Certificate;.getSigAlgName()Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509CertUtil.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DKeyStoreReport.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DViewCertificate.java;,MethodName,getSigAlgName," JcaPKCS10CertificationRequestBuilder csrBuilder =
      new JcaPKCS10CertificationRequestBuilder(subject, cert.getPublicKey());
  JcaContentSignerBuilder signerBuilder = new JcaContentSignerBuilder(cert.getSigAlgName());

  try
  {",alg,algorithm
Lnet/sf/portecle/gui/DocumentMaxLengthFilter;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DGenerateCertificate.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/gui/DocumentMaxLengthFilter.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/gui/IntegerDocumentFilter.java;,ClassName,DocumentMaxLengthFilter,"/**
 * Document filter which restricts maximum input length.
 */
public class DocumentMaxLengthFilter
    extends DocumentFilter",max,maximum
Lnet/sf/portecle/DGenerateKeyPair;.initComponents()V#gbc,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DGenerateKeyPair.java;,VariableName,gbc," gbcField.insets = new Insets(5, 5, 5, 5);
  gbcField.anchor = GridBagConstraints.WEST;

  GridBagConstraints gbc = (GridBagConstraints) gbcLabel.clone();
  gbc.gridy = gridy;
  jpOptions.add(jlKeyAlg, gbc);",gbc,grid bag constraints
Lnet/sf/portecle/gui/FileExtFilter;.getExtension(Ljava/io/File;)Ljava/lang/String;#i,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/gui/FileExtFilter.java;,VariableName,i,"private String getExtension(File file)
 {
  String sExt = null;
  String sName = file.getName();
  int i = sName.lastIndexOf('.');

  if (i > 0 && i < sName.length() - 1)
  {
   sExt = sName.substring(i + 1).toLowerCase();
  }",i,index
Lnet/sf/portecle/DViewCertificate;.m_iSelCert)I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DViewCertificate.java;,FieldName,m_iSelCert,"/** Stores certificate(s) to display */
 private final X509Certificate[] m_certs;

 /** The currently selected certificate */
 private int m_iSelCert;

 /** SSL/TLS connection protocol */
 private final String m_connectionProtocol;",cert,certificate
Lnet/sf/portecle/DViewCertificate;.populateDialog()V|Lnet/sf/portecle/crypto/CryptoException;#critExts,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DViewCertificate.java;,VariableName,critExts," // Enable/disable extensions button
  Set<String> critExts = cert.getCriticalExtensionOIDs();
  Set<String> nonCritExts = cert.getNonCriticalExtensionOIDs();

  if ((critExts != null && !critExts.isEmpty()) || (nonCritExts != null && !nonCritExts.isEmpty()))
  {",crit,critical
Lnet/sf/portecle/DViewCSR;.populateDialog()V|Lnet/sf/portecle/crypto/CryptoException;#sigAlgName,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DViewCSR.java;,VariableName,sigAlgName," // Signature Algorithm
  String sigAlgName = SignatureType.toString(m_req.getSignatureAlgorithm().getAlgorithm().toString());
  m_jtfSignatureAlgorithm.setText(sigAlgName);
  m_jtfSignatureAlgorithm.setCaretPosition(0);",sig,signature
Lnet/sf/portecle/DViewCSR;.populateDialog()V|Lnet/sf/portecle/crypto/CryptoException;#keyParams,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DViewCSR.java;,VariableName,keyParams," // Public Key (algorithm and keysize)
  SubjectPublicKeyInfo keyInfo = m_req.getSubjectPublicKeyInfo();

  AsymmetricKeyParameter keyParams;
  try
  {
   keyParams = PublicKeyFactory.createKey(keyInfo);
  }",params,parameters
Lnet/sf/portecle/DViewCertificate;.populateDialog()V|Lnet/sf/portecle/crypto/CryptoException;#nonCritExts,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DViewCertificate.java;,VariableName,nonCritExts," // Enable/disable extensions button
  Set<String> critExts = cert.getCriticalExtensionOIDs();
  Set<String> nonCritExts = cert.getNonCriticalExtensionOIDs();

  if ((critExts != null && !critExts.isEmpty()) || (nonCritExts != null && !nonCritExts.isEmpty()))
  {
   // Extensions
   m_jbExtensions.setEnabled(true);",crit,critical
Lnet/sf/portecle/FPortecle;.exportPrivKeyCertChainPEM(Ljava/lang/String;)Z#1#0#0#0#0#0#rand,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/FPortecle.java;,VariableName,rand,"// TODO: make algorithm configurable/ask user?
     String algorithm = ""DES-EDE3-CBC"";
     SecureRandom rand = SecureRandom.getInstance(""SHA1PRNG"");
     PEMEncryptor encryptor =
         new JcePEMEncryptorBuilder(algorithm).setSecureRandom(rand).build(password);
     pw.writeObject(privKey, encryptor);",rand,random
Lnet/sf/portecle/DViewExtensions$6685;.hyperlinkUpdate(Ljavax/swing/event/HyperlinkEvent;)V#0#el,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DViewExtensions.java;,VariableName,el,"if (evt.getEventType() == HyperlinkEvent.EventType.ACTIVATED)
    {
     LinkClass linkClass = LinkClass.BROWSER;
     URL url = evt.getURL();

     Element el = evt.getSourceElement();
     AttributeSet attrs = el.getAttributes();
     if (attrs != null)
     {",el,element
Lnet/sf/portecle/DOptions;.initComponents()V#0#0#0#0#laf,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DOptions.java;,VariableName,laf,"  // Check if it's a supported one (e.g. Windows on Linux is not)
   boolean bSupported = false;
   try
   {
    LookAndFeel laf = (LookAndFeel) Class.forName(lookFeelInfo.getClassName()).newInstance();
    bSupported = laf.isSupportedLookAndFeel();
   }
   catch (Exception e)",laf,look and feel
Lnet/sf/portecle/crypto/X509CertUtil;.getCertificateAlias(Ljava/security/cert/X509Certificate;)Ljava/lang/String;#sIssuerCN,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509CertUtil.java;,VariableName,sIssuerCN," if (sSubjectCN == null)
  {
   return """";
  }

  String sIssuerCN = NameUtil.getCommonName(issuer);

  // Self-signed certificate or could not get an issuer CN
  if (subject.equals(issuer) || sIssuerCN == null)
  {",cn,common name
Lnet/sf/portecle/DGenerateKeyPair;.validateKeyGenParameters()Z,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DGenerateKeyPair.java;,MethodName,validateKeyGenParameters,"/**
  * Validate the chosen key pair generation parameters.
  *
  * @return True if the key pair generation parameters are valid, false otherwise
  */
 private boolean validateKeyGenParameters()
 {
  // Check key size
  int iKeySize = validateKeySize();
  if (iKeySize == BAD_KEYSIZE)",gen,generation
Lnet/sf/portecle/gui/error/DThrowable;.initComponents()V#t,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/gui/error/DThrowable.java;,VariableName,t,"// Find out if this problem maybe due to missing unrestricted JCE policy files. Ugly? Definitely.
  // Better ways to detect this are welcome...

  boolean maybePolicyProblem = false;
  Throwable t = m_throwable;
  while (!maybePolicyProblem && t != null)
  {
   String msg = t.getMessage();
   if (msg != null)",t,throwable
Lnet/sf/portecle/crypto/X509Ext;.getCertificatePoliciesStringValue([B)Ljava/lang/String;|Ljava/io/IOException;#0#0#0#0#1#un,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509Ext.java;,VariableName,un,"else if (pqId.equals(PolicyQualifierId.id_qt_unotice))
     {
      // userNotice
      ASN1Sequence un = (ASN1Sequence) d;

      for (int k = 0, dlen = un.size(); k < dlen; k++)
      {
       ASN1Encodable de = un.getObjectAt(k);",un,user notice
Lorg/bouncycastle/asn1/misc/NetscapeCertType;.sslClient)I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509Ext.java;,VariableName,sslClient," /** Netscape certificate types */
 private static final int[] NETSCAPE_CERT_TYPES = { NetscapeCertType.sslClient, NetscapeCertType.sslServer,
     NetscapeCertType.smime, NetscapeCertType.objectSigning, NetscapeCertType.reserved, NetscapeCertType.sslCA,
     NetscapeCertType.smimeCA, NetscapeCertType.objectSigningCA };
",ssl,secure socket layer
Lnet/sf/portecle/DViewCRL;.m_jtRevokedCerts)Ljavax/swing/JTable;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DViewCRL.java;,FieldName,m_jtRevokedCerts," /** Button used to display the CRL's extensions */
 private JButton m_jbCrlExtensions;

 /** Revoked Certificates table */
 private JTable m_jtRevokedCerts;

 /** Button used to display the CRL's entries' extensions */
 private JButton m_jbCrlEntryExtensions;",certs,certificates
Lnet/sf/portecle/FPortecle;.showOptions()V#fTmp,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/FPortecle.java;,VariableName,fTmp,"  // Store/apply the chosen options:

  // CA certificates file
  File fTmp = dOptions.getCaCertsFile();

  if (!fTmp.equals(m_fCaCertsFile))
  {
   // CA certificates file changed - any stored CA certificates keystore is now invalid
   m_caCertsKeyStore = null;",f,file
Lnet/sf/portecle/ExtensionsTableModel;.getColumnName(I)Ljava/lang/String;#iCol#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/ExtensionsTableModel.java;,ParameterName,iCol,"/**
  * Get the name of the column at the given position.
  *
  * @param iCol The column position
  * @return The column name
  */
 @Override
 public String getColumnName(int iCol)
 {
  return COLUMN_NAMES[iCol];
 }",col,column
Lnet/sf/portecle/gui/JMenuRecentFiles;.getRecentFiles()[Ljava/io/File;#0#rf,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/gui/JMenuRecentFiles.java;,VariableName,rf," public File[] getRecentFiles()
 {
  ArrayList<File> arrList = new ArrayList<>();

  for (JMenuItemRecentFile rf : m_jmirf)
  {
   if (rf == null)
   {
    break;
   }",rf,recent file
Lnet/sf/portecle/crypto/X509CertUtil;.verifyCertificate(Ljava/security/cert/X509Certificate;Ljava/security/cert/X509Certificate;)Z|Lnet/sf/portecle/crypto/CryptoException;#signingCert#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509CertUtil.java;,ParameterName,signingCert,"/**
  * Verify that one X.509 certificate was signed using the private key that corresponds to the public key of a second
  * certificate.
  *
  * @return True if the first certificate was signed by private key corresponding to the second signature
  * @param signedCert The signed certificate
  * @param signingCert The signing certificate
  * @throws CryptoException If there was a problem verifying the signature.
  */
 private static boolean verifyCertificate(X509Certificate signedCert, X509Certificate signingCert)
     throws CryptoException",cert,certificate
Lnet/sf/portecle/crypto/X509Ext;.stringify(Ljava/lang/Object;)Ljava/lang/String;#1#tmp,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509Ext.java;,VariableName,tmp," else
  {
   byte[] tmp = Arrays.copyOfRange(bytes, 0, iLen);
   sbHex = StringUtil.toHex(tmp, 2, "" "");
  }

  // Buffer for clear text
  StringBuilder sbClr = new StringBuilder(iLen);",tmp,temporary
Lnet/sf/portecle/crypto/X509CertUtil;.getCertificateAlias(Ljava/security/cert/X509Certificate;)Ljava/lang/String;#sSubjectCN,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509CertUtil.java;,VariableName,sSubjectCN,"public static String getCertificateAlias(X509Certificate cert)
 {
  X500Principal subject = cert.getSubjectX500Principal();
  X500Principal issuer = cert.getIssuerX500Principal();

  String sSubjectCN = NameUtil.getCommonName(subject);

  // Could not get a subject CN - return blank
  if (sSubjectCN == null)
  {
   return """";",cn,common name
Lnet/sf/portecle/FPortecle;.initTable()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/FPortecle.java;,MethodName,initTable,"/**
  * Initialize FPortecle frame's keystore content table GUI components.
  */
 private void initTable()
 {
  // The table data model
  KeyStoreTableModel ksModel = new KeyStoreTableModel(this);

  // The table itself
  m_jtKeyStore = new KeyStoreTable(ksModel);",init,initialize
Lnet/sf/portecle/FPortecle;.setPasswordSelectedEntry()Z#0#0#cert,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/FPortecle.java;,VariableName,cert,"  try
  {
   // Change the password by recreating the entry
   Certificate[] cert = keyStore.getCertificateChain(sAlias);
   Key key = keyStore.getKey(sAlias, cOldPassword);
   keyStore.deleteEntry(sAlias);
   keyStore.setKeyEntry(sAlias, key, cNewPassword, cert);",cert,certificate
Lorg/bouncycastle/asn1/misc/NetscapeCertType;.sslCA)I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509Ext.java;,VariableName,sslCA,"
 /** Netscape certificate types */
 private static final int[] NETSCAPE_CERT_TYPES = { NetscapeCertType.sslClient, NetscapeCertType.sslServer,
     NetscapeCertType.smime, NetscapeCertType.objectSigning, NetscapeCertType.reserved, NetscapeCertType.sslCA,
     NetscapeCertType.smimeCA, NetscapeCertType.objectSigningCA };
",ssl,secure socket layer
Lnet/sf/portecle/crypto/X509Ext;.getLink(Ljava/lang/String;Ljava/lang/String;Lnet/sf/portecle/crypto/X509Ext$LinkClass;)Ljava/lang/CharSequence;#sb,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509Ext.java;,VariableName,sb,"private String getCrlDistributionPointsStringValue(byte[] bValue)
     throws IOException
 {
  CRLDistPoint dps = CRLDistPoint.getInstance(bValue);
  DistributionPoint[] points = dps.getDistributionPoints();

  StringBuilder sb = new StringBuilder();
  sb.append(""<ul>"");

  for (DistributionPoint point : points)",sb,string builder
Lnet/sf/portecle/StringUtil;.toHex(Ljava/lang/Object;ILjava/lang/String;)Ljava/lang/StringBuilder;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509Ext.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DKeyStoreReport.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/DigestUtil.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/RevokedCertsTableCellRend.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DViewCertificate.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/StringUtil.java;,MethodName,toHex,"// Buffer for hex
  StringBuilder sbHex;
  if (iLen == bytes.length)
  {
   sbHex = StringUtil.toHex(bytes, 2, "" "");
  }
  else",hex,hexadecimal
Lnet/sf/portecle/crypto/X509CertUtil;.establishTrust(Ljava/util/List<Ljava/security/cert/X509Certificate;>;Ljava/security/cert/X509Certificate;)[Ljava/security/cert/X509Certificate;|Lnet/sf/portecle/crypto/CryptoException;#0#0#tmpChain,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509CertUtil.java;,VariableName,tmpChain,"// Otherwise try and establish a chain of trust for the comparison certificate against the
     // other comparison certificates
     X509Certificate[] tmpChain = establishTrust(vCompCerts, compCert);
     if (tmpChain != null)
     {
      X509Certificate[] trustChain = new X509Certificate[tmpChain.length + 1];
      trustChain[0] = cert;",tmp,temporary
Lnet/sf/portecle/crypto/KeyStoreUtil;.loadEntries(Lorg/bouncycastle/openssl/PEMParser;Lorg/bouncycastle/openssl/PasswordFinder;)Ljava/security/KeyStore;|Ljava/security/cert/CertificateException;|Lnet/sf/portecle/crypto/CryptoException;|Ljava/io/IOException;#pwFinder#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/KeyStoreUtil.java;,ParameterName,pwFinder,"/**
  * Load keystore entries from PEM reader into a new PKCS #12 keystore. The reader is not closed.
  *
  * @param reader reader to read entries from
  * @param pwFinder object to get passwords from on demand
  * @return new PKCS #12 keystore containing read entries, possibly empty
  * @throws CertificateException
  * @throws CryptoException Problem encountered creating the keystore
  * @throws IOException An I/O error occurred
  */
 public static KeyStore loadEntries(PEMParser reader, PasswordFinder pwFinder)
     throws CertificateException, CryptoException, IOException",pw,password
Lnet/sf/portecle/FPortecle;.initTable()V#typeCol,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/FPortecle.java;,VariableName,typeCol," // Make the first column small and not resizable (it holds icons to represent the different entry
  // types)
  TableColumn typeCol = m_jtKeyStore.getColumnModel().getColumn(0);
  typeCol.setResizable(false);
  typeCol.setMinWidth(20);
  typeCol.setMaxWidth(20);",col,column
Lnet/sf/portecle/crypto/X509Ext;.getStringValue()Ljava/lang/String;|Ljava/io/IOException;|Ljava/text/ParseException;#bOctets,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509Ext.java;,VariableName,bOctets,"public String getStringValue()
     throws IOException, ParseException
 {
  // Get octet string from extension
  byte[] bOctets = ((ASN1OctetString) ASN1Primitive.fromByteArray(m_bValue)).getOctets();",b,byte
Lnet/sf/portecle/PortecleJDialog;.getOkButton(Z)Ljavax/swing/JButton;#escPresses#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/PortecleJDialog.java;,ParameterName,escPresses,"/**
  * Get OK button.
  *
  * @param escPresses whether hitting Esc should press the button (usually only for dialogs without a cancel button)
  * @return
  */
 protected JButton getOkButton(boolean escPresses)
 {
  Action okAction = new AbstractAction()",esc,escape
Lnet/sf/portecle/crypto/X509Ext;.getLogotypeStringValue([B)Ljava/lang/String;|Ljava/io/IOException;#0#0#0#0#0#ltURI,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509Ext.java;,VariableName,ltURI,"
        ASN1Sequence ltURI = (ASN1Sequence) ltDetails.getObjectAt(2);
        for (int j = 0, jlen = ltURI.size(); j < jlen; j++)
        {
         String sUri = ((ASN1String) ltURI.getObjectAt(j)).getString();
         String eUri = escapeHtml(sUri);",uri,uniform resource identifier
Lnet/sf/portecle/DOptions;.m_fCaCertsFile)Ljava/io/File;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DOptions.java;,FieldName,m_fCaCertsFile,"/** Use CA certificates keystore file? */
 private boolean m_bUseCaCerts;

 /** Chosen CA certificates keystore file */
 private File m_fCaCertsFile;

 /** Available Look and Feel information - reflects what is in choice box */
 private final TreeMap<String, UIManager.LookAndFeelInfo> lookFeelInfos = new TreeMap<>();",f,file
Lnet/sf/portecle/DViewExtensions$6685;.hyperlinkUpdate(Ljavax/swing/event/HyperlinkEvent;)V#0#attrs,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/DViewExtensions.java;,VariableName,attrs,"LinkClass linkClass = LinkClass.BROWSER;
     URL url = evt.getURL();

     Element el = evt.getSourceElement();
     AttributeSet attrs = el.getAttributes();
     if (attrs != null)
     {
      attrs = (AttributeSet) attrs.getAttribute(HTML.Tag.A);",attrs,attributes
Lnet/sf/portecle/crypto/X509Ext;.getMicrosoftCAVersionStringValue([B)Ljava/lang/String;|Ljava/io/IOException;#ver,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509Ext.java;,VariableName,ver," private String getMicrosoftCAVersionStringValue(byte[] bValue)
     throws IOException
 {
  int ver = ((ASN1Integer) ASN1Primitive.fromByteArray(bValue)).getValue().intValue();
  String certIx = String.valueOf(ver & 0xffff); // low 16 bits
  String keyIx = String.valueOf(ver >> 16); // high 16 bits
  StringBuilder sb = new StringBuilder();",ver,version
Lnet/sf/portecle/crypto/X509Ext;.getCertificatePoliciesStringValue([B)Ljava/lang/String;|Ljava/io/IOException;#pSeq,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509Ext.java;,VariableName,pSeq,"private String getCertificatePoliciesStringValue(byte[] bValue)
     throws IOException
 {
  ASN1Sequence pSeq = (ASN1Sequence) ASN1Primitive.fromByteArray(bValue);
  StringBuilder sb = new StringBuilder();

  for (int i = 0, len = pSeq.size(); i < len; i++)",p,primitive
Lnet/sf/portecle/FPortecle$CreateAndShowGui;.(Ljava/lang/Object;)V#obj#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/FPortecle.java;,ParameterName,obj,"/**
   * Construct CreateAndShowGui.
   *
   * @param obj File or host:port to open initially (supply null if none)
   */
  public CreateAndShowGui(Object obj)
  {
   m_obj = obj;
  }",obj,object
Lnet/sf/portecle/crypto/KeyPairUtil;.generateKeyPair(Lnet/sf/portecle/crypto/KeyPairType;I)Ljava/security/KeyPair;|Lnet/sf/portecle/crypto/CryptoException;#0#0#keyPairGen,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/KeyPairUtil.java;,VariableName,keyPairGen,"public static KeyPair generateKeyPair(KeyPairType keyPairType, int iKeySize)
     throws CryptoException
 {
  try
  {
   KeyPairGenerator keyPairGen = KeyPairGenerator.getInstance(keyPairType.name());

   // Create a SecureRandom
   SecureRandom rand = SecureRandom.getInstance(""SHA1PRNG"");
",gen,generator
Lnet/sf/portecle/crypto/X509Ext;.convertToHexString(Ljava/lang/Object;)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/X509Ext.java;,MethodName,convertToHexString,"/**
  * Convert the supplied object to a hex string sub-divided by spaces every four characters.
  *
  * @param obj Object (byte array, BigInteger, ASN1Integer)
  * @return Hex string
  */
 private static String convertToHexString(Object obj)",hex,hexadecimal
Lnet/sf/portecle/FPortecle;.createRecentFileMenuItem(Ljava/io/File;)Lnet/sf/portecle/gui/JMenuItemRecentFile;#fRecentFile#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/FPortecle.java;,ParameterName,fRecentFile,"/**
  * Create a recent file menu item for the supplied file.
  *
  * @param fRecentFile Recent file
  * @return Recent file menu item
  */
 private JMenuItemRecentFile createRecentFileMenuItem(File fRecentFile)
 {
  JMenuItemRecentFile jmirfNew = new JMenuItemRecentFile(fRecentFile);
  jmirfNew.setIcon(new ImageIcon(getResImage(""FPortecle.OpenRecent.image"")));
  jmirfNew.addActionListener(new RecentKeyStoreFileActionListener(fRecentFile, this));",f,file
Lnet/sf/portecle/FPortecle;.openKeyStoreFile(Ljava/io/File;Z)Z#fKeyStore#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/FPortecle.java;,ParameterName,fKeyStore,"/**
  * Open the supplied keystore file from disk.
  *
  * @param fKeyStore The keystore file
  * @param updateLastDir Whether to update the last accessed directory
  * @return True if a keystore is opened, false otherwise
  */
 /* package private */boolean openKeyStoreFile(File fKeyStore, boolean updateLastDir)
 {
  // The keystore does not exist
  if (!fKeyStore.exists())",f,file
Lnet/sf/portecle/FileChooserFactory;.toWildcards([Ljava/lang/String;)Ljava/lang/String;#exts#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/FileChooserFactory.java;,ParameterName,exts,"/**
  * Converts an array of filename extensions into a (informational) filename match pattern.
  *
  * @param exts
  * @return informational filename match pattern
  */
 private static String toWildcards(String[] exts)
 {
  StringBuilder res = new StringBuilder();
  for (String ext : exts)",exts,extensions
Lnet/sf/portecle/crypto/KeyStoreUtil;.loadEntries(Lorg/bouncycastle/openssl/PEMParser;Lorg/bouncycastle/openssl/PasswordFinder;)Ljava/security/KeyStore;|Ljava/security/cert/CertificateException;|Lnet/sf/portecle/crypto/CryptoException;|Ljava/io/IOException;#pwFinder#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/portecle-master/src/main/net/sf/portecle/crypto/KeyStoreUtil.java;,ParameterName,pwFinder,"/**
  * Load keystore entries from PEM reader into a new PKCS #12 keystore. The reader is not closed.
  *
  * @param reader reader to read entries from
  * @param pwFinder object to get passwords from on demand
  * @return new PKCS #12 keystore containing read entries, possibly empty
  * @throws CertificateException
  * @throws CryptoException Problem encountered creating the keystore
  * @throws IOException An I/O error occurred
  */
 public static KeyStore loadEntries(PEMParser reader, PasswordFinder pwFinder)
     throws CertificateException, CryptoException, IOException",pw,password
Lcom/example/retrofit/JsonQueryParameters$JsonStringConverterFactory;.(Lretrofit2/Converter$Factory;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/samples/src/main/java/com/example/retrofit/JsonQueryParameters.java;,MethodName,JsonStringConverterFactory,"  static class JsonStringConverterFactory extends Converter.Factory {
    private final Converter.Factory delegateFactory;

    JsonStringConverterFactory(Converter.Factory delegateFactory) {
      this.delegateFactory = delegateFactory;
    }",json,javascript object notation
Lcom/example/retrofit/AnnotatedConverters$AnnotatedConverterFactory$Builder;.add(Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;Lretrofit2/Converter$Factory;)Lcom/example/retrofit/AnnotatedConverters$AnnotatedConverterFactory$Builder;#cls#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/samples/src/main/java/com/example/retrofit/AnnotatedConverters.java;,ParameterName,cls,"public static final class Builder {
      private final Map<Class<? extends Annotation>, Converter.Factory> factories =
          new LinkedHashMap<>();

      public Builder add(Class<? extends Annotation> cls, Converter.Factory factory) {
        if (cls == null) {
          throw new NullPointerException(""cls == null"");
        }",cls,class
Lretrofit2/CallAdapterTest;.rawTypes()V|Ljava/lang/NoSuchMethodException;#typeVar,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/CallAdapterTest.java;,VariableName,typeVar,"    Type wildParam = ((ParameterizedType) new TypeToken<List<? extends List<String>>>() {
    }.getType()).getActualTypeArguments()[0];
    assertThat(getRawType(wildParam)).isSameAs(List.class);

    Type typeVar = A.class.getDeclaredMethod(""method"").getGenericReturnType();
    assertThat(getRawType(typeVar)).isSameAs(Object.class);
  }",var,variable
Lretrofit2/converter/moshi/MoshiResponseBodyConverter;.UTF8_BOM)Lokio/ByteString;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/moshi/src/main/java/retrofit2/converter/moshi/MoshiResponseBodyConverter.java;,FieldName,UTF8_BOM,"final class MoshiResponseBodyConverter<T> implements Converter<ResponseBody, T> {
  private static final ByteString UTF8_BOM = ByteString.decodeHex(""EFBBBF"");

  private final JsonAdapter<T> adapter;",utf,unicode transformation format
Lretrofit2/CallTest;.reportsExecutedAsync()V|Ljava/lang/InterruptedException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/CallTest.java;,MethodName,reportsExecutedAsync,"  @Test public void reportsExecutedAsync() throws InterruptedException {
    Retrofit retrofit = new Retrofit.Builder()
        .baseUrl(server.url(""/""))
        .addConverterFactory(new ToStringConverterFactory())
        .build();
    Service example = retrofit.create(Service.class);

    server.enqueue(new MockResponse().setBody(""Hi""));",async,asynchrony
Lretrofit2/RequestFactory$Builder;.parseHttpMethodAndPath(Ljava/lang/String;Ljava/lang/String;Z)V#httpMethod#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/RequestFactory.java;,ParameterName,httpMethod,"    private void parseHttpMethodAndPath(String httpMethod, String value, boolean hasBody) {
      if (this.httpMethod != null) {
        throw methodError(method, ""Only one HTTP method is allowed. Found: %s and %s."",
            this.httpMethod, httpMethod);
      }",http,hyper text transfer protocol
Lretrofit2/adapter/rxjava/RxJavaCallAdapterFactoryTest;.responseTypes()V#oResponseWildcard,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/RxJavaCallAdapterFactoryTest.java;,VariableName,oResponseWildcard,"
    Type oResponseWildcard = new TypeToken<Observable<Response<? extends String>>>() {}.getType();
    assertThat(factory.get(oResponseWildcard, NO_ANNOTATIONS, retrofit).responseType())
        .isEqualTo(String.class);
    Type sResponseWildcard = new TypeToken<Single<Response<? extends String>>>() {}.getType();
    assertThat(factory.get(sResponseWildcard, NO_ANNOTATIONS, retrofit).responseType())
        .isEqualTo(String.class);",o,observable
Lretrofit2/mock/NetworkBehavior;.calculateDelay(Ljava/util/concurrent/TimeUnit;)J#callDelayMs,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-mock/src/main/java/retrofit2/mock/NetworkBehavior.java;,VariableName,callDelayMs,"    float upperBound = 1f + delta; // 0.2f --> 1.2f
    float bound = upperBound - lowerBound; // 1.2f - 0.8f == 0.4f
    float delayPercent = lowerBound + (random.nextFloat() * bound); // 0.8 + (rnd * 0.4)
    long callDelayMs = (long) (delayMs * delayPercent);
    return MILLISECONDS.convert(callDelayMs, unit);
  }",ms,millisecond
Lretrofit2/adapter/rxjava/RxJavaCallAdapterFactoryTest;.nonRxJavaTypeReturnsNull()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/RxJavaCallAdapterFactoryTest.java;,MethodName,nonRxJavaTypeReturnsNull,"  @Test public void nonRxJavaTypeReturnsNull() {
    CallAdapter<?, ?> adapter = factory.get(String.class, NO_ANNOTATIONS, retrofit);
    assertThat(adapter).isNull();
  }",rx,reactive extension
Lretrofit2/CallTest;.transportProblemAsync()V|Ljava/lang/InterruptedException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/CallTest.java;,MethodName,transportProblemAsync,"
  @Test public void transportProblemAsync() throws InterruptedException {
    Retrofit retrofit = new Retrofit.Builder()
        .baseUrl(server.url(""/""))
        .addConverterFactory(new ToStringConverterFactory())
        .build();
    Service example = retrofit.create(Service.class);",async,asynchrony
Lretrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest;.responseTypes()V#sBodyWildcard,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest.java;,VariableName,sBodyWildcard,"Type oBodyWildcard = new TypeToken<Observable<? extends String>>() {}.getType();
    assertThat(factory.get(oBodyWildcard, NO_ANNOTATIONS, retrofit).responseType())
        .isEqualTo(String.class);
    Type sBodyWildcard = new TypeToken<Single<? extends String>>() {}.getType();
    assertThat(factory.get(sBodyWildcard, NO_ANNOTATIONS, retrofit).responseType())
        .isEqualTo(String.class);",s,single
Lretrofit2/adapter/rxjava/RxJavaCallAdapterFactoryTest;.responseTypes()V#sResultWildcard,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/RxJavaCallAdapterFactoryTest.java;,VariableName,sResultWildcard,"    Type oResultWildcard = new TypeToken<Observable<Result<? extends String>>>() {}.getType();
    assertThat(factory.get(oResultWildcard, NO_ANNOTATIONS, retrofit).responseType())
        .isEqualTo(String.class);
    Type sResultWildcard = new TypeToken<Single<Result<? extends String>>>() {}.getType();
    assertThat(factory.get(sResultWildcard, NO_ANNOTATIONS, retrofit).responseType())
        .isEqualTo(String.class);
  }",s,single
Ljava/io/EOFException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/wire/src/test/java/retrofit2/converter/wire/WireConverterFactoryTest.java;,ClassName,EOFException," Call<?> call = service.get();
    try {
      call.execute();
      fail();
    } catch (EOFException ignored) {
    }
  }
}
",eof,end of file
Lrx/schedulers/Schedulers;.io()Lrx/Scheduler;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/samples/src/main/java/com/example/retrofit/RxJavaObserveOnMainThread.java;,MethodName,io,"Scheduler observeOn = Schedulers.computation(); // Or use mainThread() for Android.

    Retrofit retrofit = new Retrofit.Builder()
        .baseUrl(""http://example.com"")
        .addCallAdapterFactory(new ObserveOnMainCallAdapterFactory(observeOn))
        .addCallAdapterFactory(RxJavaCallAdapterFactory.createWithScheduler(io()))
        .build();

    // Services created with this instance that use Observable will execute on the 'io' scheduler
    // and notify their observer on the 'computation' scheduler.",io,input output
Lretrofit2/RequestFactoryTest;.malformedAnnotationRelativeUrlThrows()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RequestFactoryTest.java;,MethodName,malformedAnnotationRelativeUrlThrows,"@Test public void malformedAnnotationRelativeUrlThrows() {
    class Example {
      @GET(""ftp://example.org"")
      Call<ResponseBody> get() {
        return null;
      }
    }",url,uniform resource locator
Lcom/example/retrofit/JsonAndXmlConverters$QualifiedTypeConverterFactory;.(Lretrofit2/Converter$Factory;Lretrofit2/Converter$Factory;)V#jsonFactory#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/samples/src/main/java/com/example/retrofit/JsonAndXmlConverters.java;,ParameterName,jsonFactory,"    private final Converter.Factory jsonFactory;
    private final Converter.Factory xmlFactory;

    QualifiedTypeConverterFactory(Converter.Factory jsonFactory, Converter.Factory xmlFactory) {
      this.jsonFactory = jsonFactory;
      this.xmlFactory = xmlFactory;
    }",json,javascript object notation
Lretrofit2/RequestFactoryTest$18175$Example;.method(Ljava/lang/String;Ljava/lang/String;)Lretrofit2/Call<Lokhttp3/ResponseBody;>;#o2#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RequestFactoryTest.java;,ParameterName,o2,"
  @Test public void twoBodies() {
    class Example {
      @PUT(""/"") //
      Call<ResponseBody> method(@Body String o1, @Body String o2) {
        return null;
      }
    }",o,method
Lretrofit2/adapter/rxjava/RxJavaCallAdapterFactoryTest;.responseTypes()V#oBodyClass,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/RxJavaCallAdapterFactoryTest.java;,VariableName,oBodyClass,"@Test public void responseTypes() {
    Type oBodyClass = new TypeToken<Observable<String>>() {}.getType();
    assertThat(factory.get(oBodyClass, NO_ANNOTATIONS, retrofit).responseType())
        .isEqualTo(String.class);
    Type sBodyClass = new TypeToken<Single<String>>() {}.getType();",o,observable
Lretrofit2/Utils$WildcardTypeImpl;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/Utils.java;,ClassName,WildcardTypeImpl," /**
   * The WildcardType interface supports multiple upper bounds and multiple
   * lower bounds. We only support what the Java 6 language needs - at most one
   * bound. If a lower bound is set, the upper bound must be Object.class.
   */
  private static final class WildcardTypeImpl implements WildcardType {
    private final Type upperBound;
    private final Type lowerBound;",impl,implementation
Lretrofit2/RequestFactory$Builder;.parseHttpMethodAndPath(Ljava/lang/String;Ljava/lang/String;Z)V#0#queryParamMatcher,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/RequestFactory.java;,VariableName,queryParamMatcher,"if (question != -1 && question < value.length() - 1) {
        // Ensure the query string does not have any named parameters.
        String queryParams = value.substring(question + 1);
        Matcher queryParamMatcher = PARAM_URL_REGEX.matcher(queryParams);
        if (queryParamMatcher.find()) {
          throw methodError(method, ""URL query string \""%s\"" must not have replace block. ""
              + ""For dynamic query parameters use @Query."", queryParams);
        }",param,parameter
Lretrofit2/converter/protobuf/PhoneProtos$Phone$Builder;.getNumber()Ljava/lang/String;#0#s,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/protobuf/src/test/java/retrofit2/converter/protobuf/PhoneProtos.java;,VariableName,s,"      com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          number_ = s;
        }",s,string
Lretrofit2/RequestFactoryTest;.multipartPartMapRejectsNullValues()V#params,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RequestFactoryTest.java;,VariableName,params,"
    Map<String, Object> params = new LinkedHashMap<>();
    params.put(""kit"", ""kat"");
    params.put(""ping"", ""pong"");

    Request request = buildRequest(Example.class, params);",params,parameters
Lretrofit2/RequestFactory$Builder;.relativeUrlParamNames)Ljava/util/Set<Ljava/lang/String;>;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/RequestFactory.java;,FieldName,relativeUrlParamNames,"    String relativeUrl;
    Headers headers;
    MediaType contentType;
    Set<String> relativeUrlParamNames;
    ParameterHandler<?>[] parameterHandlers;

    Builder(Retrofit retrofit, Method method) {
      this.retrofit = retrofit;",param,parameters
Lretrofit2/adapter/rxjava2/FlowableThrowingTest;.resultThrowingInOnCompletedDeliveredToPlugin()V#throwableRef,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/FlowableThrowingTest.java;,VariableName,throwableRef,"  @Test public void bodyThrowingInOnCompleteDeliveredToPlugin() {
    server.enqueue(new MockResponse());

    final AtomicReference<Throwable> throwableRef = new AtomicReference<>();
    RxJavaPlugins.setErrorHandler(new Consumer<Throwable>() {
      @Override public void accept(Throwable throwable) throws Exception {
        if (!throwableRef.compareAndSet(null, throwable)) {",ref,reference
Lretrofit2/converter/jaxb/JaxbRequestConverter;.convert(TT;)Lokhttp3/RequestBody;|Ljava/io/IOException;#0#0#xmlWriter,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/jaxb/src/main/java/retrofit2/converter/jaxb/JaxbRequestConverter.java;,VariableName,xmlWriter,"    try {
      Marshaller marshaller = context.createMarshaller();

      XMLStreamWriter xmlWriter = xmlOutputFactory.createXMLStreamWriter(
          buffer.outputStream(), JaxbConverterFactory.XML.charset().name());
      marshaller.marshal(value, xmlWriter);
    } catch (JAXBException | XMLStreamException e) {
      throw new RuntimeException(e);",xml,extensible markup language
Lretrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest;.responseTypes()V#mBodyGeneric,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest.java;,VariableName,mBodyGeneric,"    assertThat(factory.get(sBodyGeneric, NO_ANNOTATIONS, retrofit).responseType())
        .isEqualTo(new TypeToken<List<String>>() {}.getType());
    Type mBodyGeneric = new TypeToken<Maybe<List<String>>>() {}.getType();
    assertThat(factory.get(mBodyGeneric, NO_ANNOTATIONS, retrofit).responseType())
        .isEqualTo(new TypeToken<List<String>>() {}.getType());
    Type fBodyGeneric = new TypeToken<Flowable<List<String>>>() {}.getType();",m,maybe
Lretrofit2/RequestFactory$Builder;.PARAM_URL_REGEX)Ljava/util/regex/Pattern;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/RequestFactory.java;,FieldName,PARAM_URL_REGEX,"static final class Builder {
    // Upper and lower characters, digits, underscores, and hyphens, starting with a character.
    private static final String PARAM = ""[a-zA-Z][a-zA-Z0-9_-]*"";
    private static final Pattern PARAM_URL_REGEX = Pattern.compile(""\\{("" + PARAM + "")\\}"");
    private static final Pattern PARAM_NAME_REGEX = Pattern.compile(PARAM);",param,parameter
Lretrofit2/RequestFactoryTest;.getWithUrlThenQuery()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RequestFactoryTest.java;,MethodName,getWithUrlThenQuery,"
  @Test public void getWithUrlThenQuery() {
    class Example {
      @GET
      Call<ResponseBody> method(@Url String url, @Query(""hey"") String hey) {
        return null;
      }",url,uniform resource locator
Lretrofit2/RequestFactory$Builder;.parseHttpMethodAndPath(Ljava/lang/String;Ljava/lang/String;Z)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/RequestFactory.java;,MethodName,parseHttpMethodAndPath,"    private void parseHttpMethodAndPath(String httpMethod, String value, boolean hasBody) {
      if (this.httpMethod != null) {
        throw methodError(method, ""Only one HTTP method is allowed. Found: %s and %s."",
            this.httpMethod, httpMethod);
      }",http,hyper text transfer protocol
Lretrofit2/RequestBuilder;.addQueryParam(Ljava/lang/String;Ljava/lang/String;Z)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/RequestBuilder.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/ParameterHandler.java;,MethodName,addQueryParam,"  void addQueryParam(String name, @Nullable String value, boolean encoded) {
    if (relativeUrl != null) {
      // Do a one-time combination of the built relative URL and the base URL.
      urlBuilder = baseUrl.newBuilder(relativeUrl);
      if (urlBuilder == null) {",param,parameter
Lretrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest;.responseTypes()V#mResultClass,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest.java;,VariableName,mResultClass,"    assertThat(factory.get(sResultClass, NO_ANNOTATIONS, retrofit).responseType())
        .isEqualTo(String.class);
    Type mResultClass = new TypeToken<Maybe<Result<String>>>() {}.getType();
    assertThat(factory.get(mResultClass, NO_ANNOTATIONS, retrofit).responseType())
        .isEqualTo(String.class);",m,maybe
Lretrofit2/RequestFactoryTest;.nonBodyHttpMethodWithSingleEntity()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RequestFactoryTest.java;,MethodName,nonBodyHttpMethodWithSingleEntity,"
  @Test public void nonBodyHttpMethodWithSingleEntity() {
    class Example {
      @GET(""/"") //
      Call<ResponseBody> method(@Body String o) {
        return null;
      }",http,hyper text transfer protocol
Lretrofit2/converter/jaxb/JaxbConverterFactoryTest$Service;.getXml()Lretrofit2/Call<Lretrofit2/converter/jaxb/Contact;>;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/jaxb/src/test/java/retrofit2/converter/jaxb/JaxbConverterFactoryTest.java;,MethodName,getXml," Call<Contact> call = service.getXml();
    try {
      Response<Contact> response = call.execute();
      response.body();
      fail();",xml,extensible markup language
Lretrofit2/adapter/rxjava/RxJavaCallAdapterFactoryTest;.responseTypes()V#oBodyGeneric,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/RxJavaCallAdapterFactoryTest.java;,VariableName,oBodyGeneric,"    assertThat(factory.get(sBodyWildcard, NO_ANNOTATIONS, retrofit).responseType())
        .isEqualTo(String.class);

    Type oBodyGeneric = new TypeToken<Observable<List<String>>>() {}.getType();
    assertThat(factory.get(oBodyGeneric, NO_ANNOTATIONS, retrofit).responseType())
        .isEqualTo(new TypeToken<List<String>>() {}.getType());",o,observable
Lretrofit2/converter/jackson/JacksonConverterFactoryTest$AnInterfaceSerializer;.serialize(Lretrofit2/converter/jackson/JacksonConverterFactoryTest$AnInterface;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V|Ljava/io/IOException;#jsonGenerator#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/jackson/src/test/java/retrofit2/converter/jackson/JacksonConverterFactoryTest.java;,ParameterName,jsonGenerator,"    @Override public void serialize(AnInterface anInterface, JsonGenerator jsonGenerator,
        SerializerProvider serializerProvider) throws IOException {
      jsonGenerator.writeStartObject();
      jsonGenerator.writeFieldName(""name"");
      jsonGenerator.writeString(anInterface.getName());",json,javascript object notation
Lretrofit2/RequestFactoryTest;.multipartPartMapRejectsOkHttpPartValues()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RequestFactoryTest.java;,MethodName,multipartPartMapRejectsOkHttpPartValues,"  @Test public void multipartPartMapRejectsOkHttpPartValues() {
    class Example {
      @Multipart //
      @POST(""/foo/bar/"") //
      Call<ResponseBody> method(@PartMap Map<String, MultipartBody.Part> parts) {
        return null;
      }",http,hyper text transfer protocol
Lretrofit2/RetrofitTest;.methodAndParameterAnnotationsPassedToRequestBodyConverter()V#methodAnnotationsRef,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RetrofitTest.java;,VariableName,methodAnnotationsRef,"  @Test public void methodAndParameterAnnotationsPassedToRequestBodyConverter() {
    final AtomicReference<Annotation[]> parameterAnnotationsRef = new AtomicReference<>();
    final AtomicReference<Annotation[]> methodAnnotationsRef = new AtomicReference<>();

    class MyConverterFactory extends Converter.Factory {",ref,reference
Lcom/squareup/moshi/JsonAdapter<Lretrofit2/converter/moshi/MoshiRequestBodyConverter;:TT;>;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/moshi/src/main/java/retrofit2/converter/moshi/MoshiRequestBodyConverter.java;,ClassName,JsonAdapter<T>,"final class MoshiRequestBodyConverter<T> implements Converter<T, RequestBody> {
  private static final MediaType MEDIA_TYPE = MediaType.get(""application/json; charset=UTF-8"");

  private final JsonAdapter<T> adapter;

  MoshiRequestBodyConverter(JsonAdapter<T> adapter) {
    this.adapter = adapter;
  }",json,javascript object notation
Lretrofit2/RequestBuilder;.urlBuilder)Lokhttp3/HttpUrl$Builder;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/RequestBuilder.java;,FieldName,urlBuilder,"private static final Pattern PATH_TRAVERSAL = Pattern.compile(""(.*/)?(\\.|%2e|%2E){1,2}(/.*)?"");

  private final String method;

  private final HttpUrl baseUrl;
  private @Nullable String relativeUrl;
  private @Nullable HttpUrl.Builder urlBuilder;

  private final Request.Builder requestBuilder;
  private @Nullable MediaType contentType;",url,uniform resource locator
Lretrofit2/InvocationTest$Example;.postMethod(Ljava/lang/String;Ljava/lang/String;Lokhttp3/RequestBody;)Lretrofit2/Call<Lokhttp3/ResponseBody;>;#p1#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/InvocationTest.java;,ParameterName,p1,"  interface Example {
    @POST(""/{p1}"") //
    Call<ResponseBody> postMethod(
        @Path(""p1"") String p1, @Query(""p2"") String p2, @Body RequestBody body);
  }

  @Test public void invocationObjectOnCallAndRequestTag() {
    Retrofit retrofit = new Retrofit.Builder()
        .baseUrl(""http://example.com/"")
        .callFactory(new OkHttpClient())
        .build();",p,post
Lcom/example/retrofit/SimpleService;.API_URL)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/samples/src/main/java/com/example/retrofit/SimpleService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/samples/src/main/java/com/example/retrofit/SimpleMockService.java;,FieldName,API_URL,"public final class SimpleService {
  public static final String API_URL = ""https://api.github.com"";

  public static class Contributor {
    public final String login;
    public final int contributions;",api,application programming interface
Lretrofit2/InvocationTest$Example;.postMethod(Ljava/lang/String;Ljava/lang/String;Lokhttp3/RequestBody;)Lretrofit2/Call<Lokhttp3/ResponseBody;>;#p2#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/InvocationTest.java;,ParameterName,p2,"  interface Example {
    @POST(""/{p1}"") //
    Call<ResponseBody> postMethod(
        @Path(""p1"") String p1, @Query(""p2"") String p2, @Body RequestBody body);
  }",p,post
Ljava/lang/Integer;.MAX_VALUE)I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-mock/src/test/java/retrofit2/mock/NetworkBehaviorTest.java;,VariableName,MAX_VALUE,"    behavior.setVariancePercent(40);
    long lowerBound = Integer.MAX_VALUE;
    long upperBound = Integer.MIN_VALUE;
    for (int i = 0; i < 100000; i++) {
      long delay = behavior.calculateDelay(MILLISECONDS);",max,maximum
Lretrofit2/RequestFactoryTest;.pathParamNonPathParamAndTypedBytes()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RequestFactoryTest.java;,MethodName,pathParamNonPathParamAndTypedBytes,"  @Test public void pathParamNonPathParamAndTypedBytes() {
    class Example {
      @PUT(""/{a}"") //
      Call<ResponseBody> method(@Path(""a"") int a, @Path(""b"") int b, @Body int c) {
        return null;
      }
    }",param,parameter
Ljava/util/concurrent/TimeUnit;.toMillis(J)J,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-mock/src/test/java/retrofit2/mock/BehaviorDelegateTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-mock/src/main/java/retrofit2/mock/NetworkBehavior.java;,MethodName,toMillis,"      @Override public void onFailure(Call<String> call, Throwable t) {
        tookMs.set(TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - startNanos));
        failureRef.set(t);
        latch.countDown();
      }
    });",millis,parameter
Lretrofit2/RequestFactoryTest$18175$Example;.method(Ljava/lang/String;Ljava/lang/String;)Lretrofit2/Call<Lokhttp3/ResponseBody;>;#o1#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RequestFactoryTest.java;,ParameterName,o1,"
  @Test public void twoBodies() {
    class Example {
      @PUT(""/"") //
      Call<ResponseBody> method(@Body String o1, @Body String o2) {
        return null;
      }
    }",o,method
Lretrofit2/RequestFactoryTest;.invalidPathParam()V|Ljava/lang/Exception;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RequestFactoryTest.java;,MethodName,invalidPathParam,"  @Test public void invalidPathParam() throws Exception {
    class Example {
      @GET(""/"") //
      Call<ResponseBody> method(@Path(""hey!"") String thing) {
        return null;
      }",param,parameter
Lcom/example/retrofit/Crawler$2336;.onResponse(Lretrofit2/Call<Lcom/example/retrofit/Crawler$Page;>;Lretrofit2/Response<Lcom/example/retrofit/Crawler$Page;>;)V#0#0#linkUrl,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/samples/src/main/java/com/example/retrofit/Crawler.java;,VariableName,linkUrl,"        // Enqueue its links for visiting.
        for (String link : page.links) {
          HttpUrl linkUrl = base.resolve(link);
          if (linkUrl != null && fetchedUrls.add(linkUrl)) {
            crawlPage(linkUrl);
          }
        }",url,uniform resource locator
Lretrofit2/RequestFactoryTest;.bodyWithPathParams()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RequestFactoryTest.java;,MethodName,bodyWithPathParams,"  @Test public void bodyWithPathParams() {
    class Example {
      @POST(""/foo/bar/{ping}/{kit}/"") //
      Call<ResponseBody> method(@Path(""ping"") String ping, @Body RequestBody body, @Path(""kit"") String kit) {
        return null;
      }",params,parameters
Lretrofit2/Utils$GenericArrayTypeImpl;.(Ljava/lang/reflect/Type;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/Utils.java;,MethodName,GenericArrayTypeImpl,"  private static final class GenericArrayTypeImpl implements GenericArrayType {
    private final Type componentType;

    GenericArrayTypeImpl(Type componentType) {
      this.componentType = componentType;
    }",impl,implementation
Lretrofit2/converter/protobuf/PhoneProtos$Phone$Builder;.getNumber()Ljava/lang/String;#ref,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/protobuf/src/test/java/retrofit2/converter/protobuf/PhoneProtos.java;,VariableName,ref,"    public com.google.protobuf.ByteString
        getNumberBytes() {
      java.lang.Object ref = number_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);",ref,reference
Lretrofit2/mock/BehaviorDelegateTest;.syncFailureThrowsAfterDelay()V#0#1#tookMs,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-mock/src/test/java/retrofit2/mock/BehaviorDelegateTest.java;,VariableName,tookMs,"    long startNanos = System.nanoTime();
    Response<String> response = call.execute();
    long tookMs = TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - startNanos);

    assertThat(response.body()).isEqualTo(""Response!"");
    assertThat(tookMs).isGreaterThanOrEqualTo(100);",ms,milliseconds
Lretrofit2/adapter/rxjava2/RecordingMaybeObserver;.onError(Ljava/lang/Throwable;)V#e#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/RecordingMaybeObserver.java;,ParameterName,e,"  @Override public void onError(Throwable e) {
    events.add(Notification.<T>createOnError(e));
  }",e,error
Lcom/fasterxml/jackson/databind/deser/std/StdDeserializer<Lretrofit2/converter/jackson/JacksonConverterFactoryTest$AnInterface;>;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/jackson/src/test/java/retrofit2/converter/jackson/JacksonConverterFactoryTest.java;,ClassName,StdDeserializer<AnInterface>,"  static class AnInterfaceDeserializer extends StdDeserializer<AnInterface> {
    AnInterfaceDeserializer() {
      super(AnInterface.class);
    }",std,standard
Lretrofit2/adapter/rxjava2/SingleThrowingTest;.bodyThrowingInOnErrorDeliveredToPlugin()V#errorRef,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/SingleThrowingTest.java;,VariableName,errorRef,"    RecordingSingleObserver<String> observer = subscriberRule.create();
    final AtomicReference<Throwable> errorRef = new AtomicReference<>();
    final RuntimeException e = new RuntimeException();
    service.body().subscribe(new ForwardingObserver<String>(observer) {
      @Override public void onError(Throwable throwable) {
        if (!errorRef.compareAndSet(null, throwable)) {",ref,reference
Lretrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest;.rawResponseTypeThrows()V#0#1#e,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest.java;,VariableName,e,"
    Type flowableType = new TypeToken<Flowable>() {}.getType();
    try {
      factory.get(flowableType, NO_ANNOTATIONS, retrofit);
      fail();
    } catch (IllegalStateException e) {
      assertThat(e).hasMessage(
          ""Flowable return type must be parameterized as Flowable<Foo> or Flowable<? extends Foo>"");
    }
  }",e,exception
Lretrofit2/converter/moshi/MoshiConverterFactory;&Lcom/squareup/moshi/JsonAdapter<!Lcom/squareup/moshi/JsonAdapter;{0}*4269;>;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/moshi/src/main/java/retrofit2/converter/moshi/MoshiConverterFactory.java;,ClassName,JsonAdapter<>,"  public Converter<ResponseBody, ?> responseBodyConverter(Type type, Annotation[] annotations,
      Retrofit retrofit) {
    JsonAdapter<?> adapter = moshi.adapter(type, jsonAnnotations(annotations));
    if (lenient) {
      adapter = adapter.lenient();
    }",json,javascript object notation
Lokio/ByteString;.decodeHex(Ljava/lang/String;)Lokio/ByteString;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/moshi/src/main/java/retrofit2/converter/moshi/MoshiResponseBodyConverter.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/moshi/src/test/java/retrofit2/converter/moshi/MoshiConverterFactoryTest.java;,MethodName,decodeHex,"final class MoshiResponseBodyConverter<T> implements Converter<ResponseBody, T> {
  private static final ByteString UTF8_BOM = ByteString.decodeHex(""EFBBBF"");

  private final JsonAdapter<T> adapter;

  MoshiResponseBodyConverter(JsonAdapter<T> adapter) {
    this.adapter = adapter;",hex,hexadecimal
Lretrofit2/Utils;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/ExecutorCallAdapterFactory.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/RequestFactory.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/DefaultCallAdapterFactory.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/Retrofit.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/OkHttpCall.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/Converter.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/ServiceMethod.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/Utils.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/BuiltInConverters.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/HttpServiceMethod.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/CallAdapter.java;,ClassName,Utils,"    final Type responseType = Utils.getCallResponseType(returnType);
    return new CallAdapter<Object, Call<?>>() {
      @Override public Type responseType() {
        return responseType;
      }",utils,utilities
Lretrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest;.responseTypes()V#oBodyWildcard,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest.java;,VariableName,oBodyWildcard,"    Type oBodyWildcard = new TypeToken<Observable<? extends String>>() {}.getType();
    assertThat(factory.get(oBodyWildcard, NO_ANNOTATIONS, retrofit).responseType())
        .isEqualTo(String.class);
    Type sBodyWildcard = new TypeToken<Single<? extends String>>() {}.getType();
    assertThat(factory.get(sBodyWildcard, NO_ANNOTATIONS, retrofit).responseType())
        .isEqualTo(String.class);",o,observable
Lcom/example/retrofit/JsonAndXmlConverters$QualifiedTypeConverterFactory;.(Lretrofit2/Converter$Factory;Lretrofit2/Converter$Factory;)V#xmlFactory#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/samples/src/main/java/com/example/retrofit/JsonAndXmlConverters.java;,ParameterName,xmlFactory,"    private final Converter.Factory jsonFactory;
    private final Converter.Factory xmlFactory;

    QualifiedTypeConverterFactory(Converter.Factory jsonFactory, Converter.Factory xmlFactory) {
      this.jsonFactory = jsonFactory;
      this.xmlFactory = xmlFactory;
    }",xml,extensible markup language
Lretrofit2/RequestFactory$Builder;.build()Lretrofit2/RequestFactory;#1#p,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/RequestFactory.java;,VariableName,p,"    List<Object> argumentList = new ArrayList<>(argumentCount);
    for (int p = 0; p < argumentCount; p++) {
      argumentList.add(args[p]);
      handlers[p].apply(requestBuilder, args[p]);
    }",p,parameter
Lretrofit2/converter/jaxb/JaxbResponseConverter;.xmlInputFactory)Ljavax/xml/stream/XMLInputFactory;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/jaxb/src/main/java/retrofit2/converter/jaxb/JaxbResponseConverter.java;,FieldName,xmlInputFactory,"final class JaxbResponseConverter<T> implements Converter<ResponseBody, T> {
  final XMLInputFactory xmlInputFactory = XMLInputFactory.newInstance();
  final JAXBContext context;
  final Class<T> type;

  JaxbResponseConverter(JAXBContext context, Class<T> type) {",xml,extensible markup language
Lretrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest;.responseTypes()V#mBodyWildcard,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest.java;,VariableName,mBodyWildcard,"    assertThat(factory.get(sBodyWildcard, NO_ANNOTATIONS, retrofit).responseType())
        .isEqualTo(String.class);
    Type mBodyWildcard = new TypeToken<Maybe<? extends String>>() {}.getType();
    assertThat(factory.get(mBodyWildcard, NO_ANNOTATIONS, retrofit).responseType())
        .isEqualTo(String.class);",m,maybe
Lretrofit2/Utils$ParameterizedTypeImpl;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/Utils.java;,ClassName,ParameterizedTypeImpl," private static final class ParameterizedTypeImpl implements ParameterizedType {
    private final Type ownerType;
    private final Type rawType;
    private final Type[] typeArguments;
",impl,implementation
Lretrofit2/RetrofitTest;.responseTypeCannotBeOkHttpResponse()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RetrofitTest.java;,MethodName,responseTypeCannotBeOkHttpResponse,"  @Test public void responseTypeCannotBeOkHttpResponse() {
    Retrofit retrofit = new Retrofit.Builder()
        .baseUrl(server.url(""/""))
        .build();
    CallMethod service = retrofit.create(CallMethod.class);",http,hyper text transfer protocol
Lretrofit2/RequestFactoryTest;.multipartOkHttpPartWithFilename()V|Ljava/io/IOException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RequestFactoryTest.java;,MethodName,multipartOkHttpPartWithFilename,"  @Test public void multipartOkHttpPartWithFilename() throws IOException {
    class Example {
      @Multipart //
      @POST(""/foo/bar/"") //
      Call<ResponseBody> method(@Part MultipartBody.Part part) {
        return null;
      }
    }",http,hyper text transfer protocol
Lretrofit2/converter/moshi/MoshiConverterFactoryTest$Adapters;.write(Lcom/squareup/moshi/JsonWriter;Lretrofit2/converter/moshi/MoshiConverterFactoryTest$AnInterface;)V|Ljava/io/IOException;#jsonWriter#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/moshi/src/test/java/retrofit2/converter/moshi/MoshiConverterFactoryTest.java;,ParameterName,jsonWriter,"  static class Adapters {
    @ToJson public void write(JsonWriter jsonWriter, AnInterface anInterface) throws IOException {
      jsonWriter.beginObject();
      jsonWriter.name(""name"").value(anInterface.getName());
      jsonWriter.endObject();
    }",json,javascript object notation
Lcom/example/retrofit/ErrorHandlingAdapter;.main([Ljava/lang/String;)V#ip,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/samples/src/main/java/com/example/retrofit/ErrorHandlingAdapter.java;,VariableName,ip,"    HttpBinService service = retrofit.create(HttpBinService.class);
    MyCall<Ip> ip = service.getIp();
    ip.enqueue(new MyCallback<Ip>() {
      @Override public void success(Response<Ip> response) {
        System.out.println(""SUCCESS! "" + response.body().origin);
      }",ip,internet protocol
Lretrofit2/adapter/rxjava/RxJavaPluginsResetRule;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/SingleThrowingTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/ObservableTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/AsyncTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/RxJavaPluginsResetRule.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/CompletableThrowingSafeSubscriberTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/SingleTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/CompletableTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/ObservableThrowingTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/ObservableThrowingSafeSubscriberTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/CompletableThrowingTest.java;,ClassName,RxJavaPluginsResetRule,"public final class SingleThrowingTest {
  @Rule public final MockWebServer server = new MockWebServer();
  @Rule public final TestRule resetRule = new RxJavaPluginsResetRule();
  @Rule public final RecordingSubscriber.Rule subscriberRule = new RecordingSubscriber.Rule();",rx,reactive extension
Lretrofit2/converter/wire/WireConverterFactory;.responseBodyConverter(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/Converter<Lokhttp3/ResponseBody;*>;#c,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/wire/src/main/java/retrofit2/converter/wire/WireConverterFactory.java;,VariableName,c,"    if (!(type instanceof Class<?>)) {
      return null;
    }
    Class<?> c = (Class<?>) type;
    if (!Message.class.isAssignableFrom(c)) {
      return null;
    }",c,class
Lretrofit2/converter/protobuf/ProtoResponseBodyConverter;.(Lcom/google/protobuf/Parser<TT;>;Lcom/google/protobuf/ExtensionRegistryLite;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/protobuf/src/main/java/retrofit2/converter/protobuf/ProtoResponseBodyConverter.java;,MethodName,ProtoResponseBodyConverter,"  private final Parser<T> parser;
  private final @Nullable ExtensionRegistryLite registry;

  ProtoResponseBodyConverter(Parser<T> parser, @Nullable ExtensionRegistryLite registry) {
    this.parser = parser;
    this.registry = registry;
  }",proto,protocol
Lretrofit2/converter/simplexml/SimpleXmlRequestBodyConverter;.(Lorg/simpleframework/xml/Serializer;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/simplexml/src/main/java/retrofit2/converter/simplexml/SimpleXmlRequestBodyConverter.java;,MethodName,SimpleXmlRequestBodyConverter,"private static final MediaType MEDIA_TYPE = MediaType.get(""application/xml; charset=UTF-8"");
  private static final String CHARSET = ""UTF-8"";

  private final Serializer serializer;

  SimpleXmlRequestBodyConverter(Serializer serializer) {
    this.serializer = serializer;
  }",xml,extensible markup language
Lretrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest;.responseTypes()V#oResultClass,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest.java;,VariableName,oResultClass,"    Type oResultClass = new TypeToken<Observable<Result<String>>>() {}.getType();
    assertThat(factory.get(oResultClass, NO_ANNOTATIONS, retrofit).responseType())
        .isEqualTo(String.class);
    Type sResultClass = new TypeToken<Single<Result<String>>>() {}.getType();",o,observable
Lretrofit2/RequestFactory$Builder;.parseMethodAnnotation(Ljava/lang/annotation/Annotation;)V#0#http,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/RequestFactory.java;,VariableName,http,"        parseHttpMethodAndPath(""OPTIONS"", ((OPTIONS) annotation).value(), false);
      } else if (annotation instanceof HTTP) {
        HTTP http = (HTTP) annotation;
        parseHttpMethodAndPath(http.method(), http.path(), http.hasBody());
      } else if (annotation instanceof retrofit2.http.Headers) {",http,hyper text transfer protocol
Lretrofit2/RetrofitTest;.baseHttpUrlPropagated()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RetrofitTest.java;,MethodName,baseHttpUrlPropagated,"  @Test public void baseHttpUrlPropagated() {
    HttpUrl url = HttpUrl.get(""http://example.com/"");
    Retrofit retrofit = new Retrofit.Builder()
        .baseUrl(url)
        .build();
    assertThat(retrofit.baseUrl()).isSameAs(url);
  }",url,uniform resource locator
Lretrofit2/converter/scalars/ScalarsConverterPrimitivesFactoryTest$DirectCallIOException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/scalars/src/test/java/retrofit2/converter/scalars/ScalarsConverterPrimitivesFactoryTest.java;,ClassName,DirectCallIOException,"  static class DirectCallIOException extends RuntimeException {
    DirectCallIOException(String message, IOException e) {
      super(message, e);
    }
  }",io,input output
Ljavax/xml/bind/JAXBContext;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/jaxb/src/test/java/retrofit2/converter/jaxb/JaxbConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/jaxb/src/main/java/retrofit2/converter/jaxb/JaxbConverterFactory.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/jaxb/src/main/java/retrofit2/converter/jaxb/JaxbResponseConverter.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/jaxb/src/main/java/retrofit2/converter/jaxb/JaxbRequestConverter.java;,ClassName,JAXBContext,"  @Test public void userSuppliedJaxbContext() throws Exception {
    JAXBContext context = JAXBContext.newInstance(Contact.class);
    JaxbConverterFactory factory = JaxbConverterFactory.create(context);
    Retrofit retrofit = new Retrofit.Builder()
        .baseUrl(server.url(""/""))
        .addConverterFactory(factory)
        .build();",jaxb,java architecture for xml binding
Lretrofit2/RequestFactoryAndroidTest;.getWithAndroidUriUrlAbsolute()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RequestFactoryAndroidTest.java;,MethodName,getWithAndroidUriUrlAbsolute,"  @Test public void getWithAndroidUriUrlAbsolute() {
    class Example {
      @GET
      Call<ResponseBody> method(@Url Uri url) {
        return null;
      }
    }",uri,uniform resource identifier
Lretrofit2/converter/gson/GsonResponseBodyConverter;.convert(Lokhttp3/ResponseBody;)TT;|Ljava/io/IOException;#jsonReader,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/gson/src/main/java/retrofit2/converter/gson/GsonResponseBodyConverter.java;,VariableName,jsonReader,"@Override public T convert(ResponseBody value) throws IOException {
    JsonReader jsonReader = gson.newJsonReader(value.charStream());
    try {
      T result = adapter.read(jsonReader);
      if (jsonReader.peek() != JsonToken.END_DOCUMENT) {
        throw new JsonIOException(""JSON document was not fully consumed."");",json,javascript object notation
Lcom/google/protobuf/ByteString;.toStringUtf8()Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/protobuf/src/test/java/retrofit2/converter/protobuf/PhoneProtos.java;,MethodName,toStringUtf8,"      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          number_ = s;
        }",utf,unicode transformation format
Lretrofit2/RequestBuilder;.HEX_DIGITS)[C,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/RequestBuilder.java;,FieldName,HEX_DIGITS,"  private static final char[] HEX_DIGITS =
      { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F' };
  private static final String PATH_SEGMENT_ALWAYS_ENCODE_SET = "" \""<>^`{}|\\?#"";
",hex,hexadecimal
Lretrofit2/converter/moshi/MoshiConverterFactoryTest;.nonUtf8BomIsNotSkipped()V|Ljava/io/IOException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/moshi/src/test/java/retrofit2/converter/moshi/MoshiConverterFactoryTest.java;,MethodName,nonUtf8BomIsNotSkipped,"@Test public void nonUtf8BomIsNotSkipped() throws IOException {
    Buffer responseBody = new Buffer()
        .write(ByteString.decodeHex(""FEFF""))
        .writeString(""{\""theName\"":\""value\""}"", Charset.forName(""UTF-16""));
    MockResponse malformedResponse = new MockResponse().setBody(responseBody);",utf,unicode transformation format
Lretrofit2/RequestFactoryTest$5691$Example;.method(Ljava/lang/Object;)Lretrofit2/Call<Lokhttp3/ResponseBody;>;#o#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RequestFactoryTest.java;,ParameterName,o,"  @Test public void multipleParameterAnnotationsNotAllowed() throws Exception {
    class Example {
      @GET(""/"") //
      Call<ResponseBody> method(@Body @Query(""nope"") String o) {
        return null;
      }
    }",o,object
Lretrofit2/mock/BehaviorDelegateTest;.syncFailureThrownAfterDelay()V#startNanos,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-mock/src/test/java/retrofit2/mock/BehaviorDelegateTest.java;,VariableName,startNanos,"behavior.setFailurePercent(100);

    Call<String> call = service.response();

    long startNanos = System.nanoTime();
    try {
      call.execute();
      fail();",nanos,nanoseconds
Lretrofit2/RequestFactory$Builder;.parseParameterAnnotation(ILjava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Ljava/lang/annotation/Annotation;)Lretrofit2/ParameterHandler<*>;#p#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/RequestFactory.java;,ParameterName,p," private ParameterHandler<?> parseParameter(
        int p, Type parameterType, @Nullable Annotation[] annotations) {
      ParameterHandler<?> result = null;
      if (annotations != null) {
        for (Annotation annotation : annotations) {",p,path
Lretrofit2/adapter/rxjava2/RxJava2CallAdapter<Lretrofit2/adapter/rxjava2/RxJava2CallAdapter;:TR;>;.isAsync)Z,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/main/java/retrofit2/adapter/rxjava2/RxJava2CallAdapter.java;,VariableName,isAsync,"@Override public Object adapt(Call<R> call) {
    Observable<Response<R>> responseObservable = isAsync
        ? new CallEnqueueObservable<>(call)
        : new CallExecuteObservable<>(call);",async,asynchrony
Lretrofit2/RequestBuilder;.setRelativeUrl(Ljava/lang/Object;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/RequestBuilder.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/ParameterHandler.java;,MethodName,setRelativeUrl,"  void setRelativeUrl(Object relativeUrl) {
    this.relativeUrl = relativeUrl.toString();
  }",url,uniform resource locator
Lretrofit2/Utils;.getParameterUpperBound(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;#paramType,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/Utils.java;,VariableName,paramType,"      throw new IllegalArgumentException(
          ""Index "" + index + "" not in range [0,"" + types.length + "") for "" + type);
    }
    Type paramType = types[index];
    if (paramType instanceof WildcardType) {
      return ((WildcardType) paramType).getUpperBounds()[0];
    }",param,parameter
Lretrofit2/RequestFactoryTest;.queryParamMapsConvertedToNullShouldError()V|Ljava/lang/Exception;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RequestFactoryTest.java;,MethodName,queryParamMapsConvertedToNullShouldError,"  @Test public void queryParamMapsConvertedToNullShouldError() throws Exception {
    class Example {
      @GET(""/query"") Call<ResponseBody> queryPath(@QueryMap Map<String, String> a) {
        return null;
      }
    }",param,parameter
Lretrofit2/RequestFactory$Builder;.relativeUrlParamNames)Ljava/util/Set<Ljava/lang/String;>;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/RequestFactory.java;,FieldName,relativeUrlParamNames,"    String relativeUrl;
    Headers headers;
    MediaType contentType;
    Set<String> relativeUrlParamNames;
    ParameterHandler<?>[] parameterHandlers;",url,uniform resource locator
Lcom/example/retrofit/SimpleMockService$MockGitHub;.addContributor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V#repoContributors,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/samples/src/main/java/com/example/retrofit/SimpleMockService.java;,VariableName,repoContributors,"    @Override public Call<List<Contributor>> contributors(String owner, String repo) {
      List<Contributor> response = Collections.emptyList();
      Map<String, List<Contributor>> repoContributors = ownerRepoContributors.get(owner);
      if (repoContributors != null) {
        List<Contributor> contributors = repoContributors.get(repo);
        if (contributors != null) {",repo,response
Lcom/google/gson/Gson;.newJsonReader(Ljava/io/Reader;)Lcom/google/gson/stream/JsonReader;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/gson/src/main/java/retrofit2/converter/gson/GsonResponseBodyConverter.java;,MethodName,newJsonReader,"@Override public T convert(ResponseBody value) throws IOException {
    JsonReader jsonReader = gson.newJsonReader(value.charStream());
    try {
      T result = adapter.read(jsonReader);
      if (jsonReader.peek() != JsonToken.END_DOCUMENT) {",json,javascript object notation
Lretrofit2/mock/NetworkBehavior;.delayMs)J,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-mock/src/main/java/retrofit2/mock/NetworkBehavior.java;,FieldName,delayMs,"  private final Random random;

  private volatile long delayMs = DEFAULT_DELAY_MS;
  private volatile int variancePercent = DEFAULT_VARIANCE_PERCENT;
  private volatile int failurePercent = DEFAULT_FAILURE_PERCENT;
  private volatile Throwable failureException;",ms,millisecond
Lcom/squareup/moshi/JsonAdapter<Lcom/squareup/moshi/JsonAdapter;{0}*>;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/moshi/src/main/java/retrofit2/converter/moshi/MoshiConverterFactory.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/moshi/src/test/java/retrofit2/converter/moshi/MoshiConverterFactoryTest.java;,ClassName,JsonAdapter<?>,"  @Override
  public Converter<ResponseBody, ?> responseBodyConverter(Type type, Annotation[] annotations,
      Retrofit retrofit) {
    JsonAdapter<?> adapter = moshi.adapter(type, jsonAnnotations(annotations));
    if (lenient) {
      adapter = adapter.lenient();
    }",json,javascript object notation
Lretrofit2/RequestFactoryTest;.headerParamList()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RequestFactoryTest.java;,MethodName,headerParamList,"  @Test public void headerParamList() {
    class Example {
      @GET(""/foo/bar/"") //
      Call<ResponseBody> method(@Header(""foo"") List<String> kit) {
        return null;
      }
    }",param,parameter
Lcom/google/gson/Gson;.newJsonWriter(Ljava/io/Writer;)Lcom/google/gson/stream/JsonWriter;|Ljava/io/IOException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/gson/src/main/java/retrofit2/converter/gson/GsonRequestBodyConverter.java;,MethodName,newJsonWriter,"  @Override public RequestBody convert(T value) throws IOException {
    Buffer buffer = new Buffer();
    Writer writer = new OutputStreamWriter(buffer.outputStream(), UTF_8);
    JsonWriter jsonWriter = gson.newJsonWriter(writer);
    adapter.write(jsonWriter, value);
    jsonWriter.close();
    return RequestBody.create(MEDIA_TYPE, buffer.readByteString());",json,javascript object notation
Lretrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest;.responseTypes()V#oResponseWildcard,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest.java;,VariableName,oResponseWildcard,"Type oResponseWildcard = new TypeToken<Observable<Response<? extends String>>>() {}.getType();
    assertThat(factory.get(oResponseWildcard, NO_ANNOTATIONS, retrofit).responseType())
        .isEqualTo(String.class);
    Type sResponseWildcard = new TypeToken<Single<Response<? extends String>>>() {}.getType();",o,observable
Lcom/google/protobuf/ByteString;.copyFromUtf8(Ljava/lang/String;)Lcom/google/protobuf/ByteString;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/protobuf/src/test/java/retrofit2/converter/protobuf/PhoneProtos.java;,MethodName,copyFromUtf8,"if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        number_ = b;
        return b;",utf,unicode transformation format
Lretrofit2/Utils;.equals(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Z#0#pb,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/Utils.java;,VariableName,pb,"} else if (a instanceof ParameterizedType) {
      if (!(b instanceof ParameterizedType)) return false;
      ParameterizedType pa = (ParameterizedType) a;
      ParameterizedType pb = (ParameterizedType) b;
      Object ownerA = pa.getOwnerType();
      Object ownerB = pb.getOwnerType();",pb,parametrized b
Lokio/Buffer;.writeUtf8(Ljava/lang/String;)Lokio/Buffer;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/moshi/src/test/java/retrofit2/converter/moshi/MoshiConverterFactoryTest.java;,MethodName,writeUtf8,"  @Test public void utf8BomSkipped() throws IOException {
    Buffer responseBody = new Buffer()
        .write(ByteString.decodeHex(""EFBBBF""))
        .writeUtf8(""{\""theName\"":\""value\""}"");
    MockResponse malformedResponse = new MockResponse().setBody(responseBody);
    server.enqueue(malformedResponse);",utf,unicode transformation format
Lretrofit2/RetrofitTest;.baseHttpUrlPropagated()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RetrofitTest.java;,MethodName,baseHttpUrlPropagated,"  @Test public void baseHttpUrlPropagated() {
    HttpUrl url = HttpUrl.get(""http://example.com/"");
    Retrofit retrofit = new Retrofit.Builder()
        .baseUrl(url)
        .build();",http,hyper text transfer protocol
Lretrofit2/RequestFactory$Builder;.PARAM_URL_REGEX)Ljava/util/regex/Pattern;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/RequestFactory.java;,FieldName,PARAM_URL_REGEX,"  static final class Builder {
    // Upper and lower characters, digits, underscores, and hyphens, starting with a character.
    private static final String PARAM = ""[a-zA-Z][a-zA-Z0-9_-]*"";
    private static final Pattern PARAM_URL_REGEX = Pattern.compile(""\\{("" + PARAM + "")\\}"");
    private static final Pattern PARAM_NAME_REGEX = Pattern.compile(PARAM);

    final Retrofit retrofit;",url,uniform resource locator
Lretrofit2/RequestFactoryTest;.pathParamRequired()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RequestFactoryTest.java;,MethodName,pathParamRequired,"@Test public void pathParamRequired() {
    class Example {
      @GET(""/foo/bar/{ping}/"") //
      Call<ResponseBody> method(@Path(""ping"") String ping) {
        return null;
      }
    }",param,parameter
Lcom/squareup/moshi/JsonAdapter<Lretrofit2/converter/moshi/MoshiResponseBodyConverter;:TT;>;.fromJson(Lcom/squareup/moshi/JsonReader;)TT;|Ljava/io/IOException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/moshi/src/main/java/retrofit2/converter/moshi/MoshiResponseBodyConverter.java;,MethodName,fromJson,"      if (source.rangeEquals(0, UTF8_BOM)) {
        source.skip(UTF8_BOM.size());
      }
      JsonReader reader = JsonReader.of(source);
      T result = adapter.fromJson(reader);
      if (reader.peek() != JsonReader.Token.END_DOCUMENT) {
        throw new JsonDataException(""JSON document was not fully consumed."");
      }",json,javascript object notation
Lretrofit2/converter/protobuf/PhoneProtos$Phone;.getNumberBytes()Lcom/google/protobuf/ByteString;#0#b,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/protobuf/src/test/java/retrofit2/converter/protobuf/PhoneProtos.java;,VariableName,b,"    public com.google.protobuf.ByteString
        getNumberBytes() {
      java.lang.Object ref = number_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        number_ = b;
        return b;",b,bytes
Lcom/example/retrofit/ErrorHandlingAdapter$HttpBinService;.getIp()Lcom/example/retrofit/ErrorHandlingAdapter$MyCall<Lcom/example/retrofit/ErrorHandlingAdapter$Ip;>;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/samples/src/main/java/com/example/retrofit/ErrorHandlingAdapter.java;,MethodName,getIp,"  interface HttpBinService {
    @GET(""/ip"")
    MyCall<Ip> getIp();
  }",ip,internet protocol
Ljava/lang/Integer;.MIN_VALUE)I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-mock/src/test/java/retrofit2/mock/NetworkBehaviorTest.java;,VariableName,MIN_VALUE," behavior.setVariancePercent(40);
    long lowerBound = Integer.MAX_VALUE;
    long upperBound = Integer.MIN_VALUE;
    for (int i = 0; i < 100000; i++) {
      long delay = behavior.calculateDelay(MILLISECONDS);
      if (delay > upperBound) {",min,minimum
Lretrofit2/Retrofit$Builder;.baseUrl(Lokhttp3/HttpUrl;)Lretrofit2/Retrofit$Builder;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/CompletableThrowingTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/gson/src/test/java/retrofit2/converter/gson/GsonConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/ObservableThrowingTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/CompletableWithSchedulerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/CancelDisposeTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/samples/src/main/java/com/example/retrofit/JsonQueryParameters.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/samples/src/main/java/com/example/retrofit/JsonAndXmlConverters.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/ObservableTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/CallTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RetrofitTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/samples/src/main/java/com/example/retrofit/DeserializeErrorBody.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/MaybeWithSchedulerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/SingleWithSchedulerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/KotlinUnitTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/guava/src/test/java/retrofit2/adapter/guava/GuavaCallAdapterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/guava/src/test/java/retrofit2/adapter/guava/ListenableFutureTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/AsyncTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/protobuf/src/test/java/retrofit2/converter/protobuf/ProtoConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/scalars/src/test/java/retrofit2/converter/scalars/ScalarsConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/simplexml/src/test/java/retrofit2/converter/simplexml/SimpleXmlConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/FlowableWithSchedulerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/java8/src/test/java/retrofit2/adapter/java8/CompletableFutureTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/CompletableTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/ObservableThrowingTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/jackson/src/test/java/retrofit2/converter/jackson/JacksonConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/AsyncTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/moshi/src/test/java/retrofit2/converter/moshi/MoshiConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/wire/src/test/java/retrofit2/converter/wire/WireConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/java8/src/test/java/retrofit/converter/java8/Java8OptionalConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/scala/src/test/java/retrofit2/adapter/scala/ScalaCallAdapterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/guava/src/test/java/retrofit/converter/guava/GuavaOptionalConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/FlowableTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/MaybeThrowingTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/CancelDisposeTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/SingleThrowingTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/scalars/src/test/java/retrofit2/converter/scalars/ScalarsConverterPrimitivesFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/Retrofit.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/OptionalConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/CompletableThrowingSafeSubscriberTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/CancelDisposeTestSync.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/CompletableTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/ObservableTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/samples/src/main/java/com/example/retrofit/ChunkingConverter.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/samples/src/main/java/com/example/retrofit/Crawler.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/SingleTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/jaxb/src/test/java/retrofit2/converter/jaxb/JaxbConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/ObservableWithSchedulerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/CompletableWithSchedulerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/SingleThrowingTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/java8/src/test/java/retrofit2/adapter/java8/Java8CallAdapterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/MaybeTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/samples/src/main/java/com/example/retrofit/AnnotatedConverters.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/scala/src/test/java/retrofit2/adapter/scala/FutureTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/CompletableFutureCallAdapterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/ObservableThrowingSafeSubscriberTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/ObservableWithSchedulerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/CompletableThrowingTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/CompletableFutureTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/SingleTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/SingleWithSchedulerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/FlowableThrowingTest.java;,MethodName,baseUrl,"  @Before public void setUp() {
    Retrofit retrofit = new Retrofit.Builder()
        .baseUrl(server.url(""/""))
        .addCallAdapterFactory(RxJava2CallAdapterFactory.create())
        .build();
    service = retrofit.create(Service.class);
  }",url,uniform resource locator
Lretrofit2/converter/jaxb/JaxbConverterFactoryTest;.externalDtd()V|Ljava/lang/Exception;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/jaxb/src/test/java/retrofit2/converter/jaxb/JaxbConverterFactoryTest.java;,MethodName,externalDtd," @Test public void externalDtd() throws Exception {
    server.enqueue(new MockResponse()
        .setBody(""""
            + ""<?xml version=\""1.0\"" ?>""
            + ""<!DOCTYPE contact SYSTEM \"""" + server.url(""/contact.dtd"") + ""\"">""
            + ""<contact>""
            + ""<name>&secret;</name>""
            + ""</contact>""));",dtd,document type definition
Lretrofit2/converter/moshi/MoshiConverterFactoryTest;.nonUtf8BomIsNotSkipped()V|Ljava/io/IOException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/moshi/src/test/java/retrofit2/converter/moshi/MoshiConverterFactoryTest.java;,MethodName,nonUtf8BomIsNotSkipped,"  @Test public void nonUtf8BomIsNotSkipped() throws IOException {
    Buffer responseBody = new Buffer()
        .write(ByteString.decodeHex(""FEFF""))
        .writeString(""{\""theName\"":\""value\""}"", Charset.forName(""UTF-16""));
    MockResponse malformedResponse = new MockResponse().setBody(responseBody);
    server.enqueue(malformedResponse);",bom,browser object model
Lretrofit2/converter/jaxb/JaxbConverterFactoryTest;.userSuppliedJaxbContext()V|Ljava/lang/Exception;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/jaxb/src/test/java/retrofit2/converter/jaxb/JaxbConverterFactoryTest.java;,MethodName,userSuppliedJaxbContext," @Test public void userSuppliedJaxbContext() throws Exception {
    JAXBContext context = JAXBContext.newInstance(Contact.class);
    JaxbConverterFactory factory = JaxbConverterFactory.create(context);
    Retrofit retrofit = new Retrofit.Builder()
        .baseUrl(server.url(""/""))
        .addConverterFactory(factory)
        .build();",jaxb,java architecture for xml binding
Lretrofit2/RequestFactoryTest;.multipartOkHttpPart()V|Ljava/io/IOException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RequestFactoryTest.java;,MethodName,multipartOkHttpPart,"  @Test public void multipartOkHttpPart() throws IOException {
    class Example {
      @Multipart //
      @POST(""/foo/bar/"") //
      Call<ResponseBody> method(@Part MultipartBody.Part part) {
        return null;
      }
    }",http,hyper text transfer protocol
Lretrofit2/mock/MockRetrofitIOException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-mock/src/main/java/retrofit2/mock/MockRetrofitIOException.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-mock/src/test/java/retrofit2/mock/NetworkBehaviorTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-mock/src/main/java/retrofit2/mock/NetworkBehavior.java;,ClassName,MockRetrofitIOException,"final class MockRetrofitIOException extends IOException {
  MockRetrofitIOException() {
    super(""Failure triggered by MockRetrofit's NetworkBehavior"");
  }
}",io,input output
Lretrofit2/HttpServiceMethod;.(Lretrofit2/RequestFactory;Lokhttp3/Call$Factory;Lretrofit2/CallAdapter<TResponseT;TReturnT;>;Lretrofit2/Converter<Lokhttp3/ResponseBody;TResponseT;>;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/HttpServiceMethod.java;,MethodName,HttpServiceMethod,"
  private HttpServiceMethod(RequestFactory requestFactory, okhttp3.Call.Factory callFactory,
      CallAdapter<ResponseT, ReturnT> callAdapter,
      Converter<ResponseBody, ResponseT> responseConverter) {
    this.requestFactory = requestFactory;
    this.callFactory = callFactory;
    this.callAdapter = callAdapter;
    this.responseConverter = responseConverter;
  }",http,hyper text transfer protocol
Lretrofit2/RequestFactoryTest;.getWithHttpUrl()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RequestFactoryTest.java;,MethodName,getWithHttpUrl,"  @Test public void getWithHttpUrl() {
    class Example {
      @GET
      Call<ResponseBody> method(@Url HttpUrl url) {
        return null;
      }
    }",http,hyper text transfer protocol
Lcom/fasterxml/jackson/databind/ser/std/StdSerializer<Lretrofit2/converter/jackson/JacksonConverterFactoryTest$AnInterface;>;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/jackson/src/test/java/retrofit2/converter/jackson/JacksonConverterFactoryTest.java;,ClassName,StdSerializer<AnInterface>,"  static class AnInterfaceSerializer extends StdSerializer<AnInterface> {
    AnInterfaceSerializer() {
      super(AnInterface.class);
    }",std,standard
Lretrofit2/RequestFactoryTest;.getWithUnusedAndInvalidNamedPathParam()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RequestFactoryTest.java;,MethodName,getWithUnusedAndInvalidNamedPathParam,"  @Test public void getWithUnusedAndInvalidNamedPathParam() {
    class Example {
      @GET(""/foo/bar/{ping}/{kit,kat}/"") //
      Call<ResponseBody> method(@Path(""ping"") String ping) {
        return null;
      }
    }",param,parameter
Lretrofit2/mock/BehaviorCall$3206;.onFailure(Lretrofit2/Call<TT;>;Ljava/lang/Throwable;)V#t#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-mock/src/main/java/retrofit2/mock/BehaviorCall.java;,ParameterName,t,"            @Override public void onFailure(Call<T> call, Throwable t) {
              if (delaySleep()) {
                callback.onFailure(call, t);
              }
            }
          });",t,throwable
Lokhttp3/mockwebserver/MockWebServer;.url(Ljava/lang/String;)Lokhttp3/HttpUrl;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/CompletableThrowingTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/gson/src/test/java/retrofit2/converter/gson/GsonConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/ObservableThrowingTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/CompletableWithSchedulerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/CancelDisposeTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/samples/src/main/java/com/example/retrofit/JsonQueryParameters.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/samples/src/main/java/com/example/retrofit/JsonAndXmlConverters.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/ObservableTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/CallTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RetrofitTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/samples/src/main/java/com/example/retrofit/DeserializeErrorBody.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/MaybeWithSchedulerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/SingleWithSchedulerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/KotlinUnitTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/guava/src/test/java/retrofit2/adapter/guava/GuavaCallAdapterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/guava/src/test/java/retrofit2/adapter/guava/ListenableFutureTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/AsyncTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/protobuf/src/test/java/retrofit2/converter/protobuf/ProtoConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/scalars/src/test/java/retrofit2/converter/scalars/ScalarsConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/simplexml/src/test/java/retrofit2/converter/simplexml/SimpleXmlConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/FlowableWithSchedulerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/java8/src/test/java/retrofit2/adapter/java8/CompletableFutureTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/CompletableTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/ObservableThrowingTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/jackson/src/test/java/retrofit2/converter/jackson/JacksonConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/AsyncTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/moshi/src/test/java/retrofit2/converter/moshi/MoshiConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/wire/src/test/java/retrofit2/converter/wire/WireConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/java8/src/test/java/retrofit/converter/java8/Java8OptionalConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/scala/src/test/java/retrofit2/adapter/scala/ScalaCallAdapterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/guava/src/test/java/retrofit/converter/guava/GuavaOptionalConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/FlowableTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/MaybeThrowingTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/CancelDisposeTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/SingleThrowingTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/scalars/src/test/java/retrofit2/converter/scalars/ScalarsConverterPrimitivesFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/OptionalConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/CompletableThrowingSafeSubscriberTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/CancelDisposeTestSync.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/CompletableTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/ObservableTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/samples/src/main/java/com/example/retrofit/ChunkingConverter.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/SingleTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/jaxb/src/test/java/retrofit2/converter/jaxb/JaxbConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/ObservableWithSchedulerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/CompletableWithSchedulerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/SingleThrowingTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/java8/src/test/java/retrofit2/adapter/java8/Java8CallAdapterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/MaybeTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/samples/src/main/java/com/example/retrofit/AnnotatedConverters.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/scala/src/test/java/retrofit2/adapter/scala/FutureTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/CompletableFutureCallAdapterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/ObservableThrowingSafeSubscriberTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/ObservableWithSchedulerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/CompletableThrowingTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/CompletableFutureTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/SingleTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/SingleWithSchedulerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/FlowableThrowingTest.java;,MethodName,url,"  @Before public void setUp() {
    Retrofit retrofit = new Retrofit.Builder()
        .baseUrl(server.url(""/""))
        .addCallAdapterFactory(RxJava2CallAdapterFactory.create())
        .build();
    service = retrofit.create(Service.class);
  }",url,uniform resource locator
Lretrofit2/Utils;.equals(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Z#1#gb,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/Utils.java;,VariableName,gb,"      if (!(b instanceof GenericArrayType)) return false;
      GenericArrayType ga = (GenericArrayType) a;
      GenericArrayType gb = (GenericArrayType) b;
      return equals(ga.getGenericComponentType(), gb.getGenericComponentType());
",gb,generic b
Lretrofit2/RequestFactoryTest;.malformedParameterRelativeUrlThrows()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RequestFactoryTest.java;,MethodName,malformedParameterRelativeUrlThrows,"  @Test public void malformedParameterRelativeUrlThrows() {
    class Example {
      @GET
      Call<ResponseBody> get(@Url String relativeUrl) {
        return null;
      }
    }",url,uniform resource locator
Lokhttp3/HttpUrl;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/CompletableThrowingTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/gson/src/test/java/retrofit2/converter/gson/GsonConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/ObservableThrowingTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/CompletableWithSchedulerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/CancelDisposeTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/samples/src/main/java/com/example/retrofit/JsonQueryParameters.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/samples/src/main/java/com/example/retrofit/JsonAndXmlConverters.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/ObservableTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/CallTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RetrofitTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/samples/src/main/java/com/example/retrofit/DynamicBaseUrl.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/samples/src/main/java/com/example/retrofit/DeserializeErrorBody.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/MaybeWithSchedulerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/SingleWithSchedulerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/KotlinUnitTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/guava/src/test/java/retrofit2/adapter/guava/GuavaCallAdapterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/guava/src/test/java/retrofit2/adapter/guava/ListenableFutureTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/AsyncTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/RequestBuilder.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/protobuf/src/test/java/retrofit2/converter/protobuf/ProtoConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/scalars/src/test/java/retrofit2/converter/scalars/ScalarsConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/simplexml/src/test/java/retrofit2/converter/simplexml/SimpleXmlConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/FlowableWithSchedulerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/java8/src/test/java/retrofit2/adapter/java8/CompletableFutureTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/CompletableTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/ObservableThrowingTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/jackson/src/test/java/retrofit2/converter/jackson/JacksonConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/AsyncTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/moshi/src/test/java/retrofit2/converter/moshi/MoshiConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/wire/src/test/java/retrofit2/converter/wire/WireConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/java8/src/test/java/retrofit/converter/java8/Java8OptionalConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/scala/src/test/java/retrofit2/adapter/scala/ScalaCallAdapterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/guava/src/test/java/retrofit/converter/guava/GuavaOptionalConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/FlowableTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/MaybeThrowingTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/CancelDisposeTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/SingleThrowingTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/scalars/src/test/java/retrofit2/converter/scalars/ScalarsConverterPrimitivesFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/Retrofit.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/OptionalConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/CompletableThrowingSafeSubscriberTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/CancelDisposeTestSync.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/CompletableTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/ObservableTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RequestFactoryAndroidTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/RequestFactory.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/samples/src/main/java/com/example/retrofit/ChunkingConverter.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/samples/src/main/java/com/example/retrofit/Crawler.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/SingleTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/jaxb/src/test/java/retrofit2/converter/jaxb/JaxbConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/ObservableWithSchedulerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/CompletableWithSchedulerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/SingleThrowingTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/java8/src/test/java/retrofit2/adapter/java8/Java8CallAdapterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/MaybeTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/samples/src/main/java/com/example/retrofit/AnnotatedConverters.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/scala/src/test/java/retrofit2/adapter/scala/FutureTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RequestFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/CompletableFutureCallAdapterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/ObservableThrowingSafeSubscriberTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/ObservableWithSchedulerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/CompletableThrowingTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/CompletableFutureTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/SingleTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/SingleWithSchedulerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/FlowableThrowingTest.java;,ClassName,HttpUrl,"  @Before public void setUp() {
    Retrofit retrofit = new Retrofit.Builder()
        .baseUrl(server.url(""/""))
        .addCallAdapterFactory(RxJava2CallAdapterFactory.create())
        .build();
    service = retrofit.create(Service.class);
  }",http,hyper text transfer protocol
Lretrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest;.responseTypes()V#fBodyWildcard,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest.java;,VariableName,fBodyWildcard,"   assertThat(factory.get(mBodyWildcard, NO_ANNOTATIONS, retrofit).responseType())
        .isEqualTo(String.class);
    Type fBodyWildcard = new TypeToken<Flowable<? extends String>>() {}.getType();
    assertThat(factory.get(fBodyWildcard, NO_ANNOTATIONS, retrofit).responseType())
        .isEqualTo(String.class);",f,flowable
Lcom/example/retrofit/SimpleMockService$MockGitHub;.ownerRepoContributors)Ljava/util/Map<Ljava/lang/String;Ljava/util/Map<Ljava/lang/String;Ljava/util/List<Lcom/example/retrofit/SimpleService$Contributor;>;>;>;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/samples/src/main/java/com/example/retrofit/SimpleMockService.java;,FieldName,ownerRepoContributors,"static final class MockGitHub implements GitHub {
    private final BehaviorDelegate<GitHub> delegate;
    private final Map<String, Map<String, List<Contributor>>> ownerRepoContributors;

    MockGitHub(BehaviorDelegate<GitHub> delegate) {
      this.delegate = delegate;
      ownerRepoContributors = new LinkedHashMap<>();",repo,repertory
Lretrofit2/converter/protobuf/PhoneProtos$Phone;.(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)V|Lcom/google/protobuf/InvalidProtocolBufferException;#0#0#0#0#0#bs,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/protobuf/src/test/java/retrofit2/converter/protobuf/PhoneProtos.java;,VariableName,bs,"public java.lang.String getNumber() {
        java.lang.Object ref = number_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            number_ = s;",bs,bytes
Lretrofit2/RequestBuilder;.canonicalizeForPath(Lokio/Buffer;Ljava/lang/String;IIZ)V#pos#0#2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/RequestBuilder.java;,ParameterName,pos,"private static void canonicalizeForPath(Buffer out, String input, int pos, int limit,
      boolean alreadyEncoded) {
    Buffer utf8Buffer = null; // Lazily allocated.
    int codePoint;
    for (int i = pos; i < limit; i += Character.charCount(codePoint)) {",pos,position
Lretrofit2/OkHttpCall<Lretrofit2/OkHttpCall;:TT;>;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/OkHttpCall.java;,ClassName,OkHttpCall<T>,"final class OkHttpCall<T> implements Call<T> {
  private final RequestFactory requestFactory;
  private final Object[] args;
  private final okhttp3.Call.Factory callFactory;",http,hyper text transfer protocol
Lokio/Buffer;.readUtf8()Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/jackson/src/test/java/retrofit2/converter/jackson/JacksonConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RetrofitTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/moshi/src/test/java/retrofit2/converter/moshi/MoshiConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RequestFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/RequestBuilder.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/gson/src/test/java/retrofit2/converter/gson/GsonConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/scalars/src/test/java/retrofit2/converter/scalars/ScalarsConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/simplexml/src/test/java/retrofit2/converter/simplexml/SimpleXmlConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/jaxb/src/test/java/retrofit2/converter/jaxb/JaxbConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/samples/src/main/java/com/example/retrofit/JsonQueryParameters.java;,MethodName,readUtf8,"    RecordedRequest request = server.takeRequest();
    assertThat(request.getBody().readUtf8()).isEqualTo(""{\""name\"":\""value\""}"");
    assertThat(request.getHeader(""Content-Type"")).isEqualTo(""application/json; charset=UTF-8"");
  }",utf,unicode transformation format
Lretrofit2/RetrofitTest;.methodAndParameterAnnotationsPassedToRequestBodyConverter()V#parameterAnnotationsRef,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RetrofitTest.java;,VariableName,parameterAnnotationsRef,"  @Test public void methodAndParameterAnnotationsPassedToRequestBodyConverter() {
    final AtomicReference<Annotation[]> parameterAnnotationsRef = new AtomicReference<>();
    final AtomicReference<Annotation[]> methodAnnotationsRef = new AtomicReference<>();

    class MyConverterFactory extends Converter.Factory {",ref,reference
Lretrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest;.responseTypes()V#mBodyClass,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest.java;,VariableName,mBodyClass,"assertThat(factory.get(sBodyClass, NO_ANNOTATIONS, retrofit).responseType())
        .isEqualTo(String.class);
    Type mBodyClass = new TypeToken<Maybe<String>>() {}.getType();
    assertThat(factory.get(mBodyClass, NO_ANNOTATIONS, retrofit).responseType())
        .isEqualTo(String.class);
    Type fBodyClass = new TypeToken<Flowable<String>>() {}.getType();",m,maybe
Lretrofit2/RequestFactory$Builder;.parsePathParameters(Ljava/lang/String;)Ljava/util/Set<Ljava/lang/String;>;#m,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/RequestFactory.java;,VariableName,m,"    /**
     * Gets the set of unique path parameters used in the given URI. If a parameter is used twice
     * in the URI, it will only show up once in the set.
     */
    static Set<String> parsePathParameters(String path) {
      Matcher m = PARAM_URL_REGEX.matcher(path);
      Set<String> patterns = new LinkedHashSet<>();
      while (m.find()) {
        patterns.add(m.group(1));
      }",m,matcher
Lretrofit2/RequestFactoryTest;.getWithUrlThenPathThrows()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RequestFactoryTest.java;,MethodName,getWithUrlThenPathThrows,"  @Test public void getWithUrlThenPathThrows() {
    class Example {
      @GET
      Call<ResponseBody> method(@Url String url, @Path(""hey"") String hey) {
        return null;
      }
    }",url,uniform resource locator
Lretrofit2/converter/wire/Phone;.equals(Ljava/lang/Object;)Z#o,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/wire/src/test/java/retrofit2/converter/wire/Phone.java;,VariableName,o,"  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Phone)) return false;
    Phone o = (Phone) other;
    return Internal.equals(unknownFields(), o.unknownFields())
        && Internal.equals(number, o.number);
  }",o,other
Lretrofit2/CallTest;.conversionProblemOutgoingAsync()V|Ljava/lang/InterruptedException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/CallTest.java;,MethodName,conversionProblemOutgoingAsync,"  @Test public void conversionProblemOutgoingAsync() throws InterruptedException {
    Retrofit retrofit = new Retrofit.Builder()
        .baseUrl(server.url(""/""))
        .addConverterFactory(new ToStringConverterFactory() {
          @Override
          public Converter<?, RequestBody> requestBodyConverter(Type type,
              Annotation[] parameterAnnotations, Annotation[] methodAnnotations,
              Retrofit retrofit) {",async,asynchrony
Lretrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest;.responseTypes()V#mResponseClass,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest.java;,VariableName,mResponseClass,"    assertThat(factory.get(sResponseClass, NO_ANNOTATIONS, retrofit).responseType())
        .isEqualTo(String.class);
    Type mResponseClass = new TypeToken<Maybe<Response<String>>>() {}.getType();
    assertThat(factory.get(mResponseClass, NO_ANNOTATIONS, retrofit).responseType())
        .isEqualTo(String.class);
    Type fResponseClass = new TypeToken<Flowable<Response<String>>>() {}.getType();",m,maybe
Lretrofit2/Utils;.equals(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Z#3#va,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/Utils.java;,VariableName,va,"    } else if (a instanceof TypeVariable) {
      if (!(b instanceof TypeVariable)) return false;
      TypeVariable<?> va = (TypeVariable<?>) a;
      TypeVariable<?> vb = (TypeVariable<?>) b;
      return va.getGenericDeclaration() == vb.getGenericDeclaration()
          && va.getName().equals(vb.getName());",va,variable a
Lretrofit2/Utils;.resolve(Ljava/lang/reflect/Type;Ljava/lang/Class<*>;Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;#3#0#t,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/Utils.java;,VariableName,t,"        Type[] args = original.getActualTypeArguments();
        for (int t = 0, length = args.length; t < length; t++) {
          Type resolvedTypeArgument = resolve(context, contextRawType, args[t]);
          if (resolvedTypeArgument != args[t]) {
            if (!changed) {",t,to
Lretrofit2/mock/BehaviorCall$2203;.delaySleep()Z#sleepMs,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-mock/src/main/java/retrofit2/mock/BehaviorCall.java;,VariableName,sleepMs,"    task = backgroundExecutor.submit(new Runnable() {
      boolean delaySleep() {
        long sleepMs = behavior.calculateDelay(MILLISECONDS);
        if (sleepMs > 0) {
          try {
            Thread.sleep(sleepMs);",ms,milliseconds
Lretrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest;.responseTypes()V#fResultWildcard,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest.java;,VariableName,fResultWildcard,"    Type mResultWildcard = new TypeToken<Maybe<Result<? extends String>>>() {}.getType();
    assertThat(factory.get(mResultWildcard, NO_ANNOTATIONS, retrofit).responseType())
        .isEqualTo(String.class);
    Type fResultWildcard = new TypeToken<Flowable<Result<? extends String>>>() {}.getType();
    assertThat(factory.get(fResultWildcard, NO_ANNOTATIONS, retrofit).responseType())
        .isEqualTo(String.class);
  }",f,flowable
Lretrofit2/RequestFactoryTest;.postWithUrl()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RequestFactoryTest.java;,MethodName,postWithUrl,"  @Test public void postWithUrl() {
    class Example {
      @POST
      Call<ResponseBody> method(@Url String url, @Body RequestBody body) {
        return null;
      }
    }",url,uniform resource locator
Lretrofit2/converter/jaxb/JaxbConverterFactory;.XML)Lokhttp3/MediaType;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/jaxb/src/main/java/retrofit2/converter/jaxb/JaxbConverterFactory.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/jaxb/src/main/java/retrofit2/converter/jaxb/JaxbRequestConverter.java;,FieldName,XML,"public final class JaxbConverterFactory extends Converter.Factory {
  static final MediaType XML = MediaType.get(""application/xml; charset=utf-8"");

  /** Create an instance using a default {@link JAXBContext} instance for conversion. */
  public static JaxbConverterFactory create() {
    return new JaxbConverterFactory(null);",xml,extensible markup language
Lretrofit2/converter/jaxb/JaxbConverterFactory;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/jaxb/src/test/java/retrofit2/converter/jaxb/JaxbConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/jaxb/src/main/java/retrofit2/converter/jaxb/JaxbConverterFactory.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/jaxb/src/main/java/retrofit2/converter/jaxb/JaxbRequestConverter.java;,ClassName,JaxbConverterFactory,"  @Before public void setUp() {
    JaxbConverterFactory factory = JaxbConverterFactory.create();
    Retrofit retrofit = new Retrofit.Builder()
        .baseUrl(server.url(""/""))
        .addConverterFactory(factory)
        .build();",jaxb,java architecture for xml binding
Lretrofit2/RequestFactoryTest;.queryMapRejectsNullKeys()V#queryParams,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RequestFactoryTest.java;,VariableName,queryParams,"      }
    }

    Map<String, String> queryParams = new LinkedHashMap<>();
    queryParams.put(""ping"", ""pong"");
    queryParams.put(null, ""kat"");",params,parameters
Lretrofit2/adapter/java8/Java8CallAdapterFactory$BodyCallAdapter;:TR;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/java8/src/main/java/retrofit2/adapter/java8/Java8CallAdapterFactory.java;,ClassName,R,"    @Override public CompletableFuture<Response<R>> adapt(final Call<R> call) {
      final CompletableFuture<Response<R>> future = new CompletableFuture<Response<R>>() {
        @Override public boolean cancel(boolean mayInterruptIfRunning) {
          if (mayInterruptIfRunning) {
            call.cancel();
          }
          return super.cancel(mayInterruptIfRunning);
        }",r,response
Lretrofit2/Utils;.equals(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Z#2#wb,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/Utils.java;,VariableName,wb,"    } else if (a instanceof WildcardType) {
      if (!(b instanceof WildcardType)) return false;
      WildcardType wa = (WildcardType) a;
      WildcardType wb = (WildcardType) b;
      return Arrays.equals(wa.getUpperBounds(), wb.getUpperBounds())
          && Arrays.equals(wa.getLowerBounds(), wb.getLowerBounds());
",wb,wildcard b
Lcom/squareup/wire/FieldEncoding;.rawProtoAdapter()Lcom/squareup/wire/ProtoAdapter<*>;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/wire/src/test/java/retrofit2/converter/wire/Phone.java;,MethodName,rawProtoAdapter,"      case 1: builder.number(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }",proto,protocol
Lretrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest;.responseTypes()V#oResultWildcard,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest.java;,VariableName,oResultWildcard,"    Type oResultWildcard = new TypeToken<Observable<Result<? extends String>>>() {}.getType();
    assertThat(factory.get(oResultWildcard, NO_ANNOTATIONS, retrofit).responseType())
        .isEqualTo(String.class);
    Type sResultWildcard = new TypeToken<Single<Result<? extends String>>>() {}.getType();
    assertThat(factory.get(sResultWildcard, NO_ANNOTATIONS, retrofit).responseType())
        .isEqualTo(String.class);",o,observable
Lretrofit2/converter/gson/GsonConverterFactoryTest$Service;.anImplementation(Lretrofit2/converter/gson/GsonConverterFactoryTest$AnImplementation;)Lretrofit2/Call<Lretrofit2/converter/gson/GsonConverterFactoryTest$AnImplementation;>;#impl#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/gson/src/test/java/retrofit2/converter/gson/GsonConverterFactoryTest.java;,ParameterName,impl,"  interface Service {
    @POST(""/"") Call<AnImplementation> anImplementation(@Body AnImplementation impl);
    @POST(""/"") Call<AnInterface> anInterface(@Body AnInterface impl);
    @GET(""/"") Call<Value> value();
  }",impl,implementation
Lretrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest;.responseTypes()V#oResponseClass,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest.java;,VariableName,oResponseClass,"    Type oResponseClass = new TypeToken<Observable<Response<String>>>() {}.getType();
    assertThat(factory.get(oResponseClass, NO_ANNOTATIONS, retrofit).responseType())
        .isEqualTo(String.class);
    Type sResponseClass = new TypeToken<Single<Response<String>>>() {}.getType();",o,observable
Lretrofit2/TestingUtils;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/TestingUtils.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RequestFactoryTest.java;,ClassName,TestingUtils,"public final class TestingUtils {
  public static Method onlyMethod(Class c) {
    Method[] declaredMethods = c.getDeclaredMethods();
    if (declaredMethods.length == 1) {",utils,utilities
Lretrofit2/CallTest;.http200Async()V|Ljava/lang/InterruptedException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/CallTest.java;,MethodName,http200Async,"  @Test public void http200Async() throws InterruptedException {
    Retrofit retrofit = new Retrofit.Builder()
        .baseUrl(server.url(""/""))
        .addConverterFactory(new ToStringConverterFactory())
        .build();
    Service example = retrofit.create(Service.class);",async,asynchrony
Lretrofit2/RequestFactoryTest;.pathParamNotAllowedInQuery()V|Ljava/lang/Exception;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RequestFactoryTest.java;,MethodName,pathParamNotAllowedInQuery,"  @Test public void pathParamNotAllowedInQuery() throws Exception {
    class Example {
      @GET(""/foo?bar={bar}"") //
      Call<ResponseBody> method(@Path(""bar"") String thing) {
        return null;
      }",param,parameter
Lcom/squareup/moshi/JsonQualifier;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/moshi/src/main/java/retrofit2/converter/moshi/MoshiConverterFactory.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/moshi/src/test/java/retrofit2/converter/moshi/MoshiConverterFactoryTest.java;,ClassName,JsonQualifier,"  private static Set<? extends Annotation> jsonAnnotations(Annotation[] annotations) {
    Set<Annotation> result = null;
    for (Annotation annotation : annotations) {
      if (annotation.annotationType().isAnnotationPresent(JsonQualifier.class)) {
        if (result == null) result = new LinkedHashSet<>();
        result.add(annotation);
      }",json,javascript object notation
Lretrofit2/Retrofit$5954;.emptyArgs)[Ljava/lang/Object;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/Retrofit.java;,VariableName,emptyArgs,"    return (T) Proxy.newProxyInstance(service.getClassLoader(), new Class<?>[] { service },
        new InvocationHandler() {
          private final Platform platform = Platform.get();
          private final Object[] emptyArgs = new Object[0];

          @Override public Object invoke(Object proxy, Method method, @Nullable Object[] args)
              throws Throwable {",args,arguments
Lretrofit2/converter/simplexml/SimpleXmlRequestBodyConverter;.convert(TT;)Lokhttp3/RequestBody;|Ljava/io/IOException;#0#0#osw,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/simplexml/src/main/java/retrofit2/converter/simplexml/SimpleXmlRequestBodyConverter.java;,VariableName,osw,"  @Override public RequestBody convert(T value) throws IOException {
    Buffer buffer = new Buffer();
    try {
      OutputStreamWriter osw = new OutputStreamWriter(buffer.outputStream(), CHARSET);
      serializer.write(value, osw);
      osw.flush();
    } catch (RuntimeException | IOException e) {",osw,output stream writer
Lretrofit2/RequestFactoryTest;.queryParamsSkippedIfConvertedToNull()V|Ljava/lang/Exception;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RequestFactoryTest.java;,MethodName,queryParamsSkippedIfConvertedToNull,"  @Test public void queryParamsSkippedIfConvertedToNull() throws Exception {
    class Example {
      @GET(""/query"") Call<ResponseBody> queryPath(@Query(""a"") Object a) {
        return null;
      }
    }",params,parameters
Lretrofit2/CallTest;.http404Async()V|Ljava/lang/InterruptedException;|Ljava/io/IOException;#responseRef,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/CallTest.java;,VariableName,responseRef,"    Service example = retrofit.create(Service.class);

    server.enqueue(new MockResponse().setBody(""Hi""));

    final AtomicReference<Response<String>> responseRef = new AtomicReference<>();
    final CountDownLatch latch = new CountDownLatch(1);
    example.getString().enqueue(new Callback<String>() {
      @Override public void onResponse(Call<String> call, Response<String> response) {
       ",ref,reference
Lretrofit2/converter/wire/Phone;.serialVersionUID)J,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/wire/src/test/java/retrofit2/converter/wire/Phone.java;,FieldName,serialVersionUID,"public final class Phone extends Message<Phone, Phone.Builder> {
  public static final ProtoAdapter<Phone> ADAPTER = new ProtoAdapter_Phone();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_NUMBER = """";",uid,user identifier
Ljava/net/URI;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/RequestFactory.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RequestFactoryTest.java;,ClassName,URI,"       if (type == HttpUrl.class
            || type == String.class
            || type == URI.class
            || (type instanceof Class && ""android.net.Uri"".equals(((Class<?>) type).getName()))) {
          return new ParameterHandler.RelativeUrl();
        } else {
          throw parameterError(method, p,
              ""@Url must be okhttp3.HttpUrl, String, java.net.URI, or android.net.Uri type."");
        }",uri,uniform resource identifier
Lretrofit2/Utils;.resolve(Ljava/lang/reflect/Type;Ljava/lang/Class<*>;Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;#3#args,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/Utils.java;,VariableName,args,"        Type ownerType = original.getOwnerType();
        Type newOwnerType = resolve(context, contextRawType, ownerType);
        boolean changed = newOwnerType != ownerType;

        Type[] args = original.getActualTypeArguments();
        for (int t = 0, length = args.length; t < length; t++) {
          Type resolvedTypeArgument = resolve(context, contextRawType, args[t]);
          if (resolvedTypeArgument != args[t]) {",args,arguments
Lretrofit2/converter/gson/GsonRequestBodyConverter<Lretrofit2/converter/gson/GsonRequestBodyConverter;:TT;>;.UTF_8)Ljava/nio/charset/Charset;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/gson/src/main/java/retrofit2/converter/gson/GsonRequestBodyConverter.java;,VariableName,UTF_8,"final class GsonRequestBodyConverter<T> implements Converter<T, RequestBody> {
  private static final MediaType MEDIA_TYPE = MediaType.get(""application/json; charset=UTF-8"");
  private static final Charset UTF_8 = Charset.forName(""UTF-8"");

  private final Gson gson;
  private final TypeAdapter<T> adapter;",utf,unicode transformation format
Lretrofit2/RequestFactory$Builder;.PARAM_URL_REGEX)Ljava/util/regex/Pattern;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/RequestFactory.java;,FieldName,PARAM_URL_REGEX,"static final class Builder {
    // Upper and lower characters, digits, underscores, and hyphens, starting with a character.
    private static final String PARAM = ""[a-zA-Z][a-zA-Z0-9_-]*"";
    private static final Pattern PARAM_URL_REGEX = Pattern.compile(""\\{("" + PARAM + "")\\}"");
    private static final Pattern PARAM_NAME_REGEX = Pattern.compile(PARAM);",regex,regular expression
Lretrofit2/RetrofitTest$Annotated;.bodyParameter(Ljava/lang/String;)Lretrofit2/Call<Lokhttp3/ResponseBody;>;#param#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RetrofitTest.java;,ParameterName,param,"  interface Annotated {
    @GET(""/"") @Foo Call<String> method();
    @POST(""/"") Call<ResponseBody> bodyParameter(@Foo @Body String param);
    @GET(""/"") Call<ResponseBody> queryParameter(@Foo @Query(""foo"") Object foo);
",param,parameter
Lretrofit2/converter/jaxb/JaxbResponseConverter;.(Ljavax/xml/bind/JAXBContext;Ljava/lang/Class<TT;>;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/jaxb/src/main/java/retrofit2/converter/jaxb/JaxbResponseConverter.java;,MethodName,JaxbResponseConverter,"  JaxbResponseConverter(JAXBContext context, Class<T> type) {
    this.context = context;
    this.type = type;

    // Prevent XML External Entity attacks (XXE).
    xmlInputFactory.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);
    xmlInputFactory.setProperty(XMLInputFactory.SUPPORT_DTD, false);",jaxb,java architecture for xml binding
Lcom/example/retrofit/InvocationMetrics;.main([Ljava/lang/String;)V|Ljava/io/IOException;#okHttpClient,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/samples/src/main/java/com/example/retrofit/InvocationMetrics.java;,VariableName,okHttpClient,"  public static void main(String... args) throws IOException {
    InvocationLogger invocationLogger = new InvocationLogger();

    OkHttpClient okHttpClient = new OkHttpClient.Builder()
        .addInterceptor(invocationLogger)
        .build();",http,hyper text transfer protocol
Lretrofit2/RequestFactoryTest;.multipartOkHttpPartForbidsName()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RequestFactoryTest.java;,MethodName,multipartOkHttpPartForbidsName,"  @Test public void multipartOkHttpPartForbidsName() {
    class Example {
      @Multipart //
      @POST(""/foo/bar/"") //
      Call<ResponseBody> method(@Part(""name"") MultipartBody.Part part) {
        return null;
      }",http,hyper text transfer protocol
Lretrofit2/RequestFactory;.relativeUrl)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/RequestFactory.java;,FieldName,relativeUrl,"private final Method method;
  private final HttpUrl baseUrl;
  final String httpMethod;
  private final String relativeUrl;
  private final Headers headers;
  private final MediaType contentType;
  private final boolean hasBody;",url,uniform resource locator
Lretrofit2/RequestBuilder;.addPathParam(Ljava/lang/String;Ljava/lang/String;Z)V#newRelativeUrl,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/RequestBuilder.java;,VariableName,newRelativeUrl,"    String replacement = canonicalizeForPath(value, encoded);
    String newRelativeUrl = relativeUrl.replace(""{"" + name + ""}"", replacement);
    if (PATH_TRAVERSAL.matcher(newRelativeUrl).matches()) {
      throw new IllegalArgumentException(
          ""@Path parameters shouldn't perform path traversal ('.' or '..'): "" + value);
    }",url,uniform resource locator
Lcom/example/retrofit/DynamicBaseUrl;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/samples/src/main/java/com/example/retrofit/DynamicBaseUrl.java;,ClassName,DynamicBaseUrl,"/**
 * This example uses an OkHttp interceptor to change the target hostname dynamically at runtime.
 * Typically this would be used to implement client-side load balancing or to use the webserver
 * that's nearest geographically.
 */
public final class DynamicBaseUrl {
  public interface Pop {
    @GET(""robots.txt"")
    Call<ResponseBody> robots();",url,uniform resource locator
Lretrofit2/mock/CallsTest;.deferredThrowEnqueue()V#failureRef,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-mock/src/test/java/retrofit2/mock/CallsTest.java;,VariableName,failureRef,"    assertFalse(taco.isCanceled());
    taco.cancel();
    assertTrue(taco.isCanceled());

    final AtomicReference<Throwable> failureRef = new AtomicReference<>();
    taco.enqueue(new Callback<String>() {
      @Override public void onResponse(Call<String> call, Response<String> response) {
        fail();
      }",ref,reference
Ljavax/xml/stream/XMLStreamWriter;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/jaxb/src/main/java/retrofit2/converter/jaxb/JaxbRequestConverter.java;,ClassName,XMLStreamWriter,"    Buffer buffer = new Buffer();
    try {
      Marshaller marshaller = context.createMarshaller();

      XMLStreamWriter xmlWriter = xmlOutputFactory.createXMLStreamWriter(
          buffer.outputStream(), JaxbConverterFactory.XML.charset().name());
      marshaller.marshal(value, xmlWriter);
    } catch (JAXBException | XMLStreamException e) {
      throw new RuntimeException(e);",xml,extensible markup language
Lretrofit2/adapter/rxjava/RxJavaCallAdapterFactoryTest;.responseTypes()V#sBodyGeneric,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/RxJavaCallAdapterFactoryTest.java;,VariableName,sBodyGeneric,"    assertThat(factory.get(oBodyGeneric, NO_ANNOTATIONS, retrofit).responseType())
        .isEqualTo(new TypeToken<List<String>>() {}.getType());
    Type sBodyGeneric = new TypeToken<Single<List<String>>>() {}.getType();
    assertThat(factory.get(sBodyGeneric, NO_ANNOTATIONS, retrofit).responseType())
        .isEqualTo(new TypeToken<List<String>>() {}.getType());",s,single
Lretrofit2/adapter/rxjava/RxJavaCallAdapterFactoryTest;.responseTypes()V#sResultClass,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/RxJavaCallAdapterFactoryTest.java;,VariableName,sResultClass,"    assertThat(factory.get(oResultClass, NO_ANNOTATIONS, retrofit).responseType())
        .isEqualTo(String.class);
    Type sResultClass = new TypeToken<Single<Result<String>>>() {}.getType();
    assertThat(factory.get(sResultClass, NO_ANNOTATIONS, retrofit).responseType())
        .isEqualTo(String.class);",s,single
Lretrofit2/RequestFactoryTest;.normalPostWithPathParam()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RequestFactoryTest.java;,MethodName,normalPostWithPathParam,"  @Test public void normalPostWithPathParam() {
    class Example {
      @POST(""/foo/bar/{ping}/"") //
      Call<ResponseBody> method(@Path(""ping"") String ping, @Body RequestBody body) {
        return null;
      }",param,parameter
Lretrofit2/converter/jackson/JacksonConverterFactoryTest$AnInterfaceDeserializer;.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Lretrofit2/converter/jackson/JacksonConverterFactoryTest$AnInterface;|Ljava/io/IOException;#jp#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/jackson/src/test/java/retrofit2/converter/jackson/JacksonConverterFactoryTest.java;,ParameterName,jp,"   @Override public AnInterface deserialize(JsonParser jp, DeserializationContext ctxt)
        throws IOException {
      if (jp.getCurrentToken() != JsonToken.START_OBJECT) {
        throw new AssertionError(""Expected start object."");
      }",jp,json parser
Lretrofit2/RetrofitTest;.methodAnnotationsPassedToResponseBodyConverter()V#annotationsRef,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RetrofitTest.java;,VariableName,annotationsRef,"  @Test public void methodAnnotationsPassedToCallAdapter() {
    final AtomicReference<Annotation[]> annotationsRef = new AtomicReference<>();
    class MyCallAdapterFactory extends CallAdapter.Factory {
      @Override public @Nullable CallAdapter<?, ?> get(",ref,reference
Lokhttp3/Protocol;.HTTP_1_1)Lokhttp3/Protocol;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/Response.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/ResponseTest.java;,VariableName,HTTP_1_1,"    return success(body, new okhttp3.Response.Builder() //
        .code(code)
        .message(""Response.success()"")
        .protocol(Protocol.HTTP_1_1)
        .request(new Request.Builder().url(""http://localhost/"").build())
        .build());
  }",http,hyper text transfer protocol
Lretrofit2/converter/protobuf/ProtoConverterFactory;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/protobuf/src/test/java/retrofit2/converter/protobuf/ProtoConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/protobuf/src/test/java/retrofit2/converter/protobuf/FallbackParserFinderTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/protobuf/src/main/java/retrofit2/converter/protobuf/ProtoConverterFactory.java;,ClassName,ProtoConverterFactory,"/**
 * A {@linkplain Converter.Factory converter} which uses Protocol Buffers.
 * <p>
 * This converter only applies for types which extend from {@link MessageLite} (or one of its
 * subclasses).
 */
public final class ProtoConverterFactory extends Converter.Factory {
  public static ProtoConverterFactory create() {
    return new ProtoConverterFactory(null);
  }",proto,protocol
Lretrofit2/RequestFactoryTest;.getWithUrlAbsoluteSameHost()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RequestFactoryTest.java;,MethodName,getWithUrlAbsoluteSameHost,"  @Test public void getWithUrlAbsoluteSameHost() {
    class Example {
      @GET
      Call<ResponseBody> method(@Url String url) {
        return null;
      }",url,uniform resource locator
Lokhttp3/HttpUrl;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/CompletableThrowingTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/gson/src/test/java/retrofit2/converter/gson/GsonConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/ObservableThrowingTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/CompletableWithSchedulerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/CancelDisposeTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/samples/src/main/java/com/example/retrofit/JsonQueryParameters.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/samples/src/main/java/com/example/retrofit/JsonAndXmlConverters.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/ObservableTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/CallTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RetrofitTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/samples/src/main/java/com/example/retrofit/DynamicBaseUrl.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/samples/src/main/java/com/example/retrofit/DeserializeErrorBody.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/MaybeWithSchedulerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/SingleWithSchedulerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/KotlinUnitTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/guava/src/test/java/retrofit2/adapter/guava/GuavaCallAdapterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/guava/src/test/java/retrofit2/adapter/guava/ListenableFutureTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/AsyncTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/RequestBuilder.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/protobuf/src/test/java/retrofit2/converter/protobuf/ProtoConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/scalars/src/test/java/retrofit2/converter/scalars/ScalarsConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/simplexml/src/test/java/retrofit2/converter/simplexml/SimpleXmlConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/FlowableWithSchedulerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/java8/src/test/java/retrofit2/adapter/java8/CompletableFutureTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/CompletableTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/ObservableThrowingTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/jackson/src/test/java/retrofit2/converter/jackson/JacksonConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/AsyncTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/moshi/src/test/java/retrofit2/converter/moshi/MoshiConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/wire/src/test/java/retrofit2/converter/wire/WireConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/java8/src/test/java/retrofit/converter/java8/Java8OptionalConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/scala/src/test/java/retrofit2/adapter/scala/ScalaCallAdapterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/guava/src/test/java/retrofit/converter/guava/GuavaOptionalConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/FlowableTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/MaybeThrowingTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/CancelDisposeTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/SingleThrowingTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/scalars/src/test/java/retrofit2/converter/scalars/ScalarsConverterPrimitivesFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/Retrofit.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/OptionalConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/CompletableThrowingSafeSubscriberTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/CancelDisposeTestSync.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/CompletableTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/ObservableTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RequestFactoryAndroidTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/RequestFactory.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/samples/src/main/java/com/example/retrofit/ChunkingConverter.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/samples/src/main/java/com/example/retrofit/Crawler.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/SingleTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/jaxb/src/test/java/retrofit2/converter/jaxb/JaxbConverterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/ObservableWithSchedulerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/CompletableWithSchedulerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/SingleThrowingTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/java8/src/test/java/retrofit2/adapter/java8/Java8CallAdapterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/MaybeTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/samples/src/main/java/com/example/retrofit/AnnotatedConverters.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/scala/src/test/java/retrofit2/adapter/scala/FutureTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RequestFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/CompletableFutureCallAdapterFactoryTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/ObservableThrowingSafeSubscriberTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/ObservableWithSchedulerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/CompletableThrowingTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/CompletableFutureTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/SingleTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/SingleWithSchedulerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/FlowableThrowingTest.java;,ClassName,HttpUrl,"    Retrofit retrofit = new Retrofit.Builder()
        .baseUrl(server.url(""/""))
        .addConverterFactory(GsonConverterFactory.create(gson))
        .build();
    service = retrofit.create(Service.class);",url,uniform resource locator
Lretrofit2/RetrofitTest;.argumentCapture()V|Ljava/lang/Exception;#i,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RetrofitTest.java;,VariableName,i,"/** Confirm that Retrofit encodes parameters when the call is executed, and not earlier. */
  @Test public void argumentCapture() throws Exception {
    AtomicInteger i = new AtomicInteger();

    server.enqueue(new MockResponse().setBody(""a""));
    server.enqueue(new MockResponse().setBody(""b""));",i,integer
Lretrofit2/converter/jaxb/JaxbConverterFactoryTest$Service;.postXml(Lretrofit2/converter/jaxb/Contact;)Lretrofit2/Call<Ljava/lang/Void;>;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/jaxb/src/test/java/retrofit2/converter/jaxb/JaxbConverterFactoryTest.java;,MethodName,postXml,"interface Service {
    @POST(""/"") Call<Void> postXml(@Body Contact contact);
    @GET(""/"") Call<Contact> getXml();
  }",xml,extensible markup language
Lcom/example/retrofit/JsonQueryParameters;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/samples/src/main/java/com/example/retrofit/JsonQueryParameters.java;,ClassName,JsonQueryParameters,"public final class JsonQueryParameters {
  @Retention(RUNTIME)
  @interface Json {
  }",json,javascript object notation
Lcom/example/retrofit/JsonAndXmlConverters;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/samples/src/main/java/com/example/retrofit/JsonAndXmlConverters.java;,ClassName,JsonAndXmlConverters,"/**
 * Both the Gson converter and the Simple Framework converter accept all types. Because of this,
 * you cannot use both in a single service by default. In order to work around this, we can create
 * an @Json and @Xml annotation to declare which serialization format each endpoint should use and
 * then write our own Converter.Factory which delegates to either the Gson or Simple Framework
 * converter.
 */
public final class JsonAndXmlConverters {
  @Retention(RUNTIME)
  @interface Json {
  }",xml,extensible markup language
Lretrofit2/HttpServiceMethod<Lretrofit2/HttpServiceMethod;:4TResponseT;Lretrofit2/HttpServiceMethod;:4TReturnT;>;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/HttpServiceMethod.java;,ClassName,HttpServiceMethod<ResponseT_ReturnT>,"  private final okhttp3.Call.Factory callFactory;
  private final CallAdapter<ResponseT, ReturnT> callAdapter;
  private final Converter<ResponseBody, ResponseT> responseConverter;

  private HttpServiceMethod(RequestFactory requestFactory, okhttp3.Call.Factory callFactory,
      CallAdapter<ResponseT, ReturnT> callAdapter,
      Converter<ResponseBody, ResponseT> responseConverter) {
    this.requestFactory = requestFactory;
    this.callFactory = callFactory;
    this.callAdapter = callAdapter;",http,hyper text transfer protocol
Lretrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest;.responseTypes()V#mResponseWildcard,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest.java;,VariableName,mResponseWildcard,"    Type mResponseWildcard = new TypeToken<Maybe<Response<? extends String>>>() {}.getType();
    assertThat(factory.get(mResponseWildcard, NO_ANNOTATIONS, retrofit).responseType())
        .isEqualTo(String.class);
    Type fResponseWildcard = new TypeToken<Flowable<Response<? extends String>>>() {}.getType();
    assertThat(factory.get(fResponseWildcard, NO_ANNOTATIONS, retrofit).responseType())
        .isEqualTo(String.class);",m,maybe
Lretrofit2/CallAdapterTest;.rawTypes()V|Ljava/lang/NoSuchMethodException;#wildParam,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/CallAdapterTest.java;,VariableName,wildParam,"    Type wildParam = ((ParameterizedType) new TypeToken<List<? extends List<String>>>() {
    }.getType()).getActualTypeArguments()[0];
    assertThat(getRawType(wildParam)).isSameAs(List.class);",param,Parameterized
Lretrofit2/converter/jaxb/JaxbConverterFactoryTest;.malformedXml()V|Ljava/lang/Exception;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/jaxb/src/test/java/retrofit2/converter/jaxb/JaxbConverterFactoryTest.java;,MethodName,malformedXml,"  @Test public void malformedXml() throws Exception {
    server.enqueue(new MockResponse()
        .setBody(""This is not XML""));

    Call<Contact> call = service.getXml();",xml,extensible markup language
Lretrofit2/adapter/rxjava/AsyncTest;.bodyThrowingInOnSafeSubscriberErrorDeliveredToPlugin()V|Ljava/lang/InterruptedException;#pluginRef,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/AsyncTest.java;,VariableName,pluginRef,"  @Test public void bodyThrowingInOnErrorDeliveredToPlugin() throws InterruptedException {
    server.enqueue(new MockResponse().setResponseCode(404));

    final CountDownLatch latch = new CountDownLatch(1);
    final AtomicReference<Throwable> pluginRef = new AtomicReference<>();
    RxJavaPlugins.getInstance().registerErrorHandler(new RxJavaErrorHandler() {
      @Override public void handleError(Throwable throwable) {
        if (!pluginRef.compareAndSet(null, throwable)) {",ref,reference
Lretrofit2/RequestFactory$Builder;.gotUrl)Z,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/RequestFactory.java;,FieldName,gotUrl," boolean gotQuery;
    boolean gotQueryName;
    boolean gotQueryMap;
    boolean gotUrl;
    String httpMethod;
    boolean hasBody;
    boolean isFormEncoded;",url,uniform resource locator
Lretrofit2/converter/jackson/JacksonConverterFactoryTest$AnInterfaceDeserializer;.deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Lretrofit2/converter/jackson/JacksonConverterFactoryTest$AnInterface;|Ljava/io/IOException;#ctxt#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/jackson/src/test/java/retrofit2/converter/jackson/JacksonConverterFactoryTest.java;,ParameterName,ctxt,"@Override public AnInterface deserialize(JsonParser jp, DeserializationContext ctxt)
        throws IOException {
      if (jp.getCurrentToken() != JsonToken.START_OBJECT) {
        throw new AssertionError(""Expected start object."");
      }",ctxt,context
Lretrofit2/RetrofitTest;.callbackExecutorPropagatesDefaultJvm()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RetrofitTest.java;,MethodName,callbackExecutorPropagatesDefaultJvm,"  @Test public void callbackExecutorPropagatesDefaultJvm() {
    Retrofit retrofit = new Retrofit.Builder()
        .baseUrl(""http://example.com/"")
        .build();
    assertThat(retrofit.callbackExecutor()).isNull();
  }",jvm,java virtual machine
Lretrofit2/HttpServiceMethod;:TReturnT;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/HttpServiceMethod.java;,ClassName,ReturnT,"  @Override ReturnT invoke(Object[] args) {
    return callAdapter.adapt(
        new OkHttpCall<>(requestFactory, args, callFactory, responseConverter));
  }",t,type
Lretrofit2/Utils;.equals(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Z#1#ga,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/main/java/retrofit2/Utils.java;,VariableName,ga,"} else if (a instanceof GenericArrayType) {
      if (!(b instanceof GenericArrayType)) return false;
      GenericArrayType ga = (GenericArrayType) a;
      GenericArrayType gb = (GenericArrayType) b;
      return equals(ga.getGenericComponentType(), gb.getGenericComponentType());",ga,generic a
Lretrofit2/converter/moshi/MoshiResponseBodyConverter;.UTF8_BOM)Lokio/ByteString;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/moshi/src/main/java/retrofit2/converter/moshi/MoshiResponseBodyConverter.java;,FieldName,UTF8_BOM,"final class MoshiResponseBodyConverter<T> implements Converter<ResponseBody, T> {
  private static final ByteString UTF8_BOM = ByteString.decodeHex(""EFBBBF"");

  private final JsonAdapter<T> adapter;

  MoshiResponseBodyConverter(JsonAdapter<T> adapter) {
    this.adapter = adapter;",bom,browser object model
Lcom/example/retrofit/DynamicBaseUrl$HostSelectionInterceptor;.intercept(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;|Ljava/io/IOException;#0#newUrl,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/samples/src/main/java/com/example/retrofit/DynamicBaseUrl.java;,VariableName,newUrl," Request request = chain.request();
      String host = this.host;
      if (host != null) {
        HttpUrl newUrl = request.url().newBuilder()
            .host(host)
            .build();
        request = request.newBuilder()
            .url(newUrl)
            .build();",url,uniform resource locator
Lretrofit2/converter/protobuf/PhoneProtos$Phone;.equals(Ljava/lang/Object;)Z#obj#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-converters/protobuf/src/test/java/retrofit2/converter/protobuf/PhoneProtos.java;,ParameterName,obj,"    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }",obj,object
Lretrofit2/adapter/rxjava/RxJavaCallAdapter;.adapt(Lretrofit2/Call<TR;>;)Ljava/lang/Object;#func,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit-adapters/rxjava/src/main/java/retrofit2/adapter/rxjava/RxJavaCallAdapter.java;,VariableName,func,"@Override public Object adapt(Call<R> call) {
    OnSubscribe<Response<R>> callFunc = isAsync
        ? new CallEnqueueOnSubscribe<>(call)
        : new CallExecuteOnSubscribe<>(call);

    OnSubscribe<?> func;
    if (isResult) {
      func = new ResultOnSubscribe<>(callFunc);
    } else if (isBody) {",func,function
Lretrofit2/RequestFactoryTest;.headerParamToString()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/retrofit-master/retrofit/src/test/java/retrofit2/RequestFactoryTest.java;,MethodName,headerParamToString,"  @Test public void headerParamToString() {
    class Example {
      @GET(""/foo/bar/"") //
      Call<ResponseBody> method(@Header(""kit"") BigInteger kit) {
        return null;
      }
    }",param,parameter
Lnet/sourceforge/subsonic/ajax/ChatService$Messages;.serialVersionUID)J,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/ajax/ChatService.java;,FieldName,serialVersionUID,"public static class Messages implements Serializable {

        private static final long serialVersionUID = -752602719879818165L;
        private final  List<Message> messages;
        private final long revision;

        public Messages(List<Message> messages, long revision) {",uid,user identifier
Lnet/sourceforge/subsonic/util/StringUtil;.toHtml(Ljava/lang/String;)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/ajax/CoverArtService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/ajax/NowPlayingService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/util/StringUtil.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/SetMusicFileInfoController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/UploadController.java;,MethodName,toHtml,"            // Check permissions.
            File newCoverFile = new File(path, ""cover."" + suffix);
            if (!securityService.isWriteAllowed(newCoverFile)) {
                throw new Exception(""Permission denied: "" + StringUtil.toHtml(newCoverFile.getPath()));
            }",html,hypertext markup language
Lnet/sourceforge/subsonic/ajax/NowPlayingInfo;.lyricsUrl)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/ajax/NowPlayingInfo.java;,FieldName,lyricsUrl,"private final String tooltip;
    private final String streamUrl;
    private final String albumUrl;
    private final String lyricsUrl;
    private final String coverArtUrl;
    private final String avatarUrl;
    private final int minutesAgo;",url,uniform resource locator
Lnet/sourceforge/subsonic/domain/TransferStatus;.getMillisSinceLastUpdate()J,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/ajax/NowPlayingService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/RESTController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/domain/TransferStatus.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/StatusController.java;,MethodName,getMillisSinceLastUpdate,"       artist = StringUtil.toHtml(StringUtils.abbreviate(artist, 25));
                title = StringUtil.toHtml(StringUtils.abbreviate(title, 25));
                username = StringUtil.toHtml(StringUtils.abbreviate(username, 25));

                long minutesAgo = status.getMillisSinceLastUpdate() / 1000L / 60L;
                if (minutesAgo < 60) {
                    result.add(new NowPlayingInfo(username, artist, title, tooltip, streamUrl, albumUrl, lyricsUrl,
                            coverArtUrl, avatarUrl, (int) minutesAgo));",millis,milliseconds
Lnet/sourceforge/subsonic/util/StringUtil;.utf8HexEncode(Ljava/lang/String;)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/ajax/NowPlayingService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/UserDao.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/util/StringUtil.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/PlayerService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/SettingsService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/taglib/UrlTag.java;,MethodName,utf8HexEncode,"                String title = mediaFile.getTitle();
                String streamUrl = url.replaceFirst(""/dwr/.*"", ""/stream?player="" + player.getId() + ""&id="" + mediaFile.getId());
                String albumUrl = url.replaceFirst(""/dwr/.*"", ""/main.view?id="" + mediaFile.getId());
                String lyricsUrl = url.replaceFirst(""/dwr/.*"", ""/lyrics.view?artistUtf8Hex="" + StringUtil.utf8HexEncode(artist) +
                        ""&songUtf8Hex="" + StringUtil.utf8HexEncode(title));
                String coverArtUrl = url.replaceFirst(""/dwr/.*"", ""/coverArt.view?size=60&id="" + mediaFile.getId());
",utf,unicode transformation format
Lnet/sourceforge/subsonic/util/StringUtil;.utf8HexEncode(Ljava/lang/String;)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/ajax/NowPlayingService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/UserDao.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/util/StringUtil.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/PlayerService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/SettingsService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/taglib/UrlTag.java;,MethodName,utf8HexEncode,"                String title = mediaFile.getTitle();
                String streamUrl = url.replaceFirst(""/dwr/.*"", ""/stream?player="" + player.getId() + ""&id="" + mediaFile.getId());
                String albumUrl = url.replaceFirst(""/dwr/.*"", ""/main.view?id="" + mediaFile.getId());
                String lyricsUrl = url.replaceFirst(""/dwr/.*"", ""/lyrics.view?artistUtf8Hex="" + StringUtil.utf8HexEncode(artist) +
                        ""&songUtf8Hex="" + StringUtil.utf8HexEncode(title));
                String coverArtUrl = url.replaceFirst(""/dwr/.*"", ""/coverArt.view?size=60&id="" + mediaFile.getId());
",hex,hexadecimal
Lnet/sourceforge/subsonic/ajax/PlayQueueService;.convert(LHttpServletRequest;Lnet/sourceforge/subsonic/domain/Player;ZI)Lnet/sourceforge/subsonic/ajax/PlayQueueInfo;|Ljava/lang/Exception;#0#0#remoteCoverArtUrl,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/ajax/PlayQueueService.java;,VariableName,remoteCoverArtUrl,"            String remoteStreamUrl = StringUtil.rewriteRemoteUrl(streamUrl, urlRedirectionEnabled, urlRedirectFrom,
                    urlRedirectContextPath, localIp, localPort);
            String remoteCoverArtUrl = StringUtil.rewriteRemoteUrl(coverArtUrl, urlRedirectionEnabled, urlRedirectFrom,
                    urlRedirectContextPath, localIp, localPort);

            String format = formatFormat(player, file);
            String username = securityService.getCurrentUsername(request);",url,uniform resource locator
Lnet/sourceforge/subsonic/ajax/PlayQueueService;.convert(LHttpServletRequest;Lnet/sourceforge/subsonic/domain/Player;ZI)Lnet/sourceforge/subsonic/ajax/PlayQueueInfo;|Ljava/lang/Exception;#url,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/ajax/PlayQueueService.java;,VariableName,url,"    private PlayQueueInfo convert(HttpServletRequest request, Player player, boolean sendM3U, int offset) throws Exception {
        String url = request.getRequestURL().toString();

        if (sendM3U && player.isJukebox()) {
            jukeboxService.updateJukebox(player, offset);
        }",url,uniform resource locator
Lnet/sourceforge/subsonic/command/NetworkSettingsCommand;.setUrlRedirectionEnabled(Z)V#urlRedirectionEnabled#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/command/NetworkSettingsCommand.java;,ParameterName,urlRedirectionEnabled,"    public void setUrlRedirectionEnabled(boolean urlRedirectionEnabled) {
        this.urlRedirectionEnabled = urlRedirectionEnabled;
    }",url,uniform resource locator
Lnet/sourceforge/subsonic/controller/AutoCoverDemo$AlbumComponent;.paintComponent(Ljava/awt/Graphics;)V#g#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/AutoCoverDemo.java;,ParameterName,g,"     @Override
        protected void paintComponent(Graphics g) {
            new CoverArtController.AutoCover((Graphics2D) g, ""abc"", ""Artist"", ""Album"", size).paintCover();
        }",g,graphics
Lnet/sourceforge/subsonic/controller/AvatarUploadController;.handleRequestInternal(LHttpServletRequest;LHttpServletResponse;)LModelAndView;|Ljava/lang/Exception;#0#o,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/AvatarUploadController.java;,VariableName,o,"        // Look for file items.
        for (Object o : items) {
            FileItem item = (FileItem) o;

            if (!item.isFormField()) {
                String fileName = item.getName();",o,object
Ljavax/imageio/ImageIO;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/AvatarUploadController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/CoverArtController.java;,ClassName,ImageIO,"BufferedImage image;
        try {
            image = ImageIO.read(new ByteArrayInputStream(data));
            if (image == null) {
                throw new Exception(""Failed to decode incoming image: "" + fileName + "" ("" + data.length + "" bytes)."");
            }",io,input output
Lnet/sourceforge/subsonic/controller/CoverArtController;.scale(Ljava/awt/image/BufferedImage;II)Ljava/awt/image/BufferedImage;#0#temp,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/CoverArtController.java;,VariableName,temp,"            BufferedImage temp = new BufferedImage(w, h, BufferedImage.TYPE_INT_RGB);
            Graphics2D g2 = temp.createGraphics();
            g2.setRenderingHint(RenderingHints.KEY_INTERPOLATION,
                    RenderingHints.VALUE_INTERPOLATION_BILINEAR);
            g2.drawImage(thumb, 0, 0, temp.getWidth(), temp.getHeight(), null);",temp,temporary
Ljava/awt/image/BufferedImage;.TYPE_INT_RGB)I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/CoverArtController.java;,VariableName,TYPE_INT_RGB,"            BufferedImage temp = new BufferedImage(w, h, BufferedImage.TYPE_INT_RGB);
            Graphics2D g2 = temp.createGraphics();
            g2.setRenderingHint(RenderingHints.KEY_INTERPOLATION,
                    RenderingHints.VALUE_INTERPOLATION_BILINEAR);
            g2.drawImage(thumb, 0, 0, temp.getWidth(), temp.getHeight(), null);
            g2.dispose();",rgb,red green blue
Lnet/sourceforge/subsonic/controller/CoverArtController$AutoCover;.(Ljava/awt/Graphics2D;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V#rgb,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/CoverArtController.java;,VariableName,rgb,"         this.album = album;
            this.size = size;

            int hash = key.hashCode();
            int rgb = COLORS[Math.abs(hash) % COLORS.length];
            this.color = new Color(rgb);
        }",rgb,red green blue
Lnet/sourceforge/subsonic/controller/CoverArtController;.scale(Ljava/awt/image/BufferedImage;II)Ljava/awt/image/BufferedImage;#0#g2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/CoverArtController.java;,VariableName,g2,"            BufferedImage temp = new BufferedImage(w, h, BufferedImage.TYPE_INT_RGB);
            Graphics2D g2 = temp.createGraphics();
            g2.setRenderingHint(RenderingHints.KEY_INTERPOLATION,
                    RenderingHints.VALUE_INTERPOLATION_BILINEAR);
            g2.drawImage(thumb, 0, 0, temp.getWidth(), temp.getHeight(), null);",g,graphics
Lnet/sourceforge/subsonic/controller/CoverArtController$ArtistCoverArtRequest;.(Lnet/sourceforge/subsonic/controller/CoverArtController;Lnet/sourceforge/subsonic/domain/Artist;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/CoverArtController.java;,MethodName,ArtistCoverArtRequest,"        private final Artist artist;

        private ArtistCoverArtRequest(Artist artist) {
            super(artist.getCoverArtPath());
            this.artist = artist;
        }",art,artist
Lnet/sourceforge/subsonic/controller/DLNASettingsController;.setUpnpService(Lnet/sourceforge/subsonic/service/UPnPService;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/DLNASettingsController.java;,MethodName,setUpnpService,"    public void setUpnpService(UPnPService upnpService) {
        this.upnpService = upnpService;
    }",upnp,universal plug and play
Lnet/sourceforge/subsonic/controller/DownloadController;.getLastModified(LHttpServletRequest;)J#0#1#e,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/DownloadController.java;,VariableName,e,"              return -1;
            }
            return mediaFile.getChanged().getTime();
        } catch (ServletRequestBindingException e) {
            return -1;
        }",e,exception
Lnet/sourceforge/subsonic/controller/DownloadController;.encodeAsRFC5987(Ljava/lang/String;)Ljava/lang/String;|Ljava/io/UnsupportedEncodingException;#0#b,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/DownloadController.java;,VariableName,b,"   byte[] attrChar = {'!', '#', '$', '&', '+', '-', '.', '^', '_', '`', '|', '~', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'};
        StringBuilder sb = new StringBuilder();
        for (byte b : stringAsByteArray) {
            if (Arrays.binarySearch(attrChar, b) >= 0) {
                sb.append((char) b);",b,byte
Lnet/sourceforge/subsonic/controller/DownloadController;.encodeAsRFC5987(Ljava/lang/String;)Ljava/lang/String;|Ljava/io/UnsupportedEncodingException;#attrChar,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/DownloadController.java;,VariableName,attrChar,"private String encodeAsRFC5987(String string) throws UnsupportedEncodingException {
        byte[] stringAsByteArray = string.getBytes(""UTF-8"");
        char[] digits = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'};
        byte[] attrChar = {'!', '#', '$', '&', '+', '-', '.', '^', '_', '`', '|', '~', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'};
        StringBuilder sb = new StringBuilder();
        for (byte b : stringAsByteArray) {",attr,attribute
Lnet/sourceforge/subsonic/util/HttpRange;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/DownloadController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/StreamController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/util/HttpRange.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/io/RangeOutputStream.java;,ClassName,HttpRange," * @param range The range from the HTTP header, for instance ""bytes=0-499"" or ""bytes=500-""
     * @return A range object (using inclusive values). If the last-byte-pos is not given, the end of
     *         the returned range is {@code null}. The method returns <code>null</code> if the syntax
     *         of the given range is not supported.
     */
    public static HttpRange valueOf(String range) {
        if (range == null) {
            return null;
        }",http,hypertext transfer protocol
Lnet/sourceforge/subsonic/controller/JAXBWriter;.createXmlMarshaller()Ljavax/xml/bind/Marshaller;|Ljavax/xml/bind/JAXBException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/JAXBWriter.java;,MethodName,createXmlMarshaller,"private Marshaller createXmlMarshaller() throws JAXBException {
        Marshaller marshaller = jaxbContext.createMarshaller();
        marshaller.setProperty(Marshaller.JAXB_ENCODING, StringUtil.ENCODING_UTF8);
        marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);",xml,extensible markup language
Ljavax/xml/datatype/DatatypeFactory;.newXMLGregorianCalendar(Ljava/util/GregorianCalendar;)Ljavax/xml/datatype/XMLGregorianCalendar;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/JAXBWriter.java;,MethodName,newXMLGregorianCalendar,"        if (date == null) {
            return null;
        }

        GregorianCalendar c = new GregorianCalendar();
        c.setTime(date);
        return datatypeFactory.newXMLGregorianCalendar(c).normalize();
    }",xml,extensible markup language
Lnet/sourceforge/subsonic/controller/JAXBWriter;.jaxbContext)Ljavax/xml/bind/JAXBContext;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/JAXBWriter.java;,FieldName,jaxbContext,"public class JAXBWriter {

    private static final Logger LOG = Logger.getLogger(JAXBWriter.class);

    private final javax.xml.bind.JAXBContext jaxbContext;
    private final DatatypeFactory datatypeFactory;
    private final String restProtocolVersion;",jaxb,java architecture for xml binding
Lnet/sourceforge/subsonic/controller/JAXBWriter;.convertDate(Ljava/util/Date;)Ljavax/xml/datatype/XMLGregorianCalendar;#c,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/JAXBWriter.java;,VariableName,c,"        if (date == null) {
            return null;
        }

        GregorianCalendar c = new GregorianCalendar();
        c.setTime(date);
        return datatypeFactory.newXMLGregorianCalendar(c).normalize();
    }",c,calendar
Ljavax/xml/datatype/XMLGregorianCalendar;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/JAXBWriter.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/RESTController.java;,ClassName,XMLGregorianCalendar,"public XMLGregorianCalendar convertDate(Date date) {
        if (date == null) {
            return null;
        }",xml,extensible markup language
Ljava/util/Calendar;.getTimeInMillis()J,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/LeftController.java;,MethodName,getTimeInMillis,"if (mediaScannerService.isScanning()) {
            return -1L;
        }

        long lastModified = LAST_COMPATIBILITY_TIME.getTimeInMillis();
        String username = securityService.getCurrentUsername(request);",millis,milliseconds
Lnet/sourceforge/subsonic/controller/MainController;.getMultiFolderChildren(Ljava/util/List<Lnet/sourceforge/subsonic/domain/MediaFile;>;)Ljava/util/List<Lnet/sourceforge/subsonic/domain/MediaFile;>;|Ljava/io/IOException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/MainController.java;,MethodName,getMultiFolderChildren,"    private List<MediaFile> getMultiFolderChildren(List<MediaFile> mediaFiles) throws IOException {
        SortedSet<MediaFile> result = new TreeSet<MediaFile>(new MediaFileComparator(settingsService.isSortAlbumsByYear()));
        for (MediaFile mediaFile : mediaFiles) {
            if (mediaFile.isFile()) {",multi,multiple
Lnet/sourceforge/subsonic/controller/MultiController;.updatePortAndContextPath(LHttpServletRequest;)V#httpsPort,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/MultiController.java;,VariableName,httpsPort,"private void updatePortAndContextPath(HttpServletRequest request) {

        int port = Integer.parseInt(System.getProperty(""subsonic.port"", String.valueOf(request.getLocalPort())));
        int httpsPort = Integer.parseInt(System.getProperty(""subsonic.httpsPort"", ""0""));

        String contextPath = request.getContextPath().replace(""/"", """");",https,hypertext transfer protocol
Lnet/sourceforge/subsonic/controller/NetworkSettingsController;.doSubmitAction(Ljava/lang/Object;)V|Ljava/lang/Exception;#0#rand,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/NetworkSettingsController.java;,VariableName,rand,"        if (settingsService.getServerId() == null) {
            Random rand = new Random(System.currentTimeMillis());
            settingsService.setServerId(String.valueOf(Math.abs(rand.nextLong())));
        }",rand,random
Lnet/sourceforge/subsonic/controller/NetworkSettingsController;.doSubmitAction(Ljava/lang/Object;)V|Ljava/lang/Exception;#cmd#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/NetworkSettingsController.java;,ParameterName,cmd,"protected void doSubmitAction(Object cmd) throws Exception {
        NetworkSettingsCommand command = (NetworkSettingsCommand) cmd;
        command.setToast(true);

        settingsService.setPortForwardingEnabled(command.isPortForwardingEnabled());
        settingsService.setUrlRedirectionEnabled(command.isUrlRedirectionEnabled());
        settingsService.setUrlRedirectFrom(StringUtils.lowerCase(command.getUrlRedirectFrom()));",cmd,command
Ljava/lang/Math;.abs(J)J,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/NetworkSettingsController.java;,MethodName,abs,"        if (settingsService.getServerId() == null) {
            Random rand = new Random(System.currentTimeMillis());
            settingsService.setServerId(String.valueOf(Math.abs(rand.nextLong())));
        }

        settingsService.save();
        networkService.initPortForwarding(0);
        networkService.initUrlRedirection(true);",abs,absolute
Lnet/sourceforge/subsonic/service/NetworkService;.initPortForwarding(I)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/NetworkSettingsController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/NetworkService.java;,MethodName,initPortForwarding,"/**
     * Configures UPnP port forwarding.
     */
    public synchronized void initPortForwarding(int initialDelaySeconds) {
        portForwardingStatus.setText(""Idle"");
        if (portForwardingFuture != null) {
            portForwardingFuture.cancel(true);",init,initialize
Lnet/sourceforge/subsonic/service/SettingsService;.setUrlRedirectFrom(Ljava/lang/String;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/NetworkSettingsController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/SettingsService.java;,MethodName,setUrlRedirectFrom,"NetworkSettingsCommand command = (NetworkSettingsCommand) cmd;
        command.setToast(true);

        settingsService.setPortForwardingEnabled(command.isPortForwardingEnabled());
        settingsService.setUrlRedirectionEnabled(command.isUrlRedirectionEnabled());
        settingsService.setUrlRedirectFrom(StringUtils.lowerCase(command.getUrlRedirectFrom()));

        if (settingsService.getServerId() == null) {
            Random rand = new Random(System.currentTimeMillis());
            settingsService.setServerId(String.valueOf(Math.abs(rand.nextLong())));",url,uniform resource locator
Recovered#typeBindingLHttpServletRequest;0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/NowPlayingController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/taglib/FormatBytesTag.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/ajax/PlayQueueService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/VideoPlayerController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/SecurityService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/TranscodingSettingsController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/MoreController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/PodcastController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/ajax/PlaylistService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/SetRatingController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/UploadController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/UserSettingsController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/PlaylistController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/filter/ParameterDecodingFilter.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/PodcastSettingsController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/ajax/NowPlayingService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/LeftController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/RightController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/RESTController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/ShareService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/ChangeCoverArtController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/TopController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/ExternalPlayerController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/EditTagsController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/JAXBWriter.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/HLSController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/UserChartController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/MainController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/PremiumController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/ShareSettingsController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/PlayerService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/HelpController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/ajax/ChatService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/StatusController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/PasswordSettingsController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/DBController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/i18n/SubsonicLocaleResolver.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/PodcastReceiverController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/PlayQueueController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/AvatarUploadController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/RandomPlayQueueController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/SetMusicFileInfoController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/PodcastReceiverAdminController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/InternetRadioSettingsController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/MultiController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/DLNASettingsController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/PersonalSettingsController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/WapController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/filter/RESTFilter.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/MusicFolderSettingsController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/AvatarController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/filter/RequestEncodingFilter.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/SettingsController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/AbstractChartController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/ShareManagementController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/theme/SubsonicThemeResolver.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/GeneralSettingsController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/LyricsController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/PlayerSettingsController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/DownloadController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/NetworkSettingsController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/SearchController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/StreamController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/security/RESTRequestParameterProcessingFilter.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/M3UController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/StatusChartController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/ImportPlaylistController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/ProxyController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/CoverArtController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/AdvancedSettingsController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/HomeController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/StarredController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/AllmusicController.java;,ClassName,HttpServletRequest,"protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) throws Exception {

        Player player = playerService.getPlayer(request, response);
        List<TransferStatus> statuses = statusService.getStreamStatusesForPlayer(player);

        MediaFile current = statuses.isEmpty() ? null : mediaFileService.getMediaFile(statuses.get(0).getFile());
        MediaFile dir = current == null ? null : mediaFileService.getParentOf(current);",http,hypertext transfer protocol
I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/NowPlayingController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/validator/UserSettingsValidator.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/util/URLBuilder.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/VideoPlayerController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/TranscodingService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/ajax/StarService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/util/HttpRange.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/domain/SearchResult.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/MoreController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/PodcastController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/upnp/Router.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/Logger.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/metadata/MetaDataParser.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/SetRatingController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/jukebox/PlayerTest.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/CDL.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/PlaylistController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/filter/ParameterDecodingFilter.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/ajax/NowPlayingService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/UserDao.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/LeftController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/util/StringUtil.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/ShareService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/domain/MediaLibraryStatistics.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/domain/MediaFile.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/ajax/CoverArtService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/ExternalPlayerController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/HLSController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/JSONWriter.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/UserChartController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/MainController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/domain/AvatarScheme.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/util/BoundedList.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/ShareSettingsController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/BookmarkDao.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/taglib/EscapeJavaScriptTag.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/XML.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/SettingsService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/util/Util.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/taglib/UrlTag.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/domain/MediaFileComparator.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/io/TranscodeInputStream.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/upload/MonitoredOutputStream.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/TranscodingDao.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/InternetRadioDao.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/AvatarUploadController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/RandomPlayQueueController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/SetMusicFileInfoController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/MultiController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/PersonalSettingsController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/AdService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/PlaylistDao.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/upnp/NATPMPRouter.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/command/UserSettingsCommand.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/domain/Artist.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/upnp/FolderBasedContentDirectory.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/XMLTokener.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/command/NetworkSettingsCommand.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/MusicFolderSettingsController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/AbstractChartController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/domain/Version.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/AutoCoverDemo.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/domain/RandomSearchCriteria.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/domain/Album.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/PlayerSettingsController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/SearchController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/PlaylistService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/util/Pair.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/StreamController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/security/RESTRequestParameterProcessingFilter.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/M3UController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/StatusChartController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/MusicIndexService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/Cookie.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/taglib/WikiTag.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/ajax/TagService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/AudioScrobblerService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/JukeboxService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/CoverArtController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/AdvancedSettingsController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/HomeController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/MediaFileDao.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/taglib/FormatBytesTag.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/upnp/SubsonicContentDirectory.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/ajax/PlayQueueService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/SecurityService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/ajax/PlaylistInfo.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/io/RangeOutputStream.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/domain/MusicIndex.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/PlayerDao.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/ajax/PlaylistService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/schema/Schema.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/domain/TransferStatus.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/VersionService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/domain/UserSettings.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/UploadController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/UserSettingsController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/AvatarDao.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/upnp/ClingRouter.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/PodcastSettingsController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/command/PlayerSettingsCommand.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/RESTController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/upload/MonitoredDiskFileItemFactory.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/SearchService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/validator/PasswordSettingsValidator.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/ChangeCoverArtController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/ajax/ScanInfo.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/ajax/NowPlayingInfo.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/EditTagsController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/JAXBWriter.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/PlayerService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/RatingDao.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/domain/Bookmark.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/ajax/ChatService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/domain/CacheElement.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/NetworkService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/JSONML.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/StatusController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/metadata/JaudiotaggerParser.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/domain/CoverArtScheme.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/domain/Genre.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/domain/Transcoding.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/upload/MonitoredDiskFileItem.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/domain/Avatar.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/PodcastReceiverAdminController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/domain/Playlist.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/JSONArray.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/AbstractDao.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/WapController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/taglib/ParamTag.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/RatingService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/ArtistDao.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/AlbumDao.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/JSONTokener.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/AvatarController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/PodcastDao.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/jukebox/AudioPlayer.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/metadata/FFmpegParser.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/ShareManagementController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/MusicFolderDao.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/domain/TranscodeScheme.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/domain/VideoTranscodingSettings.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/GeneralSettingsController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/DownloadController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/domain/SearchCriteria.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/NetworkSettingsController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/MediaFileService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/io/PlayQueueInputStream.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/PodcastService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/JSONObject.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/MediaScannerService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/ShareDao.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/ProxyController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/ajax/PlayQueueInfo.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/domain/Share.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/command/PersonalSettingsCommand.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/domain/PlayQueue.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/io/ShoutCastOutputStream.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/StarredController.java;,ClassName,int,"        command.setInterval(String.valueOf(settingsService.getPodcastUpdateInterval()));
        command.setEpisodeRetentionCount(String.valueOf(settingsService.getPodcastEpisodeRetentionCount()));
        command.setEpisodeDownloadCount(String.valueOf(settingsService.getPodcastEpisodeDownloadCount()));
        command.setFolder(settingsService.getPodcastFolder());",int,integer
Lnet/sourceforge/subsonic/controller/PodcastSettingsController;.doSubmitAction(Ljava/lang/Object;)V|Ljava/lang/Exception;#comm#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/PodcastSettingsController.java;,ParameterName,comm,"protected void doSubmitAction(Object comm) throws Exception {
        PodcastSettingsCommand command = (PodcastSettingsCommand) comm;
        command.setToast(true);

        settingsService.setPodcastUpdateInterval(Integer.parseInt(command.getInterval()));",comm,communications
Lnet/sourceforge/subsonic/controller/ProxyController;.handleRequest(LHttpServletRequest;LHttpServletResponse;)LModelAndView;|Ljava/lang/Exception;#0#0#resp,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/ProxyController.java;,VariableName,resp,"InputStream in = null;
        try {
            HttpResponse resp = client.execute(method);
            int statusCode = resp.getStatusLine().getStatusCode();
            if (statusCode != HttpStatus.SC_OK) {
                response.sendError(statusCode);",resp,response
Lnet/sourceforge/subsonic/controller/RESTController;.updateUser(LHttpServletRequest;LHttpServletResponse;)V|Ljava/lang/Exception;#u,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/RESTController.java;,VariableName,u,"
        String username = getRequiredStringParameter(request, ""username"");
        User u = securityService.getUserByName(username);
        UserSettings s = settingsService.getUserSettings(username);

        if (u == null) {
            error(request, response, ErrorCode.NOT_FOUND, ""No such user: "" + username);
            return;",u,user
Lnet/sourceforge/subsonic/controller/RESTController;.updatePlaylist(LHttpServletRequest;LHttpServletResponse;)V|Ljava/lang/Exception;#tmp,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/RESTController.java;,VariableName,tmp,"        List<MediaFile> songs = playlistService.getFilesInPlaylist(id);
        boolean songsChanged = false;

        SortedSet<Integer> tmp = new TreeSet<Integer>();
        for (int songIndexToRemove : getIntParameters(request, ""songIndexToRemove"")) {
            tmp.add(songIndexToRemove);
        }",tmp,temporary
Lnet/sourceforge/subsonic/controller/RESTController;.createShare(LHttpServletRequest;LHttpServletResponse;)V|Ljava/lang/Exception;#s,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/RESTController.java;,VariableName,s," Shares result = new Shares();
        for (Share share : shareService.getSharesForUser(user)) {
            org.subsonic.restapi.Share s = createJaxbShare(share);
            result.getShare().add(s);

            for (MediaFile mediaFile : shareService.getSharedFiles(share.getId())) {
                s.getEntry().add(createJaxbChild(player, mediaFile, username));
            }",s,share
Lnet/sourceforge/subsonic/controller/RESTController;.ping(LHttpServletRequest;LHttpServletResponse;)V|Ljava/lang/Exception;#res,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/RESTController.java;,VariableName,res,"            for (MediaFile mediaFile : shareService.getSharedFiles(share.getId())) {
                s.getEntry().add(createJaxbChild(player, mediaFile, username));
            }
        }
        Response res = jaxbWriter.createResponse(true);
        res.setShares(result);
        jaxbWriter.writeResponse(request, response, res);
    }",res,response
Lnet/sourceforge/subsonic/controller/RESTController;.getMusicFolders(LHttpServletRequest;LHttpServletResponse;)V|Ljava/lang/Exception;#0#0#mf,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/RESTController.java;,VariableName,mf,"        MusicFolders musicFolders = new MusicFolders();
        for (MusicFolder musicFolder : settingsService.getAllMusicFolders()) {
            org.subsonic.restapi.MusicFolder mf = new org.subsonic.restapi.MusicFolder();
            mf.setId(musicFolder.getId());
            mf.setName(musicFolder.getName());
            musicFolders.getMusicFolder().add(mf);",mf,music folder
Lnet/sourceforge/subsonic/controller/RESTController;.createJaxbPlaylist<T:Lorg/subsonic/restapi/Playlist;>(TT;Lnet/sourceforge/subsonic/domain/Playlist;)TT;#jaxbPlaylist#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/RESTController.java;,ParameterName,jaxbPlaylist,"private <T extends org.subsonic.restapi.Playlist> T createJaxbPlaylist(T jaxbPlaylist, Playlist playlist) {
        jaxbPlaylist.setId(String.valueOf(playlist.getId()));
        jaxbPlaylist.setName(playlist.getName());
        jaxbPlaylist.setComment(playlist.getComment());",jaxb,java architecture for xml binding
Lnet/sourceforge/subsonic/controller/RESTController;.createJaxbAlbum<T:LAlbumID3;>(TT;Lnet/sourceforge/subsonic/domain/Album;Ljava/lang/String;)TT;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/RESTController.java;,MethodName,createJaxbAlbum,"    private <T extends AlbumID3> T createJaxbAlbum(T jaxbAlbum, Album album, String username) {
        jaxbAlbum.setId(String.valueOf(album.getId()));
        jaxbAlbum.setName(album.getName());
        if (album.getArtist() != null) {",jaxb,java architecture for xml binding
Lnet/sourceforge/subsonic/controller/RESTController;.createJaxbArtist<T:LArtistID3;>(TT;Lnet/sourceforge/subsonic/domain/Artist;Ljava/lang/String;)TT;#jaxbArtist#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/RESTController.java;,ParameterName,jaxbArtist,"    private <T extends ArtistID3> T createJaxbArtist(T jaxbArtist, Artist artist, String username) {
        jaxbArtist.setId(String.valueOf(artist.getId()));
        jaxbArtist.setName(artist.getName());
        jaxbArtist.setStarred(jaxbWriter.convertDate(mediaFileDao.getMediaFileStarredDate(artist.getId(), username)));
        jaxbArtist.setAlbumCount(artist.getAlbumCount());",jaxb,java architecture for xml binding
Lnet/sourceforge/subsonic/controller/RESTController;.createJaxbChild(Lnet/sourceforge/subsonic/domain/Player;Lnet/sourceforge/subsonic/domain/MediaFile;Ljava/lang/String;)LChild;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/RESTController.java;,MethodName,createJaxbChild,"    private Child createJaxbChild(Player player, MediaFile mediaFile, String username) {
        return createJaxbChild(new Child(), player, mediaFile, username);
    }",jaxb,java architecture for xml binding
Lnet/sourceforge/subsonic/controller/RESTController;.getPodcasts(LHttpServletRequest;LHttpServletResponse;)V|Ljava/lang/Exception;#0#0#c,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/RESTController.java;,VariableName,c," for (PodcastChannel channel : podcastService.getAllChannels()) {
            if (channelId == null || channelId.equals(channel.getId())) {

                org.subsonic.restapi.PodcastChannel c = new org.subsonic.restapi.PodcastChannel();
                result.getChannel().add(c);

                c.setId(String.valueOf(channel.getId()));
                c.setUrl(channel.getUrl());",c,channel
Lnet/sourceforge/subsonic/controller/RESTController$BookmarkKey;.forBookmark(Lnet/sourceforge/subsonic/domain/Bookmark;)Lnet/sourceforge/subsonic/controller/RESTController$BookmarkKey;#b#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/RESTController.java;,ParameterName,b,"    private BookmarkKey(String username, int mediaFileId) {
            super(username, mediaFileId);
        }

        static BookmarkKey forBookmark(Bookmark b) {
            return new BookmarkKey(b.getUsername(), b.getMediaFileId());
        }",b,bookmark
Lnet/sourceforge/subsonic/controller/RESTController;.changePassword(LHttpServletRequest;LHttpServletResponse;)V|Ljava/lang/Exception;#authUser,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/RESTController.java;,VariableName,authUser,"request = wrapRequest(request);

        String username = getRequiredStringParameter(request, ""username"");
        String password = decrypt(getRequiredStringParameter(request, ""password""));

        User authUser = securityService.getCurrentUser(request);

        boolean allowed = authUser.isAdminRole()
                || username.equals(authUser.getUsername()) && authUser.isSettingsRole();",auth,authentication
Lnet/sourceforge/subsonic/controller/RESTController;.getIndexes(LHttpServletRequest;LHttpServletResponse;)V|Ljava/lang/Exception;#2#0#0#0#0#a,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/RESTController.java;,VariableName,a,"                for (MediaFile mediaFile : artist.getMediaFiles()) {
                    if (mediaFile.isDirectory()) {
                        Date starredDate = mediaFileDao.getMediaFileStarredDate(mediaFile.getId(), username);
                        org.subsonic.restapi.Artist a = new org.subsonic.restapi.Artist();
                        index.getArtist().add(a);
                        a.setId(String.valueOf(mediaFile.getId()));
                        a.setName(artist.getName());",a,artist
Lnet/sourceforge/subsonic/controller/CoverArtController;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/RESTController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/AvatarUploadController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/CoverArtController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/AutoCoverDemo.java;,ClassName,CoverArtController,"        jaxbArtist.setStarred(jaxbWriter.convertDate(mediaFileDao.getMediaFileStarredDate(artist.getId(), username)));
        jaxbArtist.setAlbumCount(artist.getAlbumCount());
        if (artist.getCoverArtPath() != null) {
            jaxbArtist.setCoverArt(CoverArtController.ARTIST_COVERART_PREFIX + artist.getId());
        }
        return jaxbArtist;
    }",art,artist
Lnet/sourceforge/subsonic/domain/Bookmark;.getPositionMillis()J,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/RESTController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/BookmarkDao.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/domain/Bookmark.java;,MethodName,getPositionMillis,"            Bookmark bookmark = bookmarkCache.get(new BookmarkKey(username, mediaFile.getId()));
            if (bookmark != null) {
                child.setBookmarkPosition(bookmark.getPositionMillis());
            }",millis,millisencods
Lnet/sourceforge/subsonic/service/ShareService;.getShareUrl(Lnet/sourceforge/subsonic/domain/Share;)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/ShareManagementController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/RESTController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/ShareService.java;,MethodName,getShareUrl,"        if (description != null) {
            share.setDescription(description);
            shareService.updateShare(share);
        }

        map.put(""playUrl"", shareService.getShareUrl(share));
        map.put(""licenseInfo"", settingsService.getLicenseInfo());

        return new ModelAndView(""createShare"", ""model"", map);
    }",url,uniform resource locator
Lnet/sourceforge/subsonic/controller/StatusChartController;.handleRequest(LHttpServletRequest;LHttpServletResponse;)LModelAndView;|Ljava/lang/Exception;#fgColor,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/StatusChartController.java;,VariableName,fgColor,"renderer.setSeriesPaint(0, Color.blue.darker());
        renderer.setSeriesStroke(0, new BasicStroke(2f));

        // Set theme-specific colors.
        Color bgColor = getBackground(request);
        Color fgColor = getForeground(request);

        chart.setBackgroundPaint(bgColor);",fg,foreground
Lnet/sourceforge/subsonic/controller/StatusChartController;.handleRequest(LHttpServletRequest;LHttpServletResponse;)LModelAndView;|Ljava/lang/Exception;#bgColor,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/StatusChartController.java;,VariableName,bgColor,"renderer.setSeriesPaint(0, Color.blue.darker());
        renderer.setSeriesStroke(0, new BasicStroke(2f));

        // Set theme-specific colors.
        Color bgColor = getBackground(request);
        Color fgColor = getForeground(request);

        chart.setBackgroundPaint(bgColor);",bg,background
Ljava/lang/Math;.max(DD)D,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/StatusChartController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/jukebox/AudioPlayer.java;,MethodName,max,"                TransferStatus.Sample sample = history.get(i);

                long elapsedTimeMilis = sample.getTimestamp() - previous.getTimestamp();
                long bytesStreamed = Math.max(0L, sample.getBytesTransfered() - previous.getBytesTransfered());

                double kbps = (8.0 * bytesStreamed / 1024.0) / (elapsedTimeMilis / 1000.0);
                series.addOrUpdate(new Millisecond(new Date(sample.getTimestamp())), kbps);",max,maximum
Lnet/sourceforge/subsonic/controller/StreamController;.getSuitableVideoSize(Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/awt/Dimension;#w,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/StreamController.java;,VariableName,w,"
        Pattern pattern = Pattern.compile(""^(\\d+)x(\\d+)$"");
        Matcher matcher = pattern.matcher(sizeSpec);
        if (matcher.find()) {
            int w = Integer.parseInt(matcher.group(1));
            int h = Integer.parseInt(matcher.group(2));
            if (w >= 0 && h >= 0 && w <= 2000 && h <= 2000) {
                return new Dimension(w, h);
            }",w,width
Lnet/sourceforge/subsonic/controller/StreamController;.getSuitableVideoSize(Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/awt/Dimension;#h,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/StreamController.java;,VariableName,h,"        Pattern pattern = Pattern.compile(""^(\\d+)x(\\d+)$"");
        Matcher matcher = pattern.matcher(sizeSpec);
        if (matcher.find()) {
            int w = Integer.parseInt(matcher.group(1));
            int h = Integer.parseInt(matcher.group(2));
            if (w >= 0 && h >= 0 && w <= 2000 && h <= 2000) {
                return new Dimension(w, h);
            }
        }",h,height
Lnet/sourceforge/subsonic/controller/StreamController;.createVideoTranscodingSettings(Lnet/sourceforge/subsonic/domain/MediaFile;LHttpServletRequest;)Lnet/sourceforge/subsonic/domain/VideoTranscodingSettings;|LServletRequestBindingException;#dim,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/StreamController.java;,VariableName,dim,"   int defaultDuration = file.getDurationSeconds() == null ? Integer.MAX_VALUE : file.getDurationSeconds() - timeOffset;
        int duration = ServletRequestUtils.getIntParameter(request, ""duration"", defaultDuration);
        boolean hls = ServletRequestUtils.getBooleanParameter(request, ""hls"", false);

        Dimension dim = getRequestedVideoSize(request.getParameter(""size""));
        if (dim == null) {
            dim = getSuitableVideoSize(existingWidth, existingHeight, maxBitRate);
        }",dim,dimension
Lnet/sourceforge/subsonic/controller/StreamController;.handleRequest(LHttpServletRequest;LHttpServletResponse;)LModelAndView;|Ljava/lang/Exception;#0#0#1#0#lastBytePos,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/StreamController.java;,VariableName,lastBytePos,"     LOG.info(""Got HTTP range: "" + range);
                    response.setStatus(HttpServletResponse.SC_PARTIAL_CONTENT);
                    Util.setContentLength(response, range.isClosed() ? range.size() : fileLength - range.getFirstBytePos());
                    long lastBytePos = range.getLastBytePos() != null ? range.getLastBytePos() : fileLength - 1;
                    response.setHeader(""Content-Range"", ""bytes "" + range.getFirstBytePos() + ""-"" + lastBytePos + ""/"" + fileLength);
                } else if (!isHls && (!isConversion || estimateContentLength)) {
                    Util.setContentLength(response, fileLength);",pos,position
Lnet/sourceforge/subsonic/util/HttpRange;.getFirstBytePos()Ljava/lang/Long;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/StreamController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/util/HttpRange.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/io/RangeOutputStream.java;,MethodName,getFirstBytePos,"          LOG.info(""Got HTTP range: "" + range);
                    response.setStatus(HttpServletResponse.SC_PARTIAL_CONTENT);
                    Util.setContentLength(response, range.isClosed() ? range.size() : fileLength - range.getFirstBytePos());
                    long lastBytePos = range.getLastBytePos() != null ? range.getLastBytePos() : fileLength - 1;
                    response.setHeader(""Content-Range"", ""bytes "" + range.getFirstBytePos() + ""-"" + lastBytePos + ""/"" + fileLength);
                } else if (!isHls && (!isConversion || estimateContentLength)) {
                    Util.setContentLength(response, fileLength);
                }",pos,position
Lnet/sourceforge/subsonic/util/HttpRange;.getLastBytePos()Ljava/lang/Long;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/StreamController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/util/HttpRange.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/io/RangeOutputStream.java;,MethodName,getLastBytePos,"               LOG.info(""Got HTTP range: "" + range);
                    response.setStatus(HttpServletResponse.SC_PARTIAL_CONTENT);
                    Util.setContentLength(response, range.isClosed() ? range.size() : fileLength - range.getFirstBytePos());
                    long lastBytePos = range.getLastBytePos() != null ? range.getLastBytePos() : fileLength - 1;
                    response.setHeader(""Content-Range"", ""bytes "" + range.getFirstBytePos() + ""-"" + lastBytePos + ""/"" + fileLength);
                } else if (!isHls && (!isConversion || estimateContentLength)) {
                    Util.setContentLength(response, fileLength);",pos,position
Lnet/sourceforge/subsonic/controller/UploadController$UploadListenerImpl;.bytesRead(J)V#0#sleepMillis,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/UploadController.java;,VariableName,sleepMillis,"            long maxBitsPerSecond = getBitrateLimit();

            status.setBytesTransfered(byteCount);

            if (maxBitsPerSecond > 0) {
                float sleepMillis = 1000.0F * (bitCount / maxBitsPerSecond - elapsedSeconds);
                if (sleepMillis > 0) {
                    try {
                        Thread.sleep((long) sleepMillis);",millis,milliseconds
Lnet/sourceforge/subsonic/controller/UploadController$UploadListenerImpl;.(Lnet/sourceforge/subsonic/controller/UploadController;Lnet/sourceforge/subsonic/domain/TransferStatus;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/UploadController.java;,MethodName,UploadListenerImpl,"private TransferStatus status;
        private long start;

        private UploadListenerImpl(TransferStatus status) {
            this.status = status;
            start = System.currentTimeMillis();
        }

        public void start(String fileName) {
            status.setFile(new File(fileName));
        }",impl,implement
Lnet/sourceforge/subsonic/controller/UserChartController;.IMAGE_MIN_HEIGHT)I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/UserChartController.java;,FieldName,IMAGE_MIN_HEIGHT,"private SecurityService securityService;

    public static final int IMAGE_WIDTH = 400;
    public static final int IMAGE_MIN_HEIGHT = 200;
    private static final long BYTES_PER_MB = 1024L * 1024L;",min,minimum
Lnet/sourceforge/subsonic/controller/UserChartController;.createChart(LCategoryDataset;LHttpServletRequest;)LJFreeChart;#gp0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/UserChartController.java;,VariableName,gp0,"        // Disable bar outlines.
        BarRenderer renderer = (BarRenderer) plot.getRenderer();
        renderer.setDrawBarOutline(false);

        // Set up gradient paint for series.
        GradientPaint gp0 = new GradientPaint(
                0.0f, 0.0f, Color.blue,
                0.0f, 0.0f, new Color(0, 0, 64)
        );
        renderer.setSeriesPaint(0, gp0);",gp,gradient paint
Lnet/sourceforge/subsonic/controller/WapController;.wap(LHttpServletRequest;LHttpServletResponse;)LModelAndView;|Ljava/lang/Exception;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/WapController.java;,MethodName,wap,"    public ModelAndView wap(HttpServletRequest request, HttpServletResponse response) throws Exception {
        Map<String, Object> map = new HashMap<String, Object>();
        List<MusicFolder> folders = settingsService.getAllMusicFolders();

        if (folders.isEmpty()) {",wap,wireless application protocol
Lnet/sourceforge/subsonic/controller/WapController;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/WapController.java;,ClassName,WapController,"public class WapController extends MultiActionController {

    private SettingsService settingsService;
    private PlayerService playerService;
    private PlaylistService playlistService;",wap,wireless application protocol
Lnet/sourceforge/subsonic/dao/AbstractDao;.queryForDate(Ljava/lang/String;Ljava/util/Date;[Ljava/lang/Object;)Ljava/util/Date;#t,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/AbstractDao.java;,VariableName,t,"protected int update(String sql, Object... args) {
        long t = System.nanoTime();
        int result = getJdbcTemplate().update(sql, args);
        log(sql, t);
        return result;",t,time
Lnet/sourceforge/subsonic/dao/AbstractDao;.queryForLong(Ljava/lang/String;Ljava/lang/Long;[Ljava/lang/Object;)Ljava/lang/Long;#sql#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/AbstractDao.java;,ParameterName,sql,"    protected int update(String sql, Object... args) {
        long t = System.nanoTime();
        int result = getJdbcTemplate().update(sql, args);
        log(sql, t);",sql,structured query language
Lnet/sourceforge/subsonic/dao/AbstractDao;.query<T:Ljava/lang/Object;>(Ljava/lang/String;LRowMapper;[Ljava/lang/Object;)Ljava/util/List<TT;>;#args#0#2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/AbstractDao.java;,ParameterName,args,"    protected int update(String sql, Object... args) {
        long t = System.nanoTime();
        int result = getJdbcTemplate().update(sql, args);
        log(sql, t);",args,arguments
Lnet/sourceforge/subsonic/dao/ArtistDao;.expunge()V#minId,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/ArtistDao.java;,VariableName,minId,"    public void markNonPresent(Date lastScanned) {
        int minId = queryForInt(""select top 1 id from artist where last_scanned != ? and present"", 0, lastScanned);
        int maxId = queryForInt(""select max(id) from artist where last_scanned != ? and present"", 0, lastScanned);

        final int batchSize = 1000;
        for (int id = minId; id <= maxId; id += batchSize) {",min,minimum
Lnet/sourceforge/subsonic/dao/ArtistDao;.markNonPresent(Ljava/util/Date;)V#maxId,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/ArtistDao.java;,VariableName,maxId,"    public void markNonPresent(Date lastScanned) {
        int minId = queryForInt(""select top 1 id from artist where last_scanned != ? and present"", 0, lastScanned);
        int maxId = queryForInt(""select max(id) from artist where last_scanned != ? and present"", 0, lastScanned);

        final int batchSize = 1000;
        for (int id = minId; id <= maxId; id += batchSize) {",max,maximum
Lnet/sourceforge/subsonic/dao/DaoHelper;.getJdbcTemplate()LJdbcTemplate;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/DaoHelper.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/AbstractDao.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/DBController.java;,MethodName,getJdbcTemplate,"/**
     * Returns a JDBC template for performing database operations.
     *
     * @return A JDBC template.
     */
    public JdbcTemplate getJdbcTemplate() {
        return new JdbcTemplate(dataSource);
    }",jdbc,java database connectivity
Lnet/sourceforge/subsonic/dao/MediaFileDao$GenreMapper;.mapRow(Ljava/sql/ResultSet;I)Lnet/sourceforge/subsonic/domain/Genre;|Ljava/sql/SQLException;#rs#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/MediaFileDao.java;,ParameterName,rs,"private static class MediaFileMapper implements ParameterizedRowMapper<MediaFile> {
        public MediaFile mapRow(ResultSet rs, int rowNum) throws SQLException {
            return new MediaFile(
                    rs.getInt(1),
                    rs.getString(2),",rs,result set
Lnet/sourceforge/subsonic/dao/MediaFileDao;.createOrUpdateMediaFile(Lnet/sourceforge/subsonic/domain/MediaFile;)V#0#musicFileInfo,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/MediaFileDao.java;,VariableName,musicFileInfo,"      // Copy values from obsolete table music_file_info.
            MediaFile musicFileInfo = getMusicFileInfo(file.getPath());
            if (musicFileInfo != null) {
                file.setComment(musicFileInfo.getComment());
                file.setLastPlayed(musicFileInfo.getLastPlayed());",info,information
Lnet/sourceforge/subsonic/dao/PlayerDao$PlayerRowMapper;.mapRow(Ljava/sql/ResultSet;I)Lnet/sourceforge/subsonic/domain/Player;|Ljava/sql/SQLException;#col,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/PlayerDao.java;,VariableName,col,"private class PlayerRowMapper implements ParameterizedRowMapper<Player> {
        public Player mapRow(ResultSet rs, int rowNum) throws SQLException {
            Player player = new Player();
            int col = 1;
            player.setId(rs.getString(col++));
            player.setName(rs.getString(col++));
            player.setType(rs.getString(col++));",col,column
Lnet/sourceforge/subsonic/dao/RatingDao;.getHighestRatedAlbums(II)Ljava/util/List<Ljava/lang/String;>;#sql,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/RatingDao.java;,VariableName,sql,"        if (count < 1) {
            return new ArrayList<String>();
        }

        String sql = ""select user_rating.path from user_rating, media_file "" +
                ""where user_rating.path=media_file.path and media_file.present and media_file.type=?"" +
                ""group by path "" +
                ""order by avg(rating) desc limit ? offset ?"";
        return queryForStrings(sql, ALBUM.name(), count, offset);
    }",sql,structured query language
LJdbcTemplate;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/schema/Schema46.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/TranscodingDao.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/schema/Schema49.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/schema/Schema43.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/schema/Schema38.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/AbstractDao.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/PlayerDao.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/schema/Schema.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/schema/Schema35.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/schema/Schema27.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/schema/Schema32.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/PodcastDao.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/schema/Schema40.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/schema/Schema25.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/UserDao.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/schema/Schema50.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/DaoHelper.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/schema/Schema33.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/schema/Schema47.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/ShareDao.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/schema/Schema28.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/schema/Schema36.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/schema/Schema34.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/schema/Schema31.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/schema/Schema37.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/schema/Schema26.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/schema/Schema30.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/schema/Schema29.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/RatingDao.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/schema/Schema45.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/DBController.java;,ClassName,JdbcTemplate,"public void execute(JdbcTemplate template) {

        if (template.queryForInt(""select count(*) from version where version = 19"") == 0) {
            LOG.info(""Updating database schema to version 19."");
            template.execute(""insert into version values (19)"");",jdbc,java database connectivity
Ljava/sql/SQLException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/TranscodingDao.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/UserDao.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/MusicFolderDao.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/InternetRadioDao.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/ShareDao.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/PlayerDao.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/ArtistDao.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/PlaylistDao.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/AlbumDao.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/BookmarkDao.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/AvatarDao.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/MediaFileDao.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/PodcastDao.java;,ClassName,SQLException,"    private static class TranscodingRowMapper implements ParameterizedRowMapper<Transcoding> {
        public Transcoding mapRow(ResultSet rs, int rowNum) throws SQLException {
            return new Transcoding(rs.getInt(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5),
                    rs.getString(6), rs.getString(7), rs.getBoolean(8));
        }",sql,structured query language
Lnet/sourceforge/subsonic/dao/UserDao$UserSettingsRowMapper;.mapRow(Ljava/sql/ResultSet;I)Lnet/sourceforge/subsonic/domain/UserSettings;|Ljava/sql/SQLException;#rowNum#0#1,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/UserDao.java;,ParameterName,rowNum,"    private class UserRowMapper implements ParameterizedRowMapper<User> {
        public User mapRow(ResultSet rs, int rowNum) throws SQLException {
            User user = new User(rs.getString(1), decrypt(rs.getString(2)), rs.getString(3), rs.getBoolean(4),
                                 rs.getLong(5), rs.getLong(6), rs.getLong(7));
            readRoles(user);
            return user;",num,number
Lnet/sourceforge/subsonic/dao/UserDao$UserSettingsRowMapper;.mapRow(Ljava/sql/ResultSet;I)Lnet/sourceforge/subsonic/domain/UserSettings;|Ljava/sql/SQLException;#col,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/UserDao.java;,VariableName,col,"private static class UserSettingsRowMapper implements ParameterizedRowMapper<UserSettings> {
        public UserSettings mapRow(ResultSet rs, int rowNum) throws SQLException {
            int col = 1;
            UserSettings settings = new UserSettings(rs.getString(col++));
            settings.setLocale(StringUtil.parseLocale(rs.getString(col++)));
            settings.setThemeId(rs.getString(col++));",col,column
Lnet/sourceforge/subsonic/domain/Bookmark;.positionMillis)J,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/domain/Bookmark.java;,FieldName,positionMillis,"private int id;
    private int mediaFileId;
    private long positionMillis;
    private String username;
    private String comment;",millis,millisencods
Lnet/sourceforge/subsonic/domain/Bookmark;.setPositionMillis(J)V#positionMillis#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/domain/Bookmark.java;,ParameterName,positionMillis,"public Bookmark(int id, int mediaFileId, long positionMillis, String username, String comment, Date created, Date changed) {
        this.id = id;
        this.mediaFileId = mediaFileId;
        this.positionMillis = positionMillis;",millis,millisencods
Lnet/sourceforge/subsonic/domain/MediaLibraryStatistics;.parse(Ljava/lang/String;)Lnet/sourceforge/subsonic/domain/MediaLibraryStatistics;#s#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/domain/MediaLibraryStatistics.java;,ParameterName,s,"public static MediaLibraryStatistics parse(String s) {
        try {
            String[] strings = StringUtil.split(s);
            return new MediaLibraryStatistics(
                    Integer.parseInt(strings[0]),",s,statistics
Lnet/sourceforge/subsonic/domain/Player;.setIpAddress(Ljava/lang/String;)V#ipAddress#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/domain/Player.java;,ParameterName,ipAddress,"    /**
     * Sets the IP address of the player.
     *
     * @param ipAddress The IP address of the player.
     */
    public void setIpAddress(String ipAddress) {
        this.ipAddress = ipAddress;
    }",ip,internet protocol
Lnet/sourceforge/subsonic/domain/PlayQueue;.undo()V#indexTmp,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/domain/PlayQueue.java;,VariableName,indexTmp,"/**
     * Revert the last operation.
     */
    public synchronized void undo() {
        List<MediaFile> filesTmp = new ArrayList<MediaFile>(files);
        int indexTmp = index;

        index = indexBackup;
        files = filesBackup;",tmp,temporary
Lnet/sourceforge/subsonic/domain/PlayQueue$7285;.compare(Lnet/sourceforge/subsonic/domain/MediaFile;Lnet/sourceforge/subsonic/domain/MediaFile;)I#a#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/domain/PlayQueue.java;,ParameterName,a,"makeBackup();
        MediaFile currentFile = getCurrentFile();

        Comparator<MediaFile> comparator = new Comparator<MediaFile>() {
            public int compare(MediaFile a, MediaFile b) {
                switch (sortOrder) {
                    case TRACK:
                        Integer trackA = a.getTrackNumber();",a,album
Lnet/sourceforge/subsonic/domain/PodcastEpisode;.getCompletionRate()Ljava/lang/Double;#t,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/domain/PodcastEpisode.java;,VariableName,t,"        if (bytesDownloaded == null) {
            return 0.0;
        }

        double d = bytesDownloaded;
        double t = bytesTotal;
        return d / t;
    }",t,total
Lnet/sourceforge/subsonic/filter/BootstrapVerificationFilter;.directoryWritable(Ljava/io/File;)Z#0#0#tempFile,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/filter/BootstrapVerificationFilter.java;,VariableName,tempFile,"    private boolean directoryWritable(File dir) {
        try {
            File tempFile = File.createTempFile(""test"", null, dir);
            tempFile.delete();
            return true;
        } catch (IOException x) {",temp,temporary
Lnet/sourceforge/subsonic/filter/ParameterDecodingFilter$DecodingServletRequestWrapper;.getParameterNames()Ljava/util/Enumeration;#v,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/filter/ParameterDecodingFilter.java;,VariableName,v,"public Enumeration getParameterNames() {
            Enumeration e = super.getParameterNames();
            Vector<String> v = new Vector<String>();
            while (e.hasMoreElements()) {
                String name = (String) e.nextElement();
                if (name.endsWith(PARAM_SUFFIX)) {",v,vector
Lnet/sourceforge/subsonic/filter/RESTFilter;.handleException(Ljava/lang/Throwable;LHttpServletRequest;LHttpServletResponse;)V#msg,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/filter/RESTFilter.java;,VariableName,msg,"        RESTController.ErrorCode code = (x instanceof ServletRequestBindingException) ? MISSING_PARAMETER : GENERIC;
        String msg = getErrorMessage(x);
        LOG.warn(""Error in REST API: "" + msg, x);

        try {
            jaxbWriter.writeErrorResponse(request, response, code, msg);
        } catch (Exception e) {",msg,message
Lnet/sourceforge/subsonic/filter/RESTFilter;.jaxbWriter)Lnet/sourceforge/subsonic/controller/JAXBWriter;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/filter/RESTFilter.java;,FieldName,jaxbWriter," private static final Logger LOG = Logger.getLogger(RESTFilter.class);

    private final JAXBWriter jaxbWriter = new JAXBWriter();

    public void doFilter(ServletRequest req, ServletResponse res, FilterChain chain) throws IOException, ServletException {
        try {
            HttpServletResponse response = (HttpServletResponse) res;",jaxb,java architecture for xml binding
Lnet/sourceforge/subsonic/filter/RESTFilter;.handleException(Ljava/lang/Throwable;LHttpServletRequest;LHttpServletResponse;)V#0#1#e,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/filter/RESTFilter.java;,VariableName,e,"        try {
            jaxbWriter.writeErrorResponse(request, response, code, msg);
        } catch (Exception e) {
            LOG.error(""Failed to write error response."", e);
        }
    }",e,error
Lnet/sourceforge/subsonic/io/RangeOutputStream;.write([BII)V|Ljava/io/IOException;#0#newLen,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/io/RangeOutputStream.java;,VariableName,newLen,"if (pos + len >= start && (end == null || pos <= end)) {
            long skipStart = Math.max(0, start - pos);
            long newOff = off + skipStart;
            long newLen = len - skipStart;
            if (end != null) {
                newLen = min(newLen, end - pos + 1, end - start + 1);
            }",len,length
Lnet/sourceforge/subsonic/io/TranscodeInputStream;.(Ljava/lang/ProcessBuilder;Ljava/io/InputStream;Ljava/io/File;)V|Ljava/io/IOException;#tmpFile#0#2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/io/TranscodeInputStream.java;,ParameterName,tmpFile,"* @param processBuilder Used to create the external process.
     * @param in Data to feed to the process.  May be {@code null}.
     * @param tmpFile Temporary file to delete when this stream is closed.  May be {@code null}.
     * @throws IOException If an I/O error occurs.
     */
    public TranscodeInputStream(ProcessBuilder processBuilder, final InputStream in, File tmpFile) throws IOException {
        this.tmpFile = tmpFile;

        StringBuffer buf = new StringBuffer(""Starting transcoder: "");
        for (String s : processBuilder.command()) {",tmp,temporary
Lnet/sourceforge/subsonic/io/TranscodeInputStream;.(Ljava/lang/ProcessBuilder;Ljava/io/InputStream;Ljava/io/File;)V|Ljava/io/IOException;#buf,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/io/TranscodeInputStream.java;,VariableName,buf,"public TranscodeInputStream(ProcessBuilder processBuilder, final InputStream in, File tmpFile) throws IOException {
        this.tmpFile = tmpFile;

        StringBuffer buf = new StringBuffer(""Starting transcoder: "");
        for (String s : processBuilder.command()) {
            buf.append('[').append(s).append(""] "");
        }",buf,buffer
Ljava/io/IOException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/io/TranscodeInputStream.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/taglib/FormatBytesTag.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/upload/MonitoredOutputStream.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/ajax/PlayQueueService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/upload/MonitoredDiskFileItem.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/AvatarUploadController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/TranscodingService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/io/RangeOutputStream.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/ajax/LyricsService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/JSONArray.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/WapController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/filter/ResponseHeaderFilter.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/Logger.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/filter/RESTFilter.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/VersionService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/JSONTokener.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/filter/RequestEncodingFilter.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/dao/schema/Schema35.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/AutoCoverDemo.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/filter/ParameterDecodingFilter.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/filter/BootstrapVerificationFilter.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/util/FileUtil.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/LeftController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/DownloadController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/util/StringUtil.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/MediaFileService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/SearchService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/PlaylistService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/StreamController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/io/PlayQueueInputStream.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/security/RESTRequestParameterProcessingFilter.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/M3UController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/MusicIndexService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/JSONObject.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/ExternalPlayerController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/io/InputStreamReaderThread.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/JSONWriter.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/MainController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/taglib/WikiTag.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/AudioScrobblerService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/taglib/EscapeJavaScriptTag.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/CoverArtController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/NetworkService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/domain/PlayQueue.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/SettingsService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/HomeController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/io/ShoutCastOutputStream.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/taglib/UrlTag.java;,ClassName,IOException,"        // Copy data in a separate thread
        if (in != null) {
            new Thread(name + "" TranscodedInputStream copy thread"") {
                public void run() {
                    try {
                        IOUtils.copy(in, processOutputStream);
                    } catch (IOException x) {
                        // Intentionally ignored. Will happen if the remote player closes the stream.
                    } finally {
                        IOUtils.closeQuietly(in);
                        IOUtils.closeQuietly(processOutputStream);
                    }",io,input output
LDefaultInitialDirContextFactory;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/ldap/SubsonicLdapBindAuthenticator.java;,ClassName,DefaultInitialDirContextFactory,"// Only create it if necessary.
        if (delegateAuthenticator == null || authenticatorTimestamp < settingsService.getSettingsChanged()) {

            DefaultInitialDirContextFactory contextFactory = new DefaultInitialDirContextFactory(settingsService.getLdapUrl());

            String managerDn = settingsService.getLdapManagerDn();
            String managerPassword = settingsService.getLdapManagerPassword();
            if (StringUtils.isNotEmpty(managerDn) && StringUtils.isNotEmpty(managerPassword)) {",dir,directory
Lnet/sourceforge/subsonic/security/RESTRequestParameterProcessingFilter;.sendErrorXml(LHttpServletRequest;LHttpServletResponse;Lnet/sourceforge/subsonic/controller/RESTController$ErrorCode;)V|Ljava/io/IOException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/security/RESTRequestParameterProcessingFilter.java;,MethodName,sendErrorXml,"    private void sendErrorXml(HttpServletRequest request, HttpServletResponse response, RESTController.ErrorCode errorCode) throws IOException {
        try {
            jaxbWriter.writeErrorResponse(request, response, errorCode, errorCode.getMessage());
        } catch (Exception e) {",xml,extensible markup language
Lnet/sourceforge/subsonic/security/RESTRequestParameterProcessingFilter;.init(LFilterConfig;)V|LServletException;#filterConfig#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/security/RESTRequestParameterProcessingFilter.java;,ParameterName,filterConfig,"    public void init(FilterConfig filterConfig) throws ServletException {
    }",config,configuration
Lnet/sourceforge/subsonic/security/RESTRequestParameterProcessingFilter;.authenticate(Ljava/lang/String;Ljava/lang/String;LAuthentication;)Lnet/sourceforge/subsonic/controller/RESTController$ErrorCode;#0#0#authResult,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/security/RESTRequestParameterProcessingFilter.java;,VariableName,authResult,"        try {
            UsernamePasswordAuthenticationToken authRequest = new UsernamePasswordAuthenticationToken(username, password);
            Authentication authResult = authenticationManager.authenticate(authRequest);
            SecurityContextHolder.getContext().setAuthentication(authResult);
//            LOG.info(""Authentication succeeded for user "" + username);
        } catch (AuthenticationException x) {",auth,authentication
Lnet/sourceforge/subsonic/security/RESTRequestParameterProcessingFilter;.checkAPIVersion(Ljava/lang/String;)Lnet/sourceforge/subsonic/controller/RESTController$ErrorCode;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/security/RESTRequestParameterProcessingFilter.java;,MethodName,checkAPIVersion,"    private RESTController.ErrorCode checkAPIVersion(String version) {
        Version serverVersion = new Version(jaxbWriter.getRestProtocolVersion());
        Version clientVersion = new Version(version);

        if (serverVersion.getMajor() > clientVersion.getMajor()) {",api,application programming interface
Recovered#typeBindingLHttpUriRequest;0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/AudioScrobblerService.java;,ClassName,HttpUriRequest,"    private String[] executeRequest(HttpUriRequest request) throws IOException {
        HttpClient client = new DefaultHttpClient();
        HttpConnectionParams.setConnectionTimeout(client.getParams(), 15000);
        HttpConnectionParams.setSoTimeout(client.getParams(), 15000);",uri,uniform resource identifier
LHttpUriRequest;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/AudioScrobblerService.java;,ClassName,HttpUriRequest,"    private String[] executeRequest(HttpUriRequest request) throws IOException {
        HttpClient client = new DefaultHttpClient();
        HttpConnectionParams.setConnectionTimeout(client.getParams(), 15000);
        HttpConnectionParams.setSoTimeout(client.getParams(), 15000);
",uri,uniform resource identifier
Lnet/sourceforge/subsonic/service/AudioScrobblerService;.createRegistrationData(Lnet/sourceforge/subsonic/domain/MediaFile;Ljava/lang/String;ZLjava/util/Date;)Lnet/sourceforge/subsonic/service/AudioScrobblerService$RegistrationData;#reg,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/AudioScrobblerService.java;,VariableName,reg,"        RegistrationData reg = new RegistrationData();
        reg.username = userSettings.getLastFmUsername();
        reg.password = userSettings.getLastFmPassword();
        reg.artist = mediaFile.getArtist();",reg,registration
Lnet/sourceforge/subsonic/service/AudioScrobblerService;.executePostRequest(Ljava/lang/String;Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)[Ljava/lang/String;|Ljava/io/IOException;#params,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/AudioScrobblerService.java;,VariableName,params,"    private String[] registerSubmission(RegistrationData registrationData, String sessionId, String url) throws IOException {
        Map<String, String> params = new HashMap<String, String>();
        params.put(""s"", sessionId);
        params.put(""a[0]"", registrationData.artist);
        params.put(""t[0]"", registrationData.title);",params,parameters
Recovered#typeBindingLUrlEncodedFormEntity;0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/AudioScrobblerService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/MultiController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/NetworkService.java;,ClassName,UrlEncodedFormEntity,"        for (Map.Entry<String, String> entry : parameters.entrySet()) {
            params.add(new BasicNameValuePair(entry.getKey(), entry.getValue()));
        }

        HttpPost request = new HttpPost(url);
        request.setEntity(new UrlEncodedFormEntity(params, StringUtil.ENCODING_UTF8));

        return executeRequest(request);
    }",url,uniform resource locator
Lnet/sourceforge/subsonic/service/jukebox/AudioPlayer;.setGain(F)V#0#minGainDB,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/jukebox/AudioPlayer.java;,VariableName,minGainDB,"    public void setGain(float gain) {
        if (gainControl != null) {

            double minGainDB = gainControl.getMinimum();
            double maxGainDB = Math.min(0.0, gainControl.getMaximum());  // Don't use positive gain to avoid distortion.
            double ampGainDB = 0.5f * maxGainDB - minGainDB;
            double cste = Math.log(10.0) / 20;",min,minimum
Lnet/sourceforge/subsonic/service/jukebox/PlayerTest;.createGUI()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/jukebox/PlayerTest.java;,MethodName,createGUI,"private void createGUI() {
        JFrame frame = new JFrame();

        JButton startButton = new JButton(""Start"");
        JButton stopButton = new JButton(""Stop"");
        JButton resetButton = new JButton(""Reset"");",gui,graphical user interface
Lnet/sourceforge/subsonic/service/jukebox/PlayerTest$1458;.stateChanged(Ljavax/swing/event/ChangeEvent;)V#e#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/jukebox/PlayerTest.java;,ParameterName,e,"       startButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                createPlayer();
                player.play();
            }",e,event
Lnet/sourceforge/subsonic/service/MediaScannerService;.schedule()V#cal,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/MediaScannerService.java;,VariableName,cal,"       Date now = new Date();
        Calendar cal = Calendar.getInstance();
        cal.setTime(now);
        cal.set(Calendar.HOUR_OF_DAY, hour);
        cal.set(Calendar.MINUTE, 0);",cal,calendar
Lnet/sourceforge/subsonic/service/metadata/FFmpegParser;.getRawMetaData(Ljava/io/File;)Lnet/sourceforge/subsonic/service/metadata/MetaData;#0#0#stdout,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/metadata/FFmpegParser.java;,VariableName,stdout,"File ffmpeg = new File(transcodingService.getTranscodeDirectory(), ""ffmpeg"");

            String[] command = new String[]{ffmpeg.getAbsolutePath(), ""-i"", file.getAbsolutePath()};
            Process process = Runtime.getRuntime().exec(command);
            InputStream stdout = process.getInputStream();
            InputStream stderr = process.getErrorStream();

            // Consume stdout, we're not interested in that.
            new InputStreamReaderThread(stdout, ""ffmpeg"", true).start();",stdout,standard output
Lnet/sourceforge/subsonic/service/metadata/FFmpegParser;.getRawMetaData(Ljava/io/File;)Lnet/sourceforge/subsonic/service/metadata/MetaData;#0#0#stderr,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/metadata/FFmpegParser.java;,VariableName,stderr,"String[] command = new String[]{ffmpeg.getAbsolutePath(), ""-i"", file.getAbsolutePath()};
            Process process = Runtime.getRuntime().exec(command);
            InputStream stdout = process.getInputStream();
            InputStream stderr = process.getErrorStream();

            // Consume stdout, we're not interested in that.
            new InputStreamReaderThread(stdout, ""ffmpeg"", true).start();",stderr,standard error
Lnet/sourceforge/subsonic/service/MusicIndexService;.createIndexFromExpression(Ljava/lang/String;)Lnet/sourceforge/subsonic/domain/MusicIndex;#1#i,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/MusicIndexService.java;,VariableName,i,"   MusicIndex index = new MusicIndex(expr.substring(0, separatorIndex));
        String prefixString = expr.substring(separatorIndex + 1, expr.length() - 1);
        for (int i = 0; i < prefixString.length(); i++) {
            index.addPrefix(prefixString.substring(i, i + 1));
        }
        return index;",i,index
Lnet/sourceforge/subsonic/service/MusicIndexService;.createIndexFromExpression(Ljava/lang/String;)Lnet/sourceforge/subsonic/domain/MusicIndex;#expr#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/MusicIndexService.java;,ParameterName,expr,"* @param expr The expression to parse.
     * @return A list of music indexes.
     */
    protected List<MusicIndex> createIndexesFromExpression(String expr) {
        List<MusicIndex> result = new ArrayList<MusicIndex>();

        StringTokenizer tokenizer = new StringTokenizer(expr, "" "");",expr,express
Lnet/sourceforge/subsonic/service/NetworkService$PortForwardingTask;.execute()V#0#httpsPort,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/NetworkService.java;,VariableName,httpsPort," portForwardingStatus.setText(""Router found."");

                int port = settingsService.getPort();
                int httpsPort = settingsService.getHttpsPort();

                // Create new NAT entry.
                if (enabled) {
                    try {",https,hypertext transfer protocol
Lnet/sourceforge/subsonic/service/NetworkService;.URL_REDIRECTION_TEST_URL)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/NetworkService.java;,FieldName,URL_REDIRECTION_TEST_URL,"    private static final long URL_REDIRECTION_DELAY = 2 * 3600L;

    private static final String URL_REDIRECTION_REGISTER_URL = getBackendUrl() + ""/backend/redirect/register.view"";
    private static final String URL_REDIRECTION_UNREGISTER_URL = getBackendUrl() + ""/backend/redirect/unregister.view"";
    private static final String URL_REDIRECTION_TEST_URL = getBackendUrl() + ""/backend/redirect/test.view"";
",url,uniform resource locator
Lnet/sourceforge/subsonic/service/PlayerService;.init()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/PlayerService.java;,MethodName,init,"    public void init() {
        playerDao.deleteOldPlayers(60);
    }",init,initialize
Lnet/sourceforge/subsonic/service/PlaylistService$PlaylistComparator;.compare(Lnet/sourceforge/subsonic/domain/Playlist;Lnet/sourceforge/subsonic/domain/Playlist;)I#p1#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/PlaylistService.java;,ParameterName,p1,"    private static class PlaylistComparator implements Comparator<Playlist> {
        @Override
        public int compare(Playlist p1, Playlist p2) {
            return p1.getName().compareTo(p2.getName());
        }
    }",p,play
Lnet/sourceforge/subsonic/service/PodcastService$3569;.newThread(Ljava/lang/Runnable;)Ljava/lang/Thread;#t,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/PodcastService.java;,VariableName,t,"    public PodcastService() {
        ThreadFactory threadFactory = new ThreadFactory() {
            public Thread newThread(Runnable r) {
                Thread t = Executors.defaultThreadFactory().newThread(r);
                t.setDaemon(true);
                return t;
            }",t,thread
Lnet/sourceforge/subsonic/service/PodcastService;.schedule()V#periodMillis,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/PodcastService.java;,VariableName,periodMillis,"      if (hoursBetween == -1) {
            LOG.info(""Automatic Podcast update disabled."");
            return;
        }

        long periodMillis = hoursBetween * 60L * 60L * 1000L;
        long initialDelayMillis = 5L * 60L * 1000L;

        scheduledRefresh = scheduledExecutor.scheduleAtFixedRate(task, initialDelayMillis, periodMillis, TimeUnit.MILLISECONDS);
        Date firstTime = new Date(System.currentTimeMillis() + initialDelayMillis);",millis,millisencods
Lnet/sourceforge/subsonic/service/SearchService;.createIndexReader(Lnet/sourceforge/subsonic/service/SearchService$IndexType;)LIndexReader;|Ljava/io/IOException;#dir,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/SearchService.java;,VariableName,dir,"    private IndexWriter createIndexWriter(IndexType indexType) throws IOException {
        File dir = getIndexDirectory(indexType);
        return new IndexWriter(FSDirectory.open(dir), new SubsonicAnalyzer(), true, new IndexWriter.MaxFieldLength(10));
    }",dir,directory
Recovered#typeBindingLASCIIFoldingFilter;0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/SearchService.java;,ClassName,ASCIIFoldingFilter,"    public TokenStream tokenStream(String fieldName, Reader reader) {
            TokenStream result = super.tokenStream(fieldName, reader);
            return new ASCIIFoldingFilter(result);
        }",ascii,american standard code for information interchange
Lnet/sourceforge/subsonic/service/SettingsService;.KEY_REWRITE_URL)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/SettingsService.java;,FieldName,KEY_REWRITE_URL,"    private static final String KEY_DOWNSAMPLING_COMMAND = ""DownsamplingCommand4"";
    private static final String KEY_HLS_COMMAND = ""HlsCommand3"";
    private static final String KEY_JUKEBOX_COMMAND = ""JukeboxCommand2"";
    private static final String KEY_REWRITE_URL = ""RewriteUrl"";
    private static final String KEY_LDAP_ENABLED = ""LdapEnabled"";
    private static final String KEY_LDAP_URL = ""LdapUrl"";
    private static final String KEY_LDAP_MANAGER_DN = ""LdapManagerDn"";",url,uniform resource locator
Lnet/sourceforge/subsonic/service/SettingsService;.DEFAULT_HTTPS_PORT)I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/SettingsService.java;,FieldName,DEFAULT_HTTPS_PORT,"    private static final boolean DEFAULT_PORT_FORWARDING_ENABLED = false;
    private static final boolean DEFAULT_GETTING_STARTED_ENABLED = true;
    private static final int DEFAULT_PORT = 80;
    private static final int DEFAULT_HTTPS_PORT = 0;
    private static final boolean DEFAULT_URL_REDIRECTION_ENABLED = false;
    private static final String DEFAULT_URL_REDIRECT_FROM = ""yourname"";
    private static final String DEFAULT_URL_REDIRECT_CONTEXT_PATH = null;",https,hypertext transfer protocol
Lnet/sourceforge/subsonic/service/SettingsService;.DEFAULT_HTTPS_PORT)I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/SettingsService.java;,FieldName,DEFAULT_HTTPS_PORT,"    private static final boolean DEFAULT_PORT_FORWARDING_ENABLED = false;
    private static final boolean DEFAULT_GETTING_STARTED_ENABLED = true;
    private static final int DEFAULT_PORT = 80;
    private static final int DEFAULT_HTTPS_PORT = 0;
    private static final boolean DEFAULT_URL_REDIRECTION_ENABLED = false;
    private static final String DEFAULT_URL_REDIRECT_FROM = ""yourname"";
    private static final String DEFAULT_URL_REDIRECT_CONTEXT_PATH = null;",https,hypertext transfer protocol
Ljava/io/File;.createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;|Ljava/io/IOException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/TranscodingService.java;,MethodName,createTempFile,"     // Work-around for filename character encoding problem on Windows.
                // Create temporary file, and feed this to the transcoder.
                String path = mediaFile.getFile().getAbsolutePath();
                if (Util.isWindows() && !mediaFile.isVideo() && !StringUtils.isAsciiPrintable(path)) {
                    tmpFile = File.createTempFile(""subsonic"", ""."" + FilenameUtils.getExtension(path));
                    tmpFile.deleteOnExit();
                    FileUtils.copyFile(new File(path), tmpFile);
                    LOG.debug(""Created tmp file: "" + tmpFile);",temp,temporary
Ljava/io/File;.mkdir()Z,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/TranscodingService.java;,MethodName,mkdir,"public File getTranscodeDirectory() {
        File dir = new File(SettingsService.getSubsonicHome(), ""transcode"");
        if (!dir.exists()) {
            boolean ok = dir.mkdir();
            if (ok) {
                LOG.info(""Created directory "" + dir);
            } else {",mkdir,make directory
Lnet/sourceforge/subsonic/service/TranscodingService$Parameters;.maxBitRate)Ljava/lang/Integer;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/TranscodingService.java;,FieldName,maxBitRate,"private boolean downsample;
        private final MediaFile mediaFile;
        private final VideoTranscodingSettings videoTranscodingSettings;
        private Integer maxBitRate;
        private Transcoding transcoding;

        public Parameters(MediaFile mediaFile, VideoTranscodingSettings videoTranscodingSettings) {
            this.mediaFile = mediaFile;",max,maximum
Lnet/sourceforge/subsonic/service/TranscodingService$Parameters;.getMaxBitRate()Ljava/lang/Integer;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/TranscodingService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/StreamController.java;,MethodName,getMaxBitRate,"        public Integer getMaxBitRate() {
            return maxBitRate;
        }",max,maximum
Lnet/sourceforge/subsonic/service/upnp/ApacheUpnpServiceConfiguration;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/upnp/ApacheUpnpServiceConfiguration.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/UPnPService.java;,ClassName,ApacheUpnpServiceConfiguration,"/**
 * UPnP configuration which uses Apache HttpComponents.  Needed to make UPnP work
 * when deploying on Tomcat.
 *
 * @author Sindre Mehus
 * @version $Id$
 */
public class ApacheUpnpServiceConfiguration extends DefaultUpnpServiceConfiguration {",upnp,universal plug and play
LUpnpResponse;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/upnp/ClingRouter.java;,ClassName,UpnpResponse,"           @Override
                    public void failure(ActionInvocation invocation, UpnpResponse response, String defaultMsg) {
                        error.set(String.valueOf(response) + "": "" + defaultMsg);
                        gotReply.release();
                    }
                }",upnp,universal plug and play
Lnet/sourceforge/subsonic/service/upnp/ClingRouter$3738;.failure(LActionInvocation;LUpnpResponse;Ljava/lang/String;)V#defaultMsg#0#2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/upnp/ClingRouter.java;,ParameterName,defaultMsg,"          @Override
                    public void failure(ActionInvocation invocation, UpnpResponse response, String defaultMsg) {
                        error.set(String.valueOf(response) + "": "" + defaultMsg);
                        gotReply.release();
                    }
                }",msg,message
Lnet/sourceforge/subsonic/service/upnp/ClingRouter;.findConnectionService(LUpnpService;)LService;#upnpService#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/upnp/ClingRouter.java;,ParameterName,upnpService,"    public static ClingRouter findRouter(UPnPService upnpService) {
        final Service connectionService = findConnectionService(upnpService.getUpnpService());
        if (connectionService == null) {
            return null;
        }",upnp,universal plug and play
Recovered#typeBindingLUpnpResponse;0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/upnp/ClingRouter.java;,ClassName,UpnpResponse,"                    @Override
                    public void failure(ActionInvocation invocation, UpnpResponse response, String defaultMsg) {
                        error.set(String.valueOf(response) + "": "" + defaultMsg);
                        gotReply.release();
                    }
                }",upnp,universal plug and play
Lnet/sourceforge/subsonic/service/UPnPService;.getUpnpService()LUpnpService;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/upnp/ClingRouter.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/UPnPService.java;,MethodName,getUpnpService,"    public static ClingRouter findRouter(UPnPService upnpService) {
        final Service connectionService = findConnectionService(upnpService.getUpnpService());
        if (connectionService == null) {
            return null;
        }",upnp,universal plug and play
LUpnpService;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/upnp/ClingRouter.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/UPnPService.java;,ClassName,UpnpService,"   public static ClingRouter findRouter(UPnPService upnpService) {
        final Service connectionService = findConnectionService(upnpService.getUpnpService());
        if (connectionService == null) {
            return null;
        }",upnp,universal plug and play
Ljava/net/URI;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/upnp/FolderBasedContentDirectory.java;,ClassName,URI,"    private URI getAlbumArtUrl(MediaFile album) throws URISyntaxException {
        return new URI(getBaseUrl() + ""coverArt.view?id="" + album.getId() + ""&size="" + CoverArtScheme.LARGE.getSize());
    }",uri,uniform resource identifier
Ljava/net/URISyntaxException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/upnp/FolderBasedContentDirectory.java;,ClassName,URISyntaxException,"    private URI getAlbumArtUrl(MediaFile album) throws URISyntaxException {
        return new URI(getBaseUrl() + ""coverArt.view?id="" + album.getId() + ""&size="" + CoverArtScheme.LARGE.getSize());
    }",uri,uniform resource identifier
Lnet/sourceforge/subsonic/service/upnp/FolderBasedContentDirectory;.browsePlaylist(Lnet/sourceforge/subsonic/domain/Playlist;JJ)LBrowseResult;|Ljava/lang/Exception;#maxResults#0#2,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/upnp/FolderBasedContentDirectory.java;,ParameterName,maxResults,"public BrowseResult browse(String objectId, BrowseFlag browseFlag, String filter, long firstResult,
            long maxResults, SortCriterion[] orderby) throws ContentDirectoryException {

        if (!settingsService.getLicenseInfo().isLicenseOrTrialValid()) {
            LOG.warn(""UPnP/DLNA media server not available. Please upgrade to Subsonic Premium."");
            throw new ContentDirectoryException(ContentDirectoryErrorCode.CANNOT_PROCESS, ""Please upgrade to Subsonic Premium"");
        }",max,maximum
Lnet/sourceforge/subsonic/service/upnp/SubsonicContentDirectory;.getBaseUrl()Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/upnp/SubsonicContentDirectory.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/upnp/FolderBasedContentDirectory.java;,MethodName,getBaseUrl,"    protected String getBaseUrl() {
        int port = settingsService.getPort();
        String contextPath = settingsService.getUrlRedirectContextPath();

        // Note: Serving media and cover art with http (as opposed to https) works when using jetty and SubsonicDeployer.
        StringBuilder url = new StringBuilder(""http://"")
                .append(settingsService.getLocalIpAddress())
                .append("":"")
                .append(port)
                .append(""/"");",url,uniform resource locator
Lnet/sourceforge/subsonic/taglib/EscapeJavaScriptTag;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/taglib/EscapeJavaScriptTag.java;,ClassName,EscapeJavaScriptTag,"public class EscapeJavaScriptTag extends BodyTagSupport {

    private String string;

    public int doStartTag() throws JspException {
        return EVAL_BODY_BUFFERED;
    }",java,java architecture for xml binding
LJspException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/taglib/FormatBytesTag.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/taglib/WikiTag.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/taglib/EscapeJavaScriptTag.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/taglib/UrlTag.java;,ClassName,JspException,"    public int doEndTag() throws JspException {
        Locale locale = RequestContextUtils.getLocale((HttpServletRequest) pageContext.getRequest());
        String result = StringUtil.formatBytes(bytes, locale);

        try {",jsp,java server page
Lnet/sourceforge/subsonic/taglib/ParamTag;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/taglib/ParamTag.java;,ClassName,ParamTag,"/**
 * A tag representing an URL query parameter.
 *
 * @see ParamTag
 * @author Sindre Mehus
 */
public class ParamTag extends TagSupport {

    private String name;
    private String value;

    public int doEndTag() throws JspTagException {",param,parameter
Lnet/sourceforge/subsonic/taglib/UrlTag;.getVar()Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/taglib/UrlTag.java;,MethodName,getVar,"    public String getVar() {
        return var;
    }",var,variable
Lnet/sourceforge/subsonic/taglib/UrlTag;.var)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/taglib/UrlTag.java;,FieldName,var,"public class UrlTag extends BodyTagSupport {

    private String DEFAULT_ENCODING = ""Utf8Hex"";
    private static final Logger LOG = Logger.getLogger(UrlTag.class);

    private String var;
    private String value;
    private String encoding = DEFAULT_ENCODING;
    private List<Parameter> parameters = new ArrayList<Parameter>();",var,variable
Lnet/sourceforge/subsonic/taglib/UrlTag;.isUtf8Hex()Z,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/taglib/UrlTag.java;,MethodName,isUtf8Hex,"    private boolean isUtf8Hex() {
        return DEFAULT_ENCODING.equals(encoding);
    }",utf,unicode transformation format
Lnet/sourceforge/subsonic/taglib/UrlTag;.isUtf8Hex()Z,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/taglib/UrlTag.java;,MethodName,isUtf8Hex,"    private boolean isUtf8Hex() {
        return DEFAULT_ENCODING.equals(encoding);
    }",hex,hexadecimal
Lnet/sourceforge/subsonic/taglib/UrlTag;.isAsciiAlphaNumeric(Ljava/lang/String;)Z,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/taglib/UrlTag.java;,MethodName,isAsciiAlphaNumeric,"    private boolean isAsciiAlphaNumeric(String s) {
        if (s == null) {
            return true;
        }
",ascii,american standard code for information interchange
Lnet/sourceforge/subsonic/filter/ParameterDecodingFilter;.PARAM_SUFFIX)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/taglib/UrlTag.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/filter/ParameterDecodingFilter.java;,FieldName,PARAM_SUFFIX,"            for (int i = 0; i < parameters.size(); i++) {
                Parameter parameter = parameters.get(i);
                try {
                    result.append(parameter.getName());
                    if (isUtf8Hex() && !isAsciiAlphaNumeric(parameter.getValue())) {
                        result.append(ParameterDecodingFilter.PARAM_SUFFIX);
                    }",param,parameter
Lnet/sourceforge/subsonic/taglib/WikiTag;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/taglib/WikiTag.java;,ClassName,WikiTag,"/**
 * Renders a Wiki text with markup to HTML, using the Radeox render engine.
 *
 * @author Sindre Mehus
 */
public class WikiTag extends BodyTagSupport {

    private static final RenderContext RENDER_CONTEXT = new BaseRenderContext();
    private static final RenderEngine RENDER_ENGINE = new BaseRenderEngine();",wiki,wikipedia
Lnet/sourceforge/subsonic/upload/MonitoredDiskFileItem;.mos)Lnet/sourceforge/subsonic/upload/MonitoredOutputStream;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/upload/MonitoredDiskFileItem.java;,FieldName,mos,"/**
 * Extension of Commons FileUpload for monitoring the upload progress.
 *
 * @author Pierre-Alexandre Losson -- http://www.telio.be/blog -- plosson@users.sourceforge.net
 */
public class MonitoredDiskFileItem extends DiskFileItem {
    private MonitoredOutputStream mos;
    private UploadListener listener;

    public MonitoredDiskFileItem(String fieldName, String contentType, boolean isFormField, String fileName, int sizeThreshold,
                                 File repository, UploadListener listener) {",mos,monitoredoutputstream
Lnet/sourceforge/subsonic/util/BoundedList;.maxSize)I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/util/BoundedList.java;,FieldName,maxSize,"public class BoundedList<E> extends LinkedList<E> {
    private int maxSize;

    /**
     * Creates a new bounded list with the given maximum size.
     * @param maxSize The maximum number of elements the list may hold.
     */",max,maximum
Lnet/sourceforge/subsonic/util/BoundedList;.addFirst(TE;)V#e#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/util/BoundedList.java;,ParameterName,e,"    /**
     * Adds an element to the tail of the list. If the list is full, the first element is removed.
     * @param e The element to add.
     * @return Always <code>true</code>.
     */
    public boolean add(E e) {
        if (isFull()) {
            removeFirst();
        }",e,element
Lnet/sourceforge/subsonic/util/FileUtil;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/util/FileUtil.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/LeftController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/DownloadController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/MediaFileService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/SecurityService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/SearchService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/io/PlayQueueInputStream.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/domain/MediaFile.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/MediaScannerService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/RatingService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/JukeboxService.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/controller/StatusController.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/service/SettingsService.java;,ClassName,FileUtil,"/**
 * Miscellaneous file utility methods.
 *
 * @author Sindre Mehus
 */
public final class FileUtil {

    private static final Logger LOG = Logger.getLogger(FileUtil.class);",util,utility
Lnet/sourceforge/subsonic/util/HttpRange;.contains(J)Z#pos#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/util/HttpRange.java;,ParameterName,pos,"    /**
     * @return Returns whether the given byte position is within this range.
     */
    public boolean contains(long pos) {
        if (pos < firstBytePos) {
            return false;
        }",pos,position
Lnet/sourceforge/subsonic/util/HttpRange;.lastBytePos)Ljava/lang/Long;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/util/HttpRange.java;,FieldName,lastBytePos,"public class HttpRange {

    private static final Pattern PATTERN = Pattern.compile(""bytes=(\\d+)-(\\d*)"");
    private final Long firstBytePos;
    private final Long lastBytePos;",pos,position
Lnet/sourceforge/subsonic/util/StringUtil;.()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/util/StringUtil.java;,MethodName,StringUtil,"    /**
     * Disallow external instantiation.
     */
    private StringUtil() {
    }",util,utility
Lnet/sourceforge/subsonic/util/StringUtil;.utf8HexEncode(Ljava/lang/String;)Ljava/lang/String;#utf8,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/util/StringUtil.java;,VariableName,utf8,"     byte[] utf8;
        try {
            utf8 = s.getBytes(ENCODING_UTF8);
        } catch (UnsupportedEncodingException x) {
            throw new RuntimeException(x);
        }",utf,unicode transformation format
Lnet/sourceforge/subsonic/util/StringUtil;.rewriteUrl(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;#urlToRewrite#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/util/StringUtil.java;,ParameterName,urlToRewrite,"/**
     * Rewrites the URL by changing the protocol, host and port.
     *
     * @param urlToRewrite               The URL to rewrite.
     * @param urlWithProtocolHostAndPort Use protocol, host and port from this URL.
     * @return The rewritten URL, or an unchanged URL if either argument is not a proper URL.
     */
    public static String rewriteUrl(String urlToRewrite, String urlWithProtocolHostAndPort) {
        if (urlToRewrite == null) {
            return null;
        }",url,uniform resource locator
Lnet/sourceforge/subsonic/util/StringUtil;.parseInts(Ljava/lang/String;)[I#s#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/util/StringUtil.java;,ParameterName,s,"    public static String removeMarkup(String s) {
        if (s == null) {
            return null;
        }
        return s.replaceAll(""<.*?>"", """");",s,string
Lnet/sourceforge/subsonic/util/StringUtil;.toISO8601(Ljava/util/Date;)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/util/StringUtil.java;,MethodName,toISO8601,"  /**
     * Formats the given date to a ISO-8601 date/time format, and UTC timezone.
     * <p/>
     * The returned date uses the following format: 2007-12-17T14:57:17
     *
     * @param date The date to format
     * @return The corresponding ISO-8601 formatted string.
     */
    public static String toISO8601(Date date) {
        if (date == null) {
            return null;
        }",iso,international organization for standardization
Lnet/sourceforge/subsonic/util/StringUtil;.HTML_SUBSTITUTIONS)[[Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/util/StringUtil.java;,FieldName,HTML_SUBSTITUTIONS,"    public static final String ENCODING_LATIN = ""ISO-8859-1"";
    public static final String ENCODING_UTF8 = ""UTF-8"";
    private static final DateFormat ISO_8601_DATE_FORMAT = new SimpleDateFormat(""yyyy-MM-dd'T'HH:mm:ss"");

    private static final String[][] HTML_SUBSTITUTIONS = {
            {""&"", ""&amp;""},
            {""<"", ""&lt;""},
            {"">"", ""&gt;""},
            {""'"", ""&#39;""},
            {""\"""", ""&#34;""},
    };",html,hypertext markup language
Lnet/sourceforge/subsonic/util/URLBuilder;.HTTPS)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/util/URLBuilder.java;,FieldName,HTTPS,"public class URLBuilder {

    public static String HTTP = ""http"";
    public static String HTTPS = ""https"";

    private String protocol;
    private String host;",https,hypertext transfer protocol
Lnet/sourceforge/subsonic/util/Util;.()V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/util/Util.java;,MethodName,Util,"/**
     * Disallow external instantiation.
     */
    private Util() {
    }",util,utility
Lnet/sourceforge/subsonic/util/Util;.randomInt(II)I#min#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/util/Util.java;,ParameterName,min,"    public static int randomInt(int min, int max) {
        if (min >= max) {
            return 0;
        }\",min,minimum
Lnet/sourceforge/subsonic/util/Util;.getLocalIpAddress()Ljava/lang/String;#ipAddresses,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/util/Util.java;,VariableName,ipAddresses,"/**
     * Returns the local IP address.  Honours the ""subsonic.host"" system property.
     * <p/>
     * NOTE: For improved performance, use {@link SettingsService#getLocalIpAddress()} instead.
     *
     * @return The local IP, or the loopback address (127.0.0.1) if not found.
     */
    public static String getLocalIpAddress() {
        List<String> ipAddresses = getLocalIpAddresses();
        String subsonicHost = System.getProperty(""subsonic.host"");
        if (subsonicHost != null && ipAddresses.contains(subsonicHost)) {
            return subsonicHost;",ip,internet protocol
Lnet/sourceforge/subsonic/util/Util;.getDefaultPlaylistFolder()Ljava/lang/String;#def,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/util/Util.java;,VariableName,def,"    public static String getDefaultMusicFolder() {
        String def = isWindows() ? ""c:\\music"" : ""/var/music"";
        return System.getProperty(""subsonic.defaultMusicFolder"", def);
    }",def,definition
Lnet/sourceforge/subsonic/util/Util;.getLocalIpAddresses()Ljava/util/List<Ljava/lang/String;>;#1#0#0#0#addr,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/util/Util.java;,VariableName,addr,"    NetworkInterface iface = interfaces.nextElement();
                Enumeration<InetAddress> addresses = iface.getInetAddresses();
                while (addresses.hasMoreElements()) {
                    InetAddress addr = addresses.nextElement();
                    if (addr instanceof Inet4Address && !addr.isLoopbackAddress()) {
                        result.add(addr.getHostAddress());
                    }",addr,address
Lnet/sourceforge/subsonic/validator/PremiumValidator;.validate(Ljava/lang/Object;LErrors;)V#obj#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/net/sourceforge/subsonic/validator/PremiumValidator.java;,ParameterName,obj,"    public void validate(Object obj, Errors errors) {
        PremiumCommand command = (PremiumCommand) obj;

        if (!settingsService.isLicenseValid(command.getLicenseInfo().getLicenseEmail(), command.getLicenseCode())) {
            command.setSubmissionError(true);",obj,object
Lorg/json/CDL;.toString(Lorg/json/JSONArray;Lorg/json/JSONArray;)Ljava/lang/String;|Lorg/json/JSONException;#sb,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/CDL.java;,VariableName,sb,"private static String getValue(JSONTokener x) throws JSONException {
        char c;
        char q;
        StringBuffer sb;
        do {
            c = x.next();
        } while (c == ' ' || c == '\t');",sb,string buffer
Lorg/json/CDL;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/CDL.java;,ClassName,CDL,"public class CDL {

    /**
     * Get the next value. The value can be wrapped in quotes. The value can
     * be empty.
     * @param x A JSONTokener of the source text.
     * @return The value string, or null if empty.
     * @throws JSONException if the quoted string is badly formed.
     */",cdl,commadelimitedlist
Lorg/json/JSONException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/HTTP.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/HTTPTokener.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/JSONArray.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/JSONObject.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/CookieList.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/Cookie.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/JSONWriter.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/XMLTokener.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/JSONException.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/JSONTokener.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/XML.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/JSONML.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/CDL.java;,ClassName,JSONException,"    * @param jo A JSONObject
     * @return An HTTP header string.
     * @throws JSONException if the object does not contain enough
     *  information.
     */
    public static String toString(JSONObject jo) throws JSONException {
        Iterator     keys = jo.keys();
        String       string;
        StringBuffer sb = new StringBuffer();",json,java script object notation
Lorg/json/JSONArray;.write(Ljava/io/Writer;)Ljava/io/Writer;|Lorg/json/JSONException;#0#0#0#0#v,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/JSONArray.java;,VariableName,v,"if (b) {
                    writer.write(',');
                }
                Object v = this.myArrayList.get(i);
                if (v instanceof JSONObject) {
                    ((JSONObject)v).write(writer);
                } else if (v instanceof JSONArray) {",v,value
Lorg/json/JSONArray;.getJSONArray(I)Lorg/json/JSONArray;|Lorg/json/JSONException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/JSONArray.java;,MethodName,getJSONArray,"    /**
     * Get the JSONArray associated with an index.
     * @param index The index must be between 0 and length() - 1.
     * @return      A JSONArray value.
     * @throws JSONException If there is no value for the index. or if the
     * value is not a JSONArray
     */
    public JSONArray getJSONArray(int index) throws JSONException {
        Object object = this.get(index);
        if (object instanceof JSONArray) {
            return (JSONArray)object;",json,java script object notation
Lorg/json/JSONArray;.getJSONObject(I)Lorg/json/JSONObject;|Lorg/json/JSONException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/JSONArray.java;,MethodName,getJSONObject,"    /**
     * Get the JSONObject associated with an index.
     * @param index subscript
     * @return      A JSONObject value.
     * @throws JSONException If there is no value for the index or if the
     * value is not a JSONObject
     */
    public JSONObject getJSONObject(int index) throws JSONException {
        Object object = this.get(index);
        if (object instanceof JSONObject) {
            return (JSONObject)object;",json,java script object notation
Lorg/json/JSONArray;.(Ljava/util/Collection;)V#0#iter,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/JSONArray.java;,VariableName,iter,"    public JSONArray(Collection collection) {
        this.myArrayList = new ArrayList();
        if (collection != null) {
            Iterator iter = collection.iterator();
            while (iter.hasNext()) {
                this.myArrayList.add(JSONObject.wrap(iter.next()));
            }",iter,iterator
Lorg/json/JSONML;.toString(Lorg/json/JSONArray;)Ljava/lang/String;|Lorg/json/JSONException;#jo,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/JSONML.java;,VariableName,jo,"        object = ja.opt(1);
        if (object instanceof JSONObject) {
            i = 2;
            jo = (JSONObject)object;",jo,json object
Lorg/json/JSONObject;.quote(Ljava/lang/String;)Ljava/lang/String;#len,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/JSONObject.java;,VariableName,len,"char         c = 0;
        String       hhhh;
        int          i;
        int          len = string.length();
        StringBuffer sb = new StringBuffer(len + 4);

        sb.append('""');
        for (i = 0; i < len; i += 1) {",len,length
Lorg/json/JSONObject;.getJSONArray(Ljava/lang/String;)Lorg/json/JSONArray;|Lorg/json/JSONException;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/JSONObject.java;,MethodName,getJSONArray,"    /**
     * Get the JSONArray value associated with a key.
     *
     * @param key   A key string.
     * @return      A JSONArray which is the value.
     * @throws      JSONException if the key is not found or
     *  if the value is not a JSONArray.
     */
    public JSONArray getJSONArray(String key) throws JSONException {
        Object object = this.get(key);
        if (object instanceof JSONArray) {
            return (JSONArray)object;",json,java script object notation
Lorg/json/JSONObject;.names()Lorg/json/JSONArray;#ja,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/JSONObject.java;,VariableName,ja,"    /**
     * Produce a JSONArray containing the names of the elements of this
     * JSONObject.
     * @return A JSONArray containing the key strings, or null if the JSONObject
     * is empty.
     */
    public JSONArray names() {
        JSONArray ja = new JSONArray();
        Iterator  keys = this.keys();
        while (keys.hasNext()) {
            ja.put(keys.next());",ja,json array
Lorg/json/JSONObject;.optInt(Ljava/lang/String;)I,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/JSONObject.java;,MethodName,optInt,"    /**
     * Get an optional int value associated with a key,
     * or zero if there is no such key or if the value is not a number.
     * If the value is a string, an attempt will be made to evaluate it as
     * a number.
     *
     * @param key   A key string.
     * @return      An object which is the value.
     */
    public int optInt(String key) {
        return this.optInt(key, 0);
    }",int,integer
Ljava/lang/Integer;.toHexString(I)Ljava/lang/String;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/JSONObject.java;,MethodName,toHexString,"            default:
                if (c < ' ' || (c >= '\u0080' && c < '\u00a0') ||
                               (c >= '\u2000' && c < '\u2100')) {
                    hhhh = ""000"" + Integer.toHexString(c);
                    sb.append(""\\u"" + hhhh.substring(hhhh.length() - 4));
                } else {
                    sb.append(c);",hex,hexadecimal
Lorg/json/JSONObject;.(Ljava/util/Map;)V#0#0#e,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/JSONObject.java;,VariableName,e,"        if (map != null) {
            Iterator i = map.entrySet().iterator();
            while (i.hasNext()) {
                Map.Entry e = (Map.Entry)i.next();
                Object value = e.getValue();
                if (value != null) {
                    this.map.put(e.getKey(), wrap(value));",e,entry
Lorg/json/JSONStringer;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/JSONStringer.java;,ClassName,JSONStringer,"public class JSONStringer extends JSONWriter {
    /**
     * Make a fresh JSONStringer. It can be used to build one JSON text.
     */",json,java script object notation
Lorg/json/JSONTokener;.(Ljava/lang/String;)V,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/JSONTokener.java;,MethodName,JSONTokener,"/**
 * A JSONTokener takes a source string and extracts characters and tokens from
 * it. It is used by the JSONObject and JSONArray constructors to parse
 * JSON source strings.
 * @author JSON.org
 * @version 2011-11-24
 */
public class JSONTokener {",json,java script object notation
Lorg/json/JSONTokener;.skipTo(C)C|Lorg/json/JSONException;#0#1#exc,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/JSONTokener.java;,VariableName,exc,"                    return c;
                }
            } while (c != to);
        } catch (IOException exc) {
            throw new JSONException(exc);
        }",exc,exception
Lorg/json/JSONTokener;.eof)Z,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/JSONTokener.java;,FieldName,eof,"public class JSONTokener {

    private int     character;
    private boolean eof;
    private int     index;
    private int     line;
    private char     previous;",eof,end of file
Lorg/json/JSONTokener;.nextString(C)Ljava/lang/String;|Lorg/json/JSONException;#c,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/JSONTokener.java;,VariableName,c,"/**
     * Get the next character in the source string.
     *
     * @return The next character, or 0 if past the end of the source string.
     */
    public char next() throws JSONException {
        int c;
        if (this.usePrevious) {
            this.usePrevious = false;
            c = this.previous;",c,char
Lorg/json/JSONTokener;.next()C|Lorg/json/JSONException;#c,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/JSONTokener.java;,VariableName,c,"public char nextClean() throws JSONException {
        for (;;) {
            char c = this.next();
            if (c == 0 || c > ' ') {
                return c;
            }
        }
    }",c,character
Lorg/json/JSONArray;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/JSONTokener.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/XML.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/JSONArray.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/JSONML.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/JSONObject.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/CDL.java;,ClassName,JSONArray,"public class JSONArray {


    /**
     * The arrayList where the JSONArray's properties are kept.
     */",json,java script object notation
Lorg/json/JSONWriter;.(Ljava/io/Writer;)V#w#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/JSONWriter.java;,ParameterName,w,"    /**
     * Make a fresh JSONWriter. It can be used to build one JSON text.
     */
    public JSONWriter(Writer w) {
        this.comma = false;
        this.mode = 'i';
        this.stack = new JSONObject[maxdepth];",w,writer
Lorg/json/JSONWriter;.value(D)Lorg/json/JSONWriter;|Lorg/json/JSONException;#d#0#0,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/JSONWriter.java;,ParameterName,d,"    /**
     * Append a double value.
     * @param d A double.
     * @return this
     * @throws JSONException If the number is not finite.
     */
    public JSONWriter value(double d) throws JSONException {
        return this.value(new Double(d));
    }",d,double
Lorg/json/JSONWriter;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/JSONWriter.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/JSONStringer.java;,ClassName,JSONWriter,"    /**
     * Append a double value.
     * @param d A double.
     * @return this
     * @throws JSONException If the number is not finite.
     */
    public JSONWriter value(double d) throws JSONException {
        return this.value(new Double(d));
    }",json,java script object notation
Lorg/json/XML;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/XMLTokener.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/XML.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/JSONML.java;,ClassName,XML,"/**
 * This provides static methods to convert an XML text into a JSONObject,
 * and to covert a JSONObject into an XML text.
 * @author JSON.org
 * @version 2011-02-11
 */
public class XML {",xml,extensible markup language
Lorg/json/XML;.GT)Ljava/lang/Character;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/XMLTokener.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/XML.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/JSONML.java;,FieldName,GT,"    /** The Character '='. */
    public static final Character EQ    = new Character('=');

    /** The Character '>'. */
    public static final Character GT    = new Character('>');",gt,greater than
Lorg/json/XML;.EQ)Ljava/lang/Character;,C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/XMLTokener.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/XML.java;C:/Users/research/Desktop/LLM-based AbbrExpan/GPT/context/testProject/subsonic/src/org/json/JSONML.java;,FieldName,EQ,"    /** The Character '!'. */
    public static final Character BANG  = new Character('!');

    /** The Character '='. */
    public static final Character EQ    = new Character('=');",eq,equal
